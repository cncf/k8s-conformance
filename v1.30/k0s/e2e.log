  I0510 13:15:52.072904      21 e2e.go:109] Starting e2e run "890ea765-bccc-4855-a9f1-a8c6d9b99337" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1715346951 - will randomize all specs

Will run 402 of 7197 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0510 13:15:52.394898 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 13:15:52.395869 21 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0510 13:16:38.720672 21 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0510 13:16:38.724116 21 e2e.go:153] 2 / 2 pods ready in namespace 'kube-system' in daemonset 'konnectivity-agent' (0 seconds elapsed)
  I0510 13:16:38.724160 21 e2e.go:153] 2 / 2 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  I0510 13:16:38.724180 21 e2e.go:153] 2 / 2 pods ready in namespace 'kube-system' in daemonset 'kube-router' (0 seconds elapsed)
  I0510 13:16:38.724203 21 e2e.go:245] e2e test version: v1.30.0
  I0510 13:16:38.725192 21 e2e.go:254] kube-apiserver version: v1.30.0+k0s
  I0510 13:16:38.725297 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 13:16:38.727995 21 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [46.333 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 05/10/24 13:16:38.878
  I0510 13:16:38.878483 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 13:16:38.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:16:38.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:16:38.892
  STEP: Creating the pod @ 05/10/24 13:16:38.894
  I0510 13:16:45.437773 21 pod_client.go:141] Successfully updated pod "annotationupdateebe17ad4-57cd-415e-a4d2-84181fdc6601"
  I0510 13:16:47.448423 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4366" for this suite. @ 05/10/24 13:16:47.45
• [8.578 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 05/10/24 13:16:47.456
  I0510 13:16:47.456513 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename resourcequota @ 05/10/24 13:16:47.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:16:47.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:16:47.467
  STEP: Counting existing ResourceQuota @ 05/10/24 13:16:47.47
  STEP: Creating a ResourceQuota @ 05/10/24 13:16:52.472
  STEP: Ensuring resource quota status is calculated @ 05/10/24 13:16:52.477
  STEP: Creating a Service @ 05/10/24 13:16:54.48
  STEP: Creating a NodePort Service @ 05/10/24 13:16:54.494
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 05/10/24 13:16:54.51
  STEP: Ensuring resource quota status captures service creation @ 05/10/24 13:16:54.527
  STEP: Deleting Services @ 05/10/24 13:16:56.53
  STEP: Ensuring resource quota status released usage @ 05/10/24 13:16:56.562
  I0510 13:16:58.566333 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4325" for this suite. @ 05/10/24 13:16:58.568
• [11.116 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 05/10/24 13:16:58.573
  I0510 13:16:58.573200 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename resourcequota @ 05/10/24 13:16:58.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:16:58.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:16:58.59
  STEP: Creating resourceQuota "e2e-rq-status-h7flq" @ 05/10/24 13:16:58.594
  I0510 13:16:58.599909 21 resource_quota.go:1051] Resource quota "e2e-rq-status-h7flq" reports spec: hard cpu limit of 500m
  I0510 13:16:58.599949 21 resource_quota.go:1053] Resource quota "e2e-rq-status-h7flq" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-h7flq" /status @ 05/10/24 13:16:58.599
  STEP: Confirm /status for "e2e-rq-status-h7flq" resourceQuota via watch @ 05/10/24 13:16:58.606
  I0510 13:16:58.607760 21 resource_quota.go:1080] observed resourceQuota "e2e-rq-status-h7flq" in namespace "resourcequota-2784" with hard status: v1.ResourceList(nil)
  I0510 13:16:58.607875 21 resource_quota.go:1083] Found resourceQuota "e2e-rq-status-h7flq" in namespace "resourcequota-2784" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0510 13:16:58.607897 21 resource_quota.go:1090] ResourceQuota "e2e-rq-status-h7flq" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 05/10/24 13:16:58.611
  I0510 13:16:58.615490 21 resource_quota.go:1101] Resource quota "e2e-rq-status-h7flq" reports spec: hard cpu limit of 1
  I0510 13:16:58.615518 21 resource_quota.go:1102] Resource quota "e2e-rq-status-h7flq" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-h7flq" /status @ 05/10/24 13:16:58.615
  STEP: Confirm /status for "e2e-rq-status-h7flq" resourceQuota via watch @ 05/10/24 13:16:58.619
  I0510 13:16:58.621148 21 resource_quota.go:1124] observed resourceQuota "e2e-rq-status-h7flq" in namespace "resourcequota-2784" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0510 13:16:58.621190 21 resource_quota.go:1127] Found resourceQuota "e2e-rq-status-h7flq" in namespace "resourcequota-2784" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0510 13:16:58.621212 21 resource_quota.go:1134] ResourceQuota "e2e-rq-status-h7flq" /status was patched
  STEP: Get "e2e-rq-status-h7flq" /status @ 05/10/24 13:16:58.621
  I0510 13:16:58.623684 21 resource_quota.go:1145] Resourcequota "e2e-rq-status-h7flq" reports status: hard cpu of 1
  I0510 13:16:58.623716 21 resource_quota.go:1147] Resourcequota "e2e-rq-status-h7flq" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-h7flq" /status before checking Spec is unchanged @ 05/10/24 13:16:58.625
  I0510 13:16:58.630063 21 resource_quota.go:1167] Resourcequota "e2e-rq-status-h7flq" reports status: hard cpu of 2
  I0510 13:16:58.630093 21 resource_quota.go:1169] Resourcequota "e2e-rq-status-h7flq" reports status: hard memory of 2Gi
  I0510 13:16:58.631342 21 resource_quota.go:1181] Found resourceQuota "e2e-rq-status-h7flq" in namespace "resourcequota-2784" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0510 13:16:58.633148 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a0aae0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a0ab10), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a0ab58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:17:03.635146 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00421d9f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00421da28), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00421da70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:17:08.634757 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00421dba8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00421dbd8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00421dc20), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:17:13.635684 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00421ddd0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00421de00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00421de30), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:17:18.635077 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f9e030), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f9e060), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f9e090), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:17:23.634947 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f9e2d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f9e318), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f9e348), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:17:28.635319 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00479be78), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00479bec0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00479bef0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:17:33.635022 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f9e450), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f9e498), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f9e4e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:17:38.634606 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f9e5e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f9e618), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f9e648), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:17:43.635114 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a0ad20), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a0ad50), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a0ad98), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:17:48.635098 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fa288), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fa2d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fa348), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:17:53.634784 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a0aeb8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a0aee8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a0af30), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:17:58.635740 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a0b050), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a0b080), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a0b0b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:18:03.635224 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fa570), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fa5b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fa630), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:18:08.634808 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fa840), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fa888), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fa8e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:18:13.635495 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fab28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fab88), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fabe8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:18:18.635174 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fad68), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fade0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fae58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:18:23.635279 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a0b290), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a0b2c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a0b2f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:18:28.634533 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a0b410), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a0b458), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a0b488), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:18:33.634526 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fb170), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fb1b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fb218), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:18:38.635091 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fb3f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fb428), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fb458), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:18:43.634992 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fa0d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fa120), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fa180), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:18:48.635165 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fa360), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fa3c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fa438), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:18:53.634540 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004af2048), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004af20a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004af2120), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:18:58.635077 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f9e0c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f9e138), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f9e180), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:19:03.634743 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fa690), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fa720), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fa768), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:19:08.635441 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fa918), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fa960), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fa990), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:19:13.635209 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f9e360), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f9e390), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f9e3d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:19:18.634273 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f9e4f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f9e528), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f9e558), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:19:23.634739 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fac18), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fac48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044facc0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:19:28.635142 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f9e6a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f9e6d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f9e708), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:19:33.635706 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f9e870), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f9e8b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004f9e8e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:19:38.635334 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044faf00), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044faf48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fafa8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:19:43.634994 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fb260), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fb2a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fb2f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:19:48.634690 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004af2438), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004af24b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004af24e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:19:53.635275 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004af26d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004af2708), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004af2780), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:19:58.634842 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fb548), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fb5c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044fb608), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:20:03.635077 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-h7flq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-h7flq", GenerateName:"", Namespace:"resourcequota-2784", SelfLink:"", UID:"d5e79998-b9ef-4d6a-911c-f634a920d310", ResourceVersion:"1058", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-h7flq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004af2930), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004af2960), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004af29a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0510 13:20:08.634839 21 resource_quota.go:1209] ResourceQuota "e2e-rq-status-h7flq" Spec was unchanged and /status reset
  I0510 13:20:08.635000 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2784" for this suite. @ 05/10/24 13:20:08.637
• [190.068 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 05/10/24 13:20:08.641
  I0510 13:20:08.641910 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 13:20:08.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:20:08.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:20:08.653
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 05/10/24 13:20:08.655
  STEP: Saw pod success @ 05/10/24 13:20:10.665
  I0510 13:20:10.667129 21 output.go:196] Trying to get logs from node worker-1 pod pod-8aa01c26-926d-43c4-bdda-cb561a01c31d container test-container: <nil>
  STEP: delete the pod @ 05/10/24 13:20:10.678
  I0510 13:20:10.687772 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4300" for this suite. @ 05/10/24 13:20:10.692
• [2.056 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 05/10/24 13:20:10.698
  I0510 13:20:10.698289 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename container-runtime @ 05/10/24 13:20:10.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:20:10.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:20:10.709
  STEP: create the container @ 05/10/24 13:20:10.712
  W0510 13:20:10.718605      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/10/24 13:20:10.718
  STEP: get the container status @ 05/10/24 13:20:13.729
  STEP: the container should be terminated @ 05/10/24 13:20:13.731
  STEP: the termination message should be set @ 05/10/24 13:20:13.732
  I0510 13:20:13.732037 21 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 05/10/24 13:20:13.732
  I0510 13:20:13.745772 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1510" for this suite. @ 05/10/24 13:20:13.748
• [3.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 05/10/24 13:20:13.754
  I0510 13:20:13.754290 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename replicaset @ 05/10/24 13:20:13.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:20:13.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:20:13.768
  STEP: Create a ReplicaSet @ 05/10/24 13:20:13.771
  STEP: Verify that the required pods have come up @ 05/10/24 13:20:13.779
  I0510 13:20:13.781219 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  I0510 13:20:18.785590 21 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 05/10/24 13:20:18.785
  I0510 13:20:18.787910 21 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 05/10/24 13:20:18.787
  STEP: DeleteCollection of the ReplicaSets @ 05/10/24 13:20:18.79
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 05/10/24 13:20:18.795
  I0510 13:20:18.800510 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2642" for this suite. @ 05/10/24 13:20:18.803
• [5.055 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 05/10/24 13:20:18.809
  I0510 13:20:18.809711 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename gc @ 05/10/24 13:20:18.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:20:18.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:20:18.827
  STEP: create the deployment @ 05/10/24 13:20:18.83
  W0510 13:20:18.834386      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 05/10/24 13:20:18.834
  STEP: delete the deployment @ 05/10/24 13:20:19.338
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 05/10/24 13:20:19.343
  STEP: Gathering metrics @ 05/10/24 13:20:19.854
  W0510 13:20:19.858508      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0510 13:20:19.858616 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0510 13:20:19.858882 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8405" for this suite. @ 05/10/24 13:20:19.861
• [1.055 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 05/10/24 13:20:19.865
  I0510 13:20:19.865601 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename kubectl-logs @ 05/10/24 13:20:19.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:20:19.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:20:19.878
  STEP: creating an pod @ 05/10/24 13:20:19.881
  I0510 13:20:19.881492 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-logs-5009 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0510 13:20:19.968530 21 builder.go:146] stderr: ""
  I0510 13:20:19.968578 21 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 05/10/24 13:20:19.968
  I0510 13:20:19.968985 21 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I0510 13:20:21.975274 21 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 05/10/24 13:20:21.975
  I0510 13:20:21.975374 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-logs-5009 logs logs-generator logs-generator'
  I0510 13:20:22.042187 21 builder.go:146] stderr: ""
  I0510 13:20:22.042248 21 builder.go:147] stdout: "I0510 13:20:20.533869       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/mwz 509\nI0510 13:20:20.734320       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/kube-system/pods/j6mv 352\nI0510 13:20:20.934632       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/7r45 543\nI0510 13:20:21.133889       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/ns/pods/hl2 421\nI0510 13:20:21.334213       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/4dds 200\nI0510 13:20:21.534555       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/kube-system/pods/9nbc 478\nI0510 13:20:21.734757       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/b7mg 370\nI0510 13:20:21.934012       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/pgz 460\n"
  STEP: limiting log lines @ 05/10/24 13:20:22.042
  I0510 13:20:22.042357 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-logs-5009 logs logs-generator logs-generator --tail=1'
  I0510 13:20:22.106338 21 builder.go:146] stderr: ""
  I0510 13:20:22.106386 21 builder.go:147] stdout: "I0510 13:20:21.934012       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/pgz 460\n"
  I0510 13:20:22.106406 21 logs.go:127] got output "I0510 13:20:21.934012       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/pgz 460\n"
  STEP: limiting log bytes @ 05/10/24 13:20:22.106
  I0510 13:20:22.106569 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-logs-5009 logs logs-generator logs-generator --limit-bytes=1'
  I0510 13:20:22.170584 21 builder.go:146] stderr: ""
  I0510 13:20:22.170687 21 builder.go:147] stdout: "I"
  I0510 13:20:22.170706 21 logs.go:133] got output "I"
  STEP: exposing timestamps @ 05/10/24 13:20:22.17
  I0510 13:20:22.170940 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-logs-5009 logs logs-generator logs-generator --tail=1 --timestamps'
  I0510 13:20:22.238318 21 builder.go:146] stderr: ""
  I0510 13:20:22.238369 21 builder.go:147] stdout: "2024-05-10T13:20:22.134416706Z I0510 13:20:22.134325       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/ktwk 466\n"
  I0510 13:20:22.238407 21 logs.go:139] got output "2024-05-10T13:20:22.134416706Z I0510 13:20:22.134325       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/ktwk 466\n"
  STEP: restricting to a time range @ 05/10/24 13:20:22.238
  I0510 13:20:24.738683 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-logs-5009 logs logs-generator logs-generator --since=1s'
  I0510 13:20:24.802408 21 builder.go:146] stderr: ""
  I0510 13:20:24.802465 21 builder.go:147] stdout: "I0510 13:20:23.933961       1 logs_generator.go:76] 17 GET /api/v1/namespaces/ns/pods/xdl5 450\nI0510 13:20:24.134304       1 logs_generator.go:76] 18 POST /api/v1/namespaces/default/pods/g47r 203\nI0510 13:20:24.334637       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/kube-system/pods/vdsq 453\nI0510 13:20:24.534784       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/mqzf 560\nI0510 13:20:24.733947       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/ns/pods/k98 272\n"
  I0510 13:20:24.802521 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-logs-5009 logs logs-generator logs-generator --since=24h'
  I0510 13:20:24.866285 21 builder.go:146] stderr: ""
  I0510 13:20:24.866362 21 builder.go:147] stdout: "I0510 13:20:20.533869       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/mwz 509\nI0510 13:20:20.734320       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/kube-system/pods/j6mv 352\nI0510 13:20:20.934632       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/7r45 543\nI0510 13:20:21.133889       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/ns/pods/hl2 421\nI0510 13:20:21.334213       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/4dds 200\nI0510 13:20:21.534555       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/kube-system/pods/9nbc 478\nI0510 13:20:21.734757       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/b7mg 370\nI0510 13:20:21.934012       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/pgz 460\nI0510 13:20:22.134325       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/ktwk 466\nI0510 13:20:22.334647       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/default/pods/tt5 270\nI0510 13:20:22.533899       1 logs_generator.go:76] 10 POST /api/v1/namespaces/default/pods/cr62 341\nI0510 13:20:22.734221       1 logs_generator.go:76] 11 POST /api/v1/namespaces/kube-system/pods/n6dw 427\nI0510 13:20:22.934526       1 logs_generator.go:76] 12 GET /api/v1/namespaces/ns/pods/vlpk 368\nI0510 13:20:23.134876       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/kube-system/pods/sq5d 459\nI0510 13:20:23.334211       1 logs_generator.go:76] 14 GET /api/v1/namespaces/ns/pods/g59g 432\nI0510 13:20:23.534531       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/kube-system/pods/5vnc 351\nI0510 13:20:23.734748       1 logs_generator.go:76] 16 GET /api/v1/namespaces/default/pods/hvnb 572\nI0510 13:20:23.933961       1 logs_generator.go:76] 17 GET /api/v1/namespaces/ns/pods/xdl5 450\nI0510 13:20:24.134304       1 logs_generator.go:76] 18 POST /api/v1/namespaces/default/pods/g47r 203\nI0510 13:20:24.334637       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/kube-system/pods/vdsq 453\nI0510 13:20:24.534784       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/mqzf 560\nI0510 13:20:24.733947       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/ns/pods/k98 272\n"
  I0510 13:20:24.866619 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-logs-5009 delete pod logs-generator'
  I0510 13:20:25.452790 21 builder.go:146] stderr: ""
  I0510 13:20:25.452858 21 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0510 13:20:25.453039 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-5009" for this suite. @ 05/10/24 13:20:25.455
• [5.594 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 05/10/24 13:20:25.459
  I0510 13:20:25.459836 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename pods @ 05/10/24 13:20:25.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:20:25.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:20:25.471
  STEP: creating the pod @ 05/10/24 13:20:25.474
  STEP: submitting the pod to kubernetes @ 05/10/24 13:20:25.474
  STEP: verifying QOS class is set on the pod @ 05/10/24 13:20:25.479
  I0510 13:20:25.481268 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1716" for this suite. @ 05/10/24 13:20:25.484
• [0.030 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 05/10/24 13:20:25.49
  I0510 13:20:25.490593 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename dns @ 05/10/24 13:20:25.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:20:25.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:20:25.506
  STEP: Creating a test externalName service @ 05/10/24 13:20:25.508
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9386.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-9386.svc.cluster.local; sleep 1; done
   @ 05/10/24 13:20:25.512
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9386.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-9386.svc.cluster.local; sleep 1; done
   @ 05/10/24 13:20:25.512
  STEP: creating a pod to probe DNS @ 05/10/24 13:20:25.512
  STEP: submitting the pod to kubernetes @ 05/10/24 13:20:25.512
  STEP: retrieving the pod @ 05/10/24 13:20:33.534
  STEP: looking for the results for each expected name from probers @ 05/10/24 13:20:33.536
  I0510 13:20:33.545281 21 dns_common.go:552] DNS probes using dns-test-4fdae2d5-27d4-479b-9abf-20087913004b succeeded

  STEP: changing the externalName to bar.example.com @ 05/10/24 13:20:33.545
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9386.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-9386.svc.cluster.local; sleep 1; done
   @ 05/10/24 13:20:33.551
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9386.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-9386.svc.cluster.local; sleep 1; done
   @ 05/10/24 13:20:33.551
  STEP: creating a second pod to probe DNS @ 05/10/24 13:20:33.551
  STEP: submitting the pod to kubernetes @ 05/10/24 13:20:33.551
  STEP: retrieving the pod @ 05/10/24 13:20:43.574
  STEP: looking for the results for each expected name from probers @ 05/10/24 13:20:43.576
  I0510 13:20:43.581997 21 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-9386.svc.cluster.local from pod  dns-9386/dns-test-81f08d03-99d8-4f94-b139-0d4453172857 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0510 13:20:43.585095 21 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-9386.svc.cluster.local from pod  dns-9386/dns-test-81f08d03-99d8-4f94-b139-0d4453172857 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0510 13:20:43.585128 21 dns_common.go:489] Lookups using dns-9386/dns-test-81f08d03-99d8-4f94-b139-0d4453172857 failed for: [wheezy_udp@dns-test-service-3.dns-9386.svc.cluster.local jessie_udp@dns-test-service-3.dns-9386.svc.cluster.local]

  I0510 13:20:43.597797 21 dns_common.go:495] Pod client logs for webserver: 
  I0510 13:20:43.602110 21 dns_common.go:495] Pod client logs for querier: 
  I0510 13:20:43.606139 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0510 13:20:48.581370 21 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-9386.svc.cluster.local from pod  dns-9386/dns-test-81f08d03-99d8-4f94-b139-0d4453172857 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0510 13:20:48.584521 21 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-9386.svc.cluster.local from pod  dns-9386/dns-test-81f08d03-99d8-4f94-b139-0d4453172857 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0510 13:20:48.584560 21 dns_common.go:489] Lookups using dns-9386/dns-test-81f08d03-99d8-4f94-b139-0d4453172857 failed for: [wheezy_udp@dns-test-service-3.dns-9386.svc.cluster.local jessie_udp@dns-test-service-3.dns-9386.svc.cluster.local]

  I0510 13:20:48.589133 21 dns_common.go:495] Pod client logs for webserver: 
  I0510 13:20:48.593333 21 dns_common.go:495] Pod client logs for querier: 
  I0510 13:20:48.597618 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0510 13:20:53.581271 21 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-9386.svc.cluster.local from pod  dns-9386/dns-test-81f08d03-99d8-4f94-b139-0d4453172857 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0510 13:20:53.584727 21 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-9386.svc.cluster.local from pod  dns-9386/dns-test-81f08d03-99d8-4f94-b139-0d4453172857 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0510 13:20:53.584772 21 dns_common.go:489] Lookups using dns-9386/dns-test-81f08d03-99d8-4f94-b139-0d4453172857 failed for: [wheezy_udp@dns-test-service-3.dns-9386.svc.cluster.local jessie_udp@dns-test-service-3.dns-9386.svc.cluster.local]

  I0510 13:20:53.589446 21 dns_common.go:495] Pod client logs for webserver: 
  I0510 13:20:53.593808 21 dns_common.go:495] Pod client logs for querier: 
  I0510 13:20:53.598124 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0510 13:20:58.583718 21 dns_common.go:552] DNS probes using dns-test-81f08d03-99d8-4f94-b139-0d4453172857 succeeded

  STEP: changing the service to type=ClusterIP @ 05/10/24 13:20:58.583
  W0510 13:20:58.596107      21 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9386.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-9386.svc.cluster.local; sleep 1; done
   @ 05/10/24 13:20:58.596
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9386.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-9386.svc.cluster.local; sleep 1; done
   @ 05/10/24 13:20:58.596
  STEP: creating a third pod to probe DNS @ 05/10/24 13:20:58.596
  STEP: submitting the pod to kubernetes @ 05/10/24 13:20:58.598
  STEP: retrieving the pod @ 05/10/24 13:21:02.616
  STEP: looking for the results for each expected name from probers @ 05/10/24 13:21:02.618
  I0510 13:21:02.627894 21 dns_common.go:552] DNS probes using dns-test-cd49db11-3abf-48d9-9a08-56bc13624102 succeeded

  STEP: deleting the pod @ 05/10/24 13:21:02.628
  STEP: deleting the pod @ 05/10/24 13:21:02.637
  STEP: deleting the pod @ 05/10/24 13:21:02.653
  STEP: deleting the test externalName service @ 05/10/24 13:21:02.663
  I0510 13:21:02.680345 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9386" for this suite. @ 05/10/24 13:21:02.683
• [37.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3345
  STEP: Creating a kubernetes client @ 05/10/24 13:21:02.689
  I0510 13:21:02.689275 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename services @ 05/10/24 13:21:02.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:21:02.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:21:02.7
  STEP: creating a Service @ 05/10/24 13:21:02.704
  STEP: watching for the Service to be added @ 05/10/24 13:21:02.716
  I0510 13:21:02.717927 21 service.go:3397] Found Service test-service-4kcdh in namespace services-9009 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 30413}]
  I0510 13:21:02.717975 21 service.go:3404] Service test-service-4kcdh created
  STEP: Getting /status @ 05/10/24 13:21:02.718
  I0510 13:21:02.720922 21 service.go:3415] Service test-service-4kcdh has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 05/10/24 13:21:02.72
  STEP: watching for the Service to be patched @ 05/10/24 13:21:02.726
  I0510 13:21:02.727990 21 service.go:3438] observed Service test-service-4kcdh in namespace services-9009 with annotations: map[] & LoadBalancer: {[]}
  I0510 13:21:02.728027 21 service.go:3441] Found Service test-service-4kcdh in namespace services-9009 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc00119f9b0 []}]}
  I0510 13:21:02.728041 21 service.go:3448] Service test-service-4kcdh has service status patched
  STEP: updating the ServiceStatus @ 05/10/24 13:21:02.728
  I0510 13:21:02.735839 21 service.go:3468] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 05/10/24 13:21:02.735
  I0510 13:21:02.737279 21 service.go:3479] Observed Service test-service-4kcdh in namespace services-9009 with annotations: map[] & Conditions: {[]}
  I0510 13:21:02.737524 21 service.go:3494] Observed event: &Service{ObjectMeta:{test-service-4kcdh  services-9009  bdedf3c6-05ac-4abc-833a-773ee5111de4 1850 0 2024-05-10 13:21:02 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-05-10 13:21:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-05-10 13:21:02 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:30413,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.110.182.17,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.110.182.17],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,TrafficDistribution:nil,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:*VIP,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  I0510 13:21:02.737682 21 service.go:3486] Found Service test-service-4kcdh in namespace services-9009 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0510 13:21:02.737760 21 service.go:3498] Service test-service-4kcdh has service status updated
  STEP: patching the service @ 05/10/24 13:21:02.737
  STEP: watching for the Service to be patched @ 05/10/24 13:21:02.747
  I0510 13:21:02.748367 21 service.go:3521] observed Service test-service-4kcdh in namespace services-9009 with labels: map[test-service-static:true]
  I0510 13:21:02.748450 21 service.go:3521] observed Service test-service-4kcdh in namespace services-9009 with labels: map[test-service-static:true]
  I0510 13:21:02.748657 21 service.go:3521] observed Service test-service-4kcdh in namespace services-9009 with labels: map[test-service-static:true]
  I0510 13:21:02.748711 21 service.go:3524] Found Service test-service-4kcdh in namespace services-9009 with labels: map[test-service:patched test-service-static:true]
  I0510 13:21:02.748728 21 service.go:3531] Service test-service-4kcdh patched
  STEP: deleting the service @ 05/10/24 13:21:02.748
  STEP: watching for the Service to be deleted @ 05/10/24 13:21:02.76
  I0510 13:21:02.762247 21 service.go:3555] Observed event: ADDED
  I0510 13:21:02.762308 21 service.go:3555] Observed event: MODIFIED
  I0510 13:21:02.762527 21 service.go:3555] Observed event: MODIFIED
  I0510 13:21:02.762603 21 service.go:3555] Observed event: MODIFIED
  I0510 13:21:02.762685 21 service.go:3551] Found Service test-service-4kcdh in namespace services-9009 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0510 13:21:02.762716 21 service.go:3560] Service test-service-4kcdh deleted
  I0510 13:21:02.763132 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9009" for this suite. @ 05/10/24 13:21:02.765
• [0.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 05/10/24 13:21:02.77
  I0510 13:21:02.770101 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename statefulset @ 05/10/24 13:21:02.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:21:02.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:21:02.783
  STEP: Creating service test in namespace statefulset-9033 @ 05/10/24 13:21:02.785
  STEP: Creating statefulset ss in namespace statefulset-9033 @ 05/10/24 13:21:02.789
  I0510 13:21:02.797329 21 wait.go:40] Found 0 stateful pods, waiting for 1
  I0510 13:21:12.798547 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 05/10/24 13:21:12.802
  STEP: updating a scale subresource @ 05/10/24 13:21:12.804
  STEP: verifying the statefulset Spec.Replicas was modified @ 05/10/24 13:21:12.81
  STEP: Patch a scale subresource @ 05/10/24 13:21:12.812
  STEP: verifying the statefulset Spec.Replicas was modified @ 05/10/24 13:21:12.819
  I0510 13:21:12.824083 21 statefulset.go:135] Deleting all statefulset in ns statefulset-9033
  I0510 13:21:12.826350 21 rest.go:150] Scaling statefulset ss to 0
  I0510 13:21:22.837488 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0510 13:21:22.839660 21 rest.go:88] Deleting statefulset ss
  I0510 13:21:22.847607 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9033" for this suite. @ 05/10/24 13:21:22.85
• [20.084 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 05/10/24 13:21:22.854
  I0510 13:21:22.854541 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename secrets @ 05/10/24 13:21:22.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:21:22.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:21:22.868
  STEP: Creating secret with name secret-test-91ea7239-9487-441c-b024-0f8d2b831175 @ 05/10/24 13:21:22.87
  STEP: Creating a pod to test consume secrets @ 05/10/24 13:21:22.875
  STEP: Saw pod success @ 05/10/24 13:21:24.889
  I0510 13:21:24.891241 21 output.go:196] Trying to get logs from node worker-1 pod pod-secrets-da74c1a9-f0f3-4524-82b3-929d1e7b01b1 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 13:21:24.895
  I0510 13:21:24.908405 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2484" for this suite. @ 05/10/24 13:21:24.91
• [2.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 05/10/24 13:21:24.915
  I0510 13:21:24.915487 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename podtemplate @ 05/10/24 13:21:24.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:21:24.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:21:24.928
  I0510 13:21:24.948843 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4597" for this suite. @ 05/10/24 13:21:24.951
• [0.041 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 05/10/24 13:21:24.956
  I0510 13:21:24.956521 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename sched-preemption @ 05/10/24 13:21:24.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:21:24.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:21:24.967
  I0510 13:21:24.979560 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0510 13:22:24.982938 21 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 05/10/24 13:22:24.985
  I0510 13:22:25.005044 21 preemption.go:178] Created pod: pod0-0-sched-preemption-low-priority
  I0510 13:22:25.012355 21 preemption.go:178] Created pod: pod0-1-sched-preemption-medium-priority
  I0510 13:22:25.030395 21 preemption.go:178] Created pod: pod1-0-sched-preemption-medium-priority
  I0510 13:22:25.038801 21 preemption.go:178] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 05/10/24 13:22:25.038
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 05/10/24 13:22:27.052
  I0510 13:22:31.094386 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4849" for this suite. @ 05/10/24 13:22:31.096
• [66.144 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 05/10/24 13:22:31.101
  I0510 13:22:31.101099 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename projected @ 05/10/24 13:22:31.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:22:31.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:22:31.112
  STEP: Creating projection with secret that has name projected-secret-test-002eaa85-bda5-4ec6-8347-ecadf619dcad @ 05/10/24 13:22:31.115
  STEP: Creating a pod to test consume secrets @ 05/10/24 13:22:31.119
  STEP: Saw pod success @ 05/10/24 13:22:35.133
  I0510 13:22:35.135712 21 output.go:196] Trying to get logs from node worker-1 pod pod-projected-secrets-2408fa50-bab8-4bf7-b707-0a3c2baf2c70 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 13:22:35.142
  I0510 13:22:35.152949 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4673" for this suite. @ 05/10/24 13:22:35.155
• [4.058 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 05/10/24 13:22:35.159
  I0510 13:22:35.159488 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename secrets @ 05/10/24 13:22:35.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:22:35.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:22:35.173
  STEP: Creating secret with name secret-test-cc42907c-894f-4fd4-8017-c1f7ebd8f880 @ 05/10/24 13:22:35.187
  STEP: Creating a pod to test consume secrets @ 05/10/24 13:22:35.19
  STEP: Saw pod success @ 05/10/24 13:22:39.203
  I0510 13:22:39.205547 21 output.go:196] Trying to get logs from node worker-1 pod pod-secrets-c47913f8-09ef-4cc8-b148-64c165771f54 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 13:22:39.21
  I0510 13:22:39.219782 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6947" for this suite. @ 05/10/24 13:22:39.222
  STEP: Destroying namespace "secret-namespace-5875" for this suite. @ 05/10/24 13:22:39.226
• [4.070 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 05/10/24 13:22:39.23
  I0510 13:22:39.230217 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename deployment @ 05/10/24 13:22:39.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:22:39.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:22:39.244
  I0510 13:22:39.246625 21 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0510 13:22:39.253685 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0510 13:22:44.257347 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/10/24 13:22:44.257
  I0510 13:22:44.257434 21 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0510 13:22:44.262900 21 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0510 13:22:44.267414 21 deployment.go:222] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I0510 13:22:46.273508 21 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0510 13:22:46.275420 21 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0510 13:22:46.281407 21 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8697",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "49d85928-ea2c-4915-b874-b57ecd787922",
      ResourceVersion: (string) (len=4) "2442",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850944164,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850944164,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850944165,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850944164,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850944164,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850944165,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850944164,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6f4b778cd6\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0510 13:22:46.285320 21 deployment.go:39] New ReplicaSet "test-rolling-update-deployment-6f4b778cd6" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6f4b778cd6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8697",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a6db765a-2c5e-4fb3-a705-da9847de7f7b",
      ResourceVersion: (string) (len=4) "2432",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850944164,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "49d85928-ea2c-4915-b874-b57ecd787922",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850944164,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 39 64 38 35 39  32 38 2d 65 61 32 63 2d  |\"49d85928-ea2c-|
              00000120  34 39 31 35 2d 62 38 37  34 2d 62 35 37 65 63 64  |4915-b874-b57ecd|
              00000130  37 38 37 39 32 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |787922\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850944165,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0510 13:22:46.286585 21 deployment.go:44] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0510 13:22:46.286991 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8697",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "32d1697a-b5e3-4ee8-a2fa-19dab4529f3e",
      ResourceVersion: (string) (len=4) "2441",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850944159,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "49d85928-ea2c-4915-b874-b57ecd787922",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850944159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850944165,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 34 39 64 38 35 39 32  |"uid\":\"49d8592|
              000000b0  38 2d 65 61 32 63 2d 34  39 31 35 2d 62 38 37 34  |8-ea2c-4915-b874|
              000000c0  2d 62 35 37 65 63 64 37  38 37 39 32 32 5c 22 7d  |-b57ecd787922\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850944165,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0510 13:22:46.293293 21 deployment.go:67] Pod "test-rolling-update-deployment-6f4b778cd6-cm9hd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6f4b778cd6-cm9hd",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6f4b778cd6-",
      Namespace: (string) (len=15) "deployment-8697",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "27cbdc93-8aae-48be-b52f-7532a3532b44",
      ResourceVersion: (string) (len=4) "2431",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850944164,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6f4b778cd6",
          UID: (types.UID) (len=36) "a6db765a-2c5e-4fb3-a705-da9847de7f7b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850944164,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 36  64 62 37 36 35 61 2d 32  |d\":\"a6db765a-2|
              00000090  63 35 65 2d 34 66 62 33  2d 61 37 30 35 2d 64 61  |c5e-4fb3-a705-da|
              000000a0  39 38 34 37 64 65 37 66  37 62 5c 22 7d 22 3a 7b  |9847de7f7b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850944165,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  31 5c 22 7d 22 3a 7b 22  |.244.1.21\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rfd95",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rfd95",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850944165,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850944164,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850944165,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850944165,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850944164,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.48.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.48.105"
        }
      },
      PodIP: (string) (len=11) "10.244.1.21",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.21"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850944164,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850944164,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://7057c18c9c7de4ea071abec56125cda1e1ba2a01960d08bc2b21264354e49927",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0510 13:22:46.295670 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8697" for this suite. @ 05/10/24 13:22:46.298
• [7.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 05/10/24 13:22:46.303
  I0510 13:22:46.303167 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename dns @ 05/10/24 13:22:46.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:22:46.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:22:46.317
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 05/10/24 13:22:46.319
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 05/10/24 13:22:46.319
  STEP: creating a pod to probe DNS @ 05/10/24 13:22:46.319
  STEP: submitting the pod to kubernetes @ 05/10/24 13:22:46.32
  STEP: retrieving the pod @ 05/10/24 13:22:48.331
  STEP: looking for the results for each expected name from probers @ 05/10/24 13:22:48.333
  I0510 13:22:48.354064 21 dns_common.go:527] DNS probes using dns-9795/dns-test-d0fdacc9-f0d0-48a8-b341-20d9f9762f2d succeeded

  STEP: deleting the pod @ 05/10/24 13:22:48.354
  I0510 13:22:48.362783 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9795" for this suite. @ 05/10/24 13:22:48.365
• [2.066 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 05/10/24 13:22:48.37
  I0510 13:22:48.370099 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 13:22:48.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:22:48.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:22:48.382
  STEP: Creating the pod @ 05/10/24 13:22:48.385
  I0510 13:22:50.913394 21 pod_client.go:141] Successfully updated pod "labelsupdateaf86093a-8bbb-467b-89a6-31f481c2db85"
  I0510 13:22:52.925571 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7903" for this suite. @ 05/10/24 13:22:52.928
• [4.562 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2218
  STEP: Creating a kubernetes client @ 05/10/24 13:22:52.932
  I0510 13:22:52.932360 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename services @ 05/10/24 13:22:52.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:22:52.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:22:52.943
  STEP: creating service in namespace services-8301 @ 05/10/24 13:22:52.946
  STEP: creating service affinity-nodeport in namespace services-8301 @ 05/10/24 13:22:52.946
  STEP: creating replication controller affinity-nodeport in namespace services-8301 @ 05/10/24 13:22:52.96
  I0510 13:22:52.967299      21 runners.go:198] Created replication controller with name: affinity-nodeport, namespace: services-8301, replica count: 3
  I0510 13:22:56.018323      21 runners.go:198] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0510 13:22:56.025146 21 resource.go:361] Creating new exec pod
  I0510 13:22:59.036631 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-8301 exec execpod-affinity7pppg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0510 13:22:59.157444 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I0510 13:22:59.157515 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0510 13:22:59.157722 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-8301 exec execpod-affinity7pppg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.107.49.141 80'
  I0510 13:22:59.271522 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.107.49.141 80\nConnection to 10.107.49.141 80 port [tcp/http] succeeded!\n"
  I0510 13:22:59.271578 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0510 13:22:59.271824 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-8301 exec execpod-affinity7pppg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.48.103 32292'
  I0510 13:22:59.392376 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.48.103 32292\nConnection to 10.0.48.103 32292 port [tcp/*] succeeded!\n"
  I0510 13:22:59.392427 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0510 13:22:59.392520 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-8301 exec execpod-affinity7pppg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.48.105 32292'
  I0510 13:22:59.507675 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.48.105 32292\nConnection to 10.0.48.105 32292 port [tcp/*] succeeded!\n"
  I0510 13:22:59.507740 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0510 13:22:59.507831 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-8301 exec execpod-affinity7pppg -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.0.48.103:32292/ ; done'
  I0510 13:22:59.702045 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:32292/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:32292/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:32292/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:32292/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:32292/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:32292/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:32292/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:32292/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:32292/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:32292/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:32292/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:32292/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:32292/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:32292/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:32292/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:32292/\n"
  I0510 13:22:59.702103 21 builder.go:147] stdout: "\naffinity-nodeport-8cncm\naffinity-nodeport-8cncm\naffinity-nodeport-8cncm\naffinity-nodeport-8cncm\naffinity-nodeport-8cncm\naffinity-nodeport-8cncm\naffinity-nodeport-8cncm\naffinity-nodeport-8cncm\naffinity-nodeport-8cncm\naffinity-nodeport-8cncm\naffinity-nodeport-8cncm\naffinity-nodeport-8cncm\naffinity-nodeport-8cncm\naffinity-nodeport-8cncm\naffinity-nodeport-8cncm\naffinity-nodeport-8cncm"
  I0510 13:22:59.702155 21 service.go:242] Received response from host: affinity-nodeport-8cncm
  I0510 13:22:59.702198 21 service.go:242] Received response from host: affinity-nodeport-8cncm
  I0510 13:22:59.702213 21 service.go:242] Received response from host: affinity-nodeport-8cncm
  I0510 13:22:59.702228 21 service.go:242] Received response from host: affinity-nodeport-8cncm
  I0510 13:22:59.702313 21 service.go:242] Received response from host: affinity-nodeport-8cncm
  I0510 13:22:59.702369 21 service.go:242] Received response from host: affinity-nodeport-8cncm
  I0510 13:22:59.702386 21 service.go:242] Received response from host: affinity-nodeport-8cncm
  I0510 13:22:59.702411 21 service.go:242] Received response from host: affinity-nodeport-8cncm
  I0510 13:22:59.702425 21 service.go:242] Received response from host: affinity-nodeport-8cncm
  I0510 13:22:59.702440 21 service.go:242] Received response from host: affinity-nodeport-8cncm
  I0510 13:22:59.702470 21 service.go:242] Received response from host: affinity-nodeport-8cncm
  I0510 13:22:59.702495 21 service.go:242] Received response from host: affinity-nodeport-8cncm
  I0510 13:22:59.702509 21 service.go:242] Received response from host: affinity-nodeport-8cncm
  I0510 13:22:59.702524 21 service.go:242] Received response from host: affinity-nodeport-8cncm
  I0510 13:22:59.702539 21 service.go:242] Received response from host: affinity-nodeport-8cncm
  I0510 13:22:59.702558 21 service.go:242] Received response from host: affinity-nodeport-8cncm
  I0510 13:22:59.702652 21 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-8301, will wait for the garbage collector to delete the pods @ 05/10/24 13:22:59.712
  I0510 13:22:59.769375 21 resources.go:139] Deleting ReplicationController affinity-nodeport took: 3.356937ms
  I0510 13:22:59.869903 21 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.523887ms
  I0510 13:23:02.888843 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8301" for this suite. @ 05/10/24 13:23:02.891
• [9.963 seconds]
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 05/10/24 13:23:02.895
  I0510 13:23:02.895521 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 13:23:02.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:23:02.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:23:02.908
  STEP: Creating a pod to test downward api env vars @ 05/10/24 13:23:02.91
  STEP: Saw pod success @ 05/10/24 13:23:06.924
  I0510 13:23:06.926350 21 output.go:196] Trying to get logs from node worker-1 pod downward-api-e3717bf9-cdea-4ef7-8e73-e2f2e3dd2879 container dapi-container: <nil>
  STEP: delete the pod @ 05/10/24 13:23:06.931
  I0510 13:23:06.941738 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9808" for this suite. @ 05/10/24 13:23:06.944
• [4.053 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 05/10/24 13:23:06.948
  I0510 13:23:06.948411 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename namespaces @ 05/10/24 13:23:06.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:23:06.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:23:06.962
  STEP: Read namespace status @ 05/10/24 13:23:06.965
  I0510 13:23:06.967413 21 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 05/10/24 13:23:06.967
  I0510 13:23:06.971308 21 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 05/10/24 13:23:06.971
  I0510 13:23:06.977198 21 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0510 13:23:06.977301 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3156" for this suite. @ 05/10/24 13:23:06.979
• [0.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 05/10/24 13:23:06.984
  I0510 13:23:06.984958 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename replication-controller @ 05/10/24 13:23:06.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:23:06.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:23:06.995
  STEP: Creating replication controller my-hostname-basic-4c1092a4-885c-4940-b2a1-a52cf2524845 @ 05/10/24 13:23:06.997
  I0510 13:23:07.003215 21 resource.go:87] Pod name my-hostname-basic-4c1092a4-885c-4940-b2a1-a52cf2524845: Found 0 pods out of 1
  I0510 13:23:12.006522 21 resource.go:87] Pod name my-hostname-basic-4c1092a4-885c-4940-b2a1-a52cf2524845: Found 1 pods out of 1
  I0510 13:23:12.006561 21 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-4c1092a4-885c-4940-b2a1-a52cf2524845" are running
  I0510 13:23:12.009122 21 rc.go:523] Pod "my-hostname-basic-4c1092a4-885c-4940-b2a1-a52cf2524845-8rngj" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-10 13:23:07 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-10 13:23:07 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-10 13:23:07 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-10 13:23:07 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-10 13:23:07 +0000 UTC Reason: Message:}])
  I0510 13:23:12.009151 21 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 05/10/24 13:23:12.009
  I0510 13:23:12.020085 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3569" for this suite. @ 05/10/24 13:23:12.023
• [5.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 05/10/24 13:23:12.029
  I0510 13:23:12.029679 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename hostport @ 05/10/24 13:23:12.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:23:12.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:23:12.044
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 05/10/24 13:23:12.05
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 10.0.48.105 on the node which pod1 resides and expect scheduled @ 05/10/24 13:23:14.062
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 10.0.48.105 but use UDP protocol on the node which pod2 resides @ 05/10/24 13:23:26.088
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 05/10/24 13:23:30.112
  I0510 13:23:30.112415 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 10.0.48.105 http://127.0.0.1:54323/hostname] Namespace:hostport-4343 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0510 13:23:30.112435 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 13:23:30.112914 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0510 13:23:30.112975 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-4343/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+10.0.48.105+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.0.48.105, port: 54323 @ 05/10/24 13:23:30.181
  I0510 13:23:30.181087 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://10.0.48.105:54323/hostname] Namespace:hostport-4343 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0510 13:23:30.181105 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 13:23:30.181558 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0510 13:23:30.181609 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-4343/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F10.0.48.105%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.0.48.105, port: 54323 UDP @ 05/10/24 13:23:30.239
  I0510 13:23:30.239771 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 10.0.48.105 54323] Namespace:hostport-4343 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0510 13:23:30.239788 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 13:23:30.240332 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0510 13:23:30.240397 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-4343/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+10.0.48.105+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  I0510 13:23:35.294386 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-4343" for this suite. @ 05/10/24 13:23:35.297
• [23.272 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 05/10/24 13:23:35.302
  I0510 13:23:35.302075 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename container-probe @ 05/10/24 13:23:35.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:23:35.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:23:35.315
  STEP: Creating pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187 @ 05/10/24 13:23:35.318
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/10/24 13:23:37.329
  I0510 13:23:37.331692 21 container_probe.go:1749] Initial restart count of pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d is 0
  I0510 13:23:37.333703 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:23:39.337053 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:23:41.340454 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:23:43.343803 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:23:45.347664 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:23:47.351025 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:23:49.354699 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:23:51.357691 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:23:53.361035 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:23:55.364849 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:23:57.368132 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:23:59.371816 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:24:01.374771 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:24:03.378812 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:24:05.382637 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:24:07.386224 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:24:09.389043 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:24:11.391819 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:24:13.395078 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:24:15.397764 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:24:17.401218 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:24:19.405065 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:24:21.408588 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:24:23.411526 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:24:25.415110 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:24:27.417600 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:24:29.421526 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:24:31.424735 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:24:33.428010 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:24:35.431521 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:24:37.434832 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:24:39.438574 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:24:41.442128 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:24:43.445401 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:24:45.449023 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:24:47.452504 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:24:49.456117 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:24:51.459677 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:24:53.462990 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:24:55.466738 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:24:57.470139 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:24:59.472709 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:25:01.475503 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:25:03.478929 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:25:05.482589 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:25:07.485165 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:25:09.488823 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:25:11.492399 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:25:13.496001 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:25:15.499779 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:25:17.503399 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:25:19.506681 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:25:21.509498 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:25:23.512599 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:25:25.516365 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:25:27.519914 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:25:29.522637 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:25:31.525781 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:25:33.529093 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:25:35.532693 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:25:37.536073 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:25:39.539925 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:25:41.543348 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:25:43.547054 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:25:45.550675 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:25:47.554122 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:25:49.557562 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:25:51.560094 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:25:53.563384 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:25:55.566675 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:25:57.570073 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:25:59.573827 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:26:01.576358 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:26:03.579004 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:26:05.582917 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:26:07.585412 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:26:09.589201 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:26:11.592453 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:26:13.595322 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:26:15.599060 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:26:17.602443 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:26:19.605597 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:26:21.608941 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:26:23.611523 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:26:25.615318 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:26:27.618213 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:26:29.621770 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:26:31.624831 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:26:33.628131 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:26:35.631839 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:26:37.635195 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:26:39.638906 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:26:41.641723 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:26:43.644917 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:26:45.648492 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:26:47.650885 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:26:49.654820 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:26:51.657612 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:26:53.660813 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:26:55.664176 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:26:57.667779 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:26:59.670685 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:27:01.674200 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:27:03.677339 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:27:05.680805 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:27:07.683393 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:27:09.686678 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:27:11.689253 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:27:13.692795 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:27:15.695262 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:27:17.697868 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:27:19.700725 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:27:21.704169 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:27:23.706663 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:27:25.709982 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:27:27.712493 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:27:29.715265 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:27:31.717968 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:27:33.721261 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  I0510 13:27:35.724703 21 container_probe.go:1759] Get pod test-webserver-873e8273-c257-4066-a82f-96276b5e3f3d in namespace container-probe-187
  STEP: deleting the pod @ 05/10/24 13:27:37.724
  I0510 13:27:37.734746 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-187" for this suite. @ 05/10/24 13:27:37.737
• [242.441 seconds]
------------------------------
SS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 05/10/24 13:27:37.743
  I0510 13:27:37.743789 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename secrets @ 05/10/24 13:27:37.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:27:37.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:27:37.756
  STEP: creating a secret @ 05/10/24 13:27:37.759
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 05/10/24 13:27:37.763
  STEP: patching the secret @ 05/10/24 13:27:37.767
  STEP: deleting the secret using a LabelSelector @ 05/10/24 13:27:37.773
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 05/10/24 13:27:37.777
  I0510 13:27:37.779023 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6696" for this suite. @ 05/10/24 13:27:37.781
• [0.041 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 05/10/24 13:27:37.785
  I0510 13:27:37.785091 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename webhook @ 05/10/24 13:27:37.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:27:37.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:27:37.795
  STEP: Setting up server cert @ 05/10/24 13:27:37.809
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 13:27:38.242
  STEP: Deploying the webhook pod @ 05/10/24 13:27:38.247
  STEP: Wait for the deployment to be ready @ 05/10/24 13:27:38.257
  I0510 13:27:38.264006 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 13:27:40.271
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 13:27:40.283
  I0510 13:27:41.283977 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 05/10/24 13:27:41.288
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/10/24 13:27:41.288
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 05/10/24 13:27:41.304
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 05/10/24 13:27:42.312
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/10/24 13:27:42.312
  STEP: Having no error when timeout is longer than webhook latency @ 05/10/24 13:27:43.337
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/10/24 13:27:43.337
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 05/10/24 13:27:48.363
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/10/24 13:27:48.363
  I0510 13:27:53.419603 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8553" for this suite. @ 05/10/24 13:27:53.422
  STEP: Destroying namespace "webhook-markers-8734" for this suite. @ 05/10/24 13:27:53.425
• [15.644 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 05/10/24 13:27:53.429
  I0510 13:27:53.429579 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename container-probe @ 05/10/24 13:27:53.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:27:53.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:27:53.441
  STEP: Creating pod liveness-4f399df5-6873-428a-bf5c-ced3c1ec6aad in namespace container-probe-7502 @ 05/10/24 13:27:53.443
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/10/24 13:27:55.455
  I0510 13:27:55.457141 21 container_probe.go:1749] Initial restart count of pod liveness-4f399df5-6873-428a-bf5c-ced3c1ec6aad is 0
  I0510 13:27:55.459063 21 container_probe.go:1759] Get pod liveness-4f399df5-6873-428a-bf5c-ced3c1ec6aad in namespace container-probe-7502
  I0510 13:27:57.461553 21 container_probe.go:1759] Get pod liveness-4f399df5-6873-428a-bf5c-ced3c1ec6aad in namespace container-probe-7502
  I0510 13:27:59.465102 21 container_probe.go:1759] Get pod liveness-4f399df5-6873-428a-bf5c-ced3c1ec6aad in namespace container-probe-7502
  I0510 13:28:01.468560 21 container_probe.go:1759] Get pod liveness-4f399df5-6873-428a-bf5c-ced3c1ec6aad in namespace container-probe-7502
  I0510 13:28:03.471337 21 container_probe.go:1759] Get pod liveness-4f399df5-6873-428a-bf5c-ced3c1ec6aad in namespace container-probe-7502
  I0510 13:28:05.475064 21 container_probe.go:1759] Get pod liveness-4f399df5-6873-428a-bf5c-ced3c1ec6aad in namespace container-probe-7502
  I0510 13:28:07.478003 21 container_probe.go:1759] Get pod liveness-4f399df5-6873-428a-bf5c-ced3c1ec6aad in namespace container-probe-7502
  I0510 13:28:09.481346 21 container_probe.go:1759] Get pod liveness-4f399df5-6873-428a-bf5c-ced3c1ec6aad in namespace container-probe-7502
  I0510 13:28:11.485099 21 container_probe.go:1759] Get pod liveness-4f399df5-6873-428a-bf5c-ced3c1ec6aad in namespace container-probe-7502
  I0510 13:28:13.489325 21 container_probe.go:1759] Get pod liveness-4f399df5-6873-428a-bf5c-ced3c1ec6aad in namespace container-probe-7502
  I0510 13:28:15.492373 21 container_probe.go:1759] Get pod liveness-4f399df5-6873-428a-bf5c-ced3c1ec6aad in namespace container-probe-7502
  I0510 13:28:15.492414 21 container_probe.go:1763] Restart count of pod container-probe-7502/liveness-4f399df5-6873-428a-bf5c-ced3c1ec6aad is now 1 (20.035237193s elapsed)
  STEP: deleting the pod @ 05/10/24 13:28:15.492
  I0510 13:28:15.506383 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7502" for this suite. @ 05/10/24 13:28:15.509
• [22.083 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 05/10/24 13:28:15.513
  I0510 13:28:15.513288 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename field-validation @ 05/10/24 13:28:15.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:28:15.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:28:15.525
  I0510 13:28:15.528615 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  W0510 13:28:18.064081      21 warnings.go:70] unknown field "alpha"
  W0510 13:28:18.064109      21 warnings.go:70] unknown field "beta"
  W0510 13:28:18.064118      21 warnings.go:70] unknown field "delta"
  W0510 13:28:18.064127      21 warnings.go:70] unknown field "epsilon"
  W0510 13:28:18.064135      21 warnings.go:70] unknown field "gamma"
  I0510 13:28:18.591403 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9981" for this suite. @ 05/10/24 13:28:18.593
• [3.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 05/10/24 13:28:18.597
  I0510 13:28:18.597784 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename configmap @ 05/10/24 13:28:18.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:28:18.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:28:18.61
  STEP: Creating configMap with name configmap-test-volume-cc74b314-c86a-4d23-bc0c-4b2fe7018e2b @ 05/10/24 13:28:18.613
  STEP: Creating a pod to test consume configMaps @ 05/10/24 13:28:18.616
  STEP: Saw pod success @ 05/10/24 13:28:20.627
  I0510 13:28:20.629752 21 output.go:196] Trying to get logs from node worker-1 pod pod-configmaps-ae046c6d-1eaa-4939-bc32-3bb77bae0fcb container configmap-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 13:28:20.643
  I0510 13:28:20.654946 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1958" for this suite. @ 05/10/24 13:28:20.657
• [2.063 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1368
  STEP: Creating a kubernetes client @ 05/10/24 13:28:20.66
  I0510 13:28:20.660955 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 13:28:20.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:28:20.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:28:20.672
  STEP: validating cluster-info @ 05/10/24 13:28:20.674
  I0510 13:28:20.674904 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-8868 cluster-info'
  I0510 13:28:20.731780 21 builder.go:146] stderr: ""
  I0510 13:28:20.731898 21 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.96.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0510 13:28:20.732019 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8868" for this suite. @ 05/10/24 13:28:20.734
• [0.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 05/10/24 13:28:20.738
  I0510 13:28:20.738965 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename endpointslice @ 05/10/24 13:28:20.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:28:20.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:28:20.75
  STEP: getting /apis @ 05/10/24 13:28:20.753
  STEP: getting /apis/discovery.k8s.io @ 05/10/24 13:28:20.757
  STEP: getting /apis/discovery.k8s.iov1 @ 05/10/24 13:28:20.757
  STEP: creating @ 05/10/24 13:28:20.758
  STEP: getting @ 05/10/24 13:28:20.77
  STEP: listing @ 05/10/24 13:28:20.771
  STEP: watching @ 05/10/24 13:28:20.773
  I0510 13:28:20.773696 21 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 05/10/24 13:28:20.774
  STEP: cluster-wide watching @ 05/10/24 13:28:20.776
  I0510 13:28:20.776602 21 endpointslice.go:459] starting watch
  STEP: patching @ 05/10/24 13:28:20.777
  STEP: updating @ 05/10/24 13:28:20.781
  I0510 13:28:20.786771 21 endpointslice.go:482] waiting for watch events with expected annotations
  I0510 13:28:20.786822 21 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 05/10/24 13:28:20.786
  STEP: deleting a collection @ 05/10/24 13:28:20.795
  I0510 13:28:20.803974 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7334" for this suite. @ 05/10/24 13:28:20.806
• [0.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 05/10/24 13:28:20.811
  I0510 13:28:20.811769 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename containers @ 05/10/24 13:28:20.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:28:20.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:28:20.822
  STEP: Creating a pod to test override command @ 05/10/24 13:28:20.825
  STEP: Saw pod success @ 05/10/24 13:28:24.838
  I0510 13:28:24.840898 21 output.go:196] Trying to get logs from node worker-1 pod client-containers-8e6b69be-f145-4d6b-bf23-4801c3be53af container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 13:28:24.845
  I0510 13:28:24.856994 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-748" for this suite. @ 05/10/24 13:28:24.859
• [4.052 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 05/10/24 13:28:24.863
  I0510 13:28:24.863862 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename chunking @ 05/10/24 13:28:24.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:28:24.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:28:24.876
  STEP: creating a large number of resources @ 05/10/24 13:28:24.879
  STEP: retrieving those results in paged fashion several times @ 05/10/24 13:28:42.571
  I0510 13:28:42.618366 21 chunking.go:98] Retrieved 17/17 results with rv 4133 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDE2XHUwMDAwIn0
  I0510 13:28:42.669195 21 chunking.go:98] Retrieved 17/17 results with rv 4133 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  I0510 13:28:42.719168 21 chunking.go:98] Retrieved 17/17 results with rv 4133 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  I0510 13:28:42.769115 21 chunking.go:98] Retrieved 17/17 results with rv 4133 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  I0510 13:28:42.819064 21 chunking.go:98] Retrieved 17/17 results with rv 4133 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  I0510 13:28:42.868827 21 chunking.go:98] Retrieved 17/17 results with rv 4133 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  I0510 13:28:42.918832 21 chunking.go:98] Retrieved 17/17 results with rv 4133 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  I0510 13:28:42.968847 21 chunking.go:98] Retrieved 17/17 results with rv 4133 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  I0510 13:28:43.018982 21 chunking.go:98] Retrieved 17/17 results with rv 4133 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  I0510 13:28:43.068924 21 chunking.go:98] Retrieved 17/17 results with rv 4133 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  I0510 13:28:43.118830 21 chunking.go:98] Retrieved 17/17 results with rv 4133 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  I0510 13:28:43.168859 21 chunking.go:98] Retrieved 17/17 results with rv 4133 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  I0510 13:28:43.218906 21 chunking.go:98] Retrieved 17/17 results with rv 4133 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  I0510 13:28:43.268818 21 chunking.go:98] Retrieved 17/17 results with rv 4133 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  I0510 13:28:43.318653 21 chunking.go:98] Retrieved 17/17 results with rv 4133 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  I0510 13:28:43.368455 21 chunking.go:98] Retrieved 17/17 results with rv 4133 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  I0510 13:28:43.419269 21 chunking.go:98] Retrieved 17/17 results with rv 4133 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  I0510 13:28:43.468993 21 chunking.go:98] Retrieved 17/17 results with rv 4133 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  I0510 13:28:43.518680 21 chunking.go:98] Retrieved 17/17 results with rv 4133 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  I0510 13:28:43.568415 21 chunking.go:98] Retrieved 17/17 results with rv 4133 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  I0510 13:28:43.619082 21 chunking.go:98] Retrieved 17/17 results with rv 4133 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  I0510 13:28:43.668803 21 chunking.go:98] Retrieved 17/17 results with rv 4133 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  I0510 13:28:43.718484 21 chunking.go:98] Retrieved 17/17 results with rv 4133 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  I0510 13:28:43.769053 21 chunking.go:98] Retrieved 9/17 results with rv 4133 and continue 
  I0510 13:28:43.819125 21 chunking.go:98] Retrieved 17/17 results with rv 4136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDE2XHUwMDAwIn0
  I0510 13:28:43.869327 21 chunking.go:98] Retrieved 17/17 results with rv 4136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  I0510 13:28:43.919458 21 chunking.go:98] Retrieved 17/17 results with rv 4136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  I0510 13:28:43.969603 21 chunking.go:98] Retrieved 17/17 results with rv 4136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  I0510 13:28:44.018832 21 chunking.go:98] Retrieved 17/17 results with rv 4136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  I0510 13:28:44.068837 21 chunking.go:98] Retrieved 17/17 results with rv 4136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  I0510 13:28:44.118725 21 chunking.go:98] Retrieved 17/17 results with rv 4136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  I0510 13:28:44.168760 21 chunking.go:98] Retrieved 17/17 results with rv 4136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  I0510 13:28:44.218695 21 chunking.go:98] Retrieved 17/17 results with rv 4136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  I0510 13:28:44.268509 21 chunking.go:98] Retrieved 17/17 results with rv 4136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  I0510 13:28:44.319429 21 chunking.go:98] Retrieved 17/17 results with rv 4136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  I0510 13:28:44.369202 21 chunking.go:98] Retrieved 17/17 results with rv 4136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  I0510 13:28:44.418989 21 chunking.go:98] Retrieved 17/17 results with rv 4136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  I0510 13:28:44.468717 21 chunking.go:98] Retrieved 17/17 results with rv 4136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  I0510 13:28:44.518336 21 chunking.go:98] Retrieved 17/17 results with rv 4136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  I0510 13:28:44.569216 21 chunking.go:98] Retrieved 17/17 results with rv 4136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  I0510 13:28:44.619145 21 chunking.go:98] Retrieved 17/17 results with rv 4136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  I0510 13:28:44.668917 21 chunking.go:98] Retrieved 17/17 results with rv 4136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  I0510 13:28:44.718719 21 chunking.go:98] Retrieved 17/17 results with rv 4136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  I0510 13:28:44.768395 21 chunking.go:98] Retrieved 17/17 results with rv 4136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  I0510 13:28:44.819123 21 chunking.go:98] Retrieved 17/17 results with rv 4136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  I0510 13:28:44.868817 21 chunking.go:98] Retrieved 17/17 results with rv 4136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  I0510 13:28:44.918985 21 chunking.go:98] Retrieved 17/17 results with rv 4136 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  I0510 13:28:44.968560 21 chunking.go:98] Retrieved 9/17 results with rv 4136 and continue 
  I0510 13:28:45.018363 21 chunking.go:98] Retrieved 17/17 results with rv 4139 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDE2XHUwMDAwIn0
  I0510 13:28:45.069250 21 chunking.go:98] Retrieved 17/17 results with rv 4139 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  I0510 13:28:45.119353 21 chunking.go:98] Retrieved 17/17 results with rv 4139 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  I0510 13:28:45.169330 21 chunking.go:98] Retrieved 17/17 results with rv 4139 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  I0510 13:28:45.223167 21 chunking.go:98] Retrieved 17/17 results with rv 4139 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  I0510 13:28:45.268976 21 chunking.go:98] Retrieved 17/17 results with rv 4139 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  I0510 13:28:45.318754 21 chunking.go:98] Retrieved 17/17 results with rv 4139 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  I0510 13:28:45.368354 21 chunking.go:98] Retrieved 17/17 results with rv 4139 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  I0510 13:28:45.419187 21 chunking.go:98] Retrieved 17/17 results with rv 4139 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  I0510 13:28:45.468808 21 chunking.go:98] Retrieved 17/17 results with rv 4139 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  I0510 13:28:45.518506 21 chunking.go:98] Retrieved 17/17 results with rv 4139 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  I0510 13:28:45.568224 21 chunking.go:98] Retrieved 17/17 results with rv 4139 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  I0510 13:28:45.619007 21 chunking.go:98] Retrieved 17/17 results with rv 4139 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  I0510 13:28:45.668697 21 chunking.go:98] Retrieved 17/17 results with rv 4139 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  I0510 13:28:45.718452 21 chunking.go:98] Retrieved 17/17 results with rv 4139 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  I0510 13:28:45.769196 21 chunking.go:98] Retrieved 17/17 results with rv 4139 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  I0510 13:28:45.819191 21 chunking.go:98] Retrieved 17/17 results with rv 4139 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  I0510 13:28:45.869432 21 chunking.go:98] Retrieved 17/17 results with rv 4139 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  I0510 13:28:45.919709 21 chunking.go:98] Retrieved 17/17 results with rv 4139 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  I0510 13:28:45.968848 21 chunking.go:98] Retrieved 17/17 results with rv 4139 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  I0510 13:28:46.019100 21 chunking.go:98] Retrieved 17/17 results with rv 4139 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  I0510 13:28:46.069340 21 chunking.go:98] Retrieved 17/17 results with rv 4139 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  I0510 13:28:46.119606 21 chunking.go:98] Retrieved 17/17 results with rv 4139 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEzOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  I0510 13:28:46.168230 21 chunking.go:98] Retrieved 9/17 results with rv 4139 and continue 
  STEP: retrieving those results all at once @ 05/10/24 13:28:46.168
  I0510 13:28:46.231360 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-1714" for this suite. @ 05/10/24 13:28:46.268
• [21.457 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 05/10/24 13:28:46.321
  I0510 13:28:46.321721 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename daemonsets @ 05/10/24 13:28:46.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:28:46.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:28:46.335
  I0510 13:28:46.350666 21 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0510 13:28:46.356188 21 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0510 13:28:46.360404 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0510 13:28:46.360474 21 fixtures.go:130] Node worker-0 is running 0 daemon pod, expected 1
  I0510 13:28:47.360719 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0510 13:28:47.360763 21 fixtures.go:130] Node worker-1 is running 0 daemon pod, expected 1
  I0510 13:28:48.361612 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0510 13:28:48.361648 21 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  I0510 13:28:48.361664 21 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0510 13:28:48.369400 21 daemon_set.go:102] Updating DaemonSet daemon-set
  I0510 13:28:49.376941 21 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0510 13:28:49.384593 21 daemon_set.go:102] Updating DaemonSet daemon-set
  I0510 13:28:49.384625 21 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0510 13:28:49.386943 21 daemon_set.go:1178] Wrong image for pod: daemon-set-ptxwn. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I0510 13:28:49.386969 21 daemon_set.go:1183] Pod daemon-set-ptxwn is not available
  I0510 13:28:51.388626 21 daemon_set.go:1183] Pod daemon-set-cnn5d is not available
  STEP: Deleting DaemonSet "daemon-set" @ 05/10/24 13:28:51.396
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-331, will wait for the garbage collector to delete the pods @ 05/10/24 13:28:51.396
  I0510 13:28:51.453426 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 4.129726ms
  I0510 13:28:51.553595 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.147334ms
  I0510 13:28:53.255617 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0510 13:28:53.255706 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0510 13:28:53.259413 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"4641"},"items":null}

  I0510 13:28:53.261371 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"4641"},"items":null}

  I0510 13:28:53.267340 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-331" for this suite. @ 05/10/24 13:28:53.269
• [6.952 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 05/10/24 13:28:53.273
  I0510 13:28:53.273901 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/10/24 13:28:53.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:28:53.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:28:53.287
  STEP: create the container to handle the HTTPGet hook request. @ 05/10/24 13:28:53.291
  STEP: create the pod with lifecycle hook @ 05/10/24 13:28:55.306
  STEP: delete the pod with lifecycle hook @ 05/10/24 13:28:57.316
  STEP: check prestop hook @ 05/10/24 13:28:59.327
  I0510 13:28:59.341425 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9658" for this suite. @ 05/10/24 13:28:59.343
• [6.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 05/10/24 13:28:59.348
  I0510 13:28:59.348586 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename projected @ 05/10/24 13:28:59.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:28:59.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:28:59.363
  STEP: Creating configMap with name cm-test-opt-del-960014c0-064b-4887-84d1-20e786d9d658 @ 05/10/24 13:28:59.368
  STEP: Creating configMap with name cm-test-opt-upd-31c41e0c-75bd-4940-bfb5-c229fe6db9f8 @ 05/10/24 13:28:59.371
  STEP: Creating the pod @ 05/10/24 13:28:59.374
  STEP: Deleting configmap cm-test-opt-del-960014c0-064b-4887-84d1-20e786d9d658 @ 05/10/24 13:29:01.402
  STEP: Updating configmap cm-test-opt-upd-31c41e0c-75bd-4940-bfb5-c229fe6db9f8 @ 05/10/24 13:29:01.406
  STEP: Creating configMap with name cm-test-opt-create-946656bd-991b-4548-9d34-7c85e1c64859 @ 05/10/24 13:29:01.409
  STEP: waiting to observe update in volume @ 05/10/24 13:29:01.412
  I0510 13:30:25.730770 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-885" for this suite. @ 05/10/24 13:30:25.733
• [86.388 seconds]
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 05/10/24 13:30:25.737
  I0510 13:30:25.737179 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename events @ 05/10/24 13:30:25.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:30:25.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:30:25.748
  STEP: Create set of events @ 05/10/24 13:30:25.751
  STEP: get a list of Events with a label in the current namespace @ 05/10/24 13:30:25.761
  STEP: delete a list of events @ 05/10/24 13:30:25.762
  I0510 13:30:25.762943 21 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 05/10/24 13:30:25.775
  I0510 13:30:25.777191 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3313" for this suite. @ 05/10/24 13:30:25.779
• [0.046 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1284
  STEP: Creating a kubernetes client @ 05/10/24 13:30:25.783
  I0510 13:30:25.783667 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename services @ 05/10/24 13:30:25.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:30:25.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:30:25.794
  STEP: creating service nodeport-test with type=NodePort in namespace services-9205 @ 05/10/24 13:30:25.796
  STEP: creating replication controller nodeport-test in namespace services-9205 @ 05/10/24 13:30:25.807
  I0510 13:30:25.813541      21 runners.go:198] Created replication controller with name: nodeport-test, namespace: services-9205, replica count: 2
  I0510 13:30:28.865531      21 runners.go:198] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0510 13:30:28.865610 21 resource.go:361] Creating new exec pod
  I0510 13:30:31.883291 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-9205 exec execpoddxqzn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0510 13:30:32.006656 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0510 13:30:32.006721 21 builder.go:147] stdout: "nodeport-test-4t7pv"
  I0510 13:30:32.006900 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-9205 exec execpoddxqzn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.205.192 80'
  I0510 13:30:32.128995 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.103.205.192 80\nConnection to 10.103.205.192 80 port [tcp/http] succeeded!\n"
  I0510 13:30:32.129040 21 builder.go:147] stdout: ""
  I0510 13:30:33.006986 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-9205 exec execpoddxqzn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.205.192 80'
  I0510 13:30:33.124527 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.103.205.192 80\nConnection to 10.103.205.192 80 port [tcp/http] succeeded!\n"
  I0510 13:30:33.124571 21 builder.go:147] stdout: ""
  I0510 13:30:34.006969 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-9205 exec execpoddxqzn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.205.192 80'
  I0510 13:30:34.121323 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.103.205.192 80\nConnection to 10.103.205.192 80 port [tcp/http] succeeded!\n"
  I0510 13:30:34.121376 21 builder.go:147] stdout: "nodeport-test-4t7pv"
  I0510 13:30:34.121474 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-9205 exec execpoddxqzn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.48.103 32287'
  I0510 13:30:34.241958 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.48.103 32287\nConnection to 10.0.48.103 32287 port [tcp/*] succeeded!\n"
  I0510 13:30:34.242002 21 builder.go:147] stdout: "nodeport-test-4t7pv"
  I0510 13:30:34.242070 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-9205 exec execpoddxqzn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.48.105 32287'
  I0510 13:30:34.358461 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.48.105 32287\nConnection to 10.0.48.105 32287 port [tcp/*] succeeded!\n"
  I0510 13:30:34.358507 21 builder.go:147] stdout: "nodeport-test-hq964"
  I0510 13:30:34.358617 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9205" for this suite. @ 05/10/24 13:30:34.36
• [8.591 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 05/10/24 13:30:34.375
  I0510 13:30:34.375070 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename pods @ 05/10/24 13:30:34.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:30:34.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:30:34.386
  STEP: creating the pod @ 05/10/24 13:30:34.389
  STEP: submitting the pod to kubernetes @ 05/10/24 13:30:34.389
  STEP: verifying the pod is in kubernetes @ 05/10/24 13:30:36.403
  STEP: updating the pod @ 05/10/24 13:30:36.406
  I0510 13:30:36.914926 21 pod_client.go:141] Successfully updated pod "pod-update-06ee39b1-fd12-4da4-b3d6-1aa33253cef4"
  STEP: verifying the updated pod is in kubernetes @ 05/10/24 13:30:36.917
  I0510 13:30:36.919365 21 pods.go:391] Pod update OK
  I0510 13:30:36.919566 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5807" for this suite. @ 05/10/24 13:30:36.922
• [2.551 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1079
  STEP: Creating a kubernetes client @ 05/10/24 13:30:36.925
  I0510 13:30:36.925824 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 13:30:36.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:30:36.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:30:36.939
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/10/24 13:30:36.942
  I0510 13:30:36.942701 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-9808 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0510 13:30:37.004608 21 builder.go:146] stderr: ""
  I0510 13:30:37.004653 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 05/10/24 13:30:37.004
  I0510 13:30:37.004750 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-9808 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0510 13:30:37.069345 21 builder.go:146] stderr: ""
  I0510 13:30:37.069396 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/10/24 13:30:37.069
  I0510 13:30:37.071616 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-9808 delete pods e2e-test-httpd-pod'
  I0510 13:30:38.650741 21 builder.go:146] stderr: ""
  I0510 13:30:38.650846 21 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0510 13:30:38.651068 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9808" for this suite. @ 05/10/24 13:30:38.653
• [1.734 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 05/10/24 13:30:38.659
  I0510 13:30:38.659647 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename projected @ 05/10/24 13:30:38.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:30:38.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:30:38.671
  STEP: Creating projection with secret that has name projected-secret-test-591860a7-eeec-4a29-99c5-5de23a18b674 @ 05/10/24 13:30:38.674
  STEP: Creating a pod to test consume secrets @ 05/10/24 13:30:38.679
  STEP: Saw pod success @ 05/10/24 13:30:42.691
  I0510 13:30:42.693450 21 output.go:196] Trying to get logs from node worker-1 pod pod-projected-secrets-4a5fe6a9-65d7-4eb7-8abe-bfc64aec5713 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 13:30:42.698
  I0510 13:30:42.707141 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1788" for this suite. @ 05/10/24 13:30:42.709
• [4.053 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1726
  STEP: Creating a kubernetes client @ 05/10/24 13:30:42.713
  I0510 13:30:42.713196 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 13:30:42.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:30:42.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:30:42.725
  I0510 13:30:42.728328 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-8504 version'
  I0510 13:30:42.784422 21 builder.go:146] stderr: ""
  I0510 13:30:42.784516 21 builder.go:147] stdout: "Client Version: v1.30.0\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.30.0+k0s\n"
  I0510 13:30:42.784971 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8504" for this suite. @ 05/10/24 13:30:42.787
• [0.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 05/10/24 13:30:42.791
  I0510 13:30:42.791886 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename ingressclass @ 05/10/24 13:30:42.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:30:42.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:30:42.804
  STEP: getting /apis @ 05/10/24 13:30:42.807
  STEP: getting /apis/networking.k8s.io @ 05/10/24 13:30:42.81
  STEP: getting /apis/networking.k8s.iov1 @ 05/10/24 13:30:42.811
  STEP: creating @ 05/10/24 13:30:42.812
  STEP: getting @ 05/10/24 13:30:42.822
  STEP: listing @ 05/10/24 13:30:42.823
  STEP: watching @ 05/10/24 13:30:42.825
  I0510 13:30:42.825745 21 ingressclass.go:348] starting watch
  STEP: patching @ 05/10/24 13:30:42.826
  STEP: updating @ 05/10/24 13:30:42.831
  I0510 13:30:42.834970 21 ingressclass.go:364] waiting for watch events with expected annotations
  I0510 13:30:42.835013 21 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 05/10/24 13:30:42.835
  STEP: deleting a collection @ 05/10/24 13:30:42.841
  I0510 13:30:42.849894 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-2757" for this suite. @ 05/10/24 13:30:42.852
• [0.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 05/10/24 13:30:42.858
  I0510 13:30:42.858050 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename daemonsets @ 05/10/24 13:30:42.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:30:42.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:30:42.872
  I0510 13:30:42.885222 21 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 05/10/24 13:30:42.89
  I0510 13:30:42.893112 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0510 13:30:42.893144 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 05/10/24 13:30:42.893
  I0510 13:30:42.907631 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0510 13:30:42.907674 21 fixtures.go:130] Node worker-0 is running 0 daemon pod, expected 1
  I0510 13:30:43.907296 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0510 13:30:43.907335 21 fixtures.go:130] Node worker-0 is running 0 daemon pod, expected 1
  I0510 13:30:44.908705 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0510 13:30:44.908745 21 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 05/10/24 13:30:44.91
  I0510 13:30:44.922423 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0510 13:30:44.922460 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  I0510 13:30:45.922897 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0510 13:30:45.922936 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 05/10/24 13:30:45.922
  I0510 13:30:45.931989 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0510 13:30:45.932022 21 fixtures.go:130] Node worker-0 is running 0 daemon pod, expected 1
  I0510 13:30:46.932563 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0510 13:30:46.932603 21 fixtures.go:130] Node worker-0 is running 0 daemon pod, expected 1
  I0510 13:30:47.933323 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0510 13:30:47.933369 21 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/10/24 13:30:47.937
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7331, will wait for the garbage collector to delete the pods @ 05/10/24 13:30:47.937
  I0510 13:30:47.994337 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 3.644044ms
  I0510 13:30:48.095165 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.821594ms
  I0510 13:30:49.497896 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0510 13:30:49.497934 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0510 13:30:49.499896 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5245"},"items":null}

  I0510 13:30:49.501709 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5245"},"items":null}

  I0510 13:30:49.514648 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7331" for this suite. @ 05/10/24 13:30:49.517
• [6.663 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 05/10/24 13:30:49.522
  I0510 13:30:49.522368 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename daemonsets @ 05/10/24 13:30:49.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:30:49.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:30:49.536
  STEP: Creating a simple DaemonSet "daemon-set" @ 05/10/24 13:30:49.549
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/10/24 13:30:49.553
  I0510 13:30:49.558578 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0510 13:30:49.558618 21 fixtures.go:130] Node worker-0 is running 0 daemon pod, expected 1
  I0510 13:30:50.558348 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0510 13:30:50.558395 21 fixtures.go:130] Node worker-1 is running 0 daemon pod, expected 1
  I0510 13:30:51.559191 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0510 13:30:51.559224 21 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 05/10/24 13:30:51.561
  I0510 13:30:51.578330 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0510 13:30:51.578369 21 fixtures.go:130] Node worker-1 is running 0 daemon pod, expected 1
  I0510 13:30:52.575434 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0510 13:30:52.575473 21 fixtures.go:130] Node worker-1 is running 0 daemon pod, expected 1
  I0510 13:30:53.575267 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0510 13:30:53.575305 21 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 05/10/24 13:30:53.575
  STEP: Deleting DaemonSet "daemon-set" @ 05/10/24 13:30:53.578
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2835, will wait for the garbage collector to delete the pods @ 05/10/24 13:30:53.579
  I0510 13:30:53.634904 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 3.51472ms
  I0510 13:30:53.735744 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.833261ms
  I0510 13:30:54.738770 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0510 13:30:54.738848 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0510 13:30:54.740618 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5332"},"items":null}

  I0510 13:30:54.742495 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5332"},"items":null}

  I0510 13:30:54.748757 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2835" for this suite. @ 05/10/24 13:30:54.751
• [5.233 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 05/10/24 13:30:54.755
  I0510 13:30:54.755065 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename watch @ 05/10/24 13:30:54.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:30:54.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:30:54.767
  STEP: creating a watch on configmaps @ 05/10/24 13:30:54.77
  STEP: creating a new configmap @ 05/10/24 13:30:54.771
  STEP: modifying the configmap once @ 05/10/24 13:30:54.774
  STEP: closing the watch once it receives two notifications @ 05/10/24 13:30:54.779
  I0510 13:30:54.779808 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9660  63d05a62-da68-4008-ad69-245061e5c343 5337 0 2024-05-10 13:30:54 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-10 13:30:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0510 13:30:54.779995 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9660  63d05a62-da68-4008-ad69-245061e5c343 5338 0 2024-05-10 13:30:54 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-10 13:30:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 05/10/24 13:30:54.78
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 05/10/24 13:30:54.785
  STEP: deleting the configmap @ 05/10/24 13:30:54.786
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 05/10/24 13:30:54.789
  I0510 13:30:54.789498 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9660  63d05a62-da68-4008-ad69-245061e5c343 5339 0 2024-05-10 13:30:54 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-10 13:30:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0510 13:30:54.789641 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9660  63d05a62-da68-4008-ad69-245061e5c343 5340 0 2024-05-10 13:30:54 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-10 13:30:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0510 13:30:54.789732 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9660" for this suite. @ 05/10/24 13:30:54.792
• [0.041 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 05/10/24 13:30:54.795
  I0510 13:30:54.795718 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename csi-storageclass @ 05/10/24 13:30:54.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:30:54.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:30:54.808
  STEP: Creating a StorageClass @ 05/10/24 13:30:54.81
  STEP: Get StorageClass "e2e-5l2dk" @ 05/10/24 13:30:54.814
  STEP: Patching the StorageClass "e2e-5l2dk" @ 05/10/24 13:30:54.815
  STEP: Delete StorageClass "e2e-5l2dk" @ 05/10/24 13:30:54.821
  STEP: Confirm deletion of StorageClass "e2e-5l2dk" @ 05/10/24 13:30:54.826
  STEP: Create a replacement StorageClass @ 05/10/24 13:30:54.828
  STEP: Updating StorageClass "e2e-v2-zzqwq" @ 05/10/24 13:30:54.833
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-zzqwq=updated" @ 05/10/24 13:30:54.84
  STEP: Deleting StorageClass "e2e-v2-zzqwq" via DeleteCollection @ 05/10/24 13:30:54.843
  STEP: Confirm deletion of StorageClass "e2e-v2-zzqwq" @ 05/10/24 13:30:54.848
  I0510 13:30:54.850566 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-2910" for this suite. @ 05/10/24 13:30:54.853
• [0.063 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 05/10/24 13:30:54.859
  I0510 13:30:54.859165 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename webhook @ 05/10/24 13:30:54.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:30:54.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:30:54.872
  STEP: Setting up server cert @ 05/10/24 13:30:54.886
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 13:30:55.349
  STEP: Deploying the webhook pod @ 05/10/24 13:30:55.355
  STEP: Wait for the deployment to be ready @ 05/10/24 13:30:55.366
  I0510 13:30:55.372081 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 13:30:57.378
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 13:30:57.392
  I0510 13:30:58.392515 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 05/10/24 13:30:58.396
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/10/24 13:30:58.412
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 05/10/24 13:30:58.422
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/10/24 13:30:58.429
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 05/10/24 13:30:58.437
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/10/24 13:30:58.444
  I0510 13:30:58.476803 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8823" for this suite. @ 05/10/24 13:30:58.479
  STEP: Destroying namespace "webhook-markers-9773" for this suite. @ 05/10/24 13:30:58.485
• [3.631 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 05/10/24 13:30:58.49
  I0510 13:30:58.490368 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/10/24 13:30:58.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:30:58.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:30:58.502
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 05/10/24 13:30:58.505
  I0510 13:30:58.505892 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 13:30:59.887622 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 13:31:05.076890 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1302" for this suite. @ 05/10/24 13:31:05.083
• [6.597 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1793
  STEP: Creating a kubernetes client @ 05/10/24 13:31:05.087
  I0510 13:31:05.087945 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 13:31:05.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:31:05.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:31:05.102
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/10/24 13:31:05.105
  I0510 13:31:05.105144 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-1426 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0510 13:31:05.171218 21 builder.go:146] stderr: ""
  I0510 13:31:05.171281 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 05/10/24 13:31:05.171
  STEP: verifying the pod e2e-test-httpd-pod was created @ 05/10/24 13:31:10.222
  I0510 13:31:10.223026 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-1426 get pod e2e-test-httpd-pod -o json'
  I0510 13:31:10.283531 21 builder.go:146] stderr: ""
  I0510 13:31:10.283812 21 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-05-10T13:31:05Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-1426\",\n        \"resourceVersion\": \"5502\",\n        \"uid\": \"25e270fd-f86c-4994-b785-f2847c9fd84c\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-7trnk\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"worker-1\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-7trnk\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-10T13:31:05Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-10T13:31:05Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-10T13:31:05Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-10T13:31:05Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-10T13:31:05Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://6efb73cee309a18d769f3f8c18d35e6f682859fd09310989a1b81721406c9e32\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-05-10T13:31:05Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"10.0.48.105\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"10.0.48.105\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.244.1.44\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.244.1.44\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-05-10T13:31:05Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 05/10/24 13:31:10.283
  I0510 13:31:10.283981 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-1426 replace -f -'
  I0510 13:31:10.415030 21 builder.go:146] stderr: ""
  I0510 13:31:10.415089 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 05/10/24 13:31:10.415
  I0510 13:31:10.418109 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-1426 delete pods e2e-test-httpd-pod'
  I0510 13:31:11.740092 21 builder.go:146] stderr: ""
  I0510 13:31:11.740159 21 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0510 13:31:11.740550 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1426" for this suite. @ 05/10/24 13:31:11.743
• [6.662 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 05/10/24 13:31:11.749
  I0510 13:31:11.749802 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename resourcequota @ 05/10/24 13:31:11.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:31:11.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:31:11.761
  STEP: Creating a ResourceQuota with terminating scope @ 05/10/24 13:31:11.764
  STEP: Ensuring ResourceQuota status is calculated @ 05/10/24 13:31:11.767
  STEP: Creating a ResourceQuota with not terminating scope @ 05/10/24 13:31:13.77
  STEP: Ensuring ResourceQuota status is calculated @ 05/10/24 13:31:13.774
  STEP: Creating a long running pod @ 05/10/24 13:31:15.777
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 05/10/24 13:31:15.79
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 05/10/24 13:31:17.793
  STEP: Deleting the pod @ 05/10/24 13:31:19.796
  STEP: Ensuring resource quota status released the pod usage @ 05/10/24 13:31:19.802
  STEP: Creating a terminating pod @ 05/10/24 13:31:21.805
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 05/10/24 13:31:21.814
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 05/10/24 13:31:23.817
  STEP: Deleting the pod @ 05/10/24 13:31:25.819
  STEP: Ensuring resource quota status released the pod usage @ 05/10/24 13:31:25.828
  I0510 13:31:27.831703 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3877" for this suite. @ 05/10/24 13:31:27.834
• [16.088 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2181
  STEP: Creating a kubernetes client @ 05/10/24 13:31:27.838
  I0510 13:31:27.838335 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename services @ 05/10/24 13:31:27.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:31:27.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:31:27.85
  STEP: creating service in namespace services-2145 @ 05/10/24 13:31:27.853
  STEP: creating service affinity-clusterip in namespace services-2145 @ 05/10/24 13:31:27.853
  STEP: creating replication controller affinity-clusterip in namespace services-2145 @ 05/10/24 13:31:27.861
  I0510 13:31:27.867930      21 runners.go:198] Created replication controller with name: affinity-clusterip, namespace: services-2145, replica count: 3
  I0510 13:31:30.919040      21 runners.go:198] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0510 13:31:30.923491 21 resource.go:361] Creating new exec pod
  I0510 13:31:33.932764 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-2145 exec execpod-affinityvfx97 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0510 13:31:34.051833 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I0510 13:31:34.051924 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0510 13:31:34.052080 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-2145 exec execpod-affinityvfx97 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.122.101 80'
  I0510 13:31:34.175132 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.122.101 80\nConnection to 10.96.122.101 80 port [tcp/http] succeeded!\n"
  I0510 13:31:34.175225 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0510 13:31:34.175309 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-2145 exec execpod-affinityvfx97 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.96.122.101:80/ ; done'
  I0510 13:31:34.353860 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.122.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.122.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.122.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.122.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.122.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.122.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.122.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.122.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.122.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.122.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.122.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.122.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.122.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.122.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.122.101:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.122.101:80/\n"
  I0510 13:31:34.353919 21 builder.go:147] stdout: "\naffinity-clusterip-khjm9\naffinity-clusterip-khjm9\naffinity-clusterip-khjm9\naffinity-clusterip-khjm9\naffinity-clusterip-khjm9\naffinity-clusterip-khjm9\naffinity-clusterip-khjm9\naffinity-clusterip-khjm9\naffinity-clusterip-khjm9\naffinity-clusterip-khjm9\naffinity-clusterip-khjm9\naffinity-clusterip-khjm9\naffinity-clusterip-khjm9\naffinity-clusterip-khjm9\naffinity-clusterip-khjm9\naffinity-clusterip-khjm9"
  I0510 13:31:34.353946 21 service.go:242] Received response from host: affinity-clusterip-khjm9
  I0510 13:31:34.353961 21 service.go:242] Received response from host: affinity-clusterip-khjm9
  I0510 13:31:34.353975 21 service.go:242] Received response from host: affinity-clusterip-khjm9
  I0510 13:31:34.353989 21 service.go:242] Received response from host: affinity-clusterip-khjm9
  I0510 13:31:34.354002 21 service.go:242] Received response from host: affinity-clusterip-khjm9
  I0510 13:31:34.354016 21 service.go:242] Received response from host: affinity-clusterip-khjm9
  I0510 13:31:34.354026 21 service.go:242] Received response from host: affinity-clusterip-khjm9
  I0510 13:31:34.354084 21 service.go:242] Received response from host: affinity-clusterip-khjm9
  I0510 13:31:34.354136 21 service.go:242] Received response from host: affinity-clusterip-khjm9
  I0510 13:31:34.354149 21 service.go:242] Received response from host: affinity-clusterip-khjm9
  I0510 13:31:34.354161 21 service.go:242] Received response from host: affinity-clusterip-khjm9
  I0510 13:31:34.354176 21 service.go:242] Received response from host: affinity-clusterip-khjm9
  I0510 13:31:34.354195 21 service.go:242] Received response from host: affinity-clusterip-khjm9
  I0510 13:31:34.354208 21 service.go:242] Received response from host: affinity-clusterip-khjm9
  I0510 13:31:34.354222 21 service.go:242] Received response from host: affinity-clusterip-khjm9
  I0510 13:31:34.354234 21 service.go:242] Received response from host: affinity-clusterip-khjm9
  I0510 13:31:34.354328 21 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-2145, will wait for the garbage collector to delete the pods @ 05/10/24 13:31:34.369
  I0510 13:31:34.425751 21 resources.go:139] Deleting ReplicationController affinity-clusterip took: 3.449848ms
  I0510 13:31:34.526817 21 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 101.060421ms
  I0510 13:31:37.638952 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2145" for this suite. @ 05/10/24 13:31:37.641
• [9.807 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3656
  STEP: Creating a kubernetes client @ 05/10/24 13:31:37.646
  I0510 13:31:37.646582 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename services @ 05/10/24 13:31:37.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:31:37.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:31:37.657
  STEP: creating service multiprotocol-test in namespace services-8688 @ 05/10/24 13:31:37.659
  STEP: creating pod pod1 in namespace services-8688 @ 05/10/24 13:31:37.668
  STEP: Creating pod pod1 in namespace services-8688 @ 05/10/24 13:31:37.669
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-8688 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 05/10/24 13:31:39.684
  I0510 13:31:39.690496 21 service.go:4351] successfully validated that service multiprotocol-test in namespace services-8688 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 05/10/24 13:31:39.69
  I0510 13:31:39.690554 21 resource.go:361] Creating new exec pod
  I0510 13:31:41.700801 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-8688 exec execpod9dsqq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.101.8.69 80'
  I0510 13:31:41.812019 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.101.8.69 80\nConnection to 10.101.8.69 80 port [tcp/http] succeeded!\n"
  I0510 13:31:41.812067 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0510 13:31:41.812216 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-8688 exec execpod9dsqq -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.101.8.69 80'
  I0510 13:31:45.933633 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.101.8.69 80\nConnection to 10.101.8.69 80 port [udp/*] succeeded!\n"
  I0510 13:31:45.933731 21 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 05/10/24 13:31:45.933
  I0510 13:31:45.940559 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-8688 exec execpod9dsqq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.101.8.69 80'
  I0510 13:31:46.058876 21 builder.go:146] stderr: "+ + ncecho -v hostName -t\n -w 2 10.101.8.69 80\nConnection to 10.101.8.69 80 port [tcp/http] succeeded!\n"
  I0510 13:31:46.058984 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0510 13:31:46.059161 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-8688 exec execpod9dsqq -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.101.8.69 80'
  I0510 13:31:50.173181 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.101.8.69 80\nConnection to 10.101.8.69 80 port [udp/*] succeeded!\n"
  I0510 13:31:50.173279 21 builder.go:147] stdout: ""
  I0510 13:31:50.173346 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-8688 exec execpod9dsqq -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.101.8.69 80'
  I0510 13:31:54.289009 21 builder.go:146] stderr: "+ + echonc hostName -v\n -u -w 2 10.101.8.69 80\nConnection to 10.101.8.69 80 port [udp/*] succeeded!\n"
  I0510 13:31:54.289060 21 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 05/10/24 13:31:54.289
  I0510 13:31:54.297249 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-8688 exec execpod9dsqq -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.101.8.69 80'
  I0510 13:31:58.421532 21 builder.go:146] stderr: "+ nc -v -u -w 2 10.101.8.69 80\n+ echo hostName\nConnection to 10.101.8.69 80 port [udp/*] succeeded!\n"
  I0510 13:31:58.421635 21 builder.go:147] stdout: "pod1"
  I0510 13:31:58.421744 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-8688 exec execpod9dsqq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.101.8.69 80'
  I0510 13:32:00.549254 21 builder.go:135] rc: 1
  I0510 13:32:00.549375 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-8688 exec execpod9dsqq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.101.8.69 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.101.8.69 80
  nc: connect to 10.101.8.69 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0510 13:32:00.549673 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-8688 exec execpod9dsqq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.101.8.69 80'
  I0510 13:32:02.668998 21 builder.go:135] rc: 1
  I0510 13:32:02.669191 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-8688 exec execpod9dsqq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.101.8.69 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.101.8.69 80
  nc: connect to 10.101.8.69 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0510 13:32:02.669290 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-8688 exec execpod9dsqq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.101.8.69 80'
  I0510 13:32:04.788873 21 builder.go:135] rc: 1
  I0510 13:32:04.788941 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-8688 exec execpod9dsqq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.101.8.69 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.101.8.69 80
  nc: connect to 10.101.8.69 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0510 13:32:04.789126 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8688" for this suite. @ 05/10/24 13:32:04.792
• [27.150 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 05/10/24 13:32:04.796
  I0510 13:32:04.796916 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename namespaces @ 05/10/24 13:32:04.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:32:04.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:32:04.811
  STEP: creating a Namespace @ 05/10/24 13:32:04.814
  STEP: patching the Namespace @ 05/10/24 13:32:04.825
  STEP: get the Namespace and ensuring it has the label @ 05/10/24 13:32:04.83
  I0510 13:32:04.832029 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5359" for this suite. @ 05/10/24 13:32:04.834
  STEP: Destroying namespace "nspatchtest-8ef525db-f538-4d06-bbc4-03d5c6125a35-1754" for this suite. @ 05/10/24 13:32:04.838
• [0.046 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 05/10/24 13:32:04.842
  I0510 13:32:04.842771 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename replication-controller @ 05/10/24 13:32:04.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:32:04.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:32:04.855
  I0510 13:32:04.858054 21 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 05/10/24 13:32:05.866
  STEP: Checking rc "condition-test" has the desired failure condition set @ 05/10/24 13:32:05.87
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 05/10/24 13:32:06.875
  I0510 13:32:06.880705 21 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 05/10/24 13:32:06.88
  I0510 13:32:07.885361 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7162" for this suite. @ 05/10/24 13:32:07.887
• [3.049 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 05/10/24 13:32:07.891
  I0510 13:32:07.891999 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/10/24 13:32:07.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:32:07.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:32:07.903
  I0510 13:32:07.906426 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 13:32:14.060451 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4298" for this suite. @ 05/10/24 13:32:14.063
• [6.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 05/10/24 13:32:14.067
  I0510 13:32:14.067530 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename pods @ 05/10/24 13:32:14.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:32:14.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:32:14.08
  I0510 13:32:14.083261 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: creating the pod @ 05/10/24 13:32:14.083
  STEP: submitting the pod to kubernetes @ 05/10/24 13:32:14.083
  I0510 13:32:16.171040 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3666" for this suite. @ 05/10/24 13:32:16.173
• [2.110 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 05/10/24 13:32:16.177
  I0510 13:32:16.177916 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename field-validation @ 05/10/24 13:32:16.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:32:16.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:32:16.189
  I0510 13:32:16.192207 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  W0510 13:32:18.726926      21 warnings.go:70] unknown field "alpha"
  W0510 13:32:18.726976      21 warnings.go:70] unknown field "beta"
  W0510 13:32:18.726982      21 warnings.go:70] unknown field "delta"
  W0510 13:32:18.726988      21 warnings.go:70] unknown field "epsilon"
  W0510 13:32:18.726994      21 warnings.go:70] unknown field "gamma"
  I0510 13:32:19.254067 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-817" for this suite. @ 05/10/24 13:32:19.256
• [3.083 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 05/10/24 13:32:19.261
  I0510 13:32:19.261339 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename replicaset @ 05/10/24 13:32:19.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:32:19.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:32:19.272
  STEP: Create a Replicaset @ 05/10/24 13:32:19.277
  STEP: Verify that the required pods have come up. @ 05/10/24 13:32:19.28
  I0510 13:32:19.282976 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0510 13:32:24.285863 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/10/24 13:32:24.285
  STEP: Getting /status @ 05/10/24 13:32:24.285
  I0510 13:32:24.288919 21 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 05/10/24 13:32:24.288
  I0510 13:32:24.295444 21 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 05/10/24 13:32:24.295
  I0510 13:32:24.297213 21 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0510 13:32:24.297337 21 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0510 13:32:24.297455 21 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0510 13:32:24.297669 21 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0510 13:32:24.297725 21 replica_set.go:682] Found replicaset test-rs in namespace replicaset-5150 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0510 13:32:24.297745 21 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 05/10/24 13:32:24.297
  I0510 13:32:24.297792 21 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0510 13:32:24.303835 21 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 05/10/24 13:32:24.303
  I0510 13:32:24.305642 21 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0510 13:32:24.305751 21 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0510 13:32:24.305860 21 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0510 13:32:24.306121 21 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0510 13:32:24.306192 21 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-5150 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0510 13:32:24.306340 21 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0510 13:32:24.306377 21 replica_set.go:718] Found replicaset test-rs in namespace replicaset-5150 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0510 13:32:24.306395 21 replica_set.go:729] Replicaset test-rs has a patched status
  I0510 13:32:24.306493 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5150" for this suite. @ 05/10/24 13:32:24.308
• [5.051 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 05/10/24 13:32:24.312
  I0510 13:32:24.312855 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 13:32:24.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:32:24.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:32:24.325
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 05/10/24 13:32:24.328
  STEP: Saw pod success @ 05/10/24 13:32:28.343
  I0510 13:32:28.345165 21 output.go:196] Trying to get logs from node worker-0 pod pod-dd8e9a06-5e65-4d18-9c95-0a7b7355faa0 container test-container: <nil>
  STEP: delete the pod @ 05/10/24 13:32:28.357
  I0510 13:32:28.366960 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5793" for this suite. @ 05/10/24 13:32:28.369
• [4.060 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 05/10/24 13:32:28.373
  I0510 13:32:28.373329 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename statefulset @ 05/10/24 13:32:28.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:32:28.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:32:28.384
  STEP: Creating service test in namespace statefulset-8331 @ 05/10/24 13:32:28.387
  STEP: Looking for a node to schedule stateful set and pod @ 05/10/24 13:32:28.39
  STEP: Creating pod with conflicting port in namespace statefulset-8331 @ 05/10/24 13:32:28.394
  STEP: Waiting until pod test-pod will start running in namespace statefulset-8331 @ 05/10/24 13:32:28.4
  STEP: Creating statefulset with conflicting port in namespace statefulset-8331 @ 05/10/24 13:32:30.405
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-8331 @ 05/10/24 13:32:30.409
  I0510 13:32:30.418560 21 statefulset.go:866] Observed stateful pod in namespace: statefulset-8331, name: ss-0, uid: b3c9bc0b-396d-4c85-bb19-92be48a79b20, status phase: Pending. Waiting for statefulset controller to delete.
  I0510 13:32:30.427193 21 statefulset.go:866] Observed stateful pod in namespace: statefulset-8331, name: ss-0, uid: b3c9bc0b-396d-4c85-bb19-92be48a79b20, status phase: Failed. Waiting for statefulset controller to delete.
  I0510 13:32:30.445406 21 statefulset.go:866] Observed stateful pod in namespace: statefulset-8331, name: ss-0, uid: b3c9bc0b-396d-4c85-bb19-92be48a79b20, status phase: Failed. Waiting for statefulset controller to delete.
  I0510 13:32:30.447669 21 statefulset.go:860] Observed delete event for stateful pod ss-0 in namespace statefulset-8331
  STEP: Removing pod with conflicting port in namespace statefulset-8331 @ 05/10/24 13:32:30.448
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-8331 and will be in running state @ 05/10/24 13:32:30.46
  I0510 13:32:32.465817 21 statefulset.go:135] Deleting all statefulset in ns statefulset-8331
  I0510 13:32:32.467962 21 rest.go:150] Scaling statefulset ss to 0
  I0510 13:32:42.476395 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0510 13:32:42.478515 21 rest.go:88] Deleting statefulset ss
  I0510 13:32:42.486321 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8331" for this suite. @ 05/10/24 13:32:42.488
• [14.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 05/10/24 13:32:42.493
  I0510 13:32:42.493168 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename daemonsets @ 05/10/24 13:32:42.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:32:42.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:32:42.504
  STEP: Creating simple DaemonSet "daemon-set" @ 05/10/24 13:32:42.517
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/10/24 13:32:42.52
  I0510 13:32:42.526702 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0510 13:32:42.526733 21 fixtures.go:130] Node worker-0 is running 0 daemon pod, expected 1
  I0510 13:32:43.525696 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0510 13:32:43.525735 21 fixtures.go:130] Node worker-0 is running 0 daemon pod, expected 1
  I0510 13:32:44.527034 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0510 13:32:44.527071 21 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 05/10/24 13:32:44.528
  STEP: DeleteCollection of the DaemonSets @ 05/10/24 13:32:44.531
  STEP: Verify that ReplicaSets have been deleted @ 05/10/24 13:32:44.535
  I0510 13:32:44.548712 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"6270"},"items":null}

  I0510 13:32:44.551070 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"6270"},"items":[{"metadata":{"name":"daemon-set-5rzmx","generateName":"daemon-set-","namespace":"daemonsets-904","uid":"e7706999-8e6a-4513-99c9-405cb53b3db5","resourceVersion":"6268","creationTimestamp":"2024-05-10T13:32:42Z","deletionTimestamp":"2024-05-10T13:33:14Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"8cc65be6-b0c0-4b80-bc10-3d9a67a7be65","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-10T13:32:42Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8cc65be6-b0c0-4b80-bc10-3d9a67a7be65\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-10T13:32:43Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.30\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-g2mbj","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-g2mbj","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"worker-0","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["worker-0"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T13:32:43Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T13:32:42Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T13:32:43Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T13:32:43Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T13:32:42Z"}],"hostIP":"10.0.48.103","hostIPs":[{"ip":"10.0.48.103"}],"podIP":"10.244.0.30","podIPs":[{"ip":"10.244.0.30"}],"startTime":"2024-05-10T13:32:42Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-10T13:32:43Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://27a8fa52d160970a0ebd021cad078d47d8be8f8307211479ff47b4c9a235f363","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-dw4hg","generateName":"daemon-set-","namespace":"daemonsets-904","uid":"f0922ccb-f91e-4cef-a49f-4dbd8f9d7227","resourceVersion":"6270","creationTimestamp":"2024-05-10T13:32:42Z","deletionTimestamp":"2024-05-10T13:33:14Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"8cc65be6-b0c0-4b80-bc10-3d9a67a7be65","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-10T13:32:42Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8cc65be6-b0c0-4b80-bc10-3d9a67a7be65\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-10T13:32:43Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.53\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-djnv6","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-djnv6","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"worker-1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["worker-1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T13:32:43Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T13:32:42Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T13:32:43Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T13:32:43Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-10T13:32:42Z"}],"hostIP":"10.0.48.105","hostIPs":[{"ip":"10.0.48.105"}],"podIP":"10.244.1.53","podIPs":[{"ip":"10.244.1.53"}],"startTime":"2024-05-10T13:32:42Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-10T13:32:43Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://e4e215a6649808a35a24d361fbf74da36abacad4b33e007036792543c235d096","started":true}],"qosClass":"BestEffort"}}]}

  I0510 13:32:44.557106 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-904" for this suite. @ 05/10/24 13:32:44.559
• [2.070 seconds]
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 05/10/24 13:32:44.563
  I0510 13:32:44.563337 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename dns @ 05/10/24 13:32:44.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:32:44.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:32:44.574
  STEP: Creating a test headless service @ 05/10/24 13:32:44.577
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6442 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-6442;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6442 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-6442;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6442.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-6442.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6442.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-6442.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6442.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-6442.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6442.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-6442.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6442.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-6442.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6442.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-6442.svc;check="$$(dig +notcp +noall +answer +search 118.255.108.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.108.255.118_udp@PTR;check="$$(dig +tcp +noall +answer +search 118.255.108.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.108.255.118_tcp@PTR;sleep 1; done
   @ 05/10/24 13:32:44.592
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6442 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6442;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6442 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6442;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6442.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6442.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6442.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6442.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6442.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-6442.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6442.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-6442.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6442.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-6442.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6442.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-6442.svc;check="$$(dig +notcp +noall +answer +search 118.255.108.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.108.255.118_udp@PTR;check="$$(dig +tcp +noall +answer +search 118.255.108.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.108.255.118_tcp@PTR;sleep 1; done
   @ 05/10/24 13:32:44.592
  STEP: creating a pod to probe DNS @ 05/10/24 13:32:44.592
  STEP: submitting the pod to kubernetes @ 05/10/24 13:32:44.592
  STEP: retrieving the pod @ 05/10/24 13:32:46.607
  STEP: looking for the results for each expected name from probers @ 05/10/24 13:32:46.61
  I0510 13:32:46.615434 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:46.618568 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:46.621503 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-6442 from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:46.624518 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-6442 from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:46.627533 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:46.630567 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:46.633395 21 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:46.636271 21 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:46.650691 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:46.653352 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:46.656277 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-6442 from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:46.659251 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-6442 from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:46.662146 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:46.665005 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:46.668059 21 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:46.670892 21 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:46.682202 21 dns_common.go:489] Lookups using dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-6442 wheezy_tcp@dns-test-service.dns-6442 wheezy_udp@dns-test-service.dns-6442.svc wheezy_tcp@dns-test-service.dns-6442.svc wheezy_udp@_http._tcp.dns-test-service.dns-6442.svc wheezy_tcp@_http._tcp.dns-test-service.dns-6442.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6442 jessie_tcp@dns-test-service.dns-6442 jessie_udp@dns-test-service.dns-6442.svc jessie_tcp@dns-test-service.dns-6442.svc jessie_udp@_http._tcp.dns-test-service.dns-6442.svc jessie_tcp@_http._tcp.dns-test-service.dns-6442.svc]

  I0510 13:32:46.693200 21 dns_common.go:495] Pod client logs for webserver: 
  I0510 13:32:46.697602 21 dns_common.go:495] Pod client logs for querier: 
  I0510 13:32:46.702190 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0510 13:32:51.613784 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:51.616896 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:51.619926 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-6442 from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:51.622990 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-6442 from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:51.625866 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:51.628707 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:51.631465 21 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:51.634257 21 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:51.648385 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:51.651232 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:51.653987 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-6442 from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:51.656942 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-6442 from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:51.659869 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:51.662801 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:51.665593 21 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:51.668363 21 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:51.679708 21 dns_common.go:489] Lookups using dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-6442 wheezy_tcp@dns-test-service.dns-6442 wheezy_udp@dns-test-service.dns-6442.svc wheezy_tcp@dns-test-service.dns-6442.svc wheezy_udp@_http._tcp.dns-test-service.dns-6442.svc wheezy_tcp@_http._tcp.dns-test-service.dns-6442.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6442 jessie_tcp@dns-test-service.dns-6442 jessie_udp@dns-test-service.dns-6442.svc jessie_tcp@dns-test-service.dns-6442.svc jessie_udp@_http._tcp.dns-test-service.dns-6442.svc jessie_tcp@_http._tcp.dns-test-service.dns-6442.svc]

  I0510 13:32:51.684228 21 dns_common.go:495] Pod client logs for webserver: 
  I0510 13:32:51.688378 21 dns_common.go:495] Pod client logs for querier: 
  I0510 13:32:51.692461 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0510 13:32:56.618513 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:56.621649 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:56.624734 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-6442 from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:56.627809 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-6442 from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:56.630761 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:56.633645 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:56.636440 21 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:56.639336 21 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:56.653608 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:56.656501 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:56.659310 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-6442 from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:56.662266 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-6442 from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:56.665164 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:56.668107 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:56.671053 21 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:56.673759 21 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:32:56.685098 21 dns_common.go:489] Lookups using dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-6442 wheezy_tcp@dns-test-service.dns-6442 wheezy_udp@dns-test-service.dns-6442.svc wheezy_tcp@dns-test-service.dns-6442.svc wheezy_udp@_http._tcp.dns-test-service.dns-6442.svc wheezy_tcp@_http._tcp.dns-test-service.dns-6442.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6442 jessie_tcp@dns-test-service.dns-6442 jessie_udp@dns-test-service.dns-6442.svc jessie_tcp@dns-test-service.dns-6442.svc jessie_udp@_http._tcp.dns-test-service.dns-6442.svc jessie_tcp@_http._tcp.dns-test-service.dns-6442.svc]

  I0510 13:32:56.689502 21 dns_common.go:495] Pod client logs for webserver: 
  I0510 13:32:56.693612 21 dns_common.go:495] Pod client logs for querier: 
  I0510 13:32:56.697805 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0510 13:33:01.615247 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:01.618652 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:01.621855 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-6442 from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:01.624960 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-6442 from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:01.627822 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:01.631001 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:01.633878 21 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:01.636815 21 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:01.650788 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:01.653619 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:01.656596 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-6442 from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:01.659505 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-6442 from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:01.662473 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:01.665342 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:01.668368 21 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:01.671317 21 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:01.682821 21 dns_common.go:489] Lookups using dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-6442 wheezy_tcp@dns-test-service.dns-6442 wheezy_udp@dns-test-service.dns-6442.svc wheezy_tcp@dns-test-service.dns-6442.svc wheezy_udp@_http._tcp.dns-test-service.dns-6442.svc wheezy_tcp@_http._tcp.dns-test-service.dns-6442.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6442 jessie_tcp@dns-test-service.dns-6442 jessie_udp@dns-test-service.dns-6442.svc jessie_tcp@dns-test-service.dns-6442.svc jessie_udp@_http._tcp.dns-test-service.dns-6442.svc jessie_tcp@_http._tcp.dns-test-service.dns-6442.svc]

  I0510 13:33:01.687245 21 dns_common.go:495] Pod client logs for webserver: 
  I0510 13:33:01.691334 21 dns_common.go:495] Pod client logs for querier: 
  I0510 13:33:01.695309 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0510 13:33:06.616790 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:06.620056 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:06.623132 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-6442 from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:06.626042 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-6442 from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:06.628939 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:06.631829 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:06.634726 21 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:06.637651 21 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:06.651733 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:06.654427 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:06.657152 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-6442 from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:06.660006 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-6442 from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:06.662793 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:06.665621 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:06.668512 21 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:06.671394 21 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:06.682729 21 dns_common.go:489] Lookups using dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-6442 wheezy_tcp@dns-test-service.dns-6442 wheezy_udp@dns-test-service.dns-6442.svc wheezy_tcp@dns-test-service.dns-6442.svc wheezy_udp@_http._tcp.dns-test-service.dns-6442.svc wheezy_tcp@_http._tcp.dns-test-service.dns-6442.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6442 jessie_tcp@dns-test-service.dns-6442 jessie_udp@dns-test-service.dns-6442.svc jessie_tcp@dns-test-service.dns-6442.svc jessie_udp@_http._tcp.dns-test-service.dns-6442.svc jessie_tcp@_http._tcp.dns-test-service.dns-6442.svc]

  I0510 13:33:06.687188 21 dns_common.go:495] Pod client logs for webserver: 
  I0510 13:33:06.691368 21 dns_common.go:495] Pod client logs for querier: 
  I0510 13:33:06.695477 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0510 13:33:11.614269 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:11.617664 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:11.620804 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-6442 from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:11.623977 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-6442 from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:11.626795 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:11.629647 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:11.632359 21 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:11.635371 21 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:11.649887 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:11.652769 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:11.655651 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-6442 from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:11.658449 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-6442 from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:11.661178 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:11.664131 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:11.667074 21 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:11.669677 21 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6442.svc from pod dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110: the server could not find the requested resource (get pods dns-test-0ccd34ea-c7d0-423d-9be2-771704542110)
  I0510 13:33:11.681042 21 dns_common.go:489] Lookups using dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-6442 wheezy_tcp@dns-test-service.dns-6442 wheezy_udp@dns-test-service.dns-6442.svc wheezy_tcp@dns-test-service.dns-6442.svc wheezy_udp@_http._tcp.dns-test-service.dns-6442.svc wheezy_tcp@_http._tcp.dns-test-service.dns-6442.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6442 jessie_tcp@dns-test-service.dns-6442 jessie_udp@dns-test-service.dns-6442.svc jessie_tcp@dns-test-service.dns-6442.svc jessie_udp@_http._tcp.dns-test-service.dns-6442.svc jessie_tcp@_http._tcp.dns-test-service.dns-6442.svc]

  I0510 13:33:11.685674 21 dns_common.go:495] Pod client logs for webserver: 
  I0510 13:33:11.689801 21 dns_common.go:495] Pod client logs for querier: 
  I0510 13:33:11.693867 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0510 13:33:16.680637 21 dns_common.go:527] DNS probes using dns-6442/dns-test-0ccd34ea-c7d0-423d-9be2-771704542110 succeeded

  STEP: deleting the pod @ 05/10/24 13:33:16.68
  STEP: deleting the test service @ 05/10/24 13:33:16.692
  STEP: deleting the test headless service @ 05/10/24 13:33:16.712
  I0510 13:33:16.719500 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6442" for this suite. @ 05/10/24 13:33:16.722
• [32.163 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 05/10/24 13:33:16.727
  I0510 13:33:16.727519 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename secrets @ 05/10/24 13:33:16.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:33:16.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:33:16.74
  STEP: Creating secret with name secret-test-map-929a2bf8-6f3d-41c1-84ab-4515900be366 @ 05/10/24 13:33:16.743
  STEP: Creating a pod to test consume secrets @ 05/10/24 13:33:16.746
  STEP: Saw pod success @ 05/10/24 13:33:20.762
  I0510 13:33:20.764255 21 output.go:196] Trying to get logs from node worker-1 pod pod-secrets-bd4a2a36-2f6f-43f5-a46f-9cd8bc659893 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 13:33:20.771
  I0510 13:33:20.782656 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6465" for this suite. @ 05/10/24 13:33:20.785
• [4.064 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 05/10/24 13:33:20.791
  I0510 13:33:20.792021 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename gc @ 05/10/24 13:33:20.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:33:20.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:33:20.804
  STEP: create the rc @ 05/10/24 13:33:20.809
  W0510 13:33:20.814270      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 05/10/24 13:33:26.82
  STEP: wait for the rc to be deleted @ 05/10/24 13:33:26.824
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 05/10/24 13:33:31.827
  STEP: Gathering metrics @ 05/10/24 13:34:01.838
  W0510 13:34:01.842696      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0510 13:34:01.842738 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0510 13:34:01.842848 21 delete.go:95] Deleting pod "simpletest.rc-257jx" in namespace "gc-6103"
  I0510 13:34:01.852023 21 delete.go:95] Deleting pod "simpletest.rc-2797l" in namespace "gc-6103"
  I0510 13:34:01.861410 21 delete.go:95] Deleting pod "simpletest.rc-2gjqq" in namespace "gc-6103"
  I0510 13:34:01.876521 21 delete.go:95] Deleting pod "simpletest.rc-2gxcm" in namespace "gc-6103"
  I0510 13:34:01.885697 21 delete.go:95] Deleting pod "simpletest.rc-2jpxq" in namespace "gc-6103"
  I0510 13:34:01.896187 21 delete.go:95] Deleting pod "simpletest.rc-46z99" in namespace "gc-6103"
  I0510 13:34:01.912304 21 delete.go:95] Deleting pod "simpletest.rc-475dq" in namespace "gc-6103"
  I0510 13:34:01.923438 21 delete.go:95] Deleting pod "simpletest.rc-4f8h8" in namespace "gc-6103"
  I0510 13:34:01.931854 21 delete.go:95] Deleting pod "simpletest.rc-4hp92" in namespace "gc-6103"
  I0510 13:34:01.942209 21 delete.go:95] Deleting pod "simpletest.rc-4p2dx" in namespace "gc-6103"
  I0510 13:34:01.950136 21 delete.go:95] Deleting pod "simpletest.rc-4qgpk" in namespace "gc-6103"
  I0510 13:34:01.956327 21 delete.go:95] Deleting pod "simpletest.rc-4rmw6" in namespace "gc-6103"
  I0510 13:34:01.967085 21 delete.go:95] Deleting pod "simpletest.rc-4zvj7" in namespace "gc-6103"
  I0510 13:34:01.985055 21 delete.go:95] Deleting pod "simpletest.rc-5f27q" in namespace "gc-6103"
  I0510 13:34:01.993648 21 delete.go:95] Deleting pod "simpletest.rc-67nn8" in namespace "gc-6103"
  I0510 13:34:02.003586 21 delete.go:95] Deleting pod "simpletest.rc-69ldm" in namespace "gc-6103"
  I0510 13:34:02.015263 21 delete.go:95] Deleting pod "simpletest.rc-69wx6" in namespace "gc-6103"
  I0510 13:34:02.034945 21 delete.go:95] Deleting pod "simpletest.rc-6mqhb" in namespace "gc-6103"
  I0510 13:34:02.044036 21 delete.go:95] Deleting pod "simpletest.rc-6n2qj" in namespace "gc-6103"
  I0510 13:34:02.052514 21 delete.go:95] Deleting pod "simpletest.rc-7dgsm" in namespace "gc-6103"
  I0510 13:34:02.063179 21 delete.go:95] Deleting pod "simpletest.rc-7j8zt" in namespace "gc-6103"
  I0510 13:34:02.076162 21 delete.go:95] Deleting pod "simpletest.rc-7n7g5" in namespace "gc-6103"
  I0510 13:34:02.093217 21 delete.go:95] Deleting pod "simpletest.rc-7s9g9" in namespace "gc-6103"
  I0510 13:34:02.100374 21 delete.go:95] Deleting pod "simpletest.rc-8hk2j" in namespace "gc-6103"
  I0510 13:34:02.110275 21 delete.go:95] Deleting pod "simpletest.rc-8qrss" in namespace "gc-6103"
  I0510 13:34:02.120808 21 delete.go:95] Deleting pod "simpletest.rc-9pf2l" in namespace "gc-6103"
  I0510 13:34:02.136160 21 delete.go:95] Deleting pod "simpletest.rc-9vlfg" in namespace "gc-6103"
  I0510 13:34:02.147239 21 delete.go:95] Deleting pod "simpletest.rc-bgk5g" in namespace "gc-6103"
  I0510 13:34:02.158517 21 delete.go:95] Deleting pod "simpletest.rc-bqfbt" in namespace "gc-6103"
  I0510 13:34:02.175167 21 delete.go:95] Deleting pod "simpletest.rc-bvcxb" in namespace "gc-6103"
  I0510 13:34:02.184217 21 delete.go:95] Deleting pod "simpletest.rc-bxf4j" in namespace "gc-6103"
  I0510 13:34:02.196516 21 delete.go:95] Deleting pod "simpletest.rc-c644h" in namespace "gc-6103"
  I0510 13:34:02.209472 21 delete.go:95] Deleting pod "simpletest.rc-d25fd" in namespace "gc-6103"
  I0510 13:34:02.223613 21 delete.go:95] Deleting pod "simpletest.rc-d5jpm" in namespace "gc-6103"
  I0510 13:34:02.233054 21 delete.go:95] Deleting pod "simpletest.rc-dnc7b" in namespace "gc-6103"
  I0510 13:34:02.243121 21 delete.go:95] Deleting pod "simpletest.rc-f9288" in namespace "gc-6103"
  I0510 13:34:02.250544 21 delete.go:95] Deleting pod "simpletest.rc-frhlm" in namespace "gc-6103"
  I0510 13:34:02.259325 21 delete.go:95] Deleting pod "simpletest.rc-g6995" in namespace "gc-6103"
  I0510 13:34:02.267249 21 delete.go:95] Deleting pod "simpletest.rc-gbnzs" in namespace "gc-6103"
  I0510 13:34:02.279062 21 delete.go:95] Deleting pod "simpletest.rc-gqxq8" in namespace "gc-6103"
  I0510 13:34:02.289215 21 delete.go:95] Deleting pod "simpletest.rc-hdhfr" in namespace "gc-6103"
  I0510 13:34:02.301196 21 delete.go:95] Deleting pod "simpletest.rc-hkmbt" in namespace "gc-6103"
  I0510 13:34:02.313147 21 delete.go:95] Deleting pod "simpletest.rc-hrs6j" in namespace "gc-6103"
  I0510 13:34:02.323620 21 delete.go:95] Deleting pod "simpletest.rc-hxqqb" in namespace "gc-6103"
  I0510 13:34:02.334243 21 delete.go:95] Deleting pod "simpletest.rc-jb7vm" in namespace "gc-6103"
  I0510 13:34:02.343883 21 delete.go:95] Deleting pod "simpletest.rc-jpbhx" in namespace "gc-6103"
  I0510 13:34:02.358892 21 delete.go:95] Deleting pod "simpletest.rc-jts49" in namespace "gc-6103"
  I0510 13:34:02.371160 21 delete.go:95] Deleting pod "simpletest.rc-jvntz" in namespace "gc-6103"
  I0510 13:34:02.387312 21 delete.go:95] Deleting pod "simpletest.rc-k8fdb" in namespace "gc-6103"
  I0510 13:34:02.401524 21 delete.go:95] Deleting pod "simpletest.rc-kdwb9" in namespace "gc-6103"
  I0510 13:34:02.414121 21 delete.go:95] Deleting pod "simpletest.rc-l5ztq" in namespace "gc-6103"
  I0510 13:34:02.430789 21 delete.go:95] Deleting pod "simpletest.rc-ld767" in namespace "gc-6103"
  I0510 13:34:02.441187 21 delete.go:95] Deleting pod "simpletest.rc-lhrmm" in namespace "gc-6103"
  I0510 13:34:02.449801 21 delete.go:95] Deleting pod "simpletest.rc-m6cpt" in namespace "gc-6103"
  I0510 13:34:02.459465 21 delete.go:95] Deleting pod "simpletest.rc-mfsbb" in namespace "gc-6103"
  I0510 13:34:02.468904 21 delete.go:95] Deleting pod "simpletest.rc-mww7s" in namespace "gc-6103"
  I0510 13:34:02.474984 21 delete.go:95] Deleting pod "simpletest.rc-mzrnw" in namespace "gc-6103"
  I0510 13:34:02.486109 21 delete.go:95] Deleting pod "simpletest.rc-n57dp" in namespace "gc-6103"
  I0510 13:34:02.518651 21 delete.go:95] Deleting pod "simpletest.rc-nfd4j" in namespace "gc-6103"
  I0510 13:34:02.528440 21 delete.go:95] Deleting pod "simpletest.rc-nk65n" in namespace "gc-6103"
  I0510 13:34:02.536546 21 delete.go:95] Deleting pod "simpletest.rc-nm78g" in namespace "gc-6103"
  I0510 13:34:02.546964 21 delete.go:95] Deleting pod "simpletest.rc-p4nbj" in namespace "gc-6103"
  I0510 13:34:02.558382 21 delete.go:95] Deleting pod "simpletest.rc-pcrg6" in namespace "gc-6103"
  I0510 13:34:02.594414 21 delete.go:95] Deleting pod "simpletest.rc-pww2k" in namespace "gc-6103"
  I0510 13:34:02.637746 21 delete.go:95] Deleting pod "simpletest.rc-pxsd5" in namespace "gc-6103"
  I0510 13:34:02.702208 21 delete.go:95] Deleting pod "simpletest.rc-q8gs6" in namespace "gc-6103"
  I0510 13:34:02.741003 21 delete.go:95] Deleting pod "simpletest.rc-qksmt" in namespace "gc-6103"
  I0510 13:34:02.789931 21 delete.go:95] Deleting pod "simpletest.rc-qljnz" in namespace "gc-6103"
  I0510 13:34:02.840890 21 delete.go:95] Deleting pod "simpletest.rc-qmlwq" in namespace "gc-6103"
  I0510 13:34:02.888263 21 delete.go:95] Deleting pod "simpletest.rc-qnfs2" in namespace "gc-6103"
  I0510 13:34:02.938105 21 delete.go:95] Deleting pod "simpletest.rc-qsj9c" in namespace "gc-6103"
  I0510 13:34:02.987708 21 delete.go:95] Deleting pod "simpletest.rc-qv2np" in namespace "gc-6103"
  I0510 13:34:03.041886 21 delete.go:95] Deleting pod "simpletest.rc-qxtkz" in namespace "gc-6103"
  I0510 13:34:03.087578 21 delete.go:95] Deleting pod "simpletest.rc-r5g2s" in namespace "gc-6103"
  I0510 13:34:03.142344 21 delete.go:95] Deleting pod "simpletest.rc-r9xqq" in namespace "gc-6103"
  I0510 13:34:03.187383 21 delete.go:95] Deleting pod "simpletest.rc-rl96p" in namespace "gc-6103"
  I0510 13:34:03.238132 21 delete.go:95] Deleting pod "simpletest.rc-rr66z" in namespace "gc-6103"
  I0510 13:34:03.289245 21 delete.go:95] Deleting pod "simpletest.rc-s4jvp" in namespace "gc-6103"
  I0510 13:34:03.336286 21 delete.go:95] Deleting pod "simpletest.rc-s5842" in namespace "gc-6103"
  I0510 13:34:03.391929 21 delete.go:95] Deleting pod "simpletest.rc-sfz2p" in namespace "gc-6103"
  I0510 13:34:03.437321 21 delete.go:95] Deleting pod "simpletest.rc-t8qhh" in namespace "gc-6103"
  I0510 13:34:03.485954 21 delete.go:95] Deleting pod "simpletest.rc-tfjd5" in namespace "gc-6103"
  I0510 13:34:03.540967 21 delete.go:95] Deleting pod "simpletest.rc-tk499" in namespace "gc-6103"
  I0510 13:34:03.586740 21 delete.go:95] Deleting pod "simpletest.rc-tq65w" in namespace "gc-6103"
  I0510 13:34:03.638799 21 delete.go:95] Deleting pod "simpletest.rc-tvncx" in namespace "gc-6103"
  I0510 13:34:03.688395 21 delete.go:95] Deleting pod "simpletest.rc-v6xmf" in namespace "gc-6103"
  I0510 13:34:03.739634 21 delete.go:95] Deleting pod "simpletest.rc-v8gmv" in namespace "gc-6103"
  I0510 13:34:03.787338 21 delete.go:95] Deleting pod "simpletest.rc-vbl78" in namespace "gc-6103"
  I0510 13:34:03.838784 21 delete.go:95] Deleting pod "simpletest.rc-vcjv2" in namespace "gc-6103"
  I0510 13:34:03.885581 21 delete.go:95] Deleting pod "simpletest.rc-vvxfk" in namespace "gc-6103"
  I0510 13:34:03.944025 21 delete.go:95] Deleting pod "simpletest.rc-whh86" in namespace "gc-6103"
  I0510 13:34:03.987353 21 delete.go:95] Deleting pod "simpletest.rc-wmlh2" in namespace "gc-6103"
  I0510 13:34:04.036409 21 delete.go:95] Deleting pod "simpletest.rc-wmp82" in namespace "gc-6103"
  I0510 13:34:04.086996 21 delete.go:95] Deleting pod "simpletest.rc-wwd8r" in namespace "gc-6103"
  I0510 13:34:04.137047 21 delete.go:95] Deleting pod "simpletest.rc-x85t5" in namespace "gc-6103"
  I0510 13:34:04.191056 21 delete.go:95] Deleting pod "simpletest.rc-x8zwv" in namespace "gc-6103"
  I0510 13:34:04.236597 21 delete.go:95] Deleting pod "simpletest.rc-xmvh2" in namespace "gc-6103"
  I0510 13:34:04.293363 21 delete.go:95] Deleting pod "simpletest.rc-xvt2g" in namespace "gc-6103"
  I0510 13:34:04.337472 21 delete.go:95] Deleting pod "simpletest.rc-zpxc7" in namespace "gc-6103"
  I0510 13:34:04.387049 21 delete.go:95] Deleting pod "simpletest.rc-zpz45" in namespace "gc-6103"
  I0510 13:34:04.438692 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6103" for this suite. @ 05/10/24 13:34:04.482
• [43.745 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 05/10/24 13:34:04.54
  I0510 13:34:04.541101 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 13:34:04.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:34:04.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:34:04.558
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 05/10/24 13:34:04.561
  STEP: Saw pod success @ 05/10/24 13:34:08.578
  I0510 13:34:08.580376 21 output.go:196] Trying to get logs from node worker-1 pod pod-91f6eae6-1bec-447e-9293-614d29098651 container test-container: <nil>
  STEP: delete the pod @ 05/10/24 13:34:08.585
  I0510 13:34:08.599942 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9042" for this suite. @ 05/10/24 13:34:08.602
• [4.065 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 05/10/24 13:34:08.606
  I0510 13:34:08.606066 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 05/10/24 13:34:08.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:34:08.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:34:08.617
  STEP: Setting up the test @ 05/10/24 13:34:08.619
  STEP: Creating hostNetwork=false pod @ 05/10/24 13:34:08.619
  STEP: Creating hostNetwork=true pod @ 05/10/24 13:34:10.631
  STEP: Running the test @ 05/10/24 13:34:12.645
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 05/10/24 13:34:12.645
  I0510 13:34:12.645395 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8596 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0510 13:34:12.645418 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 13:34:12.645899 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0510 13:34:12.645965 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8596/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0510 13:34:12.704804 21 exec_util.go:106] Exec stderr: ""
  I0510 13:34:12.704879 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8596 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0510 13:34:12.704898 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 13:34:12.705639 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0510 13:34:12.705705 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8596/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0510 13:34:12.759517 21 exec_util.go:106] Exec stderr: ""
  I0510 13:34:12.759576 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8596 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0510 13:34:12.759611 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 13:34:12.760141 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0510 13:34:12.760203 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8596/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0510 13:34:12.815900 21 exec_util.go:106] Exec stderr: ""
  I0510 13:34:12.815940 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8596 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0510 13:34:12.815955 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 13:34:12.816532 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0510 13:34:12.816593 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8596/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0510 13:34:12.867442 21 exec_util.go:106] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 05/10/24 13:34:12.867
  I0510 13:34:12.867636 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8596 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0510 13:34:12.867655 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 13:34:12.868135 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0510 13:34:12.868197 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8596/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0510 13:34:12.928171 21 exec_util.go:106] Exec stderr: ""
  I0510 13:34:12.928241 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8596 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0510 13:34:12.928257 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 13:34:12.928990 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0510 13:34:12.929053 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8596/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0510 13:34:12.979438 21 exec_util.go:106] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 05/10/24 13:34:12.979
  I0510 13:34:12.979531 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8596 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0510 13:34:12.979553 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 13:34:12.980098 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0510 13:34:12.980160 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8596/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0510 13:34:13.042416 21 exec_util.go:106] Exec stderr: ""
  I0510 13:34:13.042791 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8596 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0510 13:34:13.042814 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 13:34:13.043352 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0510 13:34:13.043480 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8596/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0510 13:34:13.101463 21 exec_util.go:106] Exec stderr: ""
  I0510 13:34:13.101580 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8596 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0510 13:34:13.101599 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 13:34:13.102208 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0510 13:34:13.102267 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8596/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0510 13:34:13.162401 21 exec_util.go:106] Exec stderr: ""
  I0510 13:34:13.162482 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8596 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0510 13:34:13.162545 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 13:34:13.163072 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0510 13:34:13.163141 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8596/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0510 13:34:13.213179 21 exec_util.go:106] Exec stderr: ""
  I0510 13:34:13.213709 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-8596" for this suite. @ 05/10/24 13:34:13.216
• [4.614 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 05/10/24 13:34:13.22
  I0510 13:34:13.221005 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename resourcequota @ 05/10/24 13:34:13.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:34:13.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:34:13.233
  STEP: Creating a ResourceQuota with best effort scope @ 05/10/24 13:34:13.236
  STEP: Ensuring ResourceQuota status is calculated @ 05/10/24 13:34:13.239
  STEP: Creating a ResourceQuota with not best effort scope @ 05/10/24 13:34:15.242
  STEP: Ensuring ResourceQuota status is calculated @ 05/10/24 13:34:15.245
  STEP: Creating a best-effort pod @ 05/10/24 13:34:17.248
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 05/10/24 13:34:17.257
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 05/10/24 13:34:19.26
  STEP: Deleting the pod @ 05/10/24 13:34:21.264
  STEP: Ensuring resource quota status released the pod usage @ 05/10/24 13:34:21.276
  STEP: Creating a not best-effort pod @ 05/10/24 13:34:23.28
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 05/10/24 13:34:23.288
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 05/10/24 13:34:25.291
  STEP: Deleting the pod @ 05/10/24 13:34:27.296
  STEP: Ensuring resource quota status released the pod usage @ 05/10/24 13:34:27.304
  I0510 13:34:29.306258 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4143" for this suite. @ 05/10/24 13:34:29.308
• [16.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 05/10/24 13:34:29.313
  I0510 13:34:29.313584 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename pv @ 05/10/24 13:34:29.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:34:29.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:34:29.326
  STEP: Creating initial PV and PVC @ 05/10/24 13:34:29.329
  I0510 13:34:29.329723 21 pv.go:390] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-2171" @ 05/10/24 13:34:29.339
  STEP: Listing PVCs in namespace "pv-2171" @ 05/10/24 13:34:29.342
  STEP: Reading "pvc-bj7bb" Status @ 05/10/24 13:34:29.347
  STEP: Reading "pv-2171-zcgwx" Status @ 05/10/24 13:34:29.349
  STEP: Patching "pvc-bj7bb" Status @ 05/10/24 13:34:29.352
  STEP: Patching "pv-2171-zcgwx" Status @ 05/10/24 13:34:29.356
  STEP: Updating "pvc-bj7bb" Status @ 05/10/24 13:34:29.376
  STEP: Updating "pv-2171-zcgwx" Status @ 05/10/24 13:34:29.382
  I0510 13:34:29.390259 21 persistent_volumes.go:407] AfterEach: deleting 1 PVCs and 1 PVs...
  I0510 13:34:29.390285 21 pv.go:201] Deleting PersistentVolumeClaim "pvc-bj7bb"
  I0510 13:34:29.393958 21 pv.go:189] Deleting PersistentVolume "pv-2171-zcgwx"
  I0510 13:34:29.399823 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-2171" for this suite. @ 05/10/24 13:34:29.402
• [0.093 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 05/10/24 13:34:29.406
  I0510 13:34:29.406451 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename resourcequota @ 05/10/24 13:34:29.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:34:29.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:34:29.421
  STEP: Discovering how many secrets are in namespace by default @ 05/10/24 13:34:29.424
  STEP: Counting existing ResourceQuota @ 05/10/24 13:34:34.427
  STEP: Creating a ResourceQuota @ 05/10/24 13:34:39.43
  STEP: Ensuring resource quota status is calculated @ 05/10/24 13:34:39.435
  STEP: Creating a Secret @ 05/10/24 13:34:41.438
  STEP: Ensuring resource quota status captures secret creation @ 05/10/24 13:34:41.447
  STEP: Deleting a secret @ 05/10/24 13:34:43.449
  STEP: Ensuring resource quota status released usage @ 05/10/24 13:34:43.453
  I0510 13:34:45.456841 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3519" for this suite. @ 05/10/24 13:34:45.459
• [16.057 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 05/10/24 13:34:45.463
  I0510 13:34:45.463880 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename configmap @ 05/10/24 13:34:45.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:34:45.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:34:45.475
  STEP: Creating configMap configmap-8613/configmap-test-4b338e22-ed65-420a-bda7-a94c6f1589a0 @ 05/10/24 13:34:45.478
  STEP: Creating a pod to test consume configMaps @ 05/10/24 13:34:45.482
  STEP: Saw pod success @ 05/10/24 13:34:49.495
  I0510 13:34:49.497521 21 output.go:196] Trying to get logs from node worker-1 pod pod-configmaps-05d031fe-3811-4457-9f18-5e62f97da208 container env-test: <nil>
  STEP: delete the pod @ 05/10/24 13:34:49.503
  I0510 13:34:49.514132 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8613" for this suite. @ 05/10/24 13:34:49.516
• [4.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 05/10/24 13:34:49.521
  I0510 13:34:49.521728 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/10/24 13:34:49.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:34:49.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:34:49.535
  I0510 13:34:49.537785 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/10/24 13:34:50.844
  I0510 13:34:50.844303 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=crd-publish-openapi-227 --namespace=crd-publish-openapi-227 create -f -'
  I0510 13:34:52.921139 21 builder.go:146] stderr: ""
  I0510 13:34:52.921412 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9149-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0510 13:34:52.921491 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=crd-publish-openapi-227 --namespace=crd-publish-openapi-227 delete e2e-test-crd-publish-openapi-9149-crds test-cr'
  I0510 13:34:52.983694 21 builder.go:146] stderr: ""
  I0510 13:34:52.983840 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9149-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0510 13:34:52.983928 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=crd-publish-openapi-227 --namespace=crd-publish-openapi-227 apply -f -'
  I0510 13:34:53.049294 21 builder.go:146] stderr: ""
  I0510 13:34:53.049342 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9149-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0510 13:34:53.049447 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=crd-publish-openapi-227 --namespace=crd-publish-openapi-227 delete e2e-test-crd-publish-openapi-9149-crds test-cr'
  I0510 13:34:53.111272 21 builder.go:146] stderr: ""
  I0510 13:34:53.111341 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9149-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 05/10/24 13:34:53.111
  I0510 13:34:53.111725 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=crd-publish-openapi-227 explain e2e-test-crd-publish-openapi-9149-crds'
  I0510 13:34:53.170603 21 builder.go:146] stderr: ""
  I0510 13:34:53.170663 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-9149-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I0510 13:34:54.408976 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-227" for this suite. @ 05/10/24 13:34:54.415
• [4.898 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 05/10/24 13:34:54.419
  I0510 13:34:54.419598 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename webhook @ 05/10/24 13:34:54.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:34:54.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:34:54.433
  STEP: Setting up server cert @ 05/10/24 13:34:54.448
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 13:34:54.701
  STEP: Deploying the webhook pod @ 05/10/24 13:34:54.707
  STEP: Wait for the deployment to be ready @ 05/10/24 13:34:54.716
  I0510 13:34:54.722501 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 13:34:56.729
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 13:34:56.739
  I0510 13:34:57.741010 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 05/10/24 13:34:57.745
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 05/10/24 13:34:57.776
  STEP: Creating a dummy validating-webhook-configuration object @ 05/10/24 13:34:57.793
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 05/10/24 13:34:57.801
  STEP: Creating a dummy mutating-webhook-configuration object @ 05/10/24 13:34:57.804
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 05/10/24 13:34:57.811
  I0510 13:34:57.848573 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1951" for this suite. @ 05/10/24 13:34:57.851
  STEP: Destroying namespace "webhook-markers-7471" for this suite. @ 05/10/24 13:34:57.855
• [3.440 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 05/10/24 13:34:57.859
  I0510 13:34:57.859745 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename subpath @ 05/10/24 13:34:57.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:34:57.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:34:57.87
  STEP: Setting up data @ 05/10/24 13:34:57.873
  STEP: Creating pod pod-subpath-test-configmap-dqrt @ 05/10/24 13:34:57.879
  STEP: Creating a pod to test atomic-volume-subpath @ 05/10/24 13:34:57.879
  STEP: Saw pod success @ 05/10/24 13:35:19.928
  I0510 13:35:19.930342 21 output.go:196] Trying to get logs from node worker-1 pod pod-subpath-test-configmap-dqrt container test-container-subpath-configmap-dqrt: <nil>
  STEP: delete the pod @ 05/10/24 13:35:19.936
  STEP: Deleting pod pod-subpath-test-configmap-dqrt @ 05/10/24 13:35:19.946
  I0510 13:35:19.946241 21 delete.go:62] Deleting pod "pod-subpath-test-configmap-dqrt" in namespace "subpath-756"
  I0510 13:35:19.948146 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-756" for this suite. @ 05/10/24 13:35:19.95
• [22.095 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 05/10/24 13:35:19.954
  I0510 13:35:19.955004 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename statefulset @ 05/10/24 13:35:19.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:35:19.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:35:19.968
  STEP: Creating service test in namespace statefulset-2678 @ 05/10/24 13:35:19.97
  STEP: Creating a new StatefulSet @ 05/10/24 13:35:19.974
  I0510 13:35:19.983656 21 wait.go:40] Found 0 stateful pods, waiting for 3
  I0510 13:35:29.984912 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0510 13:35:29.984965 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0510 13:35:29.984982 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0510 13:35:29.991459 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=statefulset-2678 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0510 13:35:30.103318 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0510 13:35:30.103363 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0510 13:35:30.103376 21 statefulset.go:2184] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 05/10/24 13:35:40.108
  I0510 13:35:40.126679 21 statefulset.go:2241] Updating stateful set ss2
  STEP: Creating a new revision @ 05/10/24 13:35:40.126
  STEP: Updating Pods in reverse ordinal order @ 05/10/24 13:35:50.137
  I0510 13:35:50.140085 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=statefulset-2678 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0510 13:35:50.252831 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0510 13:35:50.252880 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0510 13:35:50.252916 21 statefulset.go:2208] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 05/10/24 13:36:10.269
  I0510 13:36:10.270085 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=statefulset-2678 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0510 13:36:10.406800 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0510 13:36:10.406921 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0510 13:36:10.406941 21 statefulset.go:2184] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0510 13:36:20.428222 21 statefulset.go:2241] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 05/10/24 13:36:30.433
  I0510 13:36:30.435832 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=statefulset-2678 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0510 13:36:30.543950 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0510 13:36:30.543989 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0510 13:36:30.544002 21 statefulset.go:2208] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0510 13:36:40.554406 21 statefulset.go:135] Deleting all statefulset in ns statefulset-2678
  I0510 13:36:40.556285 21 rest.go:150] Scaling statefulset ss2 to 0
  I0510 13:36:50.567973 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0510 13:36:50.570037 21 rest.go:88] Deleting statefulset ss2
  I0510 13:36:50.578343 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2678" for this suite. @ 05/10/24 13:36:50.589
• [90.638 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 05/10/24 13:36:50.595
  I0510 13:36:50.595253 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename var-expansion @ 05/10/24 13:36:50.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:36:50.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:36:50.606
  STEP: Creating a pod to test substitution in container's command @ 05/10/24 13:36:50.609
  STEP: Saw pod success @ 05/10/24 13:36:54.624
  I0510 13:36:54.626459 21 output.go:196] Trying to get logs from node worker-1 pod var-expansion-4037d37f-d668-48b1-aa8d-a7432560a13b container dapi-container: <nil>
  STEP: delete the pod @ 05/10/24 13:36:54.637
  I0510 13:36:54.649396 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9786" for this suite. @ 05/10/24 13:36:54.651
• [4.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1537
  STEP: Creating a kubernetes client @ 05/10/24 13:36:54.656
  I0510 13:36:54.656463 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename services @ 05/10/24 13:36:54.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:36:54.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:36:54.67
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-9326 @ 05/10/24 13:36:54.673
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 05/10/24 13:36:54.684
  STEP: creating service externalsvc in namespace services-9326 @ 05/10/24 13:36:54.684
  STEP: creating replication controller externalsvc in namespace services-9326 @ 05/10/24 13:36:54.698
  I0510 13:36:54.703629      21 runners.go:198] Created replication controller with name: externalsvc, namespace: services-9326, replica count: 2
  I0510 13:36:57.754334      21 runners.go:198] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 05/10/24 13:36:57.756
  I0510 13:36:57.770047 21 resource.go:361] Creating new exec pod
  I0510 13:36:59.781122 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-9326 exec execpodlwrdl -- /bin/sh -x -c nslookup nodeport-service.services-9326.svc.cluster.local'
  I0510 13:36:59.926652 21 builder.go:146] stderr: "+ nslookup nodeport-service.services-9326.svc.cluster.local\n"
  I0510 13:36:59.926709 21 builder.go:147] stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nnodeport-service.services-9326.svc.cluster.local\tcanonical name = externalsvc.services-9326.svc.cluster.local.\nName:\texternalsvc.services-9326.svc.cluster.local\nAddress: 10.103.138.70\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-9326, will wait for the garbage collector to delete the pods @ 05/10/24 13:36:59.927
  I0510 13:36:59.983153 21 resources.go:139] Deleting ReplicationController externalsvc took: 3.435331ms
  I0510 13:37:00.083548 21 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.390567ms
  I0510 13:37:02.997147 21 service.go:1548] Cleaning up the NodePort to ExternalName test service
  I0510 13:37:03.005101 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9326" for this suite. @ 05/10/24 13:37:03.007
• [8.355 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 05/10/24 13:37:03.011
  I0510 13:37:03.011812 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename dns @ 05/10/24 13:37:03.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:37:03.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:37:03.024
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 05/10/24 13:37:03.027
  I0510 13:37:03.032568 21 dns.go:419] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-7071  77fe3c67-af6c-4e0f-818b-d6d85994e734 9561 0 2024-05-10 13:37:03 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-05-10 13:37:03 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-whtcr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-whtcr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 05/10/24 13:37:05.037
  I0510 13:37:05.037486 21 exec_util.go:55] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-7071 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0510 13:37:05.037508 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 13:37:05.038070 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0510 13:37:05.038134 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-7071/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 05/10/24 13:37:05.106
  I0510 13:37:05.106653 21 exec_util.go:55] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-7071 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0510 13:37:05.106678 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 13:37:05.107270 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0510 13:37:05.107340 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-7071/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0510 13:37:05.186846 21 dns.go:421] Deleting pod test-dns-nameservers...
  I0510 13:37:05.195517 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7071" for this suite. @ 05/10/24 13:37:05.198
• [2.190 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 05/10/24 13:37:05.202
  I0510 13:37:05.202169 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/10/24 13:37:05.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:37:05.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:37:05.213
  STEP: create the container to handle the HTTPGet hook request. @ 05/10/24 13:37:05.219
  STEP: create the pod with lifecycle hook @ 05/10/24 13:37:07.231
  STEP: check poststart hook @ 05/10/24 13:37:09.244
  STEP: delete the pod with lifecycle hook @ 05/10/24 13:37:09.257
  I0510 13:37:11.269552 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8079" for this suite. @ 05/10/24 13:37:11.272
• [6.074 seconds]
------------------------------
SSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 05/10/24 13:37:11.276
  I0510 13:37:11.276222 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename init-container @ 05/10/24 13:37:11.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:37:11.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:37:11.288
  STEP: creating the pod @ 05/10/24 13:37:11.291
  I0510 13:37:11.291787 21 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I0510 13:37:15.069868 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8142" for this suite. @ 05/10/24 13:37:15.072
• [3.800 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 05/10/24 13:37:15.077
  I0510 13:37:15.077683 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename namespaces @ 05/10/24 13:37:15.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:37:15.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:37:15.088
  STEP: Creating a test namespace @ 05/10/24 13:37:15.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:37:15.099
  STEP: Creating a service in the namespace @ 05/10/24 13:37:15.101
  STEP: Deleting the namespace @ 05/10/24 13:37:15.116
  STEP: Waiting for the namespace to be removed. @ 05/10/24 13:37:15.12
  STEP: Recreating the namespace @ 05/10/24 13:37:21.124
  STEP: Verifying there is no service in the namespace @ 05/10/24 13:37:21.133
  I0510 13:37:21.135975 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1383" for this suite. @ 05/10/24 13:37:21.138
  STEP: Destroying namespace "nsdeletetest-8070" for this suite. @ 05/10/24 13:37:21.141
  I0510 13:37:21.143378 21 framework.go:370] Namespace nsdeletetest-8070 was already deleted
  STEP: Destroying namespace "nsdeletetest-8278" for this suite. @ 05/10/24 13:37:21.143
• [6.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 05/10/24 13:37:21.149
  I0510 13:37:21.149331 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 13:37:21.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:37:21.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:37:21.16
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 13:37:21.163
  STEP: Saw pod success @ 05/10/24 13:37:23.174
  I0510 13:37:23.176211 21 output.go:196] Trying to get logs from node worker-1 pod downwardapi-volume-e39c7fb7-4859-4a66-a53d-c9c96cdb2b06 container client-container: <nil>
  STEP: delete the pod @ 05/10/24 13:37:23.181
  I0510 13:37:23.191494 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5926" for this suite. @ 05/10/24 13:37:23.193
• [2.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 05/10/24 13:37:23.199
  I0510 13:37:23.199157 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/10/24 13:37:23.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:37:23.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:37:23.212
  STEP: creating a policy with variables @ 05/10/24 13:37:23.218
  STEP: waiting until the marker is denied @ 05/10/24 13:37:23.233
  STEP: testing a replicated Deployment to be allowed @ 05/10/24 13:37:23.443
  STEP: testing a non-replicated ReplicaSet not to be denied @ 05/10/24 13:37:23.453
  I0510 13:37:23.496035 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-1079" for this suite. @ 05/10/24 13:37:23.499
• [0.308 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 05/10/24 13:37:23.507
  I0510 13:37:23.507878 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename projected @ 05/10/24 13:37:23.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:37:23.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:37:23.523
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 13:37:23.525
  STEP: Saw pod success @ 05/10/24 13:37:27.539
  I0510 13:37:27.541384 21 output.go:196] Trying to get logs from node worker-0 pod downwardapi-volume-e0b67b86-1836-4a64-9b14-9490c73c086c container client-container: <nil>
  STEP: delete the pod @ 05/10/24 13:37:27.545
  I0510 13:37:27.556073 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6055" for this suite. @ 05/10/24 13:37:27.558
• [4.055 seconds]
------------------------------
SS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 05/10/24 13:37:27.562
  I0510 13:37:27.562838 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename csistoragecapacity @ 05/10/24 13:37:27.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:37:27.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:37:27.576
  STEP: getting /apis @ 05/10/24 13:37:27.578
  STEP: getting /apis/storage.k8s.io @ 05/10/24 13:37:27.582
  STEP: getting /apis/storage.k8s.io/v1 @ 05/10/24 13:37:27.584
  STEP: creating @ 05/10/24 13:37:27.585
  STEP: watching @ 05/10/24 13:37:27.596
  I0510 13:37:27.596647 21 csistoragecapacity.go:143] starting watch
  STEP: getting @ 05/10/24 13:37:27.601
  STEP: listing in namespace @ 05/10/24 13:37:27.603
  STEP: listing across namespaces @ 05/10/24 13:37:27.605
  STEP: patching @ 05/10/24 13:37:27.607
  STEP: updating @ 05/10/24 13:37:27.61
  I0510 13:37:27.613656 21 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0510 13:37:27.613761 21 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 05/10/24 13:37:27.613
  STEP: deleting a collection @ 05/10/24 13:37:27.62
  I0510 13:37:27.629423 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-7314" for this suite. @ 05/10/24 13:37:27.631
• [0.072 seconds]
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 05/10/24 13:37:27.635
  I0510 13:37:27.635392 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename events @ 05/10/24 13:37:27.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:37:27.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:37:27.646
  STEP: creating a test event @ 05/10/24 13:37:27.648
  STEP: listing all events in all namespaces @ 05/10/24 13:37:27.651
  STEP: patching the test event @ 05/10/24 13:37:27.656
  STEP: fetching the test event @ 05/10/24 13:37:27.66
  STEP: updating the test event @ 05/10/24 13:37:27.662
  STEP: getting the test event @ 05/10/24 13:37:27.668
  STEP: deleting the test event @ 05/10/24 13:37:27.669
  STEP: listing all events in all namespaces @ 05/10/24 13:37:27.673
  I0510 13:37:27.678205 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8850" for this suite. @ 05/10/24 13:37:27.68
• [0.049 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 05/10/24 13:37:27.684
  I0510 13:37:27.685012 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename statefulset @ 05/10/24 13:37:27.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:37:27.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:37:27.702
  STEP: Creating service test in namespace statefulset-129 @ 05/10/24 13:37:27.705
  STEP: Creating statefulset ss in namespace statefulset-129 @ 05/10/24 13:37:27.711
  I0510 13:37:27.718373 21 wait.go:40] Found 0 stateful pods, waiting for 1
  I0510 13:37:37.720141 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 05/10/24 13:37:37.724
  STEP: Getting /status @ 05/10/24 13:37:37.733
  I0510 13:37:37.735650 21 statefulset.go:1067] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 05/10/24 13:37:37.735
  I0510 13:37:37.741280 21 statefulset.go:1087] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 05/10/24 13:37:37.741
  I0510 13:37:37.742959 21 statefulset.go:1115] Observed &StatefulSet event: ADDED
  I0510 13:37:37.743003 21 statefulset.go:1108] Found Statefulset ss in namespace statefulset-129 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0510 13:37:37.743021 21 statefulset.go:1119] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 05/10/24 13:37:37.743
  I0510 13:37:37.743066 21 statefulset.go:1123] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0510 13:37:37.748639 21 statefulset.go:1127] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 05/10/24 13:37:37.748
  I0510 13:37:37.750216 21 statefulset.go:1152] Observed &StatefulSet event: ADDED
  I0510 13:37:37.750305 21 statefulset.go:1148] Observed Statefulset ss in namespace statefulset-129 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0510 13:37:37.750453 21 statefulset.go:1152] Observed &StatefulSet event: MODIFIED
  I0510 13:37:37.750497 21 statefulset.go:1145] Found Statefulset ss in namespace statefulset-129 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0510 13:37:37.750569 21 statefulset.go:135] Deleting all statefulset in ns statefulset-129
  I0510 13:37:37.752385 21 rest.go:150] Scaling statefulset ss to 0
  I0510 13:37:47.760972 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0510 13:37:47.762946 21 rest.go:88] Deleting statefulset ss
  I0510 13:37:47.770265 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-129" for this suite. @ 05/10/24 13:37:47.774
• [20.093 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1459
  STEP: Creating a kubernetes client @ 05/10/24 13:37:47.778
  I0510 13:37:47.778458 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename services @ 05/10/24 13:37:47.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:37:47.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:37:47.789
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-7088 @ 05/10/24 13:37:47.792
  STEP: changing the ExternalName service to type=NodePort @ 05/10/24 13:37:47.795
  STEP: creating replication controller externalname-service in namespace services-7088 @ 05/10/24 13:37:47.807
  I0510 13:37:47.813741      21 runners.go:198] Created replication controller with name: externalname-service, namespace: services-7088, replica count: 2
  I0510 13:37:50.865161      21 runners.go:198] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0510 13:37:50.865199 21 resource.go:361] Creating new exec pod
  I0510 13:37:53.878488 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-7088 exec execpodzgrgd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0510 13:37:53.997276 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0510 13:37:53.997319 21 builder.go:147] stdout: "externalname-service-q7jlk"
  I0510 13:37:53.997437 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-7088 exec execpodzgrgd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.57.204 80'
  I0510 13:37:54.111185 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.97.57.204 80\nConnection to 10.97.57.204 80 port [tcp/http] succeeded!\n"
  I0510 13:37:54.111227 21 builder.go:147] stdout: ""
  I0510 13:37:54.998237 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-7088 exec execpodzgrgd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.57.204 80'
  I0510 13:37:55.110687 21 builder.go:146] stderr: "+ + echonc -v hostName -t\n -w 2 10.97.57.204 80\nConnection to 10.97.57.204 80 port [tcp/http] succeeded!\n"
  I0510 13:37:55.110730 21 builder.go:147] stdout: ""
  I0510 13:37:55.997780 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-7088 exec execpodzgrgd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.57.204 80'
  I0510 13:37:56.116339 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.97.57.204 80\nConnection to 10.97.57.204 80 port [tcp/http] succeeded!\n"
  I0510 13:37:56.116383 21 builder.go:147] stdout: "externalname-service-5kf6j"
  I0510 13:37:56.116477 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-7088 exec execpodzgrgd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.48.103 30705'
  I0510 13:37:56.235758 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.48.103 30705\nConnection to 10.0.48.103 30705 port [tcp/*] succeeded!\n"
  I0510 13:37:56.235809 21 builder.go:147] stdout: ""
  I0510 13:37:57.116943 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-7088 exec execpodzgrgd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.48.103 30705'
  I0510 13:37:57.236206 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.48.103 30705\nConnection to 10.0.48.103 30705 port [tcp/*] succeeded!\n"
  I0510 13:37:57.236278 21 builder.go:147] stdout: ""
  I0510 13:37:58.117307 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-7088 exec execpodzgrgd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.48.103 30705'
  I0510 13:37:58.235517 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.48.103 30705\nConnection to 10.0.48.103 30705 port [tcp/*] succeeded!\n"
  I0510 13:37:58.235578 21 builder.go:147] stdout: "externalname-service-q7jlk"
  I0510 13:37:58.235711 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-7088 exec execpodzgrgd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.48.105 30705'
  I0510 13:37:58.347137 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.48.105 30705\nConnection to 10.0.48.105 30705 port [tcp/*] succeeded!\n"
  I0510 13:37:58.347242 21 builder.go:147] stdout: "externalname-service-q7jlk"
  I0510 13:37:58.347343 21 service.go:1468] Cleaning up the ExternalName to NodePort test service
  I0510 13:37:58.361802 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7088" for this suite. @ 05/10/24 13:37:58.365
• [10.591 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 05/10/24 13:37:58.369
  I0510 13:37:58.369366 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename secrets @ 05/10/24 13:37:58.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:37:58.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:37:58.38
  STEP: Creating secret with name secret-test-map-c06a5543-ac36-47ae-a610-fb16ea88958c @ 05/10/24 13:37:58.383
  STEP: Creating a pod to test consume secrets @ 05/10/24 13:37:58.388
  STEP: Saw pod success @ 05/10/24 13:38:00.402
  I0510 13:38:00.404163 21 output.go:196] Trying to get logs from node worker-1 pod pod-secrets-a5f15b3b-204f-4fee-80ea-c5da3a63d156 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 13:38:00.409
  I0510 13:38:00.478832 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5726" for this suite. @ 05/10/24 13:38:00.481
• [2.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1394
  STEP: Creating a kubernetes client @ 05/10/24 13:38:00.485
  I0510 13:38:00.485161 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 13:38:00.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:38:00.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:38:00.497
  I0510 13:38:00.500420 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-3899 create -f -'
  I0510 13:38:00.621570 21 builder.go:146] stderr: ""
  I0510 13:38:00.621646 21 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0510 13:38:00.621897 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-3899 create -f -'
  I0510 13:38:00.749509 21 builder.go:146] stderr: ""
  I0510 13:38:00.749559 21 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/10/24 13:38:00.749
  I0510 13:38:01.752526 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0510 13:38:01.752565 21 framework.go:733] Found 0 / 1
  I0510 13:38:02.753181 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0510 13:38:02.753222 21 framework.go:733] Found 1 / 1
  I0510 13:38:02.753246 21 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0510 13:38:02.755324 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0510 13:38:02.755352 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0510 13:38:02.755436 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-3899 describe pod agnhost-primary-sph2d'
  I0510 13:38:02.820809 21 builder.go:146] stderr: ""
  I0510 13:38:02.821038 21 builder.go:147] stdout: "Name:             agnhost-primary-sph2d\nNamespace:        kubectl-3899\nPriority:         0\nService Account:  default\nNode:             worker-1/10.0.48.105\nStart Time:       Fri, 10 May 2024 13:38:00 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.244.1.128\nIPs:\n  IP:           10.244.1.128\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://a92978afe9c1defa7aec223e8fd609a43afe6698dcd43130b807fe8c14dea479\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Fri, 10 May 2024 13:38:01 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-7f7lj (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-7f7lj:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-3899/agnhost-primary-sph2d to worker-1\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I0510 13:38:02.821129 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-3899 describe rc agnhost-primary'
  I0510 13:38:02.888842 21 builder.go:146] stderr: ""
  I0510 13:38:02.888918 21 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-3899\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-sph2d\n"
  I0510 13:38:02.889005 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-3899 describe service agnhost-primary'
  I0510 13:38:02.953655 21 builder.go:146] stderr: ""
  I0510 13:38:02.953881 21 builder.go:147] stdout: "Name:              agnhost-primary\nNamespace:         kubectl-3899\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.106.189.124\nIPs:               10.106.189.124\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.244.1.128:6379\nSession Affinity:  None\nEvents:            <none>\n"
  I0510 13:38:02.956258 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-3899 describe node worker-0'
  I0510 13:38:03.037891 21 builder.go:146] stderr: ""
  I0510 13:38:03.038110 21 builder.go:147] stdout: "Name:               worker-0\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=worker-0\n                    kubernetes.io/os=linux\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Fri, 10 May 2024 13:15:09 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  worker-0\n  AcquireTime:     <unset>\n  RenewTime:       Fri, 10 May 2024 13:37:56 +0000\nConditions:\n  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----             ------  -----------------                 ------------------                ------                       -------\n  MemoryPressure   False   Fri, 10 May 2024 13:36:13 +0000   Fri, 10 May 2024 13:15:09 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure     False   Fri, 10 May 2024 13:36:13 +0000   Fri, 10 May 2024 13:15:09 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure      False   Fri, 10 May 2024 13:36:13 +0000   Fri, 10 May 2024 13:15:09 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready            True    Fri, 10 May 2024 13:36:13 +0000   Fri, 10 May 2024 13:15:21 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  10.0.48.103\n  Hostname:    worker-0\nCapacity:\n  cpu:                    4\n  ephemeral-storage:      50620216Ki\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 7604260Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nAllocatable:\n  cpu:                    4\n  ephemeral-storage:      46651590989\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 7501860Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nSystem Info:\n  Machine ID:                 09dbf1aedf7e43e1b3fbbd174ae1268e\n  System UUID:                ec2a3fa6-76af-81c7-75c0-7fc8e2a40ea7\n  Boot ID:                    f8ec9f46-f031-46eb-9771-53f5cb600115\n  Kernel Version:             6.5.0-1018-aws\n  OS Image:                   Ubuntu 22.04.4 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.7.16\n  Kubelet Version:            v1.30.0+k0s\n  Kube-Proxy Version:         v1.30.0+k0s\nPodCIDR:                      10.244.0.0/24\nPodCIDRs:                     10.244.0.0/24\nNon-terminated Pods:          (8 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 coredns-6997b8f8bd-47z52                                   100m (2%)     0 (0%)      70Mi (0%)        170Mi (2%)     22m\n  kube-system                 konnectivity-agent-2lmmj                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         22m\n  kube-system                 kube-proxy-9fgls                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         22m\n  kube-system                 kube-router-nhmxc                                          250m (6%)     0 (0%)      16Mi (0%)        0 (0%)         22m\n  kube-system                 metrics-server-5cd4986bbc-7kh5s                            10m (0%)      0 (0%)      30M (0%)         0 (0%)         22m\n  services-7088               externalname-service-q7jlk                                 0 (0%)        0 (0%)      0 (0%)           0 (0%)         16s\n  sonobuoy                    sonobuoy-e2e-job-12fbf0b104f946c7                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         22m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-24515f3172df4c25-pblpt    0 (0%)        0 (0%)      0 (0%)           0 (0%)         22m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource               Requests        Limits\n  --------               --------        ------\n  cpu                    360m (9%)       0 (0%)\n  memory                 120177536 (1%)  170Mi (2%)\n  ephemeral-storage      0 (0%)          0 (0%)\n  hugepages-1Gi          0 (0%)          0 (0%)\n  hugepages-2Mi          0 (0%)          0 (0%)\n  scheduling.k8s.io/foo  0               0\nEvents:\n  Type     Reason                   Age                From             Message\n  ----     ------                   ----               ----             -------\n  Normal   Starting                 22m                kube-proxy       \n  Normal   Starting                 22m                kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      22m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientMemory  22m (x2 over 22m)  kubelet          Node worker-0 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    22m (x2 over 22m)  kubelet          Node worker-0 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     22m (x2 over 22m)  kubelet          Node worker-0 status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced  22m                kubelet          Updated Node Allocatable limit across pods\n  Normal   RegisteredNode           22m                node-controller  Node worker-0 event: Registered Node worker-0 in Controller\n  Normal   NodeReady                22m                kubelet          Node worker-0 status is now: NodeReady\n"
  I0510 13:38:03.038343 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-3899 describe namespace kubectl-3899'
  I0510 13:38:03.101134 21 builder.go:146] stderr: ""
  I0510 13:38:03.101196 21 builder.go:147] stdout: "Name:         kubectl-3899\nLabels:       e2e-framework=kubectl\n              e2e-run=890ea765-bccc-4855-a9f1-a8c6d9b99337\n              kubernetes.io/metadata.name=kubectl-3899\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0510 13:38:03.101450 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3899" for this suite. @ 05/10/24 13:38:03.103
• [2.623 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 05/10/24 13:38:03.108
  I0510 13:38:03.108147 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename replicaset @ 05/10/24 13:38:03.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:38:03.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:38:03.12
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 05/10/24 13:38:03.123
  I0510 13:38:03.130210 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0510 13:38:08.133390 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/10/24 13:38:08.133
  STEP: getting scale subresource @ 05/10/24 13:38:08.133
  STEP: updating a scale subresource @ 05/10/24 13:38:08.135
  STEP: verifying the replicaset Spec.Replicas was modified @ 05/10/24 13:38:08.139
  STEP: Patch a scale subresource @ 05/10/24 13:38:08.141
  I0510 13:38:08.151800 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2628" for this suite. @ 05/10/24 13:38:08.154
• [5.053 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 05/10/24 13:38:08.162
  I0510 13:38:08.162050 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename kubelet-test @ 05/10/24 13:38:08.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:38:08.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:38:08.177
  I0510 13:38:08.203699 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-125" for this suite. @ 05/10/24 13:38:08.206
• [0.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 05/10/24 13:38:08.213
  I0510 13:38:08.213099 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename container-probe @ 05/10/24 13:38:08.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:38:08.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:38:08.225
  STEP: Creating pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419 @ 05/10/24 13:38:08.228
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/10/24 13:38:10.244
  I0510 13:38:10.246532 21 container_probe.go:1749] Initial restart count of pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 is 0
  I0510 13:38:10.248592 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:38:12.251829 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:38:14.254197 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:38:16.256835 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:38:18.260678 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:38:20.264176 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:38:22.266774 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:38:24.269967 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:38:26.273635 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:38:28.277159 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:38:30.280704 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:38:32.282957 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:38:34.286203 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:38:36.289693 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:38:38.293160 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:38:40.296835 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:38:42.300442 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:38:44.303672 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:38:46.306508 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:38:48.309081 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:38:50.312769 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:38:52.315295 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:38:54.318845 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:38:56.322050 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:38:58.326021 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:39:00.329594 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:39:02.333314 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:39:04.336870 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:39:06.341375 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:39:08.344875 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:39:10.348278 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:39:12.351873 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:39:14.355621 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:39:16.359256 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:39:18.362913 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:39:20.366625 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:39:22.369663 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:39:24.372068 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:39:26.375777 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:39:28.379405 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:39:30.382043 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:39:32.385532 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:39:34.388388 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:39:36.391998 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:39:38.395902 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:39:40.399540 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:39:42.402922 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:39:44.410001 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:39:46.413303 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:39:48.416895 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:39:50.420560 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:39:52.424108 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:39:54.427663 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:39:56.431213 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:39:58.433943 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:40:00.437454 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:40:02.441093 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:40:04.444644 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:40:06.448434 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:40:08.451790 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:40:10.454837 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:40:12.458582 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:40:14.461257 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:40:16.464868 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:40:18.468689 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:40:20.472313 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:40:22.475793 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:40:24.479493 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:40:26.483020 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:40:28.486541 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:40:30.490030 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:40:32.493717 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:40:34.497173 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:40:36.500540 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:40:38.504198 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:40:40.507799 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:40:42.511036 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:40:44.514569 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:40:46.517735 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:40:48.520990 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:40:50.523724 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:40:52.526631 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:40:54.530211 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:40:56.533937 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:40:58.537384 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:41:00.540925 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:41:02.543601 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:41:04.546350 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:41:06.549302 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:41:08.551948 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:41:10.555193 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:41:12.558582 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:41:14.561403 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:41:16.564872 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:41:18.568155 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:41:20.570667 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:41:22.574085 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:41:24.576527 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:41:26.580038 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:41:28.583642 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:41:30.587284 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:41:32.589999 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:41:34.593231 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:41:36.595882 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:41:38.599598 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:41:40.602913 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:41:42.605742 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:41:44.609300 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:41:46.611845 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:41:48.615460 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:41:50.618805 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:41:52.622236 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:41:54.624742 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:41:56.628383 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:41:58.631170 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:42:00.634405 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:42:02.637184 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:42:04.640661 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:42:06.644450 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  I0510 13:42:08.648305 21 container_probe.go:1759] Get pod test-grpc-305ae8e0-a1c7-4c60-885d-2324fec28788 in namespace container-probe-419
  STEP: deleting the pod @ 05/10/24 13:42:10.649
  I0510 13:42:10.660241 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-419" for this suite. @ 05/10/24 13:42:10.665
• [242.457 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 05/10/24 13:42:10.671
  I0510 13:42:10.671277 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename pods @ 05/10/24 13:42:10.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:42:10.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:42:10.685
  STEP: creating a Pod with a static label @ 05/10/24 13:42:10.691
  STEP: watching for Pod to be ready @ 05/10/24 13:42:10.698
  I0510 13:42:10.699789 21 pods.go:945] observed Pod pod-test in namespace pods-6692 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0510 13:42:10.702043 21 pods.go:945] observed Pod pod-test in namespace pods-6692 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 13:42:10 +0000 UTC  }]
  I0510 13:42:10.709505 21 pods.go:945] observed Pod pod-test in namespace pods-6692 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 13:42:10 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 13:42:10 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 13:42:10 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 13:42:10 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 13:42:10 +0000 UTC  }]
  I0510 13:42:11.483217 21 pods.go:948] Found Pod pod-test in namespace pods-6692 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 13:42:11 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 13:42:10 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 13:42:11 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 13:42:11 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 13:42:10 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 05/10/24 13:42:11.485
  STEP: getting the Pod and ensuring that it's patched @ 05/10/24 13:42:11.491
  STEP: replacing the Pod's status Ready condition to False @ 05/10/24 13:42:11.493
  STEP: check the Pod again to ensure its Ready conditions are False @ 05/10/24 13:42:11.501
  STEP: deleting the Pod via a Collection with a LabelSelector @ 05/10/24 13:42:11.501
  STEP: watching for the Pod to be deleted @ 05/10/24 13:42:11.507
  I0510 13:42:11.508918 21 pods.go:1058] observed event type MODIFIED
  I0510 13:42:13.489029 21 pods.go:1058] observed event type MODIFIED
  I0510 13:42:13.604737 21 pods.go:1058] observed event type MODIFIED
  I0510 13:42:14.491775 21 pods.go:1058] observed event type MODIFIED
  I0510 13:42:14.497709 21 pods.go:1058] observed event type MODIFIED
  I0510 13:42:14.504401 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6692" for this suite. @ 05/10/24 13:42:14.507
• [3.842 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 05/10/24 13:42:14.513
  I0510 13:42:14.513777 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename dns @ 05/10/24 13:42:14.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:42:14.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:42:14.525
  STEP: Creating a test headless service @ 05/10/24 13:42:14.528
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9659.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9659.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9659.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9659.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9659.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-9659.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9659.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-9659.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9659.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-9659.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9659.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-9659.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 11.19.100.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.100.19.11_udp@PTR;check="$$(dig +tcp +noall +answer +search 11.19.100.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.100.19.11_tcp@PTR;sleep 1; done
   @ 05/10/24 13:42:14.541
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9659.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9659.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9659.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9659.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9659.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9659.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9659.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9659.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9659.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9659.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9659.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9659.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 11.19.100.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.100.19.11_udp@PTR;check="$$(dig +tcp +noall +answer +search 11.19.100.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.100.19.11_tcp@PTR;sleep 1; done
   @ 05/10/24 13:42:14.541
  STEP: creating a pod to probe DNS @ 05/10/24 13:42:14.541
  STEP: submitting the pod to kubernetes @ 05/10/24 13:42:14.541
  STEP: retrieving the pod @ 05/10/24 13:42:16.556
  STEP: looking for the results for each expected name from probers @ 05/10/24 13:42:16.558
  I0510 13:42:16.564482 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-9659.svc.cluster.local from pod dns-9659/dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042: the server could not find the requested resource (get pods dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042)
  I0510 13:42:16.567453 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-9659.svc.cluster.local from pod dns-9659/dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042: the server could not find the requested resource (get pods dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042)
  I0510 13:42:16.570335 21 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9659.svc.cluster.local from pod dns-9659/dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042: the server could not find the requested resource (get pods dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042)
  I0510 13:42:16.573243 21 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9659.svc.cluster.local from pod dns-9659/dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042: the server could not find the requested resource (get pods dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042)
  I0510 13:42:16.586823 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-9659.svc.cluster.local from pod dns-9659/dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042: the server could not find the requested resource (get pods dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042)
  I0510 13:42:16.589588 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-9659.svc.cluster.local from pod dns-9659/dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042: the server could not find the requested resource (get pods dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042)
  I0510 13:42:16.592254 21 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9659.svc.cluster.local from pod dns-9659/dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042: the server could not find the requested resource (get pods dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042)
  I0510 13:42:16.605634 21 dns_common.go:489] Lookups using dns-9659/dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042 failed for: [wheezy_udp@dns-test-service.dns-9659.svc.cluster.local wheezy_tcp@dns-test-service.dns-9659.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9659.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9659.svc.cluster.local jessie_udp@dns-test-service.dns-9659.svc.cluster.local jessie_tcp@dns-test-service.dns-9659.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9659.svc.cluster.local]

  I0510 13:42:16.617625 21 dns_common.go:495] Pod client logs for webserver: 
  I0510 13:42:16.621647 21 dns_common.go:495] Pod client logs for querier: 
  I0510 13:42:16.625724 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0510 13:42:21.563753 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-9659.svc.cluster.local from pod dns-9659/dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042: the server could not find the requested resource (get pods dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042)
  I0510 13:42:21.566689 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-9659.svc.cluster.local from pod dns-9659/dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042: the server could not find the requested resource (get pods dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042)
  I0510 13:42:21.585906 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-9659.svc.cluster.local from pod dns-9659/dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042: the server could not find the requested resource (get pods dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042)
  I0510 13:42:21.588743 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-9659.svc.cluster.local from pod dns-9659/dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042: the server could not find the requested resource (get pods dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042)
  I0510 13:42:21.605674 21 dns_common.go:489] Lookups using dns-9659/dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042 failed for: [wheezy_udp@dns-test-service.dns-9659.svc.cluster.local wheezy_tcp@dns-test-service.dns-9659.svc.cluster.local jessie_udp@dns-test-service.dns-9659.svc.cluster.local jessie_tcp@dns-test-service.dns-9659.svc.cluster.local]

  I0510 13:42:21.610266 21 dns_common.go:495] Pod client logs for webserver: 
  I0510 13:42:21.614703 21 dns_common.go:495] Pod client logs for querier: 
  I0510 13:42:21.618996 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0510 13:42:26.565108 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-9659.svc.cluster.local from pod dns-9659/dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042: the server could not find the requested resource (get pods dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042)
  I0510 13:42:26.568459 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-9659.svc.cluster.local from pod dns-9659/dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042: the server could not find the requested resource (get pods dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042)
  I0510 13:42:26.587842 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-9659.svc.cluster.local from pod dns-9659/dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042: the server could not find the requested resource (get pods dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042)
  I0510 13:42:26.590572 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-9659.svc.cluster.local from pod dns-9659/dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042: the server could not find the requested resource (get pods dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042)
  I0510 13:42:26.607179 21 dns_common.go:489] Lookups using dns-9659/dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042 failed for: [wheezy_udp@dns-test-service.dns-9659.svc.cluster.local wheezy_tcp@dns-test-service.dns-9659.svc.cluster.local jessie_udp@dns-test-service.dns-9659.svc.cluster.local jessie_tcp@dns-test-service.dns-9659.svc.cluster.local]

  I0510 13:42:26.611529 21 dns_common.go:495] Pod client logs for webserver: 
  I0510 13:42:26.615528 21 dns_common.go:495] Pod client logs for querier: 
  I0510 13:42:26.619559 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0510 13:42:31.563352 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-9659.svc.cluster.local from pod dns-9659/dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042: the server could not find the requested resource (get pods dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042)
  I0510 13:42:31.566605 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-9659.svc.cluster.local from pod dns-9659/dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042: the server could not find the requested resource (get pods dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042)
  I0510 13:42:31.585505 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-9659.svc.cluster.local from pod dns-9659/dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042: the server could not find the requested resource (get pods dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042)
  I0510 13:42:31.588397 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-9659.svc.cluster.local from pod dns-9659/dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042: the server could not find the requested resource (get pods dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042)
  I0510 13:42:31.604422 21 dns_common.go:489] Lookups using dns-9659/dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042 failed for: [wheezy_udp@dns-test-service.dns-9659.svc.cluster.local wheezy_tcp@dns-test-service.dns-9659.svc.cluster.local jessie_udp@dns-test-service.dns-9659.svc.cluster.local jessie_tcp@dns-test-service.dns-9659.svc.cluster.local]

  I0510 13:42:31.608946 21 dns_common.go:495] Pod client logs for webserver: 
  I0510 13:42:31.613066 21 dns_common.go:495] Pod client logs for querier: 
  I0510 13:42:31.617208 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0510 13:42:36.566626 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-9659.svc.cluster.local from pod dns-9659/dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042: the server could not find the requested resource (get pods dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042)
  I0510 13:42:36.569706 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-9659.svc.cluster.local from pod dns-9659/dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042: the server could not find the requested resource (get pods dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042)
  I0510 13:42:36.589200 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-9659.svc.cluster.local from pod dns-9659/dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042: the server could not find the requested resource (get pods dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042)
  I0510 13:42:36.592020 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-9659.svc.cluster.local from pod dns-9659/dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042: the server could not find the requested resource (get pods dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042)
  I0510 13:42:36.607948 21 dns_common.go:489] Lookups using dns-9659/dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042 failed for: [wheezy_udp@dns-test-service.dns-9659.svc.cluster.local wheezy_tcp@dns-test-service.dns-9659.svc.cluster.local jessie_udp@dns-test-service.dns-9659.svc.cluster.local jessie_tcp@dns-test-service.dns-9659.svc.cluster.local]

  I0510 13:42:36.612122 21 dns_common.go:495] Pod client logs for webserver: 
  I0510 13:42:36.615993 21 dns_common.go:495] Pod client logs for querier: 
  I0510 13:42:36.619954 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0510 13:42:41.563048 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-9659.svc.cluster.local from pod dns-9659/dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042: the server could not find the requested resource (get pods dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042)
  I0510 13:42:41.566007 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-9659.svc.cluster.local from pod dns-9659/dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042: the server could not find the requested resource (get pods dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042)
  I0510 13:42:41.585438 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-9659.svc.cluster.local from pod dns-9659/dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042: the server could not find the requested resource (get pods dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042)
  I0510 13:42:41.588265 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-9659.svc.cluster.local from pod dns-9659/dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042: the server could not find the requested resource (get pods dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042)
  I0510 13:42:41.604169 21 dns_common.go:489] Lookups using dns-9659/dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042 failed for: [wheezy_udp@dns-test-service.dns-9659.svc.cluster.local wheezy_tcp@dns-test-service.dns-9659.svc.cluster.local jessie_udp@dns-test-service.dns-9659.svc.cluster.local jessie_tcp@dns-test-service.dns-9659.svc.cluster.local]

  I0510 13:42:41.608430 21 dns_common.go:495] Pod client logs for webserver: 
  I0510 13:42:41.612572 21 dns_common.go:495] Pod client logs for querier: 
  I0510 13:42:41.616435 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0510 13:42:46.609503 21 dns_common.go:527] DNS probes using dns-9659/dns-test-ebd29b34-683a-4c01-bafb-e59dd3355042 succeeded

  STEP: deleting the pod @ 05/10/24 13:42:46.609
  STEP: deleting the test service @ 05/10/24 13:42:46.62
  STEP: deleting the test headless service @ 05/10/24 13:42:46.637
  I0510 13:42:46.644482 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9659" for this suite. @ 05/10/24 13:42:46.647
• [32.138 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 05/10/24 13:42:46.652
  I0510 13:42:46.652259 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/10/24 13:42:46.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:42:46.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:42:46.664
  I0510 13:42:46.666682 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 13:42:47.681988 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1260" for this suite. @ 05/10/24 13:42:47.684
• [1.036 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 05/10/24 13:42:47.688
  I0510 13:42:47.688767 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename var-expansion @ 05/10/24 13:42:47.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:42:47.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:42:47.7
  STEP: Creating a pod to test substitution in container's args @ 05/10/24 13:42:47.702
  STEP: Saw pod success @ 05/10/24 13:42:49.713
  I0510 13:42:49.715158 21 output.go:196] Trying to get logs from node worker-1 pod var-expansion-c9b446f4-d596-49ad-8d93-d4e93c536b1a container dapi-container: <nil>
  STEP: delete the pod @ 05/10/24 13:42:49.719
  I0510 13:42:49.730718 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2620" for this suite. @ 05/10/24 13:42:49.733
• [2.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 05/10/24 13:42:49.737
  I0510 13:42:49.737601 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename pods @ 05/10/24 13:42:49.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:42:49.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:42:49.751
  STEP: Saw pod success @ 05/10/24 13:42:53.807
  I0510 13:42:53.809187 21 output.go:196] Trying to get logs from node worker-1 pod client-envvars-b5345824-c2a9-40b9-b9c8-85c228e04eff container env3cont: <nil>
  STEP: delete the pod @ 05/10/24 13:42:53.814
  I0510 13:42:53.824993 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-861" for this suite. @ 05/10/24 13:42:53.827
• [4.095 seconds]
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 05/10/24 13:42:53.832
  I0510 13:42:53.832555 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename sched-preemption @ 05/10/24 13:42:53.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:42:53.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:42:53.844
  I0510 13:42:53.856962 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0510 13:43:53.860935 21 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 05/10/24 13:43:53.863
  I0510 13:43:53.863368 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename sched-preemption-path @ 05/10/24 13:43:53.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:43:53.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:43:53.877
  STEP: Finding an available node @ 05/10/24 13:43:53.88
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/10/24 13:43:53.88
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/10/24 13:43:55.892
  I0510 13:43:55.900798 21 preemption.go:583] found a healthy node: worker-1
  I0510 13:44:01.950417 21 preemption.go:706] pods created so far: [1 1 1]
  I0510 13:44:01.950452 21 preemption.go:707] length of pods created so far: 3
  I0510 13:44:03.958204 21 preemption.go:724] pods created so far: [2 2 1]
  I0510 13:44:11.014898 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-6937" for this suite. @ 05/10/24 13:44:11.017
  I0510 13:44:11.022562 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6283" for this suite. @ 05/10/24 13:44:11.024
• [77.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 05/10/24 13:44:11.031
  I0510 13:44:11.031217 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename conformance-tests @ 05/10/24 13:44:11.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:44:11.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:44:11.045
  STEP: Getting node addresses @ 05/10/24 13:44:11.048
  I0510 13:44:11.048353 21 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0510 13:44:11.053185 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-7927" for this suite. @ 05/10/24 13:44:11.055
• [0.030 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 05/10/24 13:44:11.061
  I0510 13:44:11.061169 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename subpath @ 05/10/24 13:44:11.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:44:11.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:44:11.076
  STEP: Setting up data @ 05/10/24 13:44:11.079
  STEP: Creating pod pod-subpath-test-downwardapi-78ss @ 05/10/24 13:44:11.086
  STEP: Creating a pod to test atomic-volume-subpath @ 05/10/24 13:44:11.086
  STEP: Saw pod success @ 05/10/24 13:44:35.137
  I0510 13:44:35.139742 21 output.go:196] Trying to get logs from node worker-0 pod pod-subpath-test-downwardapi-78ss container test-container-subpath-downwardapi-78ss: <nil>
  STEP: delete the pod @ 05/10/24 13:44:35.154
  STEP: Deleting pod pod-subpath-test-downwardapi-78ss @ 05/10/24 13:44:35.168
  I0510 13:44:35.168049 21 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-78ss" in namespace "subpath-6012"
  I0510 13:44:35.169858 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6012" for this suite. @ 05/10/24 13:44:35.172
• [24.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 05/10/24 13:44:35.176
  I0510 13:44:35.176959 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename events @ 05/10/24 13:44:35.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:44:35.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:44:35.191
  STEP: creating a test event @ 05/10/24 13:44:35.193
  STEP: listing events in all namespaces @ 05/10/24 13:44:35.196
  STEP: listing events in test namespace @ 05/10/24 13:44:35.2
  STEP: listing events with field selection filtering on source @ 05/10/24 13:44:35.202
  STEP: listing events with field selection filtering on reportingController @ 05/10/24 13:44:35.204
  STEP: getting the test event @ 05/10/24 13:44:35.206
  STEP: patching the test event @ 05/10/24 13:44:35.207
  STEP: getting the test event @ 05/10/24 13:44:35.213
  STEP: updating the test event @ 05/10/24 13:44:35.215
  STEP: getting the test event @ 05/10/24 13:44:35.218
  STEP: deleting the test event @ 05/10/24 13:44:35.22
  STEP: listing events in all namespaces @ 05/10/24 13:44:35.224
  STEP: listing events in test namespace @ 05/10/24 13:44:35.23
  I0510 13:44:35.231899 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9322" for this suite. @ 05/10/24 13:44:35.234
• [0.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 05/10/24 13:44:35.238
  I0510 13:44:35.238602 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 13:44:35.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:44:35.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:44:35.249
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 13:44:35.251
  STEP: Saw pod success @ 05/10/24 13:44:39.265
  I0510 13:44:39.267917 21 output.go:196] Trying to get logs from node worker-1 pod downwardapi-volume-df51da54-759f-4dd3-bc06-d2416575c460 container client-container: <nil>
  STEP: delete the pod @ 05/10/24 13:44:39.279
  I0510 13:44:39.289867 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7979" for this suite. @ 05/10/24 13:44:39.292
• [4.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 05/10/24 13:44:39.298
  I0510 13:44:39.298466 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/10/24 13:44:39.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:44:39.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:44:39.31
  I0510 13:44:39.312924 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 13:44:42.352862 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-5330" for this suite. @ 05/10/24 13:44:42.355
• [3.062 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 05/10/24 13:44:42.36
  I0510 13:44:42.360464 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename projected @ 05/10/24 13:44:42.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:44:42.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:44:42.374
  STEP: Creating configMap with name projected-configmap-test-volume-eb70b55f-515a-484b-af28-8fdbbe01efe8 @ 05/10/24 13:44:42.376
  STEP: Creating a pod to test consume configMaps @ 05/10/24 13:44:42.379
  STEP: Saw pod success @ 05/10/24 13:44:46.395
  I0510 13:44:46.397973 21 output.go:196] Trying to get logs from node worker-1 pod pod-projected-configmaps-fa180617-63e3-4a72-9d9d-85a156d50846 container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 13:44:46.403
  I0510 13:44:46.416091 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1656" for this suite. @ 05/10/24 13:44:46.418
• [4.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 05/10/24 13:44:46.423
  I0510 13:44:46.423108 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 13:44:46.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:44:46.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:44:46.435
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 05/10/24 13:44:46.437
  STEP: Saw pod success @ 05/10/24 13:44:50.453
  I0510 13:44:50.455680 21 output.go:196] Trying to get logs from node worker-1 pod pod-1f1c744a-b58a-4ad7-9687-aa32ee9567cc container test-container: <nil>
  STEP: delete the pod @ 05/10/24 13:44:50.46
  I0510 13:44:50.471013 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6447" for this suite. @ 05/10/24 13:44:50.473
• [4.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 05/10/24 13:44:50.48
  I0510 13:44:50.480718 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename projected @ 05/10/24 13:44:50.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:44:50.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:44:50.492
  STEP: Creating projection with secret that has name projected-secret-test-283b56a1-3da0-4523-bc98-865f561a42ed @ 05/10/24 13:44:50.495
  STEP: Creating a pod to test consume secrets @ 05/10/24 13:44:50.498
  STEP: Saw pod success @ 05/10/24 13:44:54.512
  I0510 13:44:54.515810 21 output.go:196] Trying to get logs from node worker-1 pod pod-projected-secrets-790c5bbd-6f11-40a0-836e-be41b0797695 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 13:44:54.521
  I0510 13:44:54.529021 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6823" for this suite. @ 05/10/24 13:44:54.531
• [4.056 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 05/10/24 13:44:54.537
  I0510 13:44:54.537150 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename webhook @ 05/10/24 13:44:54.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:44:54.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:44:54.548
  STEP: Setting up server cert @ 05/10/24 13:44:54.563
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 13:44:55.453
  STEP: Deploying the webhook pod @ 05/10/24 13:44:55.459
  STEP: Wait for the deployment to be ready @ 05/10/24 13:44:55.469
  I0510 13:44:55.475192 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 13:44:57.482
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 13:44:57.492
  I0510 13:44:58.493043 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0510 13:44:58.497287 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 05/10/24 13:44:59.005
  STEP: Creating a custom resource that should be denied by the webhook @ 05/10/24 13:44:59.022
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 05/10/24 13:45:01.042
  STEP: Updating the custom resource with disallowed data should be denied @ 05/10/24 13:45:01.048
  STEP: Deleting the custom resource should be denied @ 05/10/24 13:45:01.055
  STEP: Remove the offending key and value from the custom resource data @ 05/10/24 13:45:01.06
  STEP: Deleting the updated custom resource should be successful @ 05/10/24 13:45:01.069
  I0510 13:45:01.613097 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9519" for this suite. @ 05/10/24 13:45:01.615
  STEP: Destroying namespace "webhook-markers-1779" for this suite. @ 05/10/24 13:45:01.619
• [7.087 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 05/10/24 13:45:01.624
  I0510 13:45:01.624332 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename discovery @ 05/10/24 13:45:01.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:45:01.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:45:01.637
  STEP: Setting up server cert @ 05/10/24 13:45:01.641
  I0510 13:45:02.179107 21 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0510 13:45:02.180180 21 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0510 13:45:02.180212 21 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0510 13:45:02.180222 21 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0510 13:45:02.180231 21 discovery.go:139] Checking APIGroup: apps
  I0510 13:45:02.181126 21 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0510 13:45:02.181150 21 discovery.go:148] Versions found [{apps/v1 v1}]
  I0510 13:45:02.181160 21 discovery.go:154] apps/v1 matches apps/v1
  I0510 13:45:02.181169 21 discovery.go:139] Checking APIGroup: events.k8s.io
  I0510 13:45:02.182144 21 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0510 13:45:02.182177 21 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0510 13:45:02.182191 21 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0510 13:45:02.182208 21 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0510 13:45:02.183199 21 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0510 13:45:02.183223 21 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0510 13:45:02.183233 21 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0510 13:45:02.183243 21 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0510 13:45:02.184160 21 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0510 13:45:02.184185 21 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0510 13:45:02.184195 21 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0510 13:45:02.184204 21 discovery.go:139] Checking APIGroup: autoscaling
  I0510 13:45:02.185097 21 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0510 13:45:02.185120 21 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0510 13:45:02.185129 21 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0510 13:45:02.185141 21 discovery.go:139] Checking APIGroup: batch
  I0510 13:45:02.186140 21 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0510 13:45:02.186179 21 discovery.go:148] Versions found [{batch/v1 v1}]
  I0510 13:45:02.186191 21 discovery.go:154] batch/v1 matches batch/v1
  I0510 13:45:02.186204 21 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0510 13:45:02.187094 21 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0510 13:45:02.187119 21 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0510 13:45:02.187131 21 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0510 13:45:02.187146 21 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0510 13:45:02.196181 21 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0510 13:45:02.196233 21 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0510 13:45:02.196248 21 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0510 13:45:02.196270 21 discovery.go:139] Checking APIGroup: policy
  I0510 13:45:02.197704 21 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0510 13:45:02.197974 21 discovery.go:148] Versions found [{policy/v1 v1}]
  I0510 13:45:02.198187 21 discovery.go:154] policy/v1 matches policy/v1
  I0510 13:45:02.198465 21 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0510 13:45:02.199731 21 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0510 13:45:02.199758 21 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0510 13:45:02.199768 21 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0510 13:45:02.199777 21 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0510 13:45:02.200837 21 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0510 13:45:02.200867 21 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0510 13:45:02.200880 21 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0510 13:45:02.200892 21 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0510 13:45:02.201922 21 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0510 13:45:02.201949 21 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0510 13:45:02.201962 21 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0510 13:45:02.202026 21 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0510 13:45:02.203053 21 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0510 13:45:02.203081 21 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0510 13:45:02.203095 21 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0510 13:45:02.203108 21 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0510 13:45:02.203990 21 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0510 13:45:02.204014 21 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0510 13:45:02.204024 21 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0510 13:45:02.204037 21 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0510 13:45:02.204940 21 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0510 13:45:02.204969 21 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0510 13:45:02.204981 21 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0510 13:45:02.204994 21 discovery.go:139] Checking APIGroup: node.k8s.io
  I0510 13:45:02.205912 21 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0510 13:45:02.205947 21 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0510 13:45:02.205960 21 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0510 13:45:02.205974 21 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0510 13:45:02.206903 21 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0510 13:45:02.206928 21 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0510 13:45:02.206939 21 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0510 13:45:02.206952 21 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0510 13:45:02.207956 21 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0510 13:45:02.207982 21 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I0510 13:45:02.207995 21 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0510 13:45:02.208008 21 discovery.go:139] Checking APIGroup: etcd.k0sproject.io
  I0510 13:45:02.208873 21 discovery.go:147] PreferredVersion.GroupVersion: etcd.k0sproject.io/v1beta1
  I0510 13:45:02.208898 21 discovery.go:148] Versions found [{etcd.k0sproject.io/v1beta1 v1beta1}]
  I0510 13:45:02.208909 21 discovery.go:154] etcd.k0sproject.io/v1beta1 matches etcd.k0sproject.io/v1beta1
  I0510 13:45:02.208923 21 discovery.go:139] Checking APIGroup: helm.k0sproject.io
  I0510 13:45:02.209879 21 discovery.go:147] PreferredVersion.GroupVersion: helm.k0sproject.io/v1beta1
  I0510 13:45:02.209904 21 discovery.go:148] Versions found [{helm.k0sproject.io/v1beta1 v1beta1}]
  I0510 13:45:02.209916 21 discovery.go:154] helm.k0sproject.io/v1beta1 matches helm.k0sproject.io/v1beta1
  I0510 13:45:02.209929 21 discovery.go:139] Checking APIGroup: autopilot.k0sproject.io
  I0510 13:45:02.210769 21 discovery.go:147] PreferredVersion.GroupVersion: autopilot.k0sproject.io/v1beta2
  I0510 13:45:02.210793 21 discovery.go:148] Versions found [{autopilot.k0sproject.io/v1beta2 v1beta2}]
  I0510 13:45:02.210802 21 discovery.go:154] autopilot.k0sproject.io/v1beta2 matches autopilot.k0sproject.io/v1beta2
  I0510 13:45:02.210813 21 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0510 13:45:02.211748 21 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0510 13:45:02.211773 21 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0510 13:45:02.211786 21 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0510 13:45:02.211898 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-4516" for this suite. @ 05/10/24 13:45:02.214
• [0.594 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 05/10/24 13:45:02.219
  I0510 13:45:02.219087 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename replication-controller @ 05/10/24 13:45:02.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:45:02.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:45:02.232
  STEP: Given a ReplicationController is created @ 05/10/24 13:45:02.234
  STEP: When the matched label of one of its pods change @ 05/10/24 13:45:02.241
  I0510 13:45:02.243333 21 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  I0510 13:45:07.246399 21 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 05/10/24 13:45:07.254
  I0510 13:45:08.260287 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7932" for this suite. @ 05/10/24 13:45:08.262
• [6.049 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 05/10/24 13:45:08.268
  I0510 13:45:08.268952 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename webhook @ 05/10/24 13:45:08.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:45:08.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:45:08.28
  STEP: Setting up server cert @ 05/10/24 13:45:08.295
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 13:45:08.954
  STEP: Deploying the webhook pod @ 05/10/24 13:45:08.958
  STEP: Wait for the deployment to be ready @ 05/10/24 13:45:08.966
  I0510 13:45:08.971986 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 13:45:10.978
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 13:45:10.989
  I0510 13:45:11.990887 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 05/10/24 13:45:11.996
  STEP: create a pod that should be denied by the webhook @ 05/10/24 13:45:12.011
  STEP: create a pod that causes the webhook to hang @ 05/10/24 13:45:12.025
  STEP: create a configmap that should be denied by the webhook @ 05/10/24 13:45:22.031
  STEP: create a configmap that should be admitted by the webhook @ 05/10/24 13:45:22.055
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 05/10/24 13:45:22.065
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 05/10/24 13:45:22.071
  STEP: create a namespace that bypass the webhook @ 05/10/24 13:45:22.075
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 05/10/24 13:45:22.085
  I0510 13:45:22.125393 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9401" for this suite. @ 05/10/24 13:45:22.128
  STEP: Destroying namespace "webhook-markers-2638" for this suite. @ 05/10/24 13:45:22.132
  STEP: Destroying namespace "exempted-namespace-604" for this suite. @ 05/10/24 13:45:22.136
• [13.873 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 05/10/24 13:45:22.141
  I0510 13:45:22.141638 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/10/24 13:45:22.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:45:22.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:45:22.153
  I0510 13:45:22.157053 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/10/24 13:45:23.408
  I0510 13:45:23.408332 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=crd-publish-openapi-7994 --namespace=crd-publish-openapi-7994 create -f -'
  I0510 13:45:25.495265 21 builder.go:146] stderr: ""
  I0510 13:45:25.495317 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1473-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0510 13:45:25.495380 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=crd-publish-openapi-7994 --namespace=crd-publish-openapi-7994 delete e2e-test-crd-publish-openapi-1473-crds test-cr'
  I0510 13:45:25.556284 21 builder.go:146] stderr: ""
  I0510 13:45:25.556348 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1473-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0510 13:45:25.556441 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=crd-publish-openapi-7994 --namespace=crd-publish-openapi-7994 apply -f -'
  I0510 13:45:25.621452 21 builder.go:146] stderr: ""
  I0510 13:45:25.621502 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1473-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0510 13:45:25.621788 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=crd-publish-openapi-7994 --namespace=crd-publish-openapi-7994 delete e2e-test-crd-publish-openapi-1473-crds test-cr'
  I0510 13:45:25.684786 21 builder.go:146] stderr: ""
  I0510 13:45:25.684866 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1473-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 05/10/24 13:45:25.684
  I0510 13:45:25.684957 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=crd-publish-openapi-7994 explain e2e-test-crd-publish-openapi-1473-crds'
  I0510 13:45:25.743592 21 builder.go:146] stderr: ""
  I0510 13:45:25.743705 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-1473-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0510 13:45:27.027503 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7994" for this suite. @ 05/10/24 13:45:27.034
• [4.896 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 05/10/24 13:45:27.039
  I0510 13:45:27.039056 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename containers @ 05/10/24 13:45:27.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:45:27.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:45:27.05
  STEP: Creating a pod to test override all @ 05/10/24 13:45:27.053
  STEP: Saw pod success @ 05/10/24 13:45:29.063
  I0510 13:45:29.065083 21 output.go:196] Trying to get logs from node worker-1 pod client-containers-139fd5b0-f23e-4da8-bf10-1024c17d3194 container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 13:45:29.069
  I0510 13:45:29.081054 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2156" for this suite. @ 05/10/24 13:45:29.083
• [2.048 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 05/10/24 13:45:29.087
  I0510 13:45:29.087622 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename aggregator @ 05/10/24 13:45:29.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:45:29.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:45:29.099
  I0510 13:45:29.101813 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Registering the sample API server. @ 05/10/24 13:45:29.102
  I0510 13:45:29.560930 21 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0510 13:45:29.580589 21 deployment.go:222] deployment "sample-apiserver-deployment" doesn't have the required revision set
  I0510 13:45:31.612011 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0510 13:45:33.615447 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0510 13:45:35.615508 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0510 13:45:37.614673 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0510 13:45:39.616146 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0510 13:45:41.615569 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0510 13:45:43.616110 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0510 13:45:45.616639 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0510 13:45:47.615188 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0510 13:45:49.616434 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0510 13:45:51.614669 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0510 13:45:53.614651 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 13, 45, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0510 13:45:55.730955 21 aggregator.go:749] Waited 111.057685ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 05/10/24 13:45:55.768
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 05/10/24 13:45:55.77
  STEP: List APIServices @ 05/10/24 13:45:55.776
  I0510 13:45:55.781841 21 aggregator.go:550] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 05/10/24 13:45:55.781
  I0510 13:45:55.791503 21 aggregator.go:575] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 05/10/24 13:45:55.791
  I0510 13:45:55.798196 21 aggregator.go:601] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.May, 10, 13, 45, 55, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 05/10/24 13:45:55.798
  I0510 13:45:55.802525 21 aggregator.go:619] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-05-10 13:45:55 +0000 UTC Passed all checks passed}
  I0510 13:45:55.802560 21 aggregator.go:615] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0510 13:45:55.802581 21 aggregator.go:625] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 05/10/24 13:45:55.802
  I0510 13:45:55.810765 21 aggregator.go:641] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-606425667" @ 05/10/24 13:45:55.81
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 05/10/24 13:45:55.821
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 05/10/24 13:45:55.829
  STEP: Patch APIService Status @ 05/10/24 13:45:55.831
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 05/10/24 13:45:55.836
  I0510 13:45:55.838565 21 aggregator.go:719] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-05-10 13:45:55 +0000 UTC Passed all checks passed}
  I0510 13:45:55.838605 21 aggregator.go:719] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0510 13:45:55.838629 21 aggregator.go:715] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0510 13:45:55.838648 21 aggregator.go:725] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 05/10/24 13:45:55.838
  STEP: Confirm that the generated APIService has been deleted @ 05/10/24 13:45:55.844
  I0510 13:45:55.844935 21 aggregator.go:786] Requesting list of APIServices to confirm quantity
  I0510 13:45:55.851691 21 aggregator.go:796] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0510 13:45:55.851717 21 aggregator.go:738] APIService v1alpha1.wardle.example.com has been deleted.
  I0510 13:45:55.917943 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-2071" for this suite. @ 05/10/24 13:45:55.92
• [26.837 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 05/10/24 13:45:55.925
  I0510 13:45:55.925535 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 13:45:55.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:45:55.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:45:55.938
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 13:45:55.941
  STEP: Saw pod success @ 05/10/24 13:46:01.96
  I0510 13:46:01.962405 21 output.go:196] Trying to get logs from node worker-1 pod downwardapi-volume-4f08a8ae-a277-49af-a0fd-fc1128ee8173 container client-container: <nil>
  STEP: delete the pod @ 05/10/24 13:46:01.967
  I0510 13:46:01.977586 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-671" for this suite. @ 05/10/24 13:46:01.98
• [6.059 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 05/10/24 13:46:01.984
  I0510 13:46:01.984910 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename containers @ 05/10/24 13:46:01.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:46:01.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:46:01.998
  STEP: Creating a pod to test override arguments @ 05/10/24 13:46:02.001
  STEP: Saw pod success @ 05/10/24 13:46:06.018
  I0510 13:46:06.020424 21 output.go:196] Trying to get logs from node worker-1 pod client-containers-bb62d7fb-da0d-4e1b-b097-e6fcbd350109 container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 13:46:06.025
  I0510 13:46:06.037846 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-707" for this suite. @ 05/10/24 13:46:06.04
• [4.062 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:348
  STEP: Creating a kubernetes client @ 05/10/24 13:46:06.047
  I0510 13:46:06.047588 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename disruption @ 05/10/24 13:46:06.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:46:06.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:46:06.059
  STEP: Creating a pdb that targets all three pods in a test replica set @ 05/10/24 13:46:06.062
  STEP: Waiting for the pdb to be processed @ 05/10/24 13:46:06.065
  STEP: First trying to evict a pod which shouldn't be evictable @ 05/10/24 13:46:08.072
  STEP: Waiting for all pods to be running @ 05/10/24 13:46:08.072
  I0510 13:46:08.074748 21 disruption.go:567] pods: 0 < 3
  STEP: locating a running pod @ 05/10/24 13:46:10.076
  STEP: Updating the pdb to allow a pod to be evicted @ 05/10/24 13:46:10.082
  STEP: Waiting for the pdb to be processed @ 05/10/24 13:46:10.087
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 05/10/24 13:46:12.09
  STEP: Waiting for all pods to be running @ 05/10/24 13:46:12.09
  STEP: Waiting for the pdb to observed all healthy pods @ 05/10/24 13:46:12.092
  STEP: Patching the pdb to disallow a pod to be evicted @ 05/10/24 13:46:12.108
  STEP: Waiting for the pdb to be processed @ 05/10/24 13:46:12.122
  STEP: Waiting for all pods to be running @ 05/10/24 13:46:14.125
  STEP: locating a running pod @ 05/10/24 13:46:14.128
  STEP: Deleting the pdb to allow a pod to be evicted @ 05/10/24 13:46:14.133
  STEP: Waiting for the pdb to be deleted @ 05/10/24 13:46:14.137
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 05/10/24 13:46:14.139
  STEP: Waiting for all pods to be running @ 05/10/24 13:46:14.139
  I0510 13:46:14.150682 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9649" for this suite. @ 05/10/24 13:46:14.153
• [8.115 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 05/10/24 13:46:14.163
  I0510 13:46:14.163109 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename svcaccounts @ 05/10/24 13:46:14.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:46:14.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:46:14.176
  STEP: Creating ServiceAccount "e2e-sa-tfq9f"  @ 05/10/24 13:46:14.179
  I0510 13:46:14.182011 21 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-tfq9f"  @ 05/10/24 13:46:14.182
  I0510 13:46:14.186835 21 service_accounts.go:839] AutomountServiceAccountToken: true
  I0510 13:46:14.187092 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8220" for this suite. @ 05/10/24 13:46:14.189
• [0.031 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 05/10/24 13:46:14.194
  I0510 13:46:14.194334 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename container-probe @ 05/10/24 13:46:14.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:46:14.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:46:14.205
  STEP: Creating pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518 @ 05/10/24 13:46:14.207
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/10/24 13:46:16.219
  I0510 13:46:16.221262 21 container_probe.go:1749] Initial restart count of pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad is 0
  I0510 13:46:16.223147 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:46:18.225843 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:46:20.229680 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:46:22.232730 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:46:24.235239 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:46:26.239031 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:46:28.242797 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:46:30.246717 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:46:32.249516 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:46:34.252151 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:46:36.255529 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:46:36.255570 21 container_probe.go:1763] Restart count of pod container-probe-518/liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad is now 1 (20.034272119s elapsed)
  I0510 13:46:38.259185 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:46:40.262937 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:46:42.265656 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:46:44.269430 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:46:46.273223 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:46:48.276702 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:46:50.279691 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:46:52.282436 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:46:54.286116 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:46:56.289635 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:46:56.289681 21 container_probe.go:1763] Restart count of pod container-probe-518/liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad is now 2 (40.068381851s elapsed)
  I0510 13:46:58.293120 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:47:00.296869 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:47:02.300575 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:47:04.303624 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:47:06.306528 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:47:08.309008 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:47:10.311933 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:47:12.315650 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:47:14.319439 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:47:16.323273 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:47:16.323319 21 container_probe.go:1763] Restart count of pod container-probe-518/liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad is now 3 (1m0.102020079s elapsed)
  I0510 13:47:18.326489 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:47:20.329755 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:47:22.332481 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:47:24.335229 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:47:26.339089 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:47:28.342790 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:47:30.346975 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:47:32.350579 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:47:34.354382 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:47:36.357538 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:47:36.357583 21 container_probe.go:1763] Restart count of pod container-probe-518/liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad is now 4 (1m20.136281553s elapsed)
  I0510 13:47:38.360867 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:47:40.364573 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:47:42.368140 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:47:44.371824 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:47:46.374632 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:47:48.376979 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:47:50.380884 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:47:52.384186 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:47:54.387679 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:47:56.391336 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:47:58.394669 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:48:00.398646 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:48:02.401249 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:48:04.404924 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:48:06.408545 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:48:08.411884 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:48:10.415734 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:48:12.418376 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:48:14.421430 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:48:16.425032 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:48:18.428055 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:48:20.432004 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:48:22.435045 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:48:24.438157 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:48:26.441878 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:48:28.445313 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:48:30.449484 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:48:32.452840 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:48:34.456363 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:48:36.459142 21 container_probe.go:1759] Get pod liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad in namespace container-probe-518
  I0510 13:48:36.459182 21 container_probe.go:1763] Restart count of pod container-probe-518/liveness-57964d21-4be3-4a3e-b8c1-3faf3487bdad is now 5 (2m20.237883005s elapsed)
  STEP: deleting the pod @ 05/10/24 13:48:36.459
  I0510 13:48:36.468176 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-518" for this suite. @ 05/10/24 13:48:36.47
• [142.280 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 05/10/24 13:48:36.475
  I0510 13:48:36.475037 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename field-validation @ 05/10/24 13:48:36.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:48:36.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:48:36.486
  STEP: apply creating a deployment @ 05/10/24 13:48:36.488
  I0510 13:48:36.498795 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4520" for this suite. @ 05/10/24 13:48:36.501
• [0.030 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 05/10/24 13:48:36.504
  I0510 13:48:36.504821 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename gc @ 05/10/24 13:48:36.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:48:36.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:48:36.515
  I0510 13:48:36.544912 21 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"ac3f5f5b-513b-435c-951b-db97264b1783", Controller:(*bool)(0xc00460c3ca), BlockOwnerDeletion:(*bool)(0xc00460c3cb)}}
  I0510 13:48:36.557063 21 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"5a659206-e110-407f-9961-023e7f69984f", Controller:(*bool)(0xc002e792ae), BlockOwnerDeletion:(*bool)(0xc002e792af)}}
  I0510 13:48:36.565622 21 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"8d304a1b-9087-47c7-9e00-f0e91f1ecb86", Controller:(*bool)(0xc00362a286), BlockOwnerDeletion:(*bool)(0xc00362a287)}}
  I0510 13:48:41.575065 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7651" for this suite. @ 05/10/24 13:48:41.578
• [5.079 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 05/10/24 13:48:41.583
  I0510 13:48:41.583568 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename container-probe @ 05/10/24 13:48:41.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:48:41.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:48:41.598
  I0510 13:49:03.648636 21 container_probe.go:92] Container started at 2024-05-10 13:48:42 +0000 UTC, pod became ready at 2024-05-10 13:49:01 +0000 UTC
  I0510 13:49:03.648753 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2575" for this suite. @ 05/10/24 13:49:03.651
• [22.072 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 05/10/24 13:49:03.655
  I0510 13:49:03.655772 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename field-validation @ 05/10/24 13:49:03.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:49:03.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:49:03.67
  STEP: apply creating a deployment @ 05/10/24 13:49:03.673
  I0510 13:49:03.681731 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3072" for this suite. @ 05/10/24 13:49:03.683
• [0.034 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 05/10/24 13:49:03.689
  I0510 13:49:03.689746 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename deployment @ 05/10/24 13:49:03.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:49:03.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:49:03.7
  STEP: creating a Deployment @ 05/10/24 13:49:03.705
  I0510 13:49:03.705249 21 deployment.go:507] Creating simple deployment test-deployment-z86lk
  I0510 13:49:03.714356 21 deployment.go:222] deployment "test-deployment-z86lk" doesn't have the required revision set
  STEP: Getting /status @ 05/10/24 13:49:05.722
  I0510 13:49:05.724988 21 deployment.go:532] Deployment test-deployment-z86lk has Conditions: [{Available True 2024-05-10 13:49:04 +0000 UTC 2024-05-10 13:49:04 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-05-10 13:49:04 +0000 UTC 2024-05-10 13:49:03 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-z86lk-c8586b885" has successfully progressed.}]
  STEP: updating Deployment Status @ 05/10/24 13:49:05.725
  I0510 13:49:05.730741 21 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 13, 49, 4, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 13, 49, 4, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 13, 49, 4, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 13, 49, 3, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-z86lk-c8586b885\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 05/10/24 13:49:05.73
  I0510 13:49:05.732483 21 deployment.go:579] Observed &Deployment event: ADDED
  I0510 13:49:05.732530 21 deployment.go:575] Observed Deployment test-deployment-z86lk in namespace deployment-661 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-10 13:49:03 +0000 UTC 2024-05-10 13:49:03 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-z86lk-c8586b885"}
  I0510 13:49:05.732655 21 deployment.go:579] Observed &Deployment event: MODIFIED
  I0510 13:49:05.732707 21 deployment.go:575] Observed Deployment test-deployment-z86lk in namespace deployment-661 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-10 13:49:03 +0000 UTC 2024-05-10 13:49:03 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-z86lk-c8586b885"}
  I0510 13:49:05.732743 21 deployment.go:575] Observed Deployment test-deployment-z86lk in namespace deployment-661 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-10 13:49:03 +0000 UTC 2024-05-10 13:49:03 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0510 13:49:05.732929 21 deployment.go:579] Observed &Deployment event: MODIFIED
  I0510 13:49:05.732999 21 deployment.go:575] Observed Deployment test-deployment-z86lk in namespace deployment-661 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-10 13:49:03 +0000 UTC 2024-05-10 13:49:03 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0510 13:49:05.733028 21 deployment.go:575] Observed Deployment test-deployment-z86lk in namespace deployment-661 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-10 13:49:03 +0000 UTC 2024-05-10 13:49:03 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-z86lk-c8586b885" is progressing.}
  I0510 13:49:05.733192 21 deployment.go:579] Observed &Deployment event: MODIFIED
  I0510 13:49:05.733227 21 deployment.go:575] Observed Deployment test-deployment-z86lk in namespace deployment-661 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-10 13:49:04 +0000 UTC 2024-05-10 13:49:04 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0510 13:49:05.733248 21 deployment.go:575] Observed Deployment test-deployment-z86lk in namespace deployment-661 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-10 13:49:04 +0000 UTC 2024-05-10 13:49:03 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-z86lk-c8586b885" has successfully progressed.}
  I0510 13:49:05.733374 21 deployment.go:579] Observed &Deployment event: MODIFIED
  I0510 13:49:05.733429 21 deployment.go:575] Observed Deployment test-deployment-z86lk in namespace deployment-661 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-10 13:49:04 +0000 UTC 2024-05-10 13:49:04 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0510 13:49:05.733459 21 deployment.go:575] Observed Deployment test-deployment-z86lk in namespace deployment-661 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-10 13:49:04 +0000 UTC 2024-05-10 13:49:03 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-z86lk-c8586b885" has successfully progressed.}
  I0510 13:49:05.733481 21 deployment.go:572] Found Deployment test-deployment-z86lk in namespace deployment-661 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0510 13:49:05.733498 21 deployment.go:583] Deployment test-deployment-z86lk has an updated status
  STEP: patching the Statefulset Status @ 05/10/24 13:49:05.733
  I0510 13:49:05.733747 21 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0510 13:49:05.739756 21 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 05/10/24 13:49:05.739
  I0510 13:49:05.741622 21 deployment.go:616] Observed &Deployment event: ADDED
  I0510 13:49:05.741664 21 deployment.go:612] Observed deployment test-deployment-z86lk in namespace deployment-661 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-10 13:49:03 +0000 UTC 2024-05-10 13:49:03 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-z86lk-c8586b885"}
  I0510 13:49:05.741792 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0510 13:49:05.741830 21 deployment.go:612] Observed deployment test-deployment-z86lk in namespace deployment-661 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-10 13:49:03 +0000 UTC 2024-05-10 13:49:03 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-z86lk-c8586b885"}
  I0510 13:49:05.741850 21 deployment.go:612] Observed deployment test-deployment-z86lk in namespace deployment-661 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-10 13:49:03 +0000 UTC 2024-05-10 13:49:03 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0510 13:49:05.741996 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0510 13:49:05.742028 21 deployment.go:612] Observed deployment test-deployment-z86lk in namespace deployment-661 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-10 13:49:03 +0000 UTC 2024-05-10 13:49:03 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0510 13:49:05.742047 21 deployment.go:612] Observed deployment test-deployment-z86lk in namespace deployment-661 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-10 13:49:03 +0000 UTC 2024-05-10 13:49:03 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-z86lk-c8586b885" is progressing.}
  I0510 13:49:05.742245 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0510 13:49:05.742285 21 deployment.go:612] Observed deployment test-deployment-z86lk in namespace deployment-661 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-10 13:49:04 +0000 UTC 2024-05-10 13:49:04 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0510 13:49:05.742306 21 deployment.go:612] Observed deployment test-deployment-z86lk in namespace deployment-661 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-10 13:49:04 +0000 UTC 2024-05-10 13:49:03 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-z86lk-c8586b885" has successfully progressed.}
  I0510 13:49:05.742439 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0510 13:49:05.742469 21 deployment.go:612] Observed deployment test-deployment-z86lk in namespace deployment-661 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-10 13:49:04 +0000 UTC 2024-05-10 13:49:04 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0510 13:49:05.742488 21 deployment.go:612] Observed deployment test-deployment-z86lk in namespace deployment-661 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-10 13:49:04 +0000 UTC 2024-05-10 13:49:03 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-z86lk-c8586b885" has successfully progressed.}
  I0510 13:49:05.742507 21 deployment.go:612] Observed deployment test-deployment-z86lk in namespace deployment-661 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0510 13:49:05.742637 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0510 13:49:05.742672 21 deployment.go:609] Found deployment test-deployment-z86lk in namespace deployment-661 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0510 13:49:05.742691 21 deployment.go:620] Deployment test-deployment-z86lk has a patched status
  I0510 13:49:05.745128 21 deployment.go:633] Deployment "test-deployment-z86lk":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-z86lk",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-661",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ee3dbdcc-2ab0-4551-8c48-b51f52246ab8",
      ResourceVersion: (string) (len=5) "12848",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850945743,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850945743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850945745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850945745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850945745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850945745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=55) "Found new replica set \"test-deployment-z86lk-c8586b885\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0510 13:49:05.749080 21 deployment.go:39] New ReplicaSet "test-deployment-z86lk-c8586b885" of Deployment "test-deployment-z86lk":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-z86lk-c8586b885",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-661",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b4ac661d-c475-42bc-8864-da4557cd263e",
      ResourceVersion: (string) (len=5) "12840",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850945743,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-z86lk",
          UID: (types.UID) (len=36) "ee3dbdcc-2ab0-4551-8c48-b51f52246ab8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850945743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 65 65 33  |k:{\"uid\":\"ee3|
              00000120  64 62 64 63 63 2d 32 61  62 30 2d 34 35 35 31 2d  |dbdcc-2ab0-4551-|
              00000130  38 63 34 38 2d 62 35 31  66 35 32 32 34 36 61 62  |8c48-b51f52246ab|
              00000140  38 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |8\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850945744,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0510 13:49:05.753834 21 deployment.go:67] Pod "test-deployment-z86lk-c8586b885-ng6fw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-z86lk-c8586b885-ng6fw",
      GenerateName: (string) (len=32) "test-deployment-z86lk-c8586b885-",
      Namespace: (string) (len=14) "deployment-661",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "33b2cc1a-8d13-4903-ab86-9e10391b998c",
      ResourceVersion: (string) (len=5) "12839",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850945743,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885",
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-z86lk-c8586b885",
          UID: (types.UID) (len=36) "b4ac661d-c475-42bc-8864-da4557cd263e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850945743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 62 34 61 63 36 36 31  64 2d 63 34 37 35 2d 34  |"b4ac661d-c475-4|
              000000a0  32 62 63 2d 38 38 36 34  2d 64 61 34 35 35 37 63  |2bc-8864-da4557c|
              000000b0  64 32 36 33 65 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |d263e\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850945744,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  35 34 5c 22 7d 22 3a 7b  |.244.1.154\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-km7nq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-km7nq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850945744,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850945743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850945744,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850945744,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850945743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.48.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.48.105"
        }
      },
      PodIP: (string) (len=12) "10.244.1.154",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.154"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850945743,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850945744,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://746dc2294f806f402224efb66e9cd2a0ab09f93968b27037857f1de9ed437ed9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0510 13:49:05.756321 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-661" for this suite. @ 05/10/24 13:49:05.758
• [2.072 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 05/10/24 13:49:05.762
  I0510 13:49:05.762448 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename namespaces @ 05/10/24 13:49:05.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:49:05.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:49:05.774
  STEP: Creating a test namespace @ 05/10/24 13:49:05.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:49:05.785
  STEP: Creating a pod in the namespace @ 05/10/24 13:49:05.787
  STEP: Waiting for the pod to have running status @ 05/10/24 13:49:05.792
  STEP: Deleting the namespace @ 05/10/24 13:49:07.797
  STEP: Waiting for the namespace to be removed. @ 05/10/24 13:49:07.801
  STEP: Recreating the namespace @ 05/10/24 13:49:18.804
  STEP: Verifying there are no pods in the namespace @ 05/10/24 13:49:18.815
  I0510 13:49:18.817574 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9834" for this suite. @ 05/10/24 13:49:18.82
  STEP: Destroying namespace "nsdeletetest-836" for this suite. @ 05/10/24 13:49:18.824
  I0510 13:49:18.826718 21 framework.go:370] Namespace nsdeletetest-836 was already deleted
  STEP: Destroying namespace "nsdeletetest-7206" for this suite. @ 05/10/24 13:49:18.826
• [13.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 05/10/24 13:49:18.83
  I0510 13:49:18.830891 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename events @ 05/10/24 13:49:18.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:49:18.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:49:18.851
  STEP: Create set of events @ 05/10/24 13:49:18.854
  I0510 13:49:18.858053 21 core_events.go:198] created test-event-1
  I0510 13:49:18.861564 21 core_events.go:198] created test-event-2
  I0510 13:49:18.865054 21 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 05/10/24 13:49:18.865
  STEP: delete collection of events @ 05/10/24 13:49:18.867
  I0510 13:49:18.867442 21 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 05/10/24 13:49:18.878
  I0510 13:49:18.878172 21 core_events.go:230] requesting list of events to confirm quantity
  I0510 13:49:18.880257 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8753" for this suite. @ 05/10/24 13:49:18.882
• [0.058 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 05/10/24 13:49:18.888
  I0510 13:49:18.888825 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename pods @ 05/10/24 13:49:18.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:49:18.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:49:18.9
  STEP: Create a pod @ 05/10/24 13:49:18.902
  STEP: patching /status @ 05/10/24 13:49:20.915
  I0510 13:49:20.922045 21 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0510 13:49:20.922393 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2804" for this suite. @ 05/10/24 13:49:20.924
• [2.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 05/10/24 13:49:20.928
  I0510 13:49:20.929012 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename taint-multiple-pods @ 05/10/24 13:49:20.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:49:20.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:49:20.941
  I0510 13:49:20.944205 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0510 13:50:20.945962 21 util.go:400] Waiting for terminating namespaces to be deleted...
  I0510 13:50:20.948560 21 taints.go:150] Starting informer...
  STEP: Starting pods... @ 05/10/24 13:50:20.948
  I0510 13:50:21.163301 21 taints.go:469] Pod1 is running on worker-1. Tainting Node
  I0510 13:50:23.378206 21 taints.go:477] Pod2 is running on worker-1. Tainting Node
  STEP: Trying to apply a taint on the Node @ 05/10/24 13:50:23.378
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/10/24 13:50:23.387
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 05/10/24 13:50:23.39
  I0510 13:50:29.527500 21 taints.go:498] Noticed Pod "taint-eviction-b1" gets evicted.
  I0510 13:50:49.566119 21 taints.go:498] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/10/24 13:50:49.575
  I0510 13:50:49.578928 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-3182" for this suite. @ 05/10/24 13:50:49.581
• [88.657 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 05/10/24 13:50:49.586
  I0510 13:50:49.586643 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename secrets @ 05/10/24 13:50:49.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:50:49.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:50:49.608
  STEP: Creating secret with name secret-test-26f04d43-a0ef-497b-9c34-72fb5889be2f @ 05/10/24 13:50:49.611
  STEP: Creating a pod to test consume secrets @ 05/10/24 13:50:49.615
  STEP: Saw pod success @ 05/10/24 13:50:53.628
  I0510 13:50:53.630803 21 output.go:196] Trying to get logs from node worker-1 pod pod-secrets-47f79f25-066f-45c7-8aba-f173d0cff031 container secret-env-test: <nil>
  STEP: delete the pod @ 05/10/24 13:50:53.644
  I0510 13:50:53.656338 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-76" for this suite. @ 05/10/24 13:50:53.658
• [4.076 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 05/10/24 13:50:53.663
  I0510 13:50:53.663293 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename configmap @ 05/10/24 13:50:53.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:50:53.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:50:53.675
  I0510 13:50:53.701956 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6203" for this suite. @ 05/10/24 13:50:53.704
• [0.045 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1048
  STEP: Creating a kubernetes client @ 05/10/24 13:50:53.708
  I0510 13:50:53.708190 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 13:50:53.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:50:53.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:50:53.72
  STEP: create deployment with httpd image @ 05/10/24 13:50:53.722
  I0510 13:50:53.722656 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-3174 create -f -'
  I0510 13:50:53.819978 21 builder.go:146] stderr: ""
  I0510 13:50:53.820026 21 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 05/10/24 13:50:53.82
  I0510 13:50:53.820132 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-3174 diff -f -'
  I0510 13:50:53.932514 21 builder.go:135] rc: 1
  I0510 13:50:53.932607 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-3174 delete -f -'
  I0510 13:50:53.991178 21 builder.go:146] stderr: ""
  I0510 13:50:53.991229 21 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0510 13:50:53.991470 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3174" for this suite. @ 05/10/24 13:50:53.994
• [0.290 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 05/10/24 13:50:53.998
  I0510 13:50:53.998051 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename sched-preemption @ 05/10/24 13:50:53.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:50:54.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:50:54.011
  I0510 13:50:54.023001 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0510 13:51:54.027342 21 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 05/10/24 13:51:54.029
  I0510 13:51:54.043476 21 preemption.go:269] Created pod: pod0-0-sched-preemption-low-priority
  I0510 13:51:54.049691 21 preemption.go:269] Created pod: pod0-1-sched-preemption-medium-priority
  I0510 13:51:54.064091 21 preemption.go:269] Created pod: pod1-0-sched-preemption-medium-priority
  I0510 13:51:54.070137 21 preemption.go:269] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 05/10/24 13:51:54.07
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 05/10/24 13:51:56.082
  I0510 13:52:00.138005 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7382" for this suite. @ 05/10/24 13:52:00.14
• [66.147 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 05/10/24 13:52:00.146
  I0510 13:52:00.146331 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename webhook @ 05/10/24 13:52:00.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:52:00.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:52:00.16
  STEP: Setting up server cert @ 05/10/24 13:52:00.175
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 13:52:00.482
  STEP: Deploying the webhook pod @ 05/10/24 13:52:00.486
  STEP: Wait for the deployment to be ready @ 05/10/24 13:52:00.494
  I0510 13:52:00.499050 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 13:52:02.506
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 13:52:02.515
  I0510 13:52:03.516007 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0510 13:52:03.520640 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2618-crds.webhook.example.com via the AdmissionRegistration API @ 05/10/24 13:52:04.03
  STEP: Creating a custom resource that should be mutated by the webhook @ 05/10/24 13:52:04.046
  I0510 13:52:06.614629 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7989" for this suite. @ 05/10/24 13:52:06.617
  STEP: Destroying namespace "webhook-markers-3558" for this suite. @ 05/10/24 13:52:06.622
• [6.481 seconds]
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 05/10/24 13:52:06.626
  I0510 13:52:06.626951 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/10/24 13:52:06.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:52:06.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:52:06.639
  I0510 13:52:06.653643 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-9973" for this suite. @ 05/10/24 13:52:06.656
• [0.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 05/10/24 13:52:06.66
  I0510 13:52:06.660890 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename webhook @ 05/10/24 13:52:06.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:52:06.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:52:06.672
  STEP: Setting up server cert @ 05/10/24 13:52:06.687
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 13:52:07.028
  STEP: Deploying the webhook pod @ 05/10/24 13:52:07.031
  STEP: Wait for the deployment to be ready @ 05/10/24 13:52:07.041
  I0510 13:52:07.047330 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 13:52:09.054
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 13:52:09.064
  I0510 13:52:10.064484 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 05/10/24 13:52:10.069
  STEP: create a configmap that should be updated by the webhook @ 05/10/24 13:52:10.086
  I0510 13:52:10.134387 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9374" for this suite. @ 05/10/24 13:52:10.137
  STEP: Destroying namespace "webhook-markers-8025" for this suite. @ 05/10/24 13:52:10.141
• [3.484 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 05/10/24 13:52:10.145
  I0510 13:52:10.145350 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/10/24 13:52:10.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:52:10.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:52:10.157
  I0510 13:52:10.164724 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-5698" for this suite. @ 05/10/24 13:52:10.167
• [0.026 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 05/10/24 13:52:10.172
  I0510 13:52:10.172495 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename projected @ 05/10/24 13:52:10.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:52:10.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:52:10.185
  STEP: Creating configMap with name projected-configmap-test-volume-2e37da2e-5c20-49dc-99a0-43b83f53e41a @ 05/10/24 13:52:10.188
  STEP: Creating a pod to test consume configMaps @ 05/10/24 13:52:10.19
  STEP: Saw pod success @ 05/10/24 13:52:14.232
  I0510 13:52:14.234893 21 output.go:196] Trying to get logs from node worker-1 pod pod-projected-configmaps-8c6c4fbb-7768-4cf9-99df-eb7988ca2c1e container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 13:52:14.24
  I0510 13:52:14.250212 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8862" for this suite. @ 05/10/24 13:52:14.252
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 05/10/24 13:52:14.257
  I0510 13:52:14.257335 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename projected @ 05/10/24 13:52:14.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:52:14.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:52:14.269
  STEP: Creating the pod @ 05/10/24 13:52:14.272
  I0510 13:52:16.799179 21 pod_client.go:141] Successfully updated pod "annotationupdate0e4c4a48-bba0-4e46-9968-0431c1048016"
  I0510 13:52:18.811413 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5270" for this suite. @ 05/10/24 13:52:18.814
• [4.561 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:850
  STEP: Creating a kubernetes client @ 05/10/24 13:52:18.818
  I0510 13:52:18.818440 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename services @ 05/10/24 13:52:18.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:52:18.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:52:18.829
  STEP: creating service multi-endpoint-test in namespace services-9129 @ 05/10/24 13:52:18.832
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9129 to expose endpoints map[] @ 05/10/24 13:52:18.84
  I0510 13:52:18.843035 21 service.go:4226] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  I0510 13:52:19.848587 21 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-9129 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-9129 @ 05/10/24 13:52:19.848
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9129 to expose endpoints map[pod1:[100]] @ 05/10/24 13:52:21.862
  I0510 13:52:21.869397 21 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-9129 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-9129 @ 05/10/24 13:52:21.869
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9129 to expose endpoints map[pod1:[100] pod2:[101]] @ 05/10/24 13:52:23.882
  I0510 13:52:23.891059 21 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-9129 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 05/10/24 13:52:23.891
  I0510 13:52:23.891117 21 resource.go:361] Creating new exec pod
  I0510 13:52:26.900013 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-9129 exec execpodw8lq8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0510 13:52:27.019996 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I0510 13:52:27.020078 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0510 13:52:27.020288 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-9129 exec execpodw8lq8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.104.209.202 80'
  I0510 13:52:27.135125 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.104.209.202 80\nConnection to 10.104.209.202 80 port [tcp/http] succeeded!\n"
  I0510 13:52:27.135190 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0510 13:52:27.135283 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-9129 exec execpodw8lq8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0510 13:52:27.264209 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I0510 13:52:27.264254 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0510 13:52:27.264346 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-9129 exec execpodw8lq8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.104.209.202 81'
  I0510 13:52:27.371828 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.104.209.202 81\nConnection to 10.104.209.202 81 port [tcp/*] succeeded!\n"
  I0510 13:52:27.371890 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-9129 @ 05/10/24 13:52:27.371
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9129 to expose endpoints map[pod2:[101]] @ 05/10/24 13:52:27.381
  I0510 13:52:27.390773 21 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-9129 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-9129 @ 05/10/24 13:52:27.39
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9129 to expose endpoints map[] @ 05/10/24 13:52:27.398
  I0510 13:52:27.407388 21 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-9129 exposes endpoints map[]
  I0510 13:52:27.419375 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9129" for this suite. @ 05/10/24 13:52:27.421
• [8.607 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:334
  STEP: Creating a kubernetes client @ 05/10/24 13:52:27.426
  I0510 13:52:27.426756 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename sched-pred @ 05/10/24 13:52:27.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:52:27.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:52:27.439
  I0510 13:52:27.442260 21 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0510 13:52:27.446444 21 util.go:400] Waiting for terminating namespaces to be deleted...
  I0510 13:52:27.448396 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node worker-0 before test
  I0510 13:52:27.451991 21 predicates.go:887] coredns-6997b8f8bd-47z52 from kube-system started at 2024-05-10 13:16:07 +0000 UTC (1 container statuses recorded)
  I0510 13:52:27.452018 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0510 13:52:27.452029 21 predicates.go:887] konnectivity-agent-2lmmj from kube-system started at 2024-05-10 13:15:10 +0000 UTC (1 container statuses recorded)
  I0510 13:52:27.452042 21 predicates.go:889] 	Container konnectivity-agent ready: true, restart count 0
  I0510 13:52:27.452056 21 predicates.go:887] kube-proxy-9fgls from kube-system started at 2024-05-10 13:15:10 +0000 UTC (1 container statuses recorded)
  I0510 13:52:27.452097 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0510 13:52:27.452114 21 predicates.go:887] kube-router-nhmxc from kube-system started at 2024-05-10 13:15:10 +0000 UTC (1 container statuses recorded)
  I0510 13:52:27.452126 21 predicates.go:889] 	Container kube-router ready: true, restart count 0
  I0510 13:52:27.452139 21 predicates.go:887] metrics-server-5cd4986bbc-7kh5s from kube-system started at 2024-05-10 13:15:22 +0000 UTC (1 container statuses recorded)
  I0510 13:52:27.452153 21 predicates.go:889] 	Container metrics-server ready: true, restart count 0
  I0510 13:52:27.452218 21 predicates.go:887] sonobuoy-e2e-job-12fbf0b104f946c7 from sonobuoy started at 2024-05-10 13:15:34 +0000 UTC (2 container statuses recorded)
  I0510 13:52:27.452232 21 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0510 13:52:27.452247 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0510 13:52:27.452262 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-24515f3172df4c25-pblpt from sonobuoy started at 2024-05-10 13:15:34 +0000 UTC (2 container statuses recorded)
  I0510 13:52:27.452273 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0510 13:52:27.452286 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0510 13:52:27.452347 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node worker-1 before test
  I0510 13:52:27.455940 21 predicates.go:887] coredns-6997b8f8bd-z95cm from kube-system started at 2024-05-10 13:50:57 +0000 UTC (1 container statuses recorded)
  I0510 13:52:27.455964 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0510 13:52:27.455975 21 predicates.go:887] konnectivity-agent-lxwc4 from kube-system started at 2024-05-10 13:15:10 +0000 UTC (1 container statuses recorded)
  I0510 13:52:27.455984 21 predicates.go:889] 	Container konnectivity-agent ready: true, restart count 0
  I0510 13:52:27.455998 21 predicates.go:887] kube-proxy-jvb27 from kube-system started at 2024-05-10 13:15:10 +0000 UTC (1 container statuses recorded)
  I0510 13:52:27.456009 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0510 13:52:27.456071 21 predicates.go:887] kube-router-rpbbz from kube-system started at 2024-05-10 13:15:10 +0000 UTC (1 container statuses recorded)
  I0510 13:52:27.456083 21 predicates.go:889] 	Container kube-router ready: true, restart count 0
  I0510 13:52:27.456097 21 predicates.go:887] execpodw8lq8 from services-9129 started at 2024-05-10 13:52:23 +0000 UTC (1 container statuses recorded)
  I0510 13:52:27.456109 21 predicates.go:889] 	Container agnhost-container ready: true, restart count 0
  I0510 13:52:27.456122 21 predicates.go:887] sonobuoy from sonobuoy started at 2024-05-10 13:15:30 +0000 UTC (1 container statuses recorded)
  I0510 13:52:27.456164 21 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0510 13:52:27.456212 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-24515f3172df4c25-xm8fw from sonobuoy started at 2024-05-10 13:15:34 +0000 UTC (2 container statuses recorded)
  I0510 13:52:27.456225 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0510 13:52:27.456240 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node worker-0 @ 05/10/24 13:52:27.473
  STEP: verifying the node has the label node worker-1 @ 05/10/24 13:52:27.485
  I0510 13:52:27.494178 21 predicates.go:374] Pod coredns-6997b8f8bd-47z52 requesting resource cpu=100m on Node worker-0
  I0510 13:52:27.494220 21 predicates.go:374] Pod coredns-6997b8f8bd-z95cm requesting resource cpu=100m on Node worker-1
  I0510 13:52:27.494235 21 predicates.go:374] Pod konnectivity-agent-2lmmj requesting resource cpu=0m on Node worker-0
  I0510 13:52:27.494248 21 predicates.go:374] Pod konnectivity-agent-lxwc4 requesting resource cpu=0m on Node worker-1
  I0510 13:52:27.494262 21 predicates.go:374] Pod kube-proxy-9fgls requesting resource cpu=0m on Node worker-0
  I0510 13:52:27.494276 21 predicates.go:374] Pod kube-proxy-jvb27 requesting resource cpu=0m on Node worker-1
  I0510 13:52:27.494290 21 predicates.go:374] Pod kube-router-nhmxc requesting resource cpu=250m on Node worker-0
  I0510 13:52:27.494302 21 predicates.go:374] Pod kube-router-rpbbz requesting resource cpu=250m on Node worker-1
  I0510 13:52:27.494316 21 predicates.go:374] Pod metrics-server-5cd4986bbc-7kh5s requesting resource cpu=10m on Node worker-0
  I0510 13:52:27.494327 21 predicates.go:374] Pod execpodw8lq8 requesting resource cpu=0m on Node worker-1
  I0510 13:52:27.494340 21 predicates.go:374] Pod sonobuoy requesting resource cpu=0m on Node worker-1
  I0510 13:52:27.494352 21 predicates.go:374] Pod sonobuoy-e2e-job-12fbf0b104f946c7 requesting resource cpu=0m on Node worker-0
  I0510 13:52:27.494365 21 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-24515f3172df4c25-pblpt requesting resource cpu=0m on Node worker-0
  I0510 13:52:27.494377 21 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-24515f3172df4c25-xm8fw requesting resource cpu=0m on Node worker-1
  STEP: Starting Pods to consume most of the cluster CPU. @ 05/10/24 13:52:27.494
  I0510 13:52:27.494490 21 predicates.go:384] Creating a pod which consumes cpu=2555m on Node worker-1
  I0510 13:52:27.502095 21 predicates.go:384] Creating a pod which consumes cpu=2548m on Node worker-0
  STEP: Creating another pod that requires unavailable amount of CPU. @ 05/10/24 13:52:29.517
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a81a5d51-833c-42d6-b0fd-63a4d66fc056.17ce24f61ae71352], Reason = [Scheduled], Message = [Successfully assigned sched-pred-9356/filler-pod-a81a5d51-833c-42d6-b0fd-63a4d66fc056 to worker-1] @ 05/10/24 13:52:29.519
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a81a5d51-833c-42d6-b0fd-63a4d66fc056.17ce24f6357811e2], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/10/24 13:52:29.519
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a81a5d51-833c-42d6-b0fd-63a4d66fc056.17ce24f6368de9cf], Reason = [Created], Message = [Created container filler-pod-a81a5d51-833c-42d6-b0fd-63a4d66fc056] @ 05/10/24 13:52:29.52
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a81a5d51-833c-42d6-b0fd-63a4d66fc056.17ce24f63aa0f81a], Reason = [Started], Message = [Started container filler-pod-a81a5d51-833c-42d6-b0fd-63a4d66fc056] @ 05/10/24 13:52:29.52
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b5dd7417-d4bc-4561-b9b0-e458f901ce05.17ce24f61b69314c], Reason = [Scheduled], Message = [Successfully assigned sched-pred-9356/filler-pod-b5dd7417-d4bc-4561-b9b0-e458f901ce05 to worker-0] @ 05/10/24 13:52:29.52
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b5dd7417-d4bc-4561-b9b0-e458f901ce05.17ce24f6349e7e54], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/10/24 13:52:29.52
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b5dd7417-d4bc-4561-b9b0-e458f901ce05.17ce24f635890459], Reason = [Created], Message = [Created container filler-pod-b5dd7417-d4bc-4561-b9b0-e458f901ce05] @ 05/10/24 13:52:29.52
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b5dd7417-d4bc-4561-b9b0-e458f901ce05.17ce24f63a370266], Reason = [Started], Message = [Started container filler-pod-b5dd7417-d4bc-4561-b9b0-e458f901ce05] @ 05/10/24 13:52:29.52
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17ce24f6932f1318], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 Insufficient cpu. preemption: 0/2 nodes are available: 2 No preemption victims found for incoming pod.] @ 05/10/24 13:52:29.527
  STEP: removing the label node off the node worker-0 @ 05/10/24 13:52:30.527
  STEP: verifying the node doesn't have the label node @ 05/10/24 13:52:30.535
  STEP: removing the label node off the node worker-1 @ 05/10/24 13:52:30.538
  STEP: verifying the node doesn't have the label node @ 05/10/24 13:52:30.546
  I0510 13:52:30.549257 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9356" for this suite. @ 05/10/24 13:52:30.551
• [3.129 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 05/10/24 13:52:30.556
  I0510 13:52:30.556104 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename gc @ 05/10/24 13:52:30.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:52:30.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:52:30.57
  STEP: create the rc1 @ 05/10/24 13:52:30.576
  STEP: create the rc2 @ 05/10/24 13:52:30.58
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 05/10/24 13:52:36.588
  STEP: delete the rc simpletest-rc-to-be-deleted @ 05/10/24 13:52:36.958
  STEP: wait for the rc to be deleted @ 05/10/24 13:52:36.964
  I0510 13:52:41.984890 21 garbage_collector.go:762] 75 pods remaining
  I0510 13:52:41.985058 21 garbage_collector.go:769] 75 pods has nil DeletionTimestamp
  I0510 13:52:41.985318 21 garbage_collector.go:770] 
  STEP: Gathering metrics @ 05/10/24 13:52:46.977
  W0510 13:52:46.981163      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0510 13:52:46.981198 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0510 13:52:46.981346 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2s4jl" in namespace "gc-3736"
  I0510 13:52:46.987426 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4nn47" in namespace "gc-3736"
  I0510 13:52:46.998667 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4wvgv" in namespace "gc-3736"
  I0510 13:52:47.004208 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4zrzw" in namespace "gc-3736"
  I0510 13:52:47.013625 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-54kz7" in namespace "gc-3736"
  I0510 13:52:47.021387 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-58825" in namespace "gc-3736"
  I0510 13:52:47.031030 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5b2bq" in namespace "gc-3736"
  I0510 13:52:47.037697 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5jn4f" in namespace "gc-3736"
  I0510 13:52:47.045458 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5l4xb" in namespace "gc-3736"
  I0510 13:52:47.053385 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5rjn6" in namespace "gc-3736"
  I0510 13:52:47.062038 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6xvcb" in namespace "gc-3736"
  I0510 13:52:47.070639 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-72qqj" in namespace "gc-3736"
  I0510 13:52:47.081582 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-75z2v" in namespace "gc-3736"
  I0510 13:52:47.088869 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-786sk" in namespace "gc-3736"
  I0510 13:52:47.098247 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7cxk5" in namespace "gc-3736"
  I0510 13:52:47.107941 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7djdz" in namespace "gc-3736"
  I0510 13:52:47.125978 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7fh9p" in namespace "gc-3736"
  I0510 13:52:47.134207 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7g8sl" in namespace "gc-3736"
  I0510 13:52:47.143321 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7j64l" in namespace "gc-3736"
  I0510 13:52:47.150782 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7mmh6" in namespace "gc-3736"
  I0510 13:52:47.159351 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7rrl6" in namespace "gc-3736"
  I0510 13:52:47.169174 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7rt68" in namespace "gc-3736"
  I0510 13:52:47.176518 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7v2wq" in namespace "gc-3736"
  I0510 13:52:47.185506 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8fwhx" in namespace "gc-3736"
  I0510 13:52:47.196457 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8m549" in namespace "gc-3736"
  I0510 13:52:47.204089 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8mwmw" in namespace "gc-3736"
  I0510 13:52:47.213205 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9b6bx" in namespace "gc-3736"
  I0510 13:52:47.223369 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9pqdd" in namespace "gc-3736"
  I0510 13:52:47.231670 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bhsj7" in namespace "gc-3736"
  I0510 13:52:47.241644 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bw445" in namespace "gc-3736"
  I0510 13:52:47.251286 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c5bfx" in namespace "gc-3736"
  I0510 13:52:47.261279 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cftgk" in namespace "gc-3736"
  I0510 13:52:47.269298 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cvb76" in namespace "gc-3736"
  I0510 13:52:47.277863 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cz75l" in namespace "gc-3736"
  I0510 13:52:47.286953 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d5rs5" in namespace "gc-3736"
  I0510 13:52:47.296255 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d67pl" in namespace "gc-3736"
  I0510 13:52:47.305596 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d7ft4" in namespace "gc-3736"
  I0510 13:52:47.313495 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dbt89" in namespace "gc-3736"
  I0510 13:52:47.321359 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dfcfs" in namespace "gc-3736"
  I0510 13:52:47.329213 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dj9cz" in namespace "gc-3736"
  I0510 13:52:47.337030 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dms8l" in namespace "gc-3736"
  I0510 13:52:47.345371 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f4jn4" in namespace "gc-3736"
  I0510 13:52:47.355320 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fh7zw" in namespace "gc-3736"
  I0510 13:52:47.365605 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fjjqz" in namespace "gc-3736"
  I0510 13:52:47.386353 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fpbrx" in namespace "gc-3736"
  I0510 13:52:47.395592 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fw8mf" in namespace "gc-3736"
  I0510 13:52:47.409601 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g5x89" in namespace "gc-3736"
  I0510 13:52:47.429106 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ghjkw" in namespace "gc-3736"
  I0510 13:52:47.441671 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gpk6l" in namespace "gc-3736"
  I0510 13:52:47.453886 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gsgvd" in namespace "gc-3736"
  I0510 13:52:47.462144 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3736" for this suite. @ 05/10/24 13:52:47.467
• [16.916 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 05/10/24 13:52:47.472
  I0510 13:52:47.472738 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/10/24 13:52:47.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:52:47.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:52:47.485
  I0510 13:52:47.488293 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/10/24 13:52:48.748
  I0510 13:52:48.748715 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=crd-publish-openapi-1277 --namespace=crd-publish-openapi-1277 create -f -'
  I0510 13:52:50.900823 21 builder.go:146] stderr: ""
  I0510 13:52:50.900896 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4392-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0510 13:52:50.900964 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=crd-publish-openapi-1277 --namespace=crd-publish-openapi-1277 delete e2e-test-crd-publish-openapi-4392-crds test-cr'
  I0510 13:52:50.964781 21 builder.go:146] stderr: ""
  I0510 13:52:50.964826 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4392-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0510 13:52:50.964897 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=crd-publish-openapi-1277 --namespace=crd-publish-openapi-1277 apply -f -'
  I0510 13:52:51.031996 21 builder.go:146] stderr: ""
  I0510 13:52:51.032042 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4392-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0510 13:52:51.032100 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=crd-publish-openapi-1277 --namespace=crd-publish-openapi-1277 delete e2e-test-crd-publish-openapi-4392-crds test-cr'
  I0510 13:52:51.092093 21 builder.go:146] stderr: ""
  I0510 13:52:51.092133 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4392-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 05/10/24 13:52:51.092
  I0510 13:52:51.092422 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=crd-publish-openapi-1277 explain e2e-test-crd-publish-openapi-4392-crds'
  I0510 13:52:51.149660 21 builder.go:146] stderr: ""
  I0510 13:52:51.149721 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-4392-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0510 13:52:52.451187 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1277" for this suite. @ 05/10/24 13:52:52.457
• [4.989 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 05/10/24 13:52:52.462
  I0510 13:52:52.462152 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename projected @ 05/10/24 13:52:52.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:52:52.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:52:52.475
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 13:52:52.478
  STEP: Saw pod success @ 05/10/24 13:52:56.493
  I0510 13:52:56.495785 21 output.go:196] Trying to get logs from node worker-1 pod downwardapi-volume-d74b5195-010a-4683-b345-7fdaaf8f0a7b container client-container: <nil>
  STEP: delete the pod @ 05/10/24 13:52:56.5
  I0510 13:52:56.510991 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6610" for this suite. @ 05/10/24 13:52:56.513
• [4.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1533
  STEP: Creating a kubernetes client @ 05/10/24 13:52:56.517
  I0510 13:52:56.517929 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 13:52:56.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:52:56.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:52:56.529
  STEP: creating Agnhost RC @ 05/10/24 13:52:56.532
  I0510 13:52:56.532526 21 kubectl.go:1540] namespace kubectl-988
  I0510 13:52:56.532571 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-988 create -f -'
  I0510 13:52:56.653704 21 builder.go:146] stderr: ""
  I0510 13:52:56.653769 21 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/10/24 13:52:56.654
  I0510 13:52:57.657766 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0510 13:52:57.657805 21 framework.go:733] Found 1 / 1
  I0510 13:52:57.657832 21 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0510 13:52:57.660288 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0510 13:52:57.660326 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0510 13:52:57.660340 21 kubectl.go:1547] wait on agnhost-primary startup in kubectl-988 
  I0510 13:52:57.660392 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-988 logs agnhost-primary-qmqng agnhost-primary'
  I0510 13:52:57.728527 21 builder.go:146] stderr: ""
  I0510 13:52:57.728574 21 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 05/10/24 13:52:57.728
  I0510 13:52:57.728689 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-988 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0510 13:52:57.805553 21 builder.go:146] stderr: ""
  I0510 13:52:57.805621 21 builder.go:147] stdout: "service/rm2 exposed\n"
  I0510 13:52:57.810468 21 utils.go:1179] Service rm2 in namespace kubectl-988 found.
  STEP: exposing service @ 05/10/24 13:52:59.815
  I0510 13:52:59.815700 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-988 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0510 13:52:59.884543 21 builder.go:146] stderr: ""
  I0510 13:52:59.884593 21 builder.go:147] stdout: "service/rm3 exposed\n"
  I0510 13:52:59.887436 21 utils.go:1179] Service rm3 in namespace kubectl-988 found.
  I0510 13:53:01.892337 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-988" for this suite. @ 05/10/24 13:53:01.894
• [5.382 seconds]
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 05/10/24 13:53:01.9
  I0510 13:53:01.900209 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename watch @ 05/10/24 13:53:01.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:53:01.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:53:01.912
  STEP: creating a watch on configmaps with a certain label @ 05/10/24 13:53:01.915
  STEP: creating a new configmap @ 05/10/24 13:53:01.916
  STEP: modifying the configmap once @ 05/10/24 13:53:01.92
  STEP: changing the label value of the configmap @ 05/10/24 13:53:01.926
  STEP: Expecting to observe a delete notification for the watched object @ 05/10/24 13:53:01.931
  I0510 13:53:01.931117 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2105  fcd69c83-3a6d-4409-9d5e-88da254e1210 15912 0 2024-05-10 13:53:01 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-10 13:53:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0510 13:53:01.931308 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2105  fcd69c83-3a6d-4409-9d5e-88da254e1210 15914 0 2024-05-10 13:53:01 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-10 13:53:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0510 13:53:01.931426 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2105  fcd69c83-3a6d-4409-9d5e-88da254e1210 15915 0 2024-05-10 13:53:01 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-10 13:53:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 05/10/24 13:53:01.931
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 05/10/24 13:53:01.936
  STEP: changing the label value of the configmap back @ 05/10/24 13:53:11.936
  STEP: modifying the configmap a third time @ 05/10/24 13:53:11.944
  STEP: deleting the configmap @ 05/10/24 13:53:11.95
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 05/10/24 13:53:11.954
  I0510 13:53:11.954119 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2105  fcd69c83-3a6d-4409-9d5e-88da254e1210 15959 0 2024-05-10 13:53:01 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-10 13:53:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0510 13:53:11.954324 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2105  fcd69c83-3a6d-4409-9d5e-88da254e1210 15961 0 2024-05-10 13:53:01 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-10 13:53:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0510 13:53:11.954444 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2105  fcd69c83-3a6d-4409-9d5e-88da254e1210 15962 0 2024-05-10 13:53:01 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-10 13:53:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0510 13:53:11.954543 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2105" for this suite. @ 05/10/24 13:53:11.957
• [10.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 05/10/24 13:53:11.961
  I0510 13:53:11.961328 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename svcaccounts @ 05/10/24 13:53:11.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:53:11.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:53:11.972
  STEP: creating a ServiceAccount @ 05/10/24 13:53:11.975
  STEP: watching for the ServiceAccount to be added @ 05/10/24 13:53:11.98
  STEP: patching the ServiceAccount @ 05/10/24 13:53:11.981
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 05/10/24 13:53:11.986
  STEP: deleting the ServiceAccount @ 05/10/24 13:53:11.988
  I0510 13:53:11.994490 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8063" for this suite. @ 05/10/24 13:53:11.997
• [0.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 05/10/24 13:53:12.003
  I0510 13:53:12.003091 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename crd-watch @ 05/10/24 13:53:12.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:53:12.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:53:12.013
  I0510 13:53:12.016055 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Creating first CR  @ 05/10/24 13:53:14.545
  I0510 13:53:14.548737 21 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-10T13:53:14Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-10T13:53:14Z]] name:name1 resourceVersion:15989 uid:a77813b0-ddf9-4bbd-acc0-f7d5920d7fe4] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 05/10/24 13:53:24.55
  I0510 13:53:24.556249 21 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-10T13:53:24Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-10T13:53:24Z]] name:name2 resourceVersion:16018 uid:7422a87f-cf3e-47df-814c-86b854c93e0b] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 05/10/24 13:53:34.558
  I0510 13:53:34.563234 21 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-10T13:53:14Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-10T13:53:34Z]] name:name1 resourceVersion:16038 uid:a77813b0-ddf9-4bbd-acc0-f7d5920d7fe4] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 05/10/24 13:53:44.565
  I0510 13:53:44.569953 21 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-10T13:53:24Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-10T13:53:44Z]] name:name2 resourceVersion:16059 uid:7422a87f-cf3e-47df-814c-86b854c93e0b] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 05/10/24 13:53:54.57
  I0510 13:53:54.575095 21 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-10T13:53:14Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-10T13:53:34Z]] name:name1 resourceVersion:16080 uid:a77813b0-ddf9-4bbd-acc0-f7d5920d7fe4] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 05/10/24 13:54:04.575
  I0510 13:54:04.580227 21 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-10T13:53:24Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-10T13:53:44Z]] name:name2 resourceVersion:16101 uid:7422a87f-cf3e-47df-814c-86b854c93e0b] num:map[num1:9223372036854775807 num2:1000000]]}
  I0510 13:54:15.091771 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-7522" for this suite. @ 05/10/24 13:54:15.094
• [63.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 05/10/24 13:54:15.102
  I0510 13:54:15.102190 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename webhook @ 05/10/24 13:54:15.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:54:15.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:54:15.115
  STEP: Setting up server cert @ 05/10/24 13:54:15.129
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 13:54:16.042
  STEP: Deploying the webhook pod @ 05/10/24 13:54:16.048
  STEP: Wait for the deployment to be ready @ 05/10/24 13:54:16.056
  I0510 13:54:16.063680 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 13:54:18.07
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 13:54:18.083
  I0510 13:54:19.084394 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 05/10/24 13:54:19.088
  STEP: create a pod that should be updated by the webhook @ 05/10/24 13:54:19.103
  I0510 13:54:19.154388 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3233" for this suite. @ 05/10/24 13:54:19.157
  STEP: Destroying namespace "webhook-markers-4779" for this suite. @ 05/10/24 13:54:19.16
• [4.062 seconds]
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 05/10/24 13:54:19.164
  I0510 13:54:19.164574 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename svc-latency @ 05/10/24 13:54:19.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:54:19.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:54:19.175
  I0510 13:54:19.178220 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-2287 @ 05/10/24 13:54:19.179
  I0510 13:54:19.183038      21 runners.go:198] Created replication controller with name: svc-latency-rc, namespace: svc-latency-2287, replica count: 1
  I0510 13:54:20.233787      21 runners.go:198] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0510 13:54:20.346491 21 service_latency.go:356] Created: latency-svc-glv5x
  I0510 13:54:20.349686 21 service_latency.go:363] Got endpoints: latency-svc-glv5x [14.890819ms]
  I0510 13:54:20.360996 21 service_latency.go:356] Created: latency-svc-q7lhj
  I0510 13:54:20.366627 21 service_latency.go:363] Got endpoints: latency-svc-q7lhj [16.806735ms]
  I0510 13:54:20.373595 21 service_latency.go:356] Created: latency-svc-rlzfh
  I0510 13:54:20.378910 21 service_latency.go:363] Got endpoints: latency-svc-rlzfh [28.926944ms]
  I0510 13:54:20.379897 21 service_latency.go:356] Created: latency-svc-skrm5
  I0510 13:54:20.383208 21 service_latency.go:363] Got endpoints: latency-svc-skrm5 [33.101123ms]
  I0510 13:54:20.389314 21 service_latency.go:356] Created: latency-svc-8qldt
  I0510 13:54:20.391957 21 service_latency.go:363] Got endpoints: latency-svc-8qldt [41.827832ms]
  I0510 13:54:20.397886 21 service_latency.go:356] Created: latency-svc-4hsts
  I0510 13:54:20.405001 21 service_latency.go:363] Got endpoints: latency-svc-4hsts [54.740094ms]
  I0510 13:54:20.407743 21 service_latency.go:356] Created: latency-svc-8ns4p
  I0510 13:54:20.413308 21 service_latency.go:363] Got endpoints: latency-svc-8ns4p [63.123245ms]
  I0510 13:54:20.423738 21 service_latency.go:356] Created: latency-svc-hmhvm
  I0510 13:54:20.427467 21 service_latency.go:363] Got endpoints: latency-svc-hmhvm [77.120092ms]
  I0510 13:54:20.433464 21 service_latency.go:356] Created: latency-svc-jfnds
  I0510 13:54:20.438646 21 service_latency.go:363] Got endpoints: latency-svc-jfnds [88.388391ms]
  I0510 13:54:20.442165 21 service_latency.go:356] Created: latency-svc-5q552
  I0510 13:54:20.446102 21 service_latency.go:363] Got endpoints: latency-svc-5q552 [95.774103ms]
  I0510 13:54:20.448287 21 service_latency.go:356] Created: latency-svc-c42pz
  I0510 13:54:20.458942 21 service_latency.go:363] Got endpoints: latency-svc-c42pz [108.59825ms]
  I0510 13:54:20.461989 21 service_latency.go:356] Created: latency-svc-f85hm
  I0510 13:54:20.467458 21 service_latency.go:363] Got endpoints: latency-svc-f85hm [117.027476ms]
  I0510 13:54:20.469910 21 service_latency.go:356] Created: latency-svc-tpm84
  I0510 13:54:20.477735 21 service_latency.go:363] Got endpoints: latency-svc-tpm84 [127.965245ms]
  I0510 13:54:20.479694 21 service_latency.go:356] Created: latency-svc-5bthl
  I0510 13:54:20.486929 21 service_latency.go:363] Got endpoints: latency-svc-5bthl [136.433041ms]
  I0510 13:54:20.488461 21 service_latency.go:356] Created: latency-svc-xhb5q
  I0510 13:54:20.499637 21 service_latency.go:363] Got endpoints: latency-svc-xhb5q [149.097431ms]
  I0510 13:54:20.502293 21 service_latency.go:356] Created: latency-svc-wf7mr
  I0510 13:54:20.506183 21 service_latency.go:363] Got endpoints: latency-svc-wf7mr [155.725893ms]
  I0510 13:54:20.514380 21 service_latency.go:356] Created: latency-svc-84jwd
  I0510 13:54:20.538008 21 service_latency.go:363] Got endpoints: latency-svc-84jwd [171.330431ms]
  I0510 13:54:20.540531 21 service_latency.go:356] Created: latency-svc-82jjh
  I0510 13:54:20.548546 21 service_latency.go:363] Got endpoints: latency-svc-82jjh [169.586547ms]
  I0510 13:54:20.550602 21 service_latency.go:356] Created: latency-svc-vpj56
  I0510 13:54:20.563526 21 service_latency.go:356] Created: latency-svc-lc62w
  I0510 13:54:20.565787 21 service_latency.go:363] Got endpoints: latency-svc-vpj56 [182.544054ms]
  I0510 13:54:20.572240 21 service_latency.go:363] Got endpoints: latency-svc-lc62w [180.230357ms]
  I0510 13:54:20.575430 21 service_latency.go:356] Created: latency-svc-8twrb
  I0510 13:54:20.583038 21 service_latency.go:363] Got endpoints: latency-svc-8twrb [177.992387ms]
  I0510 13:54:20.586205 21 service_latency.go:356] Created: latency-svc-8h8nz
  I0510 13:54:20.593196 21 service_latency.go:363] Got endpoints: latency-svc-8h8nz [179.846849ms]
  I0510 13:54:20.597438 21 service_latency.go:356] Created: latency-svc-mrbfd
  I0510 13:54:20.602728 21 service_latency.go:363] Got endpoints: latency-svc-mrbfd [175.216042ms]
  I0510 13:54:20.605431 21 service_latency.go:356] Created: latency-svc-txbcm
  I0510 13:54:20.613663 21 service_latency.go:356] Created: latency-svc-rdw42
  I0510 13:54:20.615165 21 service_latency.go:363] Got endpoints: latency-svc-txbcm [176.479112ms]
  I0510 13:54:20.620294 21 service_latency.go:363] Got endpoints: latency-svc-rdw42 [174.140209ms]
  I0510 13:54:20.623898 21 service_latency.go:356] Created: latency-svc-ds5r4
  I0510 13:54:20.628716 21 service_latency.go:363] Got endpoints: latency-svc-ds5r4 [169.739736ms]
  I0510 13:54:20.631536 21 service_latency.go:356] Created: latency-svc-85dtd
  I0510 13:54:20.649070 21 service_latency.go:363] Got endpoints: latency-svc-85dtd [181.240771ms]
  I0510 13:54:20.652080 21 service_latency.go:356] Created: latency-svc-g9czz
  I0510 13:54:20.654979 21 service_latency.go:363] Got endpoints: latency-svc-g9czz [177.1508ms]
  I0510 13:54:20.663830 21 service_latency.go:356] Created: latency-svc-jsqxd
  I0510 13:54:20.672017 21 service_latency.go:363] Got endpoints: latency-svc-jsqxd [185.042142ms]
  I0510 13:54:20.674340 21 service_latency.go:356] Created: latency-svc-ffdg9
  I0510 13:54:20.681020 21 service_latency.go:363] Got endpoints: latency-svc-ffdg9 [181.341617ms]
  I0510 13:54:20.683242 21 service_latency.go:356] Created: latency-svc-wfrb9
  I0510 13:54:20.686070 21 service_latency.go:363] Got endpoints: latency-svc-wfrb9 [179.850315ms]
  I0510 13:54:20.688342 21 service_latency.go:356] Created: latency-svc-klvzh
  I0510 13:54:20.691242 21 service_latency.go:363] Got endpoints: latency-svc-klvzh [153.18436ms]
  I0510 13:54:20.700335 21 service_latency.go:356] Created: latency-svc-pmtkf
  I0510 13:54:20.705974 21 service_latency.go:363] Got endpoints: latency-svc-pmtkf [157.390549ms]
  I0510 13:54:20.709284 21 service_latency.go:356] Created: latency-svc-mnplw
  I0510 13:54:20.712444 21 service_latency.go:363] Got endpoints: latency-svc-mnplw [146.615911ms]
  I0510 13:54:20.715191 21 service_latency.go:356] Created: latency-svc-5v9v4
  I0510 13:54:20.721884 21 service_latency.go:363] Got endpoints: latency-svc-5v9v4 [149.6029ms]
  I0510 13:54:20.723282 21 service_latency.go:356] Created: latency-svc-nbq5g
  I0510 13:54:20.729575 21 service_latency.go:363] Got endpoints: latency-svc-nbq5g [146.499466ms]
  I0510 13:54:20.732346 21 service_latency.go:356] Created: latency-svc-mggrq
  I0510 13:54:20.738329 21 service_latency.go:356] Created: latency-svc-j2qxd
  I0510 13:54:20.738995 21 service_latency.go:363] Got endpoints: latency-svc-mggrq [145.761572ms]
  I0510 13:54:20.744819 21 service_latency.go:356] Created: latency-svc-6vb28
  I0510 13:54:20.765060 21 service_latency.go:363] Got endpoints: latency-svc-j2qxd [162.293499ms]
  I0510 13:54:20.766627 21 service_latency.go:356] Created: latency-svc-92q4s
  I0510 13:54:20.776735 21 service_latency.go:356] Created: latency-svc-kgrfl
  I0510 13:54:20.784915 21 service_latency.go:356] Created: latency-svc-sgj2b
  I0510 13:54:20.791122 21 service_latency.go:356] Created: latency-svc-gl98t
  I0510 13:54:20.795421 21 service_latency.go:356] Created: latency-svc-2bbbl
  I0510 13:54:20.804465 21 service_latency.go:363] Got endpoints: latency-svc-6vb28 [189.111926ms]
  I0510 13:54:20.807316 21 service_latency.go:356] Created: latency-svc-8qsgh
  I0510 13:54:20.812617 21 service_latency.go:356] Created: latency-svc-r8zx4
  I0510 13:54:20.819168 21 service_latency.go:356] Created: latency-svc-wxqmh
  I0510 13:54:20.825782 21 service_latency.go:356] Created: latency-svc-rfr7p
  I0510 13:54:20.837099 21 service_latency.go:356] Created: latency-svc-6z9xc
  I0510 13:54:20.845144 21 service_latency.go:356] Created: latency-svc-29mn6
  I0510 13:54:20.852167 21 service_latency.go:363] Got endpoints: latency-svc-92q4s [231.831914ms]
  I0510 13:54:20.854161 21 service_latency.go:356] Created: latency-svc-9std8
  I0510 13:54:20.863816 21 service_latency.go:356] Created: latency-svc-92sh9
  I0510 13:54:20.883988 21 service_latency.go:356] Created: latency-svc-b8lhf
  I0510 13:54:20.895182 21 service_latency.go:356] Created: latency-svc-v2b7c
  I0510 13:54:20.900719 21 service_latency.go:363] Got endpoints: latency-svc-kgrfl [271.911424ms]
  I0510 13:54:20.901669 21 service_latency.go:356] Created: latency-svc-l67wd
  I0510 13:54:20.911709 21 service_latency.go:356] Created: latency-svc-pnpwd
  I0510 13:54:20.950228 21 service_latency.go:363] Got endpoints: latency-svc-sgj2b [301.121193ms]
  I0510 13:54:20.964447 21 service_latency.go:356] Created: latency-svc-4c2qt
  I0510 13:54:21.002248 21 service_latency.go:363] Got endpoints: latency-svc-gl98t [347.018882ms]
  I0510 13:54:21.012979 21 service_latency.go:356] Created: latency-svc-7vb9w
  I0510 13:54:21.049590 21 service_latency.go:363] Got endpoints: latency-svc-2bbbl [377.529894ms]
  I0510 13:54:21.061749 21 service_latency.go:356] Created: latency-svc-brq8w
  I0510 13:54:21.099880 21 service_latency.go:363] Got endpoints: latency-svc-8qsgh [418.666709ms]
  I0510 13:54:21.110302 21 service_latency.go:356] Created: latency-svc-rhgfk
  I0510 13:54:21.149720 21 service_latency.go:363] Got endpoints: latency-svc-r8zx4 [463.545693ms]
  I0510 13:54:21.164397 21 service_latency.go:356] Created: latency-svc-jcxh4
  I0510 13:54:21.207687 21 service_latency.go:363] Got endpoints: latency-svc-wxqmh [516.406964ms]
  I0510 13:54:21.219623 21 service_latency.go:356] Created: latency-svc-xgzrr
  I0510 13:54:21.249805 21 service_latency.go:363] Got endpoints: latency-svc-rfr7p [543.793205ms]
  I0510 13:54:21.259808 21 service_latency.go:356] Created: latency-svc-sz5pd
  I0510 13:54:21.301516 21 service_latency.go:363] Got endpoints: latency-svc-6z9xc [588.992924ms]
  I0510 13:54:21.315555 21 service_latency.go:356] Created: latency-svc-mq4vs
  I0510 13:54:21.352613 21 service_latency.go:363] Got endpoints: latency-svc-29mn6 [630.515801ms]
  I0510 13:54:21.369247 21 service_latency.go:356] Created: latency-svc-btd8c
  I0510 13:54:21.398927 21 service_latency.go:363] Got endpoints: latency-svc-9std8 [669.306945ms]
  I0510 13:54:21.408763 21 service_latency.go:356] Created: latency-svc-jdhql
  I0510 13:54:21.451802 21 service_latency.go:363] Got endpoints: latency-svc-92sh9 [712.636204ms]
  I0510 13:54:21.461707 21 service_latency.go:356] Created: latency-svc-4lcxr
  I0510 13:54:21.502303 21 service_latency.go:363] Got endpoints: latency-svc-b8lhf [737.207986ms]
  I0510 13:54:21.511287 21 service_latency.go:356] Created: latency-svc-jmfvz
  I0510 13:54:21.549350 21 service_latency.go:363] Got endpoints: latency-svc-v2b7c [744.842785ms]
  I0510 13:54:21.564232 21 service_latency.go:356] Created: latency-svc-cb9zm
  I0510 13:54:21.602204 21 service_latency.go:363] Got endpoints: latency-svc-l67wd [749.989916ms]
  I0510 13:54:21.611729 21 service_latency.go:356] Created: latency-svc-gjwkq
  I0510 13:54:21.651629 21 service_latency.go:363] Got endpoints: latency-svc-pnpwd [750.530219ms]
  I0510 13:54:21.662108 21 service_latency.go:356] Created: latency-svc-hcjsm
  I0510 13:54:21.699323 21 service_latency.go:363] Got endpoints: latency-svc-4c2qt [749.044744ms]
  I0510 13:54:21.711576 21 service_latency.go:356] Created: latency-svc-gzrmb
  I0510 13:54:21.750299 21 service_latency.go:363] Got endpoints: latency-svc-7vb9w [747.998626ms]
  I0510 13:54:21.760463 21 service_latency.go:356] Created: latency-svc-pf8kh
  I0510 13:54:21.802053 21 service_latency.go:363] Got endpoints: latency-svc-brq8w [752.407908ms]
  I0510 13:54:21.812624 21 service_latency.go:356] Created: latency-svc-76c6q
  I0510 13:54:21.850921 21 service_latency.go:363] Got endpoints: latency-svc-rhgfk [750.992311ms]
  I0510 13:54:21.862741 21 service_latency.go:356] Created: latency-svc-bhzvr
  I0510 13:54:21.900613 21 service_latency.go:363] Got endpoints: latency-svc-jcxh4 [750.838802ms]
  I0510 13:54:21.912074 21 service_latency.go:356] Created: latency-svc-r8dbs
  I0510 13:54:21.951020 21 service_latency.go:363] Got endpoints: latency-svc-xgzrr [743.184555ms]
  I0510 13:54:21.969404 21 service_latency.go:356] Created: latency-svc-n74h8
  I0510 13:54:21.999534 21 service_latency.go:363] Got endpoints: latency-svc-sz5pd [749.676127ms]
  I0510 13:54:22.014165 21 service_latency.go:356] Created: latency-svc-sspl9
  I0510 13:54:22.051253 21 service_latency.go:363] Got endpoints: latency-svc-mq4vs [749.65427ms]
  I0510 13:54:22.080399 21 service_latency.go:356] Created: latency-svc-pbrch
  I0510 13:54:22.104347 21 service_latency.go:363] Got endpoints: latency-svc-btd8c [751.692477ms]
  I0510 13:54:22.114500 21 service_latency.go:356] Created: latency-svc-fnldw
  I0510 13:54:22.152488 21 service_latency.go:363] Got endpoints: latency-svc-jdhql [753.49972ms]
  I0510 13:54:22.165937 21 service_latency.go:356] Created: latency-svc-tb5np
  I0510 13:54:22.199238 21 service_latency.go:363] Got endpoints: latency-svc-4lcxr [747.173689ms]
  I0510 13:54:22.209459 21 service_latency.go:356] Created: latency-svc-vb458
  I0510 13:54:22.249981 21 service_latency.go:363] Got endpoints: latency-svc-jmfvz [747.545229ms]
  I0510 13:54:22.260731 21 service_latency.go:356] Created: latency-svc-p7knc
  I0510 13:54:22.299246 21 service_latency.go:363] Got endpoints: latency-svc-cb9zm [749.843751ms]
  I0510 13:54:22.309069 21 service_latency.go:356] Created: latency-svc-bdr6b
  I0510 13:54:22.349554 21 service_latency.go:363] Got endpoints: latency-svc-gjwkq [747.295699ms]
  I0510 13:54:22.361020 21 service_latency.go:356] Created: latency-svc-p4tx6
  I0510 13:54:22.399673 21 service_latency.go:363] Got endpoints: latency-svc-hcjsm [748.001706ms]
  I0510 13:54:22.410684 21 service_latency.go:356] Created: latency-svc-b42qq
  I0510 13:54:22.449730 21 service_latency.go:363] Got endpoints: latency-svc-gzrmb [750.19638ms]
  I0510 13:54:22.459118 21 service_latency.go:356] Created: latency-svc-n5sdv
  I0510 13:54:22.499738 21 service_latency.go:363] Got endpoints: latency-svc-pf8kh [749.385224ms]
  I0510 13:54:22.511712 21 service_latency.go:356] Created: latency-svc-z8qwb
  I0510 13:54:22.551865 21 service_latency.go:363] Got endpoints: latency-svc-76c6q [749.753983ms]
  I0510 13:54:22.566346 21 service_latency.go:356] Created: latency-svc-gsm8k
  I0510 13:54:22.599721 21 service_latency.go:363] Got endpoints: latency-svc-bhzvr [748.638151ms]
  I0510 13:54:22.615573 21 service_latency.go:356] Created: latency-svc-rm8d6
  I0510 13:54:22.649374 21 service_latency.go:363] Got endpoints: latency-svc-r8dbs [748.685171ms]
  I0510 13:54:22.660911 21 service_latency.go:356] Created: latency-svc-w88fv
  I0510 13:54:22.700289 21 service_latency.go:363] Got endpoints: latency-svc-n74h8 [749.216781ms]
  I0510 13:54:22.710202 21 service_latency.go:356] Created: latency-svc-bdk8r
  I0510 13:54:22.749952 21 service_latency.go:363] Got endpoints: latency-svc-sspl9 [750.372351ms]
  I0510 13:54:22.764998 21 service_latency.go:356] Created: latency-svc-dp42p
  I0510 13:54:22.802491 21 service_latency.go:363] Got endpoints: latency-svc-pbrch [751.190608ms]
  I0510 13:54:22.819743 21 service_latency.go:356] Created: latency-svc-ckpxh
  I0510 13:54:22.849145 21 service_latency.go:363] Got endpoints: latency-svc-fnldw [744.75758ms]
  I0510 13:54:22.859384 21 service_latency.go:356] Created: latency-svc-2drzn
  I0510 13:54:22.898934 21 service_latency.go:363] Got endpoints: latency-svc-tb5np [746.38568ms]
  I0510 13:54:22.910666 21 service_latency.go:356] Created: latency-svc-8ctdr
  I0510 13:54:22.948997 21 service_latency.go:363] Got endpoints: latency-svc-vb458 [749.704965ms]
  I0510 13:54:22.962913 21 service_latency.go:356] Created: latency-svc-p5k57
  I0510 13:54:23.001532 21 service_latency.go:363] Got endpoints: latency-svc-p7knc [751.464962ms]
  I0510 13:54:23.010739 21 service_latency.go:356] Created: latency-svc-4sh5s
  I0510 13:54:23.050757 21 service_latency.go:363] Got endpoints: latency-svc-bdr6b [751.466016ms]
  I0510 13:54:23.060599 21 service_latency.go:356] Created: latency-svc-gnqqk
  I0510 13:54:23.100752 21 service_latency.go:363] Got endpoints: latency-svc-p4tx6 [751.146452ms]
  I0510 13:54:23.109849 21 service_latency.go:356] Created: latency-svc-4b5bs
  I0510 13:54:23.148966 21 service_latency.go:363] Got endpoints: latency-svc-b42qq [749.231698ms]
  I0510 13:54:23.164784 21 service_latency.go:356] Created: latency-svc-68599
  I0510 13:54:23.199484 21 service_latency.go:363] Got endpoints: latency-svc-n5sdv [749.703614ms]
  I0510 13:54:23.209124 21 service_latency.go:356] Created: latency-svc-prl9j
  I0510 13:54:23.253134 21 service_latency.go:363] Got endpoints: latency-svc-z8qwb [753.332202ms]
  I0510 13:54:23.265257 21 service_latency.go:356] Created: latency-svc-8ks9r
  I0510 13:54:23.301616 21 service_latency.go:363] Got endpoints: latency-svc-gsm8k [749.695265ms]
  I0510 13:54:23.310940 21 service_latency.go:356] Created: latency-svc-zz6h7
  I0510 13:54:23.348847 21 service_latency.go:363] Got endpoints: latency-svc-rm8d6 [749.032666ms]
  I0510 13:54:23.366620 21 service_latency.go:356] Created: latency-svc-x57bf
  I0510 13:54:23.400111 21 service_latency.go:363] Got endpoints: latency-svc-w88fv [750.6614ms]
  I0510 13:54:23.409738 21 service_latency.go:356] Created: latency-svc-9f7wg
  I0510 13:54:23.449293 21 service_latency.go:363] Got endpoints: latency-svc-bdk8r [748.964889ms]
  I0510 13:54:23.460094 21 service_latency.go:356] Created: latency-svc-46msb
  I0510 13:54:23.498929 21 service_latency.go:363] Got endpoints: latency-svc-dp42p [748.934071ms]
  I0510 13:54:23.508058 21 service_latency.go:356] Created: latency-svc-bh5f2
  I0510 13:54:23.551168 21 service_latency.go:363] Got endpoints: latency-svc-ckpxh [748.510885ms]
  I0510 13:54:23.561690 21 service_latency.go:356] Created: latency-svc-tnc8l
  I0510 13:54:23.600723 21 service_latency.go:363] Got endpoints: latency-svc-2drzn [751.498977ms]
  I0510 13:54:23.609493 21 service_latency.go:356] Created: latency-svc-v4d4b
  I0510 13:54:23.649536 21 service_latency.go:363] Got endpoints: latency-svc-8ctdr [750.530237ms]
  I0510 13:54:23.659653 21 service_latency.go:356] Created: latency-svc-zgspm
  I0510 13:54:23.699162 21 service_latency.go:363] Got endpoints: latency-svc-p5k57 [750.115958ms]
  I0510 13:54:23.708191 21 service_latency.go:356] Created: latency-svc-xcw29
  I0510 13:54:23.750165 21 service_latency.go:363] Got endpoints: latency-svc-4sh5s [748.595282ms]
  I0510 13:54:23.762619 21 service_latency.go:356] Created: latency-svc-2zwg2
  I0510 13:54:23.798938 21 service_latency.go:363] Got endpoints: latency-svc-gnqqk [748.138819ms]
  I0510 13:54:23.808352 21 service_latency.go:356] Created: latency-svc-zsbhr
  I0510 13:54:23.850007 21 service_latency.go:363] Got endpoints: latency-svc-4b5bs [749.219837ms]
  I0510 13:54:23.858324 21 service_latency.go:356] Created: latency-svc-862s7
  I0510 13:54:23.899631 21 service_latency.go:363] Got endpoints: latency-svc-68599 [750.61335ms]
  I0510 13:54:23.909056 21 service_latency.go:356] Created: latency-svc-dspkk
  I0510 13:54:23.949202 21 service_latency.go:363] Got endpoints: latency-svc-prl9j [749.66739ms]
  I0510 13:54:23.962064 21 service_latency.go:356] Created: latency-svc-fdjr9
  I0510 13:54:24.001898 21 service_latency.go:363] Got endpoints: latency-svc-8ks9r [748.719282ms]
  I0510 13:54:24.010976 21 service_latency.go:356] Created: latency-svc-k9cjp
  I0510 13:54:24.051861 21 service_latency.go:363] Got endpoints: latency-svc-zz6h7 [750.20155ms]
  I0510 13:54:24.063158 21 service_latency.go:356] Created: latency-svc-nk77b
  I0510 13:54:24.100931 21 service_latency.go:363] Got endpoints: latency-svc-x57bf [752.03689ms]
  I0510 13:54:24.112917 21 service_latency.go:356] Created: latency-svc-rw7h7
  I0510 13:54:24.151414 21 service_latency.go:363] Got endpoints: latency-svc-9f7wg [751.11402ms]
  I0510 13:54:24.164455 21 service_latency.go:356] Created: latency-svc-vq2tq
  I0510 13:54:24.199152 21 service_latency.go:363] Got endpoints: latency-svc-46msb [749.82154ms]
  I0510 13:54:24.213620 21 service_latency.go:356] Created: latency-svc-jh4tw
  I0510 13:54:24.252967 21 service_latency.go:363] Got endpoints: latency-svc-bh5f2 [753.990179ms]
  I0510 13:54:24.268775 21 service_latency.go:356] Created: latency-svc-nmhrk
  I0510 13:54:24.301374 21 service_latency.go:363] Got endpoints: latency-svc-tnc8l [750.14625ms]
  I0510 13:54:24.320289 21 service_latency.go:356] Created: latency-svc-4gzkr
  I0510 13:54:24.353245 21 service_latency.go:363] Got endpoints: latency-svc-v4d4b [752.471324ms]
  I0510 13:54:24.366337 21 service_latency.go:356] Created: latency-svc-9tl5s
  I0510 13:54:24.401217 21 service_latency.go:363] Got endpoints: latency-svc-zgspm [751.638748ms]
  I0510 13:54:24.410026 21 service_latency.go:356] Created: latency-svc-hfbb5
  I0510 13:54:24.449454 21 service_latency.go:363] Got endpoints: latency-svc-xcw29 [750.234997ms]
  I0510 13:54:24.459641 21 service_latency.go:356] Created: latency-svc-zdn8s
  I0510 13:54:24.499486 21 service_latency.go:363] Got endpoints: latency-svc-2zwg2 [749.265495ms]
  I0510 13:54:24.508647 21 service_latency.go:356] Created: latency-svc-t4vz2
  I0510 13:54:24.549623 21 service_latency.go:363] Got endpoints: latency-svc-zsbhr [750.643069ms]
  I0510 13:54:24.561477 21 service_latency.go:356] Created: latency-svc-5fg29
  I0510 13:54:24.600125 21 service_latency.go:363] Got endpoints: latency-svc-862s7 [750.082099ms]
  I0510 13:54:24.609038 21 service_latency.go:356] Created: latency-svc-dv7fk
  I0510 13:54:24.650749 21 service_latency.go:363] Got endpoints: latency-svc-dspkk [751.068391ms]
  I0510 13:54:24.662373 21 service_latency.go:356] Created: latency-svc-lgg62
  I0510 13:54:24.699941 21 service_latency.go:363] Got endpoints: latency-svc-fdjr9 [750.684243ms]
  I0510 13:54:24.710296 21 service_latency.go:356] Created: latency-svc-rrtb9
  I0510 13:54:24.750453 21 service_latency.go:363] Got endpoints: latency-svc-k9cjp [748.508176ms]
  I0510 13:54:24.762535 21 service_latency.go:356] Created: latency-svc-kpkpc
  I0510 13:54:24.799194 21 service_latency.go:363] Got endpoints: latency-svc-nk77b [747.07119ms]
  I0510 13:54:24.808452 21 service_latency.go:356] Created: latency-svc-vlscd
  I0510 13:54:24.848788 21 service_latency.go:363] Got endpoints: latency-svc-rw7h7 [747.814522ms]
  I0510 13:54:24.857798 21 service_latency.go:356] Created: latency-svc-fhcp8
  I0510 13:54:24.900722 21 service_latency.go:363] Got endpoints: latency-svc-vq2tq [749.262858ms]
  I0510 13:54:24.912555 21 service_latency.go:356] Created: latency-svc-knbmx
  I0510 13:54:24.953410 21 service_latency.go:363] Got endpoints: latency-svc-jh4tw [754.004856ms]
  I0510 13:54:24.963845 21 service_latency.go:356] Created: latency-svc-rqx8c
  I0510 13:54:25.000420 21 service_latency.go:363] Got endpoints: latency-svc-nmhrk [747.410156ms]
  I0510 13:54:25.009335 21 service_latency.go:356] Created: latency-svc-87sgv
  I0510 13:54:25.050507 21 service_latency.go:363] Got endpoints: latency-svc-4gzkr [749.076711ms]
  I0510 13:54:25.063835 21 service_latency.go:356] Created: latency-svc-7zlgd
  I0510 13:54:25.102258 21 service_latency.go:363] Got endpoints: latency-svc-9tl5s [748.954944ms]
  I0510 13:54:25.116076 21 service_latency.go:356] Created: latency-svc-9vbfc
  I0510 13:54:25.150555 21 service_latency.go:363] Got endpoints: latency-svc-hfbb5 [749.281463ms]
  I0510 13:54:25.165574 21 service_latency.go:356] Created: latency-svc-j2bnf
  I0510 13:54:25.201208 21 service_latency.go:363] Got endpoints: latency-svc-zdn8s [751.704152ms]
  I0510 13:54:25.209664 21 service_latency.go:356] Created: latency-svc-pdxc2
  I0510 13:54:25.249520 21 service_latency.go:363] Got endpoints: latency-svc-t4vz2 [749.986302ms]
  I0510 13:54:25.257940 21 service_latency.go:356] Created: latency-svc-xb9nd
  I0510 13:54:25.301057 21 service_latency.go:363] Got endpoints: latency-svc-5fg29 [751.389854ms]
  I0510 13:54:25.315140 21 service_latency.go:356] Created: latency-svc-drg9m
  I0510 13:54:25.351752 21 service_latency.go:363] Got endpoints: latency-svc-dv7fk [751.571094ms]
  I0510 13:54:25.361542 21 service_latency.go:356] Created: latency-svc-2vk9n
  I0510 13:54:25.399461 21 service_latency.go:363] Got endpoints: latency-svc-lgg62 [748.639742ms]
  I0510 13:54:25.408743 21 service_latency.go:356] Created: latency-svc-wr4b7
  I0510 13:54:25.449699 21 service_latency.go:363] Got endpoints: latency-svc-rrtb9 [749.429291ms]
  I0510 13:54:25.458892 21 service_latency.go:356] Created: latency-svc-68t2f
  I0510 13:54:25.500670 21 service_latency.go:363] Got endpoints: latency-svc-kpkpc [750.164206ms]
  I0510 13:54:25.512866 21 service_latency.go:356] Created: latency-svc-drk65
  I0510 13:54:25.551522 21 service_latency.go:363] Got endpoints: latency-svc-vlscd [752.284188ms]
  I0510 13:54:25.561361 21 service_latency.go:356] Created: latency-svc-gbdqg
  I0510 13:54:25.599858 21 service_latency.go:363] Got endpoints: latency-svc-fhcp8 [751.025742ms]
  I0510 13:54:25.616593 21 service_latency.go:356] Created: latency-svc-5dgcz
  I0510 13:54:25.650577 21 service_latency.go:363] Got endpoints: latency-svc-knbmx [749.812195ms]
  I0510 13:54:25.659914 21 service_latency.go:356] Created: latency-svc-rkg6z
  I0510 13:54:25.700864 21 service_latency.go:363] Got endpoints: latency-svc-rqx8c [747.407964ms]
  I0510 13:54:25.714579 21 service_latency.go:356] Created: latency-svc-d96b8
  I0510 13:54:25.751088 21 service_latency.go:363] Got endpoints: latency-svc-87sgv [750.613699ms]
  I0510 13:54:25.760341 21 service_latency.go:356] Created: latency-svc-btr8j
  I0510 13:54:25.805047 21 service_latency.go:363] Got endpoints: latency-svc-7zlgd [754.480984ms]
  I0510 13:54:25.815400 21 service_latency.go:356] Created: latency-svc-jlhdc
  I0510 13:54:25.849427 21 service_latency.go:363] Got endpoints: latency-svc-9vbfc [747.110012ms]
  I0510 13:54:25.862769 21 service_latency.go:356] Created: latency-svc-n5d5p
  I0510 13:54:25.900586 21 service_latency.go:363] Got endpoints: latency-svc-j2bnf [749.975212ms]
  I0510 13:54:25.915555 21 service_latency.go:356] Created: latency-svc-wn656
  I0510 13:54:25.949769 21 service_latency.go:363] Got endpoints: latency-svc-pdxc2 [748.507795ms]
  I0510 13:54:25.960296 21 service_latency.go:356] Created: latency-svc-s8sq2
  I0510 13:54:25.999226 21 service_latency.go:363] Got endpoints: latency-svc-xb9nd [749.657444ms]
  I0510 13:54:26.008575 21 service_latency.go:356] Created: latency-svc-pvzkl
  I0510 13:54:26.049748 21 service_latency.go:363] Got endpoints: latency-svc-drg9m [748.63118ms]
  I0510 13:54:26.059121 21 service_latency.go:356] Created: latency-svc-fcs99
  I0510 13:54:26.100320 21 service_latency.go:363] Got endpoints: latency-svc-2vk9n [748.492701ms]
  I0510 13:54:26.112051 21 service_latency.go:356] Created: latency-svc-vmtzk
  I0510 13:54:26.149174 21 service_latency.go:363] Got endpoints: latency-svc-wr4b7 [749.65833ms]
  I0510 13:54:26.158189 21 service_latency.go:356] Created: latency-svc-m8d7z
  I0510 13:54:26.199387 21 service_latency.go:363] Got endpoints: latency-svc-68t2f [749.642636ms]
  I0510 13:54:26.208814 21 service_latency.go:356] Created: latency-svc-fftzg
  I0510 13:54:26.249033 21 service_latency.go:363] Got endpoints: latency-svc-drk65 [748.319559ms]
  I0510 13:54:26.257939 21 service_latency.go:356] Created: latency-svc-s4m5h
  I0510 13:54:26.301897 21 service_latency.go:363] Got endpoints: latency-svc-gbdqg [750.331392ms]
  I0510 13:54:26.314252 21 service_latency.go:356] Created: latency-svc-mbx65
  I0510 13:54:26.352254 21 service_latency.go:363] Got endpoints: latency-svc-5dgcz [752.343425ms]
  I0510 13:54:26.362324 21 service_latency.go:356] Created: latency-svc-dc629
  I0510 13:54:26.400469 21 service_latency.go:363] Got endpoints: latency-svc-rkg6z [749.838998ms]
  I0510 13:54:26.409424 21 service_latency.go:356] Created: latency-svc-pqktd
  I0510 13:54:26.451059 21 service_latency.go:363] Got endpoints: latency-svc-d96b8 [750.139958ms]
  I0510 13:54:26.459435 21 service_latency.go:356] Created: latency-svc-8hm6b
  I0510 13:54:26.499627 21 service_latency.go:363] Got endpoints: latency-svc-btr8j [748.452374ms]
  I0510 13:54:26.512812 21 service_latency.go:356] Created: latency-svc-cnnf4
  I0510 13:54:26.553156 21 service_latency.go:363] Got endpoints: latency-svc-jlhdc [748.040173ms]
  I0510 13:54:26.562029 21 service_latency.go:356] Created: latency-svc-brx8z
  I0510 13:54:26.599129 21 service_latency.go:363] Got endpoints: latency-svc-n5d5p [749.579121ms]
  I0510 13:54:26.609572 21 service_latency.go:356] Created: latency-svc-d84mp
  I0510 13:54:26.650811 21 service_latency.go:363] Got endpoints: latency-svc-wn656 [750.097047ms]
  I0510 13:54:26.668441 21 service_latency.go:356] Created: latency-svc-v6jtr
  I0510 13:54:26.702206 21 service_latency.go:363] Got endpoints: latency-svc-s8sq2 [752.381229ms]
  I0510 13:54:26.716250 21 service_latency.go:356] Created: latency-svc-69972
  I0510 13:54:26.750404 21 service_latency.go:363] Got endpoints: latency-svc-pvzkl [751.141149ms]
  I0510 13:54:26.772043 21 service_latency.go:356] Created: latency-svc-hzksv
  I0510 13:54:26.803977 21 service_latency.go:363] Got endpoints: latency-svc-fcs99 [754.173308ms]
  I0510 13:54:26.813594 21 service_latency.go:356] Created: latency-svc-vzzlv
  I0510 13:54:26.849647 21 service_latency.go:363] Got endpoints: latency-svc-vmtzk [749.288438ms]
  I0510 13:54:26.859628 21 service_latency.go:356] Created: latency-svc-5s8lj
  I0510 13:54:26.900215 21 service_latency.go:363] Got endpoints: latency-svc-m8d7z [750.999641ms]
  I0510 13:54:26.913936 21 service_latency.go:356] Created: latency-svc-slw2t
  I0510 13:54:26.952371 21 service_latency.go:363] Got endpoints: latency-svc-fftzg [752.925732ms]
  I0510 13:54:26.964050 21 service_latency.go:356] Created: latency-svc-pq79g
  I0510 13:54:27.000595 21 service_latency.go:363] Got endpoints: latency-svc-s4m5h [751.517968ms]
  I0510 13:54:27.010157 21 service_latency.go:356] Created: latency-svc-vhqsn
  I0510 13:54:27.051744 21 service_latency.go:363] Got endpoints: latency-svc-mbx65 [749.808401ms]
  I0510 13:54:27.061244 21 service_latency.go:356] Created: latency-svc-q26j6
  I0510 13:54:27.107405 21 service_latency.go:363] Got endpoints: latency-svc-dc629 [755.1022ms]
  I0510 13:54:27.185184 21 service_latency.go:363] Got endpoints: latency-svc-pqktd [784.558021ms]
  I0510 13:54:27.190127 21 service_latency.go:356] Created: latency-svc-8wwqg
  I0510 13:54:27.206645 21 service_latency.go:363] Got endpoints: latency-svc-8hm6b [755.539503ms]
  I0510 13:54:27.221970 21 service_latency.go:356] Created: latency-svc-ncldq
  I0510 13:54:27.232272 21 service_latency.go:356] Created: latency-svc-zpcdq
  I0510 13:54:27.252485 21 service_latency.go:363] Got endpoints: latency-svc-cnnf4 [752.720576ms]
  I0510 13:54:27.265341 21 service_latency.go:356] Created: latency-svc-kvc84
  I0510 13:54:27.302323 21 service_latency.go:363] Got endpoints: latency-svc-brx8z [749.133623ms]
  I0510 13:54:27.314763 21 service_latency.go:356] Created: latency-svc-2q5vl
  I0510 13:54:27.349423 21 service_latency.go:363] Got endpoints: latency-svc-d84mp [750.240882ms]
  I0510 13:54:27.363668 21 service_latency.go:356] Created: latency-svc-vf9td
  I0510 13:54:27.402267 21 service_latency.go:363] Got endpoints: latency-svc-v6jtr [751.372057ms]
  I0510 13:54:27.411938 21 service_latency.go:356] Created: latency-svc-jgdcd
  I0510 13:54:27.449354 21 service_latency.go:363] Got endpoints: latency-svc-69972 [747.041421ms]
  I0510 13:54:27.465265 21 service_latency.go:356] Created: latency-svc-vz2zf
  I0510 13:54:27.499582 21 service_latency.go:363] Got endpoints: latency-svc-hzksv [749.129021ms]
  I0510 13:54:27.509025 21 service_latency.go:356] Created: latency-svc-wjqft
  I0510 13:54:27.551005 21 service_latency.go:363] Got endpoints: latency-svc-vzzlv [746.882068ms]
  I0510 13:54:27.560806 21 service_latency.go:356] Created: latency-svc-spwct
  I0510 13:54:27.599780 21 service_latency.go:363] Got endpoints: latency-svc-5s8lj [750.078571ms]
  I0510 13:54:27.610914 21 service_latency.go:356] Created: latency-svc-ng5zm
  I0510 13:54:27.651734 21 service_latency.go:363] Got endpoints: latency-svc-slw2t [751.472467ms]
  I0510 13:54:27.664638 21 service_latency.go:356] Created: latency-svc-l6z9l
  I0510 13:54:27.701176 21 service_latency.go:363] Got endpoints: latency-svc-pq79g [748.76556ms]
  I0510 13:54:27.709897 21 service_latency.go:356] Created: latency-svc-rcdxt
  I0510 13:54:27.749562 21 service_latency.go:363] Got endpoints: latency-svc-vhqsn [748.816887ms]
  I0510 13:54:27.768848 21 service_latency.go:356] Created: latency-svc-22bfd
  I0510 13:54:27.799409 21 service_latency.go:363] Got endpoints: latency-svc-q26j6 [747.606378ms]
  I0510 13:54:27.808951 21 service_latency.go:356] Created: latency-svc-54hnw
  I0510 13:54:27.849595 21 service_latency.go:363] Got endpoints: latency-svc-8wwqg [742.069542ms]
  I0510 13:54:27.867637 21 service_latency.go:356] Created: latency-svc-2rm95
  I0510 13:54:27.899000 21 service_latency.go:363] Got endpoints: latency-svc-ncldq [713.752632ms]
  I0510 13:54:27.908438 21 service_latency.go:356] Created: latency-svc-ns5lt
  I0510 13:54:27.952243 21 service_latency.go:363] Got endpoints: latency-svc-zpcdq [745.384518ms]
  I0510 13:54:27.961326 21 service_latency.go:356] Created: latency-svc-5pd5g
  I0510 13:54:28.000466 21 service_latency.go:363] Got endpoints: latency-svc-kvc84 [747.937317ms]
  I0510 13:54:28.011437 21 service_latency.go:356] Created: latency-svc-4bprx
  I0510 13:54:28.049931 21 service_latency.go:363] Got endpoints: latency-svc-2q5vl [747.564526ms]
  I0510 13:54:28.062292 21 service_latency.go:356] Created: latency-svc-hp7fw
  I0510 13:54:28.099971 21 service_latency.go:363] Got endpoints: latency-svc-vf9td [750.484713ms]
  I0510 13:54:28.109209 21 service_latency.go:356] Created: latency-svc-6ct6f
  I0510 13:54:28.149756 21 service_latency.go:363] Got endpoints: latency-svc-jgdcd [747.437155ms]
  I0510 13:54:28.161060 21 service_latency.go:356] Created: latency-svc-qwjpf
  I0510 13:54:28.200985 21 service_latency.go:363] Got endpoints: latency-svc-vz2zf [751.584266ms]
  I0510 13:54:28.249186 21 service_latency.go:363] Got endpoints: latency-svc-wjqft [749.543002ms]
  I0510 13:54:28.299935 21 service_latency.go:363] Got endpoints: latency-svc-spwct [748.775615ms]
  I0510 13:54:28.349372 21 service_latency.go:363] Got endpoints: latency-svc-ng5zm [749.556661ms]
  I0510 13:54:28.399485 21 service_latency.go:363] Got endpoints: latency-svc-l6z9l [747.69711ms]
  I0510 13:54:28.449892 21 service_latency.go:363] Got endpoints: latency-svc-rcdxt [748.573618ms]
  I0510 13:54:28.501197 21 service_latency.go:363] Got endpoints: latency-svc-22bfd [751.578443ms]
  I0510 13:54:28.550275 21 service_latency.go:363] Got endpoints: latency-svc-54hnw [750.743291ms]
  I0510 13:54:28.599660 21 service_latency.go:363] Got endpoints: latency-svc-2rm95 [750.020264ms]
  I0510 13:54:28.649858 21 service_latency.go:363] Got endpoints: latency-svc-ns5lt [750.815048ms]
  I0510 13:54:28.700913 21 service_latency.go:363] Got endpoints: latency-svc-5pd5g [748.499584ms]
  I0510 13:54:28.750218 21 service_latency.go:363] Got endpoints: latency-svc-4bprx [749.239441ms]
  I0510 13:54:28.800982 21 service_latency.go:363] Got endpoints: latency-svc-hp7fw [751.000001ms]
  I0510 13:54:28.851105 21 service_latency.go:363] Got endpoints: latency-svc-6ct6f [750.92087ms]
  I0510 13:54:28.901003 21 service_latency.go:363] Got endpoints: latency-svc-qwjpf [751.189272ms]
  I0510 13:54:28.901163 21 service_latency.go:114] Latencies: [16.806735ms 28.926944ms 33.101123ms 41.827832ms 54.740094ms 63.123245ms 77.120092ms 88.388391ms 95.774103ms 108.59825ms 117.027476ms 127.965245ms 136.433041ms 145.761572ms 146.499466ms 146.615911ms 149.097431ms 149.6029ms 153.18436ms 155.725893ms 157.390549ms 162.293499ms 169.586547ms 169.739736ms 171.330431ms 174.140209ms 175.216042ms 176.479112ms 177.1508ms 177.992387ms 179.846849ms 179.850315ms 180.230357ms 181.240771ms 181.341617ms 182.544054ms 185.042142ms 189.111926ms 231.831914ms 271.911424ms 301.121193ms 347.018882ms 377.529894ms 418.666709ms 463.545693ms 516.406964ms 543.793205ms 588.992924ms 630.515801ms 669.306945ms 712.636204ms 713.752632ms 737.207986ms 742.069542ms 743.184555ms 744.75758ms 744.842785ms 745.384518ms 746.38568ms 746.882068ms 747.041421ms 747.07119ms 747.110012ms 747.173689ms 747.295699ms 747.407964ms 747.410156ms 747.437155ms 747.545229ms 747.564526ms 747.606378ms 747.69711ms 747.814522ms 747.937317ms 747.998626ms 748.001706ms 748.040173ms 748.138819ms 748.319559ms 748.452374ms 748.492701ms 748.499584ms 748.507795ms 748.508176ms 748.510885ms 748.573618ms 748.595282ms 748.63118ms 748.638151ms 748.639742ms 748.685171ms 748.719282ms 748.76556ms 748.775615ms 748.816887ms 748.934071ms 748.954944ms 748.964889ms 749.032666ms 749.044744ms 749.076711ms 749.129021ms 749.133623ms 749.216781ms 749.219837ms 749.231698ms 749.239441ms 749.262858ms 749.265495ms 749.281463ms 749.288438ms 749.385224ms 749.429291ms 749.543002ms 749.556661ms 749.579121ms 749.642636ms 749.65427ms 749.657444ms 749.65833ms 749.66739ms 749.676127ms 749.695265ms 749.703614ms 749.704965ms 749.753983ms 749.808401ms 749.812195ms 749.82154ms 749.838998ms 749.843751ms 749.975212ms 749.986302ms 749.989916ms 750.020264ms 750.078571ms 750.082099ms 750.097047ms 750.115958ms 750.139958ms 750.14625ms 750.164206ms 750.19638ms 750.20155ms 750.234997ms 750.240882ms 750.331392ms 750.372351ms 750.484713ms 750.530219ms 750.530237ms 750.61335ms 750.613699ms 750.643069ms 750.6614ms 750.684243ms 750.743291ms 750.815048ms 750.838802ms 750.92087ms 750.992311ms 750.999641ms 751.000001ms 751.025742ms 751.068391ms 751.11402ms 751.141149ms 751.146452ms 751.189272ms 751.190608ms 751.372057ms 751.389854ms 751.464962ms 751.466016ms 751.472467ms 751.498977ms 751.517968ms 751.571094ms 751.578443ms 751.584266ms 751.638748ms 751.692477ms 751.704152ms 752.03689ms 752.284188ms 752.343425ms 752.381229ms 752.407908ms 752.471324ms 752.720576ms 752.925732ms 753.332202ms 753.49972ms 753.990179ms 754.004856ms 754.173308ms 754.480984ms 755.1022ms 755.539503ms 784.558021ms]
  I0510 13:54:28.901184 21 service_latency.go:118] 50 %ile: 749.076711ms
  I0510 13:54:28.901199 21 service_latency.go:119] 90 %ile: 751.638748ms
  I0510 13:54:28.901212 21 service_latency.go:120] 99 %ile: 755.539503ms
  I0510 13:54:28.901225 21 service_latency.go:121] Total sample count: 200
  I0510 13:54:28.901321 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-2287" for this suite. @ 05/10/24 13:54:28.904
• [9.744 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 05/10/24 13:54:28.909
  I0510 13:54:28.909032 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename csiinlinevolumes @ 05/10/24 13:54:28.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:54:28.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:54:28.921
  STEP: Creating two CSIDrivers @ 05/10/24 13:54:28.924
  STEP: Getting "inline-driver-2749e281-782b-4d38-808d-cb3b6ae378d1" & "inline-driver-e31af74c-1049-4f2c-b2c7-a797b5d82e6e" @ 05/10/24 13:54:28.934
  STEP: Patching the CSIDriver "inline-driver-e31af74c-1049-4f2c-b2c7-a797b5d82e6e" @ 05/10/24 13:54:28.938
  STEP: Updating the CSIDriver "inline-driver-e31af74c-1049-4f2c-b2c7-a797b5d82e6e" @ 05/10/24 13:54:28.942
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-9429" @ 05/10/24 13:54:28.947
  STEP: Deleting CSIDriver "inline-driver-2749e281-782b-4d38-808d-cb3b6ae378d1" @ 05/10/24 13:54:28.949
  STEP: Confirm deletion of CSIDriver "inline-driver-2749e281-782b-4d38-808d-cb3b6ae378d1" @ 05/10/24 13:54:28.953
  STEP: Deleting CSIDriver "inline-driver-e31af74c-1049-4f2c-b2c7-a797b5d82e6e" via DeleteCollection @ 05/10/24 13:54:28.955
  STEP: Confirm deletion of CSIDriver "inline-driver-e31af74c-1049-4f2c-b2c7-a797b5d82e6e" @ 05/10/24 13:54:28.961
  I0510 13:54:28.962779 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-9429" for this suite. @ 05/10/24 13:54:28.965
• [0.060 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 05/10/24 13:54:28.969
  I0510 13:54:28.969235 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename svcaccounts @ 05/10/24 13:54:28.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:54:28.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:54:28.979
  STEP: Creating a pod to test service account token:  @ 05/10/24 13:54:28.982
  STEP: Saw pod success @ 05/10/24 13:54:30.991
  I0510 13:54:30.993593 21 output.go:196] Trying to get logs from node worker-1 pod test-pod-98cda271-2dbc-4d55-8835-ecec290ab334 container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 13:54:31.004
  I0510 13:54:31.015786 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6562" for this suite. @ 05/10/24 13:54:31.018
• [2.056 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 05/10/24 13:54:31.026
  I0510 13:54:31.026263 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename projected @ 05/10/24 13:54:31.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:54:31.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:54:31.038
  STEP: Creating secret with name s-test-opt-del-cad10a56-710e-4fb3-a5dd-e12e874f1825 @ 05/10/24 13:54:31.043
  STEP: Creating secret with name s-test-opt-upd-4e1a3563-d7e7-4886-a0fe-efa1e9369675 @ 05/10/24 13:54:31.046
  STEP: Creating the pod @ 05/10/24 13:54:31.05
  STEP: Deleting secret s-test-opt-del-cad10a56-710e-4fb3-a5dd-e12e874f1825 @ 05/10/24 13:54:33.078
  STEP: Updating secret s-test-opt-upd-4e1a3563-d7e7-4886-a0fe-efa1e9369675 @ 05/10/24 13:54:33.081
  STEP: Creating secret with name s-test-opt-create-ee852bdc-a36f-4401-9f1b-6289882a20dd @ 05/10/24 13:54:33.086
  STEP: waiting to observe update in volume @ 05/10/24 13:54:33.089
  I0510 13:55:45.362830 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2001" for this suite. @ 05/10/24 13:55:45.365
• [74.344 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 05/10/24 13:55:45.371
  I0510 13:55:45.371078 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename secrets @ 05/10/24 13:55:45.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:55:45.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:55:45.382
  STEP: Creating secret with name s-test-opt-del-28507025-2e50-4038-96a4-5a7bec1f7133 @ 05/10/24 13:55:45.387
  STEP: Creating secret with name s-test-opt-upd-6eb79316-fa5a-416c-baa4-6ae618b7ec46 @ 05/10/24 13:55:45.39
  STEP: Creating the pod @ 05/10/24 13:55:45.393
  STEP: Deleting secret s-test-opt-del-28507025-2e50-4038-96a4-5a7bec1f7133 @ 05/10/24 13:55:47.428
  STEP: Updating secret s-test-opt-upd-6eb79316-fa5a-416c-baa4-6ae618b7ec46 @ 05/10/24 13:55:47.431
  STEP: Creating secret with name s-test-opt-create-236069c7-54e6-4812-969f-aa3aae45ed2e @ 05/10/24 13:55:47.435
  STEP: waiting to observe update in volume @ 05/10/24 13:55:47.438
  I0510 13:57:01.720353 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6258" for this suite. @ 05/10/24 13:57:01.723
• [76.356 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 05/10/24 13:57:01.727
  I0510 13:57:01.727713 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename runtimeclass @ 05/10/24 13:57:01.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:57:01.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:57:01.741
  I0510 13:57:03.761346 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4073" for this suite. @ 05/10/24 13:57:03.763
• [2.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 05/10/24 13:57:03.769
  I0510 13:57:03.769746 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename projected @ 05/10/24 13:57:03.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:57:03.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:57:03.782
  STEP: Creating configMap with name projected-configmap-test-volume-9d58e27b-3d04-4d32-89e8-952cb4bab7ee @ 05/10/24 13:57:03.785
  STEP: Creating a pod to test consume configMaps @ 05/10/24 13:57:03.788
  STEP: Saw pod success @ 05/10/24 13:57:07.805
  I0510 13:57:07.807221 21 output.go:196] Trying to get logs from node worker-1 pod pod-projected-configmaps-d0efbfcc-398f-485e-bed4-b4351419b64b container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 13:57:07.813
  I0510 13:57:07.824116 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-939" for this suite. @ 05/10/24 13:57:07.826
• [4.060 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 05/10/24 13:57:07.83
  I0510 13:57:07.830138 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename statefulset @ 05/10/24 13:57:07.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:57:07.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:57:07.841
  STEP: Creating service test in namespace statefulset-7045 @ 05/10/24 13:57:07.844
  STEP: Creating a new StatefulSet @ 05/10/24 13:57:07.847
  I0510 13:57:07.855695 21 wait.go:40] Found 0 stateful pods, waiting for 3
  I0510 13:57:17.857997 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0510 13:57:17.858045 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0510 13:57:17.858062 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 05/10/24 13:57:17.864
  I0510 13:57:17.881760 21 statefulset.go:2241] Updating stateful set ss2
  STEP: Creating a new revision @ 05/10/24 13:57:17.881
  STEP: Not applying an update when the partition is greater than the number of replicas @ 05/10/24 13:57:27.888
  STEP: Performing a canary update @ 05/10/24 13:57:27.888
  I0510 13:57:27.904256 21 statefulset.go:2241] Updating stateful set ss2
  I0510 13:57:27.908576 21 wait.go:74] Waiting for Pod statefulset-7045/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 05/10/24 13:57:37.91
  I0510 13:57:37.936281 21 wait.go:40] Found 2 stateful pods, waiting for 3
  I0510 13:57:47.934806 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0510 13:57:47.934845 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0510 13:57:47.934893 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 05/10/24 13:57:47.939
  I0510 13:57:47.955056 21 statefulset.go:2241] Updating stateful set ss2
  I0510 13:57:47.961139 21 wait.go:74] Waiting for Pod statefulset-7045/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0510 13:57:57.976368 21 statefulset.go:2241] Updating stateful set ss2
  I0510 13:57:57.980944 21 wait.go:56] Waiting for StatefulSet statefulset-7045/ss2 to complete update
  I0510 13:57:57.980976 21 wait.go:63] Waiting for Pod statefulset-7045/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0510 13:58:07.981447 21 statefulset.go:135] Deleting all statefulset in ns statefulset-7045
  I0510 13:58:07.983369 21 rest.go:150] Scaling statefulset ss2 to 0
  I0510 13:58:17.992437 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0510 13:58:17.994508 21 rest.go:88] Deleting statefulset ss2
  I0510 13:58:18.001610 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7045" for this suite. @ 05/10/24 13:58:18.004
• [70.178 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 05/10/24 13:58:18.008
  I0510 13:58:18.008423 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename gc @ 05/10/24 13:58:18.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:58:18.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:58:18.02
  STEP: create the rc @ 05/10/24 13:58:18.023
  W0510 13:58:18.026710      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 05/10/24 13:58:23.029
  STEP: wait for all pods to be garbage collected @ 05/10/24 13:58:23.033
  STEP: Gathering metrics @ 05/10/24 13:58:28.037
  W0510 13:58:28.041711      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0510 13:58:28.041743 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0510 13:58:28.041935 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2472" for this suite. @ 05/10/24 13:58:28.044
• [10.040 seconds]
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 05/10/24 13:58:28.048
  I0510 13:58:28.048443 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename security-context-test @ 05/10/24 13:58:28.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:58:28.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:58:28.062
  I0510 13:58:32.078213 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5363" for this suite. @ 05/10/24 13:58:32.08
• [4.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 05/10/24 13:58:32.086
  I0510 13:58:32.086752 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename container-probe @ 05/10/24 13:58:32.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 13:58:32.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 13:58:32.098
  STEP: Creating pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331 @ 05/10/24 13:58:32.101
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/10/24 13:58:34.112
  I0510 13:58:34.114496 21 container_probe.go:1749] Initial restart count of pod busybox-45798eaa-1577-4635-8c43-6f8896324580 is 0
  I0510 13:58:34.116501 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:58:36.120010 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:58:38.123809 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:58:40.127578 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:58:42.130252 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:58:44.133385 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:58:46.137040 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:58:48.140724 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:58:50.144343 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:58:52.148099 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:58:54.150957 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:58:56.153319 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:58:58.157116 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:59:00.160536 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:59:02.163367 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:59:04.166903 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:59:06.170331 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:59:08.173965 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:59:10.177303 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:59:12.180736 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:59:14.184273 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:59:16.188005 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:59:18.191901 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:59:20.195549 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:59:22.198153 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:59:24.200596 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:59:26.204177 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:59:28.207952 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:59:30.211467 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:59:32.214248 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:59:34.218135 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:59:36.221296 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:59:38.225097 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:59:40.228681 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:59:42.231666 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:59:44.235195 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:59:46.238790 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:59:48.241911 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:59:50.245649 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:59:52.249073 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:59:54.252640 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:59:56.255449 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 13:59:58.259125 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:00:00.262413 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:00:02.265492 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:00:04.269247 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:00:06.272979 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:00:08.276725 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:00:10.280332 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:00:12.283589 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:00:14.286619 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:00:16.290329 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:00:18.293273 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:00:20.296056 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:00:22.298755 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:00:24.302422 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:00:26.305497 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:00:28.308693 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:00:30.311457 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:00:32.314964 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:00:34.318374 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:00:36.321982 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:00:38.325770 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:00:40.329410 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:00:42.332135 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:00:44.335974 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:00:46.339185 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:00:48.342736 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:00:50.346259 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:00:52.349112 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:00:54.352218 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:00:56.354980 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:00:58.358987 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:01:00.362540 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:01:02.365938 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:01:04.369318 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:01:06.371737 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:01:08.374904 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:01:10.378675 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:01:12.382284 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:01:14.385548 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:01:16.389069 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:01:18.392412 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:01:20.395175 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:01:22.397587 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:01:24.401191 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:01:26.404413 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:01:28.407916 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:01:30.411498 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:01:32.414563 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:01:34.417269 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:01:36.420980 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:01:38.424570 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:01:40.428196 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:01:42.431971 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:01:44.435714 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:01:46.438588 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:01:48.442092 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:01:50.445654 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:01:52.448090 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:01:54.451717 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:01:56.455394 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:01:58.459085 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:02:00.462301 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:02:02.465063 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:02:04.468358 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:02:06.472107 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:02:08.475483 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:02:10.478823 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:02:12.482224 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:02:14.485976 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:02:16.489592 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:02:18.493148 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:02:20.496454 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:02:22.499749 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:02:24.502501 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:02:26.505305 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:02:28.508902 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:02:30.512186 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  I0510 14:02:32.514993 21 container_probe.go:1759] Get pod busybox-45798eaa-1577-4635-8c43-6f8896324580 in namespace container-probe-7331
  STEP: deleting the pod @ 05/10/24 14:02:34.516
  I0510 14:02:34.526592 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7331" for this suite. @ 05/10/24 14:02:34.529
• [242.449 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 05/10/24 14:02:34.536
  I0510 14:02:34.536102 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename projected @ 05/10/24 14:02:34.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:02:34.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:02:34.548
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 14:02:34.551
  STEP: Saw pod success @ 05/10/24 14:02:38.566
  I0510 14:02:38.568526 21 output.go:196] Trying to get logs from node worker-1 pod downwardapi-volume-57c7a485-c3ee-40cc-97db-e5de65effe0c container client-container: <nil>
  STEP: delete the pod @ 05/10/24 14:02:38.585
  I0510 14:02:38.596996 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7394" for this suite. @ 05/10/24 14:02:38.599
• [4.069 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 05/10/24 14:02:38.605
  I0510 14:02:38.605238 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename svcaccounts @ 05/10/24 14:02:38.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:02:38.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:02:38.617
  I0510 14:02:38.627857 21 service_accounts.go:618] created pod
  STEP: Saw pod success @ 05/10/24 14:02:42.635
  I0510 14:03:12.636015 21 service_accounts.go:624] polling logs
  I0510 14:03:12.641975 21 service_accounts.go:634] Pod logs: 
  I0510 14:02:39.142845       1 log.go:245] OK: Got token
  I0510 14:02:39.142900       1 log.go:245] validating with in-cluster discovery
  I0510 14:02:39.143168       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0510 14:02:39.143204       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-6899:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000337940), NotBefore:(*jwt.NumericDate)(0xc000337a30), IssuedAt:(*jwt.NumericDate)(0xc000337950), ID:"f8e11597-90d8-4459-adda-7a6fd45006b1"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6899", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"7dd8d2e1-097f-4bc3-9a4e-f56b828c8886"}}}
  I0510 14:02:39.151063       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0510 14:02:39.152346       1 log.go:245] OK: Validated signature on JWT
  I0510 14:02:39.152443       1 log.go:245] OK: Got valid claims from token!
  I0510 14:02:39.152479       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-6899:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00021b3b8), NotBefore:(*jwt.NumericDate)(0xc00021b410), IssuedAt:(*jwt.NumericDate)(0xc00021b3c0), ID:"f8e11597-90d8-4459-adda-7a6fd45006b1"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6899", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"7dd8d2e1-097f-4bc3-9a4e-f56b828c8886"}}}

  I0510 14:03:12.642039 21 service_accounts.go:638] completed pod
  I0510 14:03:12.645839 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6899" for this suite. @ 05/10/24 14:03:12.648
• [34.049 seconds]
------------------------------
SSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 05/10/24 14:03:12.653
  I0510 14:03:12.653870 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename csiinlinevolumes @ 05/10/24 14:03:12.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:03:12.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:03:12.674
  STEP: creating @ 05/10/24 14:03:12.676
  STEP: getting @ 05/10/24 14:03:12.689
  STEP: listing in namespace @ 05/10/24 14:03:12.691
  STEP: patching @ 05/10/24 14:03:12.693
  STEP: deleting @ 05/10/24 14:03:12.7
  I0510 14:03:12.707781 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-5010" for this suite. @ 05/10/24 14:03:12.71
• [0.060 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:469
  STEP: Creating a kubernetes client @ 05/10/24 14:03:12.714
  I0510 14:03:12.714525 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename sched-pred @ 05/10/24 14:03:12.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:03:12.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:03:12.725
  I0510 14:03:12.727381 21 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0510 14:03:12.731426 21 util.go:400] Waiting for terminating namespaces to be deleted...
  I0510 14:03:12.733362 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node worker-0 before test
  I0510 14:03:12.738485 21 predicates.go:887] coredns-6997b8f8bd-47z52 from kube-system started at 2024-05-10 13:16:07 +0000 UTC (1 container statuses recorded)
  I0510 14:03:12.738519 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0510 14:03:12.738537 21 predicates.go:887] konnectivity-agent-2lmmj from kube-system started at 2024-05-10 13:15:10 +0000 UTC (1 container statuses recorded)
  I0510 14:03:12.738550 21 predicates.go:889] 	Container konnectivity-agent ready: true, restart count 0
  I0510 14:03:12.738564 21 predicates.go:887] kube-proxy-9fgls from kube-system started at 2024-05-10 13:15:10 +0000 UTC (1 container statuses recorded)
  I0510 14:03:12.738576 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0510 14:03:12.738590 21 predicates.go:887] kube-router-nhmxc from kube-system started at 2024-05-10 13:15:10 +0000 UTC (1 container statuses recorded)
  I0510 14:03:12.738602 21 predicates.go:889] 	Container kube-router ready: true, restart count 0
  I0510 14:03:12.738616 21 predicates.go:887] metrics-server-5cd4986bbc-7kh5s from kube-system started at 2024-05-10 13:15:22 +0000 UTC (1 container statuses recorded)
  I0510 14:03:12.738628 21 predicates.go:889] 	Container metrics-server ready: true, restart count 0
  I0510 14:03:12.738679 21 predicates.go:887] sonobuoy-e2e-job-12fbf0b104f946c7 from sonobuoy started at 2024-05-10 13:15:34 +0000 UTC (2 container statuses recorded)
  I0510 14:03:12.738691 21 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0510 14:03:12.738705 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0510 14:03:12.738752 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-24515f3172df4c25-pblpt from sonobuoy started at 2024-05-10 13:15:34 +0000 UTC (2 container statuses recorded)
  I0510 14:03:12.738765 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0510 14:03:12.738777 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0510 14:03:12.738789 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node worker-1 before test
  I0510 14:03:12.742464 21 predicates.go:887] pod-csi-inline-volumes from csiinlinevolumes-5010 started at 2024-05-10 14:03:12 +0000 UTC (1 container statuses recorded)
  I0510 14:03:12.742501 21 predicates.go:889] 	Container pod-csi-inline-volumes ready: false, restart count 0
  I0510 14:03:12.742522 21 predicates.go:887] coredns-6997b8f8bd-z95cm from kube-system started at 2024-05-10 13:50:57 +0000 UTC (1 container statuses recorded)
  I0510 14:03:12.742535 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0510 14:03:12.742651 21 predicates.go:887] konnectivity-agent-lxwc4 from kube-system started at 2024-05-10 13:15:10 +0000 UTC (1 container statuses recorded)
  I0510 14:03:12.742831 21 predicates.go:889] 	Container konnectivity-agent ready: true, restart count 0
  I0510 14:03:12.742884 21 predicates.go:887] kube-proxy-jvb27 from kube-system started at 2024-05-10 13:15:10 +0000 UTC (1 container statuses recorded)
  I0510 14:03:12.742947 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0510 14:03:12.742962 21 predicates.go:887] kube-router-rpbbz from kube-system started at 2024-05-10 13:15:10 +0000 UTC (1 container statuses recorded)
  I0510 14:03:12.743024 21 predicates.go:889] 	Container kube-router ready: true, restart count 0
  I0510 14:03:12.743041 21 predicates.go:887] sonobuoy from sonobuoy started at 2024-05-10 13:15:30 +0000 UTC (1 container statuses recorded)
  I0510 14:03:12.743054 21 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0510 14:03:12.743187 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-24515f3172df4c25-xm8fw from sonobuoy started at 2024-05-10 13:15:34 +0000 UTC (2 container statuses recorded)
  I0510 14:03:12.743201 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0510 14:03:12.743213 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0510 14:03:12.743228 21 predicates.go:887] oidc-discovery-validator from svcaccounts-6899 started at 2024-05-10 14:02:38 +0000 UTC (1 container statuses recorded)
  I0510 14:03:12.743240 21 predicates.go:889] 	Container oidc-discovery-validator ready: false, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/10/24 14:03:12.743
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/10/24 14:03:14.754
  STEP: Trying to apply a random label on the found node. @ 05/10/24 14:03:14.762
  STEP: verifying the node has the label kubernetes.io/e2e-edcca835-211c-4b2d-ace4-51dd6122c984 42 @ 05/10/24 14:03:14.769
  STEP: Trying to relaunch the pod, now with labels. @ 05/10/24 14:03:14.771
  STEP: removing the label kubernetes.io/e2e-edcca835-211c-4b2d-ace4-51dd6122c984 off the node worker-1 @ 05/10/24 14:03:16.784
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-edcca835-211c-4b2d-ace4-51dd6122c984 @ 05/10/24 14:03:16.792
  I0510 14:03:16.795040 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9097" for this suite. @ 05/10/24 14:03:16.797
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 05/10/24 14:03:16.801
  I0510 14:03:16.801766 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename pv @ 05/10/24 14:03:16.802
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:03:16.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:03:16.814
  STEP: Creating initial PV and PVC @ 05/10/24 14:03:16.818
  I0510 14:03:16.818050 21 pv.go:390] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-8370" @ 05/10/24 14:03:16.827
  STEP: Listing PVCs in namespace "pv-8370" @ 05/10/24 14:03:16.829
  STEP: Patching the PV "pv-8370-jp9sr" @ 05/10/24 14:03:16.831
  STEP: Patching the PVC "pvc-d92zl" @ 05/10/24 14:03:16.848
  STEP: Getting PV "pv-8370-jp9sr" @ 05/10/24 14:03:16.855
  STEP: Getting PVC "pvc-d92zl" @ 05/10/24 14:03:16.856
  STEP: Deleting PVC "pvc-d92zl" @ 05/10/24 14:03:16.858
  STEP: Confirm deletion of PVC "pvc-d92zl" @ 05/10/24 14:03:16.862
  STEP: Deleting PV "pv-8370-jp9sr" @ 05/10/24 14:03:18.866
  STEP: Confirm deletion of PV "pv-8370-jp9sr" @ 05/10/24 14:03:18.872
  STEP: Recreating another PV & PVC @ 05/10/24 14:03:20.878
  I0510 14:03:20.878256 21 pv.go:390] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-8370-l6gdd" @ 05/10/24 14:03:20.885
  STEP: Updating the PVC "pvc-sjdwq" @ 05/10/24 14:03:20.89
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-sjdwq=updated" @ 05/10/24 14:03:20.895
  STEP: Deleting PVC "pvc-sjdwq" via DeleteCollection @ 05/10/24 14:03:20.897
  STEP: Confirm deletion of PVC "pvc-sjdwq" @ 05/10/24 14:03:20.903
  STEP: Deleting PV "pv-8370-l6gdd" via DeleteCollection @ 05/10/24 14:03:22.907
  STEP: Confirm deletion of PV "pv-8370-l6gdd" @ 05/10/24 14:03:22.911
  I0510 14:03:24.916449 21 persistent_volumes.go:407] AfterEach: deleting 1 PVCs and 1 PVs...
  I0510 14:03:24.916483 21 pv.go:201] Deleting PersistentVolumeClaim "pvc-sjdwq"
  I0510 14:03:24.918505 21 pv.go:189] Deleting PersistentVolume "pv-8370-l6gdd"
  I0510 14:03:24.920402 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-8370" for this suite. @ 05/10/24 14:03:24.922
• [8.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 05/10/24 14:03:24.926
  I0510 14:03:24.926633 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename containers @ 05/10/24 14:03:24.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:03:24.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:03:24.938
  I0510 14:03:26.955225 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8514" for this suite. @ 05/10/24 14:03:26.957
• [2.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:779
  STEP: Creating a kubernetes client @ 05/10/24 14:03:26.962
  I0510 14:03:26.962999 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename services @ 05/10/24 14:03:26.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:03:26.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:03:26.974
  I0510 14:03:26.979829 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4803" for this suite. @ 05/10/24 14:03:26.982
• [0.023 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 05/10/24 14:03:26.986
  I0510 14:03:26.986261 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename projected @ 05/10/24 14:03:26.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:03:26.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:03:26.997
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 14:03:26.999
  STEP: Saw pod success @ 05/10/24 14:03:31.013
  I0510 14:03:31.015955 21 output.go:196] Trying to get logs from node worker-0 pod downwardapi-volume-c3aacbcf-39e2-4028-9b1d-69ec1649f7b4 container client-container: <nil>
  STEP: delete the pod @ 05/10/24 14:03:31.029
  I0510 14:03:31.040087 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9673" for this suite. @ 05/10/24 14:03:31.042
• [4.060 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 05/10/24 14:03:31.047
  I0510 14:03:31.047331 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename svcaccounts @ 05/10/24 14:03:31.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:03:31.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:03:31.059
  I0510 14:03:31.071594 21 service_accounts.go:253] created pod pod-service-account-defaultsa
  I0510 14:03:31.071629 21 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I0510 14:03:31.077436 21 service_accounts.go:253] created pod pod-service-account-mountsa
  I0510 14:03:31.077463 21 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I0510 14:03:31.084489 21 service_accounts.go:253] created pod pod-service-account-nomountsa
  I0510 14:03:31.085032 21 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  I0510 14:03:31.091288 21 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I0510 14:03:31.091336 21 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0510 14:03:31.097476 21 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I0510 14:03:31.097500 21 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0510 14:03:31.103205 21 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I0510 14:03:31.103235 21 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0510 14:03:31.110426 21 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I0510 14:03:31.110473 21 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0510 14:03:31.117782 21 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I0510 14:03:31.117810 21 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0510 14:03:31.124213 21 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I0510 14:03:31.124254 21 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0510 14:03:31.124411 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4268" for this suite. @ 05/10/24 14:03:31.131
• [0.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 05/10/24 14:03:31.137
  I0510 14:03:31.137894 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename configmap @ 05/10/24 14:03:31.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:03:31.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:03:31.159
  STEP: Creating configMap with name configmap-test-volume-b8a90c73-f9ed-4041-b497-4f3cdc372a82 @ 05/10/24 14:03:31.164
  STEP: Creating a pod to test consume configMaps @ 05/10/24 14:03:31.168
  STEP: Saw pod success @ 05/10/24 14:03:35.188
  I0510 14:03:35.190234 21 output.go:196] Trying to get logs from node worker-1 pod pod-configmaps-2c952a76-ce0f-4171-babc-8daf7701cc1e container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 14:03:35.195
  I0510 14:03:35.203724 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9949" for this suite. @ 05/10/24 14:03:35.206
• [4.072 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 05/10/24 14:03:35.209
  I0510 14:03:35.209884 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename projected @ 05/10/24 14:03:35.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:03:35.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:03:35.221
  STEP: Creating configMap with name projected-configmap-test-volume-map-487ad43a-ff3c-4192-b120-4c31907f7ab5 @ 05/10/24 14:03:35.223
  STEP: Creating a pod to test consume configMaps @ 05/10/24 14:03:35.226
  STEP: Saw pod success @ 05/10/24 14:03:39.247
  I0510 14:03:39.248978 21 output.go:196] Trying to get logs from node worker-1 pod pod-projected-configmaps-e647c6a1-41cb-4728-8a7e-651aaa99de60 container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 14:03:39.253
  I0510 14:03:39.263762 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7154" for this suite. @ 05/10/24 14:03:39.266
• [4.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:601
  STEP: Creating a kubernetes client @ 05/10/24 14:03:39.271
  I0510 14:03:39.271657 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename job @ 05/10/24 14:03:39.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:03:39.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:03:39.283
  STEP: Creating a job @ 05/10/24 14:03:39.285
  STEP: Ensuring job reaches completions @ 05/10/24 14:03:39.291
  I0510 14:03:49.293851 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1248" for this suite. @ 05/10/24 14:03:49.296
• [10.028 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 05/10/24 14:03:49.3
  I0510 14:03:49.300279 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename secrets @ 05/10/24 14:03:49.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:03:49.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:03:49.314
  STEP: creating secret secrets-9582/secret-test-c45fad7e-05cd-41de-9350-d05cbc3cd97d @ 05/10/24 14:03:49.316
  STEP: Creating a pod to test consume secrets @ 05/10/24 14:03:49.32
  STEP: Saw pod success @ 05/10/24 14:03:53.332
  I0510 14:03:53.334043 21 output.go:196] Trying to get logs from node worker-1 pod pod-configmaps-617288ac-83c7-40e5-87dd-87ee4f216709 container env-test: <nil>
  STEP: delete the pod @ 05/10/24 14:03:53.34
  I0510 14:03:53.383458 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9582" for this suite. @ 05/10/24 14:03:53.385
• [4.108 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 05/10/24 14:03:53.408
  I0510 14:03:53.408236 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename webhook @ 05/10/24 14:03:53.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:03:53.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:03:53.419
  STEP: Setting up server cert @ 05/10/24 14:03:53.435
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 14:03:53.779
  STEP: Deploying the webhook pod @ 05/10/24 14:03:53.785
  STEP: Wait for the deployment to be ready @ 05/10/24 14:03:53.793
  I0510 14:03:53.797777 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/10/24 14:03:55.804
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 14:03:55.817
  I0510 14:03:56.817885 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 05/10/24 14:03:56.822
  STEP: create a namespace for the webhook @ 05/10/24 14:03:56.838
  STEP: create a configmap should be unconditionally rejected by the webhook @ 05/10/24 14:03:56.847
  I0510 14:03:56.892660 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6784" for this suite. @ 05/10/24 14:03:56.896
  STEP: Destroying namespace "webhook-markers-8198" for this suite. @ 05/10/24 14:03:56.899
  STEP: Destroying namespace "fail-closed-namespace-8535" for this suite. @ 05/10/24 14:03:56.903
• [3.501 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 05/10/24 14:03:56.909
  I0510 14:03:56.909921 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename webhook @ 05/10/24 14:03:56.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:03:56.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:03:56.92
  STEP: Setting up server cert @ 05/10/24 14:03:56.934
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 14:03:57.326
  STEP: Deploying the webhook pod @ 05/10/24 14:03:57.33
  STEP: Wait for the deployment to be ready @ 05/10/24 14:03:57.339
  I0510 14:03:57.344268 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 14:03:59.35
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 14:03:59.361
  I0510 14:04:00.361289 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 05/10/24 14:04:00.365
  I0510 14:04:05.381733 21 webhook.go:2672] Waiting for webhook configuration to be ready...
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 05/10/24 14:04:05.494
  STEP: Creating a configMap that should not be mutated @ 05/10/24 14:04:05.499
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 05/10/24 14:04:05.508
  STEP: Creating a configMap that should be mutated @ 05/10/24 14:04:05.514
  I0510 14:04:05.560058 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6230" for this suite. @ 05/10/24 14:04:05.562
  STEP: Destroying namespace "webhook-markers-3158" for this suite. @ 05/10/24 14:04:05.567
• [8.662 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 05/10/24 14:04:05.572
  I0510 14:04:05.572684 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename replication-controller @ 05/10/24 14:04:05.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:04:05.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:04:05.587
  STEP: Creating ReplicationController "e2e-rc-q725z" @ 05/10/24 14:04:05.589
  I0510 14:04:05.593596 21 rc.go:792] Get Replication Controller "e2e-rc-q725z" to confirm replicas
  I0510 14:04:06.594099 21 rc.go:792] Get Replication Controller "e2e-rc-q725z" to confirm replicas
  I0510 14:04:06.596664 21 rc.go:801] Found 1 replicas for "e2e-rc-q725z" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-q725z" @ 05/10/24 14:04:06.596
  STEP: Updating a scale subresource @ 05/10/24 14:04:06.598
  STEP: Verifying replicas where modified for replication controller "e2e-rc-q725z" @ 05/10/24 14:04:06.602
  I0510 14:04:06.602579 21 rc.go:792] Get Replication Controller "e2e-rc-q725z" to confirm replicas
  I0510 14:04:07.603159 21 rc.go:792] Get Replication Controller "e2e-rc-q725z" to confirm replicas
  I0510 14:04:07.605467 21 rc.go:801] Found 2 replicas for "e2e-rc-q725z" replication controller
  I0510 14:04:07.605603 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1054" for this suite. @ 05/10/24 14:04:07.608
• [2.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 05/10/24 14:04:07.614
  I0510 14:04:07.614196 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename limitrange @ 05/10/24 14:04:07.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:04:07.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:04:07.625
  STEP: Creating a LimitRange @ 05/10/24 14:04:07.628
  STEP: Setting up watch @ 05/10/24 14:04:07.628
  STEP: Submitting a LimitRange @ 05/10/24 14:04:07.731
  STEP: Verifying LimitRange creation was observed @ 05/10/24 14:04:07.736
  STEP: Fetching the LimitRange to ensure it has proper values @ 05/10/24 14:04:07.736
  I0510 14:04:07.738469 21 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0510 14:04:07.738510 21 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 05/10/24 14:04:07.738
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 05/10/24 14:04:07.741
  I0510 14:04:07.743931 21 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0510 14:04:07.743963 21 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 05/10/24 14:04:07.743
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 05/10/24 14:04:07.748
  I0510 14:04:07.750950 21 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0510 14:04:07.750987 21 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 05/10/24 14:04:07.751
  STEP: Failing to create a Pod with more than max resources @ 05/10/24 14:04:07.753
  STEP: Updating a LimitRange @ 05/10/24 14:04:07.755
  STEP: Verifying LimitRange updating is effective @ 05/10/24 14:04:07.758
  STEP: Creating a Pod with less than former min resources @ 05/10/24 14:04:09.761
  STEP: Failing to create a Pod with more than max resources @ 05/10/24 14:04:09.765
  STEP: Deleting a LimitRange @ 05/10/24 14:04:09.767
  STEP: Verifying the LimitRange was deleted @ 05/10/24 14:04:09.773
  I0510 14:04:14.777284 21 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 05/10/24 14:04:14.777
  I0510 14:04:14.782931 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-674" for this suite. @ 05/10/24 14:04:14.785
• [7.178 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 05/10/24 14:04:14.792
  I0510 14:04:14.792539 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename projected @ 05/10/24 14:04:14.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:04:14.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:04:14.804
  STEP: Creating projection with secret that has name projected-secret-test-map-e8cdec8b-56da-432f-ad55-4ac0b188ef06 @ 05/10/24 14:04:14.807
  STEP: Creating a pod to test consume secrets @ 05/10/24 14:04:14.81
  STEP: Saw pod success @ 05/10/24 14:04:18.824
  I0510 14:04:18.826708 21 output.go:196] Trying to get logs from node worker-1 pod pod-projected-secrets-dcea4bc0-aea9-479f-8666-0fbaa38be363 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 14:04:18.831
  I0510 14:04:18.841633 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6612" for this suite. @ 05/10/24 14:04:18.844
• [4.056 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 05/10/24 14:04:18.848
  I0510 14:04:18.848987 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename resourcequota @ 05/10/24 14:04:18.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:04:18.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:04:18.862
  STEP: Counting existing ResourceQuota @ 05/10/24 14:04:18.864
  STEP: Creating a ResourceQuota @ 05/10/24 14:04:23.867
  STEP: Ensuring resource quota status is calculated @ 05/10/24 14:04:23.871
  STEP: Creating a ReplicaSet @ 05/10/24 14:04:25.875
  STEP: Ensuring resource quota status captures replicaset creation @ 05/10/24 14:04:25.884
  STEP: Deleting a ReplicaSet @ 05/10/24 14:04:27.887
  STEP: Ensuring resource quota status released usage @ 05/10/24 14:04:27.891
  I0510 14:04:29.894391 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9262" for this suite. @ 05/10/24 14:04:29.897
• [11.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 05/10/24 14:04:29.901
  I0510 14:04:29.901550 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename runtimeclass @ 05/10/24 14:04:29.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:04:29.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:04:29.914
  I0510 14:04:31.934678 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6269" for this suite. @ 05/10/24 14:04:31.937
• [2.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 05/10/24 14:04:31.941
  I0510 14:04:31.941955 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename field-validation @ 05/10/24 14:04:31.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:04:31.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:04:31.955
  I0510 14:04:31.958062 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  W0510 14:04:34.490279      21 warnings.go:70] unknown field "alpha"
  W0510 14:04:34.490311      21 warnings.go:70] unknown field "beta"
  W0510 14:04:34.490319      21 warnings.go:70] unknown field "delta"
  W0510 14:04:34.490325      21 warnings.go:70] unknown field "epsilon"
  W0510 14:04:34.490331      21 warnings.go:70] unknown field "gamma"
  I0510 14:04:35.017319 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9770" for this suite. @ 05/10/24 14:04:35.019
• [3.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 05/10/24 14:04:35.025
  I0510 14:04:35.025379 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename container-runtime @ 05/10/24 14:04:35.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:04:35.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:04:35.038
  STEP: create the container @ 05/10/24 14:04:35.04
  W0510 14:04:35.047275      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/10/24 14:04:35.047
  STEP: get the container status @ 05/10/24 14:04:37.055
  STEP: the container should be terminated @ 05/10/24 14:04:37.059
  STEP: the termination message should be set @ 05/10/24 14:04:37.059
  I0510 14:04:37.059277 21 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 05/10/24 14:04:37.059
  I0510 14:04:37.069733 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1468" for this suite. @ 05/10/24 14:04:37.072
• [2.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 05/10/24 14:04:37.076
  I0510 14:04:37.076867 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename subpath @ 05/10/24 14:04:37.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:04:37.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:04:37.087
  STEP: Setting up data @ 05/10/24 14:04:37.089
  STEP: Creating pod pod-subpath-test-secret-w7bv @ 05/10/24 14:04:37.095
  STEP: Creating a pod to test atomic-volume-subpath @ 05/10/24 14:04:37.095
  STEP: Saw pod success @ 05/10/24 14:04:59.137
  I0510 14:04:59.139669 21 output.go:196] Trying to get logs from node worker-1 pod pod-subpath-test-secret-w7bv container test-container-subpath-secret-w7bv: <nil>
  STEP: delete the pod @ 05/10/24 14:04:59.145
  STEP: Deleting pod pod-subpath-test-secret-w7bv @ 05/10/24 14:04:59.154
  I0510 14:04:59.154250 21 delete.go:62] Deleting pod "pod-subpath-test-secret-w7bv" in namespace "subpath-3644"
  I0510 14:04:59.156114 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3644" for this suite. @ 05/10/24 14:04:59.158
• [22.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 05/10/24 14:04:59.163
  I0510 14:04:59.163371 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename configmap @ 05/10/24 14:04:59.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:04:59.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:04:59.174
  STEP: Creating configMap with name configmap-test-volume-map-a9ec545d-1d04-4855-b4bd-d999e5874656 @ 05/10/24 14:04:59.176
  STEP: Creating a pod to test consume configMaps @ 05/10/24 14:04:59.179
  STEP: Saw pod success @ 05/10/24 14:05:01.189
  I0510 14:05:01.191618 21 output.go:196] Trying to get logs from node worker-1 pod pod-configmaps-dd82a4d6-fa50-4cbc-82b2-7bd54b608d7d container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 14:05:01.196
  I0510 14:05:01.207510 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4766" for this suite. @ 05/10/24 14:05:01.21
• [2.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 05/10/24 14:05:01.22
  I0510 14:05:01.220573 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename webhook @ 05/10/24 14:05:01.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:05:01.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:05:01.232
  STEP: Setting up server cert @ 05/10/24 14:05:01.248
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 14:05:01.525
  STEP: Deploying the webhook pod @ 05/10/24 14:05:01.532
  STEP: Wait for the deployment to be ready @ 05/10/24 14:05:01.541
  I0510 14:05:01.547142 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 14:05:03.555
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 14:05:03.564
  I0510 14:05:04.564732 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 05/10/24 14:05:04.569
  STEP: create a pod @ 05/10/24 14:05:04.584
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 05/10/24 14:05:06.593
  I0510 14:05:06.593944 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=webhook-7667 attach --namespace=webhook-7667 to-be-attached-pod -i -c=container1'
  I0510 14:05:06.673788 21 builder.go:135] rc: 1
  I0510 14:05:06.712397 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7667" for this suite. @ 05/10/24 14:05:06.716
  STEP: Destroying namespace "webhook-markers-615" for this suite. @ 05/10/24 14:05:06.72
• [5.504 seconds]
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3136
  STEP: Creating a kubernetes client @ 05/10/24 14:05:06.724
  I0510 14:05:06.724747 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename services @ 05/10/24 14:05:06.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:05:06.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:05:06.737
  STEP: fetching services @ 05/10/24 14:05:06.739
  I0510 14:05:06.741958 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4680" for this suite. @ 05/10/24 14:05:06.744
• [0.023 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 05/10/24 14:05:06.748
  I0510 14:05:06.748276 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename crd-webhook @ 05/10/24 14:05:06.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:05:06.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:05:06.76
  STEP: Setting up server cert @ 05/10/24 14:05:06.763
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/10/24 14:05:07.155
  STEP: Deploying the custom resource conversion webhook pod @ 05/10/24 14:05:07.159
  STEP: Wait for the deployment to be ready @ 05/10/24 14:05:07.17
  I0510 14:05:07.176172 21 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 14:05:09.183
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 14:05:09.197
  I0510 14:05:10.197710 21 util.go:427] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0510 14:05:10.202335 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Creating a v1 custom resource @ 05/10/24 14:05:12.757
  STEP: Create a v2 custom resource @ 05/10/24 14:05:12.769
  STEP: List CRs in v1 @ 05/10/24 14:05:12.824
  STEP: List CRs in v2 @ 05/10/24 14:05:12.829
  I0510 14:05:13.423939 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-194" for this suite. @ 05/10/24 14:05:13.426
• [6.683 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 05/10/24 14:05:13.431
  I0510 14:05:13.431734 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/10/24 14:05:13.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:05:13.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:05:13.445
  STEP: set up a multi version CRD @ 05/10/24 14:05:13.447
  I0510 14:05:13.448382 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: mark a version not serverd @ 05/10/24 14:05:16.666
  STEP: check the unserved version gets removed @ 05/10/24 14:05:16.68
  STEP: check the other version is not changed @ 05/10/24 14:05:17.463
  I0510 14:05:20.008712 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4320" for this suite. @ 05/10/24 14:05:20.015
• [6.589 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 05/10/24 14:05:20.02
  I0510 14:05:20.020783 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename security-context @ 05/10/24 14:05:20.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:05:20.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:05:20.032
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 05/10/24 14:05:20.034
  STEP: Saw pod success @ 05/10/24 14:05:24.05
  I0510 14:05:24.052045 21 output.go:196] Trying to get logs from node worker-1 pod security-context-ed878a52-b662-4a2e-8fe5-0ae078ea8e9e container test-container: <nil>
  STEP: delete the pod @ 05/10/24 14:05:24.056
  I0510 14:05:24.065815 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-1354" for this suite. @ 05/10/24 14:05:24.068
• [4.051 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 05/10/24 14:05:24.072
  I0510 14:05:24.072570 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/10/24 14:05:24.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:05:24.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:05:24.086
  I0510 14:05:24.089093 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 14:05:24.616324 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2835" for this suite. @ 05/10/24 14:05:24.62
• [0.552 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 05/10/24 14:05:24.626
  I0510 14:05:24.626607 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename projected @ 05/10/24 14:05:24.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:05:24.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:05:24.639
  STEP: Creating configMap with name projected-configmap-test-volume-513def10-db58-4fe0-8eaf-924e4d09401a @ 05/10/24 14:05:24.642
  STEP: Creating a pod to test consume configMaps @ 05/10/24 14:05:24.645
  STEP: Saw pod success @ 05/10/24 14:05:28.661
  I0510 14:05:28.663439 21 output.go:196] Trying to get logs from node worker-1 pod pod-projected-configmaps-aebc2810-7df0-4ee3-b1c4-4e857065ac7c container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 14:05:28.668
  I0510 14:05:28.678271 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1388" for this suite. @ 05/10/24 14:05:28.68
• [4.060 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 05/10/24 14:05:28.686
  I0510 14:05:28.686648 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/10/24 14:05:28.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:05:28.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:05:28.699
  STEP: set up a multi version CRD @ 05/10/24 14:05:28.702
  I0510 14:05:28.702670 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: rename a version @ 05/10/24 14:05:31.967
  STEP: check the new version name is served @ 05/10/24 14:05:31.979
  STEP: check the old version name is removed @ 05/10/24 14:05:32.723
  STEP: check the other version is not changed @ 05/10/24 14:05:33.388
  I0510 14:05:35.987411 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7554" for this suite. @ 05/10/24 14:05:35.993
• [7.313 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 05/10/24 14:05:35.999
  I0510 14:05:35.999992 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename runtimeclass @ 05/10/24 14:05:36
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:05:36.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:05:36.011
  STEP: Deleting RuntimeClass runtimeclass-4833-delete-me @ 05/10/24 14:05:36.019
  STEP: Waiting for the RuntimeClass to disappear @ 05/10/24 14:05:36.023
  I0510 14:05:36.028917 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4833" for this suite. @ 05/10/24 14:05:36.031
• [0.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 05/10/24 14:05:36.036
  I0510 14:05:36.036306 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename lease-test @ 05/10/24 14:05:36.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:05:36.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:05:36.047
  I0510 14:05:36.083101 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-5375" for this suite. @ 05/10/24 14:05:36.085
• [0.054 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 05/10/24 14:05:36.091
  I0510 14:05:36.091125 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename security-context-test @ 05/10/24 14:05:36.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:05:36.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:05:36.101
  I0510 14:05:40.128107 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2581" for this suite. @ 05/10/24 14:05:40.13
• [4.043 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 05/10/24 14:05:40.134
  I0510 14:05:40.134844 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename discovery @ 05/10/24 14:05:40.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:05:40.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:05:40.147
  STEP: Setting up server cert @ 05/10/24 14:05:40.151
  STEP: Requesting APIResourceList from "/api/v1" @ 05/10/24 14:05:40.564
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 05/10/24 14:05:40.566
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 05/10/24 14:05:40.567
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 05/10/24 14:05:40.568
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 05/10/24 14:05:40.569
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 05/10/24 14:05:40.57
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 05/10/24 14:05:40.571
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 05/10/24 14:05:40.572
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 05/10/24 14:05:40.573
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 05/10/24 14:05:40.574
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 05/10/24 14:05:40.575
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 05/10/24 14:05:40.576
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 05/10/24 14:05:40.577
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 05/10/24 14:05:40.579
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 05/10/24 14:05:40.579
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 05/10/24 14:05:40.58
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 05/10/24 14:05:40.581
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 05/10/24 14:05:40.582
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 05/10/24 14:05:40.583
  I0510 14:05:40.584983 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-59" for this suite. @ 05/10/24 14:05:40.587
• [0.457 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 05/10/24 14:05:40.592
  I0510 14:05:40.592781 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 14:05:40.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:05:40.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:05:40.605
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 05/10/24 14:05:40.608
  STEP: Saw pod success @ 05/10/24 14:05:44.624
  I0510 14:05:44.626096 21 output.go:196] Trying to get logs from node worker-1 pod pod-fba61e3a-f2bd-4919-8c26-a32fff6c9270 container test-container: <nil>
  STEP: delete the pod @ 05/10/24 14:05:44.631
  I0510 14:05:44.642300 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3552" for this suite. @ 05/10/24 14:05:44.644
• [4.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 05/10/24 14:05:44.649
  I0510 14:05:44.650009 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/10/24 14:05:44.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:05:44.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:05:44.661
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 05/10/24 14:05:44.664
  I0510 14:05:44.665022 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 14:05:45.940316 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 14:05:50.985324 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6720" for this suite. @ 05/10/24 14:05:50.991
• [6.345 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1627
  STEP: Creating a kubernetes client @ 05/10/24 14:05:50.996
  I0510 14:05:50.996396 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 14:05:50.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:05:51.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:05:51.01
  STEP: creating the pod @ 05/10/24 14:05:51.013
  I0510 14:05:51.013472 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-559 create -f -'
  I0510 14:05:51.134192 21 builder.go:146] stderr: ""
  I0510 14:05:51.134257 21 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 05/10/24 14:05:53.139
  I0510 14:05:53.139842 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-559 label pods pause testing-label=testing-label-value'
  I0510 14:05:53.206122 21 builder.go:146] stderr: ""
  I0510 14:05:53.206345 21 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 05/10/24 14:05:53.206
  I0510 14:05:53.206639 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-559 get pod pause -L testing-label'
  I0510 14:05:53.267475 21 builder.go:146] stderr: ""
  I0510 14:05:53.267738 21 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 05/10/24 14:05:53.267
  I0510 14:05:53.267825 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-559 label pods pause testing-label-'
  I0510 14:05:53.332962 21 builder.go:146] stderr: ""
  I0510 14:05:53.333001 21 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 05/10/24 14:05:53.333
  I0510 14:05:53.333077 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-559 get pod pause -L testing-label'
  I0510 14:05:53.393616 21 builder.go:146] stderr: ""
  I0510 14:05:53.393662 21 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 05/10/24 14:05:53.393
  I0510 14:05:53.393860 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-559 delete --grace-period=0 --force -f -'
  I0510 14:05:53.457520 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0510 14:05:53.457566 21 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0510 14:05:53.457621 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-559 get rc,svc -l name=pause --no-headers'
  I0510 14:05:53.521515 21 builder.go:146] stderr: "No resources found in kubectl-559 namespace.\n"
  I0510 14:05:53.521563 21 builder.go:147] stdout: ""
  I0510 14:05:53.521615 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-559 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0510 14:05:53.581272 21 builder.go:146] stderr: ""
  I0510 14:05:53.581321 21 builder.go:147] stdout: ""
  I0510 14:05:53.581431 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-559" for this suite. @ 05/10/24 14:05:53.584
• [2.592 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:766
  STEP: Creating a kubernetes client @ 05/10/24 14:05:53.588
  I0510 14:05:53.588388 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename webhook @ 05/10/24 14:05:53.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:05:53.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:05:53.601
  STEP: Setting up server cert @ 05/10/24 14:05:53.614
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 14:05:54.056
  STEP: Deploying the webhook pod @ 05/10/24 14:05:54.061
  STEP: Wait for the deployment to be ready @ 05/10/24 14:05:54.07
  I0510 14:05:54.075423 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 14:05:56.083
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 14:05:56.092
  I0510 14:05:57.093762 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 05/10/24 14:05:57.098
  STEP: verifying the mutating webhook match conditions @ 05/10/24 14:05:57.104
  STEP: updating the mutating webhook match conditions @ 05/10/24 14:05:57.106
  STEP: verifying the mutating webhook match conditions @ 05/10/24 14:05:57.112
  I0510 14:05:57.142120 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3676" for this suite. @ 05/10/24 14:05:57.144
  STEP: Destroying namespace "webhook-markers-9801" for this suite. @ 05/10/24 14:05:57.151
• [3.567 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 05/10/24 14:05:57.156
  I0510 14:05:57.156922 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 14:05:57.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:05:57.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:05:57.169
  STEP: Creating Pod @ 05/10/24 14:05:57.171
  STEP: Reading file content from the nginx-container @ 05/10/24 14:05:59.182
  I0510 14:05:59.182571 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-3552 PodName:pod-sharedvolume-3d211e62-c904-477a-89d9-17753804ee83 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0510 14:05:59.182589 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 14:05:59.183129 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0510 14:05:59.183197 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/emptydir-3552/pods/pod-sharedvolume-3d211e62-c904-477a-89d9-17753804ee83/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  I0510 14:05:59.237279 21 exec_util.go:106] Exec stderr: ""
  I0510 14:05:59.237597 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3552" for this suite. @ 05/10/24 14:05:59.24
• [2.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 05/10/24 14:05:59.246
  I0510 14:05:59.246331 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename replicaset @ 05/10/24 14:05:59.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:05:59.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:05:59.258
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 05/10/24 14:05:59.26
  STEP: When a replicaset with a matching selector is created @ 05/10/24 14:06:01.273
  STEP: Then the orphan pod is adopted @ 05/10/24 14:06:01.277
  STEP: When the matched label of one of its pods change @ 05/10/24 14:06:02.283
  I0510 14:06:02.286900 21 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 05/10/24 14:06:02.295
  I0510 14:06:03.301019 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9224" for this suite. @ 05/10/24 14:06:03.303
• [4.062 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:866
  STEP: Creating a kubernetes client @ 05/10/24 14:06:03.308
  I0510 14:06:03.308325 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename webhook @ 05/10/24 14:06:03.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:06:03.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:06:03.32
  STEP: Setting up server cert @ 05/10/24 14:06:03.333
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 14:06:03.574
  STEP: Deploying the webhook pod @ 05/10/24 14:06:03.578
  STEP: Wait for the deployment to be ready @ 05/10/24 14:06:03.586
  I0510 14:06:03.591960 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 14:06:05.599
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 14:06:05.611
  I0510 14:06:06.612822 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 05/10/24 14:06:06.617
  STEP: create the configmap with a random name @ 05/10/24 14:06:06.637
  STEP: verify the configmap is mutated @ 05/10/24 14:06:06.649
  STEP: create the configmap with 'skip-me' name @ 05/10/24 14:06:06.649
  I0510 14:06:06.681147 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5306" for this suite. @ 05/10/24 14:06:06.685
  STEP: Destroying namespace "webhook-markers-8851" for this suite. @ 05/10/24 14:06:06.689
• [3.386 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 05/10/24 14:06:06.694
  I0510 14:06:06.694988 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename statefulset @ 05/10/24 14:06:06.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:06:06.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:06:06.708
  STEP: Creating service test in namespace statefulset-396 @ 05/10/24 14:06:06.712
  I0510 14:06:06.727079 21 wait.go:40] Found 0 stateful pods, waiting for 1
  I0510 14:06:16.728367 21 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 05/10/24 14:06:16.732
  W0510 14:06:16.739255      21 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  I0510 14:06:16.743461 21 wait.go:40] Found 1 stateful pods, waiting for 2
  I0510 14:06:26.749322 21 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0510 14:06:26.749373 21 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 05/10/24 14:06:26.753
  STEP: Delete all of the StatefulSets @ 05/10/24 14:06:26.755
  STEP: Verify that StatefulSets have been deleted @ 05/10/24 14:06:26.759
  I0510 14:06:26.761814 21 statefulset.go:135] Deleting all statefulset in ns statefulset-396
  I0510 14:06:26.768288 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-396" for this suite. @ 05/10/24 14:06:26.771
• [20.084 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 05/10/24 14:06:26.778
  I0510 14:06:26.778833 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename configmap @ 05/10/24 14:06:26.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:06:26.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:06:26.792
  STEP: Creating configMap configmap-7552/configmap-test-1c5813bb-149b-4e05-9f13-1e81ca08f10f @ 05/10/24 14:06:26.795
  STEP: Creating a pod to test consume configMaps @ 05/10/24 14:06:26.799
  STEP: Saw pod success @ 05/10/24 14:06:30.816
  I0510 14:06:30.818544 21 output.go:196] Trying to get logs from node worker-1 pod pod-configmaps-34b96278-a31e-4b04-aec6-4dda592f6e15 container env-test: <nil>
  STEP: delete the pod @ 05/10/24 14:06:30.824
  I0510 14:06:30.833511 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7552" for this suite. @ 05/10/24 14:06:30.836
• [4.061 seconds]
------------------------------
S
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:789
  STEP: Creating a kubernetes client @ 05/10/24 14:06:30.839
  I0510 14:06:30.839922 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename services @ 05/10/24 14:06:30.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:06:30.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:06:30.852
  STEP: creating service endpoint-test2 in namespace services-3118 @ 05/10/24 14:06:30.855
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3118 to expose endpoints map[] @ 05/10/24 14:06:30.866
  I0510 14:06:30.868243 21 service.go:4226] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  I0510 14:06:31.874950 21 service.go:4258] successfully validated that service endpoint-test2 in namespace services-3118 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-3118 @ 05/10/24 14:06:31.875
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3118 to expose endpoints map[pod1:[80]] @ 05/10/24 14:06:33.889
  I0510 14:06:33.895669 21 service.go:4258] successfully validated that service endpoint-test2 in namespace services-3118 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 05/10/24 14:06:33.895
  I0510 14:06:33.895744 21 resource.go:361] Creating new exec pod
  I0510 14:06:36.905038 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-3118 exec execpodx88w5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0510 14:06:37.024609 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0510 14:06:37.024654 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0510 14:06:37.024894 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-3118 exec execpodx88w5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.98.213.65 80'
  I0510 14:06:37.139078 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.98.213.65 80\nConnection to 10.98.213.65 80 port [tcp/http] succeeded!\n"
  I0510 14:06:37.139132 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-3118 @ 05/10/24 14:06:37.139
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3118 to expose endpoints map[pod1:[80] pod2:[80]] @ 05/10/24 14:06:39.151
  I0510 14:06:39.159268 21 service.go:4258] successfully validated that service endpoint-test2 in namespace services-3118 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 05/10/24 14:06:39.159
  I0510 14:06:40.160081 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-3118 exec execpodx88w5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0510 14:06:40.279459 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0510 14:06:40.279535 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0510 14:06:40.279802 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-3118 exec execpodx88w5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.98.213.65 80'
  I0510 14:06:40.390654 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.98.213.65 80\nConnection to 10.98.213.65 80 port [tcp/http] succeeded!\n"
  I0510 14:06:40.390706 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-3118 @ 05/10/24 14:06:40.39
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3118 to expose endpoints map[pod2:[80]] @ 05/10/24 14:06:40.399
  I0510 14:06:41.413937 21 service.go:4258] successfully validated that service endpoint-test2 in namespace services-3118 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 05/10/24 14:06:41.413
  I0510 14:06:42.414517 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-3118 exec execpodx88w5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0510 14:06:42.536401 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0510 14:06:42.536446 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0510 14:06:42.536531 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-3118 exec execpodx88w5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.98.213.65 80'
  I0510 14:06:42.651308 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.98.213.65 80\nConnection to 10.98.213.65 80 port [tcp/http] succeeded!\n"
  I0510 14:06:42.651550 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-3118 @ 05/10/24 14:06:42.651
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3118 to expose endpoints map[] @ 05/10/24 14:06:42.661
  I0510 14:06:42.671807 21 service.go:4258] successfully validated that service endpoint-test2 in namespace services-3118 exposes endpoints map[]
  I0510 14:06:42.683220 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3118" for this suite. @ 05/10/24 14:06:42.686
• [11.850 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 05/10/24 14:06:42.689
  I0510 14:06:42.689947 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 14:06:42.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:06:42.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:06:42.706
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 05/10/24 14:06:42.709
  STEP: Saw pod success @ 05/10/24 14:06:46.723
  I0510 14:06:46.725090 21 output.go:196] Trying to get logs from node worker-1 pod pod-7a80d313-da76-4954-ae12-681d63067fef container test-container: <nil>
  STEP: delete the pod @ 05/10/24 14:06:46.729
  I0510 14:06:46.739400 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6474" for this suite. @ 05/10/24 14:06:46.741
• [4.056 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 05/10/24 14:06:46.745
  I0510 14:06:46.745585 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename watch @ 05/10/24 14:06:46.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:06:46.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:06:46.757
  STEP: creating a new configmap @ 05/10/24 14:06:46.76
  STEP: modifying the configmap once @ 05/10/24 14:06:46.763
  STEP: modifying the configmap a second time @ 05/10/24 14:06:46.768
  STEP: deleting the configmap @ 05/10/24 14:06:46.773
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 05/10/24 14:06:46.776
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 05/10/24 14:06:46.777
  I0510 14:06:46.777997 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1454  139c6187-75e0-439d-b050-e7dc8eeffb3b 21732 0 2024-05-10 14:06:46 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-05-10 14:06:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0510 14:06:46.778145 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1454  139c6187-75e0-439d-b050-e7dc8eeffb3b 21733 0 2024-05-10 14:06:46 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-05-10 14:06:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0510 14:06:46.778224 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1454" for this suite. @ 05/10/24 14:06:46.78
• [0.042 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 05/10/24 14:06:46.787
  I0510 14:06:46.787208 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename namespaces @ 05/10/24 14:06:46.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:06:46.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:06:46.798
  STEP: Creating namespace "e2e-ns-wpccv" @ 05/10/24 14:06:46.8
  I0510 14:06:46.810445 21 namespace.go:411] Namespace "e2e-ns-wpccv-1252" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-wpccv-1252" @ 05/10/24 14:06:46.81
  I0510 14:06:46.815510 21 namespace.go:434] Namespace "e2e-ns-wpccv-1252" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-wpccv-1252" @ 05/10/24 14:06:46.815
  I0510 14:06:46.822218 21 namespace.go:463] Namespace "e2e-ns-wpccv-1252" has []v1.FinalizerName{"kubernetes"}
  I0510 14:06:46.822490 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1922" for this suite. @ 05/10/24 14:06:46.825
  STEP: Destroying namespace "e2e-ns-wpccv-1252" for this suite. @ 05/10/24 14:06:46.828
• [0.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 05/10/24 14:06:46.833
  I0510 14:06:46.833649 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename deployment @ 05/10/24 14:06:46.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:06:46.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:06:46.844
  I0510 14:06:46.853108 21 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  I0510 14:06:51.856349 21 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/10/24 14:06:51.856
  I0510 14:06:51.856437 21 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I0510 14:06:53.859684 21 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0510 14:06:53.865189 21 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  I0510 14:06:55.870319 21 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0510 14:06:55.874145 21 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0510 14:06:55.877984 21 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0510 14:06:55.886889 21 deployment.go:313] Updating deployment test-rollover-deployment
  I0510 14:06:55.886918 21 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I0510 14:06:57.891133 21 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0510 14:06:57.895343 21 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0510 14:06:57.899220 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0510 14:06:57.899276 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 14, 6, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 14, 6, 53, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 14, 6, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 14, 6, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0510 14:06:59.905188 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0510 14:06:59.905256 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 14, 6, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 14, 6, 53, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 14, 6, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 14, 6, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0510 14:07:01.905032 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0510 14:07:01.905091 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 14, 6, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 14, 6, 53, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 14, 6, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 14, 6, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0510 14:07:03.905659 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0510 14:07:03.905719 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 14, 6, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 14, 6, 53, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 14, 6, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 14, 6, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0510 14:07:05.904114 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0510 14:07:05.904173 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 14, 6, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 14, 6, 53, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 14, 6, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 14, 6, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0510 14:07:07.904603 21 deployment.go:94] 
  I0510 14:07:07.904655 21 deployment.go:974] Ensure that both old replica sets have no replicas
  I0510 14:07:07.910306 21 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6173",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9ba45ed1-8732-4c60-aba2-a6fee0597a28",
      ResourceVersion: (string) (len=5) "21901",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946813,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946815,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946813,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946813,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946813,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-679c966bdf\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0510 14:07:07.914234 21 deployment.go:39] New ReplicaSet "test-rollover-deployment-679c966bdf" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-679c966bdf",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6173",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2ed84544-db32-41a3-96f0-f53c30213b2f",
      ResourceVersion: (string) (len=5) "21891",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946815,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "9ba45ed1-8732-4c60-aba2-a6fee0597a28",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946815,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 62 61 34 35 65  64 31 2d 38 37 33 32 2d  |\"9ba45ed1-8732-|
              00000120  34 63 36 30 2d 61 62 61  32 2d 61 36 66 65 65 30  |4c60-aba2-a6fee0|
              00000130  35 39 37 61 32 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |597a28\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0510 14:07:07.915605 21 deployment.go:44] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0510 14:07:07.916019 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6173",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8ac7dcf8-82c9-4312-aadc-f00d99930015",
      ResourceVersion: (string) (len=5) "21900",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946806,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "9ba45ed1-8732-4c60-aba2-a6fee0597a28",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946806,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  39 62 61 34 35 65 64 31  2d 38 37 33 32 2d 34 63  |9ba45ed1-8732-4c|
              000000c0  36 30 2d 61 62 61 32 2d  61 36 66 65 65 30 35 39  |60-aba2-a6fee059|
              000000d0  37 61 32 38 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |7a28\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0510 14:07:07.917648 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-65bd487b4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6173",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "063c46b3-8686-4624-8a53-a80b9b40222f",
      ResourceVersion: (string) (len=5) "21856",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946813,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "9ba45ed1-8732-4c60-aba2-a6fee0597a28",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946815,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 62 61 34 35 65  64 31 2d 38 37 33 32 2d  |\"9ba45ed1-8732-|
              00000120  34 63 36 30 2d 61 62 61  32 2d 61 36 66 65 65 30  |4c60-aba2-a6fee0|
              00000130  35 39 37 61 32 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |597a28\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946815,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0510 14:07:07.921363 21 deployment.go:67] Pod "test-rollover-deployment-679c966bdf-4q9hv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-679c966bdf-4q9hv",
      GenerateName: (string) (len=36) "test-rollover-deployment-679c966bdf-",
      Namespace: (string) (len=15) "deployment-6173",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "26b0180f-142f-435c-a3a5-fd603ca49ad3",
      ResourceVersion: (string) (len=5) "21868",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946815,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-679c966bdf",
          UID: (types.UID) (len=36) "2ed84544-db32-41a3-96f0-f53c30213b2f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946815,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 65  64 38 34 35 34 34 2d 64  |d\":\"2ed84544-d|
              00000090  62 33 32 2d 34 31 61 33  2d 39 36 66 30 2d 66 35  |b32-41a3-96f0-f5|
              000000a0  33 63 33 30 32 31 33 62  32 66 5c 22 7d 22 3a 7b  |3c30213b2f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  34 5c 22 7d 22 3a 7b 22  |.244.1.24\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-62rl4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-62rl4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946815,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946815,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.48.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.48.105"
        }
      },
      PodIP: (string) (len=11) "10.244.1.24",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.24"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946815,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850946816,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://84f75b307d2d9a3bc0ba495d130fb3fb4adfda9097a69951d32a76bc9f5499c8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0510 14:07:07.923918 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6173" for this suite. @ 05/10/24 14:07:07.926
• [21.098 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:697
  STEP: Creating a kubernetes client @ 05/10/24 14:07:07.931
  I0510 14:07:07.931579 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename job @ 05/10/24 14:07:07.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:07:07.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:07:07.949
  STEP: Creating a job @ 05/10/24 14:07:07.952
  STEP: Ensuring active pods == parallelism @ 05/10/24 14:07:07.957
  STEP: Orphaning one of the Job's Pods @ 05/10/24 14:07:09.96
  I0510 14:07:10.472054 21 pod_client.go:141] Successfully updated pod "adopt-release-lx8jm"
  STEP: Checking that the Job readopts the Pod @ 05/10/24 14:07:10.472
  STEP: Removing the labels from the Job's Pod @ 05/10/24 14:07:12.477
  I0510 14:07:12.988078 21 pod_client.go:141] Successfully updated pod "adopt-release-lx8jm"
  STEP: Checking that the Job releases the Pod @ 05/10/24 14:07:12.988
  I0510 14:07:14.994487 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8196" for this suite. @ 05/10/24 14:07:14.997
• [7.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 05/10/24 14:07:15.001
  I0510 14:07:15.001839 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename secrets @ 05/10/24 14:07:15.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:07:15.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:07:15.014
  STEP: Creating secret with name secret-test-fbcd7ae4-4dd0-4416-a91e-52bad03c24d3 @ 05/10/24 14:07:15.017
  STEP: Creating a pod to test consume secrets @ 05/10/24 14:07:15.02
  STEP: Saw pod success @ 05/10/24 14:07:19.032
  I0510 14:07:19.034973 21 output.go:196] Trying to get logs from node worker-0 pod pod-secrets-bebc687c-851c-4c5a-b832-9adea92aa2fb container secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 14:07:19.046
  I0510 14:07:19.058968 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4549" for this suite. @ 05/10/24 14:07:19.061
• [4.063 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 05/10/24 14:07:19.065
  I0510 14:07:19.065758 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename pods @ 05/10/24 14:07:19.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:07:19.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:07:19.077
  STEP: creating pod @ 05/10/24 14:07:19.08
  I0510 14:07:21.093980 21 pods.go:83] Pod pod-hostip-4fd2cd30-6509-49b4-8da6-10202ea08c06 has hostIP: 10.0.48.105
  I0510 14:07:21.094095 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6112" for this suite. @ 05/10/24 14:07:21.096
• [2.035 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 05/10/24 14:07:21.1
  I0510 14:07:21.100693 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename webhook @ 05/10/24 14:07:21.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:07:21.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:07:21.118
  STEP: Setting up server cert @ 05/10/24 14:07:21.137
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 14:07:21.891
  STEP: Deploying the webhook pod @ 05/10/24 14:07:21.896
  STEP: Wait for the deployment to be ready @ 05/10/24 14:07:21.904
  I0510 14:07:21.911027 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0510 14:07:23.918156 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 14, 7, 21, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 14, 7, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 14, 7, 21, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 14, 7, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0510 14:07:25.921432 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 14, 7, 21, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 14, 7, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 14, 7, 21, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 14, 7, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0510 14:07:27.920737 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 14, 7, 21, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 14, 7, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 14, 7, 21, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 14, 7, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0510 14:07:29.921849 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 14, 7, 21, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 14, 7, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 14, 7, 21, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 14, 7, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0510 14:07:31.921318 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 10, 14, 7, 21, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 14, 7, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 10, 14, 7, 21, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 10, 14, 7, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 05/10/24 14:07:33.921
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 14:07:33.93
  I0510 14:07:34.931466 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0510 14:07:34.935962 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-1150-crds.webhook.example.com via the AdmissionRegistration API @ 05/10/24 14:07:35.446
  STEP: Creating a custom resource that should be mutated by the webhook @ 05/10/24 14:07:35.462
  I0510 14:07:38.039235 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1430" for this suite. @ 05/10/24 14:07:38.041
  STEP: Destroying namespace "webhook-markers-9483" for this suite. @ 05/10/24 14:07:38.047
• [16.951 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 05/10/24 14:07:38.052
  I0510 14:07:38.052182 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename sysctl @ 05/10/24 14:07:38.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:07:38.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:07:38.063
  STEP: Creating a pod with one valid and two invalid sysctls @ 05/10/24 14:07:38.066
  I0510 14:07:38.070016 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-567" for this suite. @ 05/10/24 14:07:38.072
• [0.024 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 05/10/24 14:07:38.076
  I0510 14:07:38.076846 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename replicaset @ 05/10/24 14:07:38.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:07:38.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:07:38.087
  I0510 14:07:38.090288 21 replica_set.go:191] Creating ReplicaSet my-hostname-basic-5b7aed22-dbee-4dae-a8bc-4397e543d75a
  I0510 14:07:38.104388 21 resource.go:87] Pod name my-hostname-basic-5b7aed22-dbee-4dae-a8bc-4397e543d75a: Found 0 pods out of 1
  I0510 14:07:43.108850 21 resource.go:87] Pod name my-hostname-basic-5b7aed22-dbee-4dae-a8bc-4397e543d75a: Found 1 pods out of 1
  I0510 14:07:43.108887 21 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-5b7aed22-dbee-4dae-a8bc-4397e543d75a" is running
  I0510 14:07:43.111472 21 replica_set.go:220] Pod "my-hostname-basic-5b7aed22-dbee-4dae-a8bc-4397e543d75a-79z5l" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-10 14:07:39 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-10 14:07:38 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-10 14:07:39 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-10 14:07:39 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-10 14:07:38 +0000 UTC Reason: Message:}])
  I0510 14:07:43.111500 21 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 05/10/24 14:07:43.111
  I0510 14:07:43.122662 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3332" for this suite. @ 05/10/24 14:07:43.125
• [5.053 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 05/10/24 14:07:43.13
  I0510 14:07:43.130473 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename pod-network-test @ 05/10/24 14:07:43.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:07:43.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:07:43.147
  STEP: Performing setup for networking test in namespace pod-network-test-5078 @ 05/10/24 14:07:43.152
  STEP: creating a selector @ 05/10/24 14:07:43.152
  STEP: Creating the service pods in kubernetes @ 05/10/24 14:07:43.152
  I0510 14:07:43.152562 21 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 05/10/24 14:08:05.225
  I0510 14:08:07.235867 21 utils.go:779] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0510 14:08:07.235901 21 networking.go:42] Breadth first check of 10.244.0.164 on host 10.0.48.103...
  I0510 14:08:07.237838 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.31:9080/dial?request=hostname&protocol=http&host=10.244.0.164&port=8083&tries=1'] Namespace:pod-network-test-5078 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0510 14:08:07.237867 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 14:08:07.238357 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0510 14:08:07.238420 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5078/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.31%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.0.164%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0510 14:08:07.305698 21 utils.go:331] Waiting for responses: map[]
  I0510 14:08:07.305742 21 utils.go:335] reached 10.244.0.164 after 0/1 tries
  I0510 14:08:07.305787 21 networking.go:42] Breadth first check of 10.244.1.30 on host 10.0.48.105...
  I0510 14:08:07.307995 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.31:9080/dial?request=hostname&protocol=http&host=10.244.1.30&port=8083&tries=1'] Namespace:pod-network-test-5078 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0510 14:08:07.308028 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 14:08:07.308497 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0510 14:08:07.308566 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5078/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.31%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.1.30%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0510 14:08:07.368041 21 utils.go:331] Waiting for responses: map[]
  I0510 14:08:07.368080 21 utils.go:335] reached 10.244.1.30 after 0/1 tries
  I0510 14:08:07.368099 21 networking.go:53] Going to retry 0 out of 2 pods....
  I0510 14:08:07.368438 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5078" for this suite. @ 05/10/24 14:08:07.371
• [24.246 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 05/10/24 14:08:07.377
  I0510 14:08:07.377712 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename pods @ 05/10/24 14:08:07.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:08:07.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:08:07.389
  I0510 14:08:07.392087 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: creating the pod @ 05/10/24 14:08:07.392
  STEP: submitting the pod to kubernetes @ 05/10/24 14:08:07.392
  I0510 14:08:09.414925 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4026" for this suite. @ 05/10/24 14:08:09.417
• [2.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 05/10/24 14:08:09.421
  I0510 14:08:09.421970 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename kubelet-test @ 05/10/24 14:08:09.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:08:09.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:08:09.433
  I0510 14:08:13.446821 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4196" for this suite. @ 05/10/24 14:08:13.45
• [4.032 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 05/10/24 14:08:13.454
  I0510 14:08:13.454647 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename container-runtime @ 05/10/24 14:08:13.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:08:13.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:08:13.47
  STEP: create the container @ 05/10/24 14:08:13.473
  W0510 14:08:13.481018      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/10/24 14:08:13.481
  STEP: get the container status @ 05/10/24 14:08:16.494
  STEP: the container should be terminated @ 05/10/24 14:08:16.497
  STEP: the termination message should be set @ 05/10/24 14:08:16.497
  I0510 14:08:16.497068 21 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 05/10/24 14:08:16.497
  I0510 14:08:16.505496 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6564" for this suite. @ 05/10/24 14:08:16.508
• [3.058 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 05/10/24 14:08:16.512
  I0510 14:08:16.512382 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename cronjob @ 05/10/24 14:08:16.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:08:16.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:08:16.524
  STEP: Creating a cronjob @ 05/10/24 14:08:16.527
  STEP: creating @ 05/10/24 14:08:16.527
  STEP: getting @ 05/10/24 14:08:16.531
  STEP: listing @ 05/10/24 14:08:16.534
  STEP: watching @ 05/10/24 14:08:16.536
  I0510 14:08:16.536218 21 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 05/10/24 14:08:16.537
  STEP: cluster-wide watching @ 05/10/24 14:08:16.539
  I0510 14:08:16.539171 21 cronjob.go:382] starting watch
  STEP: patching @ 05/10/24 14:08:16.54
  STEP: updating @ 05/10/24 14:08:16.545
  I0510 14:08:16.550652 21 cronjob.go:406] waiting for watch events with expected annotations
  I0510 14:08:16.550690 21 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 05/10/24 14:08:16.55
  STEP: updating /status @ 05/10/24 14:08:16.556
  STEP: get /status @ 05/10/24 14:08:16.561
  STEP: deleting @ 05/10/24 14:08:16.563
  STEP: deleting a collection @ 05/10/24 14:08:16.571
  I0510 14:08:16.577104 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3688" for this suite. @ 05/10/24 14:08:16.579
• [0.071 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:833
  STEP: Creating a kubernetes client @ 05/10/24 14:08:16.583
  I0510 14:08:16.583815 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename job @ 05/10/24 14:08:16.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:08:16.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:08:16.596
  STEP: Creating a job @ 05/10/24 14:08:16.599
  STEP: Ensure pods equal to parallelism count is attached to the job @ 05/10/24 14:08:16.603
  STEP: patching /status @ 05/10/24 14:08:18.607
  STEP: updating /status @ 05/10/24 14:08:18.613
  STEP: get /status @ 05/10/24 14:08:18.618
  I0510 14:08:18.620546 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5155" for this suite. @ 05/10/24 14:08:18.622
• [2.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 05/10/24 14:08:18.627
  I0510 14:08:18.627050 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename field-validation @ 05/10/24 14:08:18.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:08:18.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:08:18.639
  I0510 14:08:18.642426 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 14:08:21.702904 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5189" for this suite. @ 05/10/24 14:08:21.705
• [3.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 05/10/24 14:08:21.709
  I0510 14:08:21.709418 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename sysctl @ 05/10/24 14:08:21.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:08:21.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:08:21.721
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 05/10/24 14:08:21.724
  STEP: Watching for error events or started pod @ 05/10/24 14:08:21.729
  STEP: Waiting for pod completion @ 05/10/24 14:08:23.733
  STEP: Checking that the pod succeeded @ 05/10/24 14:08:23.737
  STEP: Getting logs from the pod @ 05/10/24 14:08:23.737
  STEP: Checking that the sysctl is actually updated @ 05/10/24 14:08:23.754
  I0510 14:08:23.754632 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-1156" for this suite. @ 05/10/24 14:08:23.757
• [2.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 05/10/24 14:08:23.762
  I0510 14:08:23.762728 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename namespaces @ 05/10/24 14:08:23.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:08:23.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:08:23.778
  STEP: Updating Namespace "namespaces-6478" @ 05/10/24 14:08:23.78
  I0510 14:08:23.785919 21 namespace.go:389] Namespace "namespaces-6478" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"890ea765-bccc-4855-a9f1-a8c6d9b99337", "kubernetes.io/metadata.name":"namespaces-6478", "namespaces-6478":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0510 14:08:23.786031 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6478" for this suite. @ 05/10/24 14:08:23.796
• [0.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 05/10/24 14:08:23.8
  I0510 14:08:23.800488 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename deployment @ 05/10/24 14:08:23.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:08:23.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:08:23.812
  I0510 14:08:23.814877 21 deployment.go:1196] Creating deployment "webserver-deployment"
  I0510 14:08:23.819714 21 deployment.go:1200] Waiting for observed generation 1
  I0510 14:08:25.824925 21 deployment.go:1205] Waiting for all required pods to come up
  I0510 14:08:25.830630 21 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 05/10/24 14:08:25.83
  I0510 14:08:25.830785 21 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0510 14:08:25.834767 21 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0510 14:08:25.840495 21 deployment.go:313] Updating deployment webserver-deployment
  I0510 14:08:25.840528 21 deployment.go:1224] Waiting for observed generation 2
  I0510 14:08:27.844876 21 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0510 14:08:27.846917 21 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0510 14:08:27.848758 21 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0510 14:08:27.854291 21 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0510 14:08:27.854319 21 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0510 14:08:27.856062 21 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0510 14:08:27.859502 21 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0510 14:08:27.859535 21 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0510 14:08:27.865161 21 deployment.go:313] Updating deployment webserver-deployment
  I0510 14:08:27.865194 21 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0510 14:08:27.871139 21 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0510 14:08:27.873051 21 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0510 14:08:27.882423 21 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6482",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cb2f8ad4-ba3d-4791-850a-fcd3e20bcef7",
      ResourceVersion: (string) (len=5) "22789",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946903,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-67c89d485c\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0510 14:08:27.890705 21 deployment.go:39] New ReplicaSet "webserver-deployment-67c89d485c" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-67c89d485c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6482",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a01d36d9-232b-4aaf-b5e8-c619c935433a",
      ResourceVersion: (string) (len=5) "22793",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946905,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "cb2f8ad4-ba3d-4791-850a-fcd3e20bcef7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 62 32 66 38 61  64 34 2d 62 61 33 64 2d  |\"cb2f8ad4-ba3d-|
              00000120  34 37 39 31 2d 38 35 30  61 2d 66 63 64 33 65 32  |4791-850a-fcd3e2|
              00000130  30 62 63 65 66 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0bcef7\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0510 14:08:27.892119 21 deployment.go:44] All old ReplicaSets of Deployment "webserver-deployment":
  I0510 14:08:27.892455 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-77db57d8df",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6482",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bf12fdd6-a98a-4c8d-8609-89fa6ee898e9",
      ResourceVersion: (string) (len=5) "22790",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946903,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "cb2f8ad4-ba3d-4791-850a-fcd3e20bcef7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 62 32 66 38 61  64 34 2d 62 61 33 64 2d  |\"cb2f8ad4-ba3d-|
              00000120  34 37 39 31 2d 38 35 30  61 2d 66 63 64 33 65 32  |4791-850a-fcd3e2|
              00000130  30 62 63 65 66 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0bcef7\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0510 14:08:27.902533 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-24wk7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-24wk7",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-6482",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "83f452eb-08b9-47b7-827c-77db4c75da8e",
      ResourceVersion: (string) (len=5) "22809",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946907,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "a01d36d9-232b-4aaf-b5e8-c619c935433a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 30  31 64 33 36 64 39 2d 32  |d\":\"a01d36d9-2|
              00000090  33 32 62 2d 34 61 61 66  2d 62 35 65 38 2d 63 36  |32b-4aaf-b5e8-c6|
              000000a0  31 39 63 39 33 35 34 33  33 61 5c 22 7d 22 3a 7b  |19c935433a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w5bwh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w5bwh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0510 14:08:27.905210 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-c4qth" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-c4qth",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-6482",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a487d51c-1546-42d1-8424-14b4221a4102",
      ResourceVersion: (string) (len=5) "22738",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946905,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "a01d36d9-232b-4aaf-b5e8-c619c935433a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 30  31 64 33 36 64 39 2d 32  |d\":\"a01d36d9-2|
              00000090  33 32 62 2d 34 61 61 66  2d 62 35 65 38 2d 63 36  |32b-4aaf-b5e8-c6|
              000000a0  31 39 63 39 33 35 34 33  33 61 5c 22 7d 22 3a 7b  |19c935433a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8fdxl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8fdxl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.48.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.48.105"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946905,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0510 14:08:27.907893 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-gdfn4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-gdfn4",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-6482",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0c9191b3-eb89-4da9-bba7-2a7dbf59e784",
      ResourceVersion: (string) (len=5) "22780",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946905,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "a01d36d9-232b-4aaf-b5e8-c619c935433a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 30  31 64 33 36 64 39 2d 32  |d\":\"a01d36d9-2|
              00000090  33 32 62 2d 34 61 61 66  2d 62 35 65 38 2d 63 36  |32b-4aaf-b5e8-c6|
              000000a0  31 39 63 39 33 35 34 33  33 61 5c 22 7d 22 3a 7b  |19c935433a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 31 2e 34 32 5c 22  7d 22 3a 7b 22 2e 22 3a  |4.1.42\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s2wxp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s2wxp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.48.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.48.105"
        }
      },
      PodIP: (string) (len=11) "10.244.1.42",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.42"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946905,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0510 14:08:27.910360 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-gdmbq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-gdmbq",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-6482",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "08cd78c3-49fb-4984-91a8-b716bc26b75d",
      ResourceVersion: (string) (len=5) "22812",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946907,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "a01d36d9-232b-4aaf-b5e8-c619c935433a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 30  31 64 33 36 64 39 2d 32  |d\":\"a01d36d9-2|
              00000090  33 32 62 2d 34 61 61 66  2d 62 35 65 38 2d 63 36  |32b-4aaf-b5e8-c6|
              000000a0  31 39 63 39 33 35 34 33  33 61 5c 22 7d 22 3a 7b  |19c935433a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t4sfv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t4sfv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0510 14:08:27.912428 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-jpl25" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-jpl25",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-6482",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ad19e3ec-9449-4dd2-beeb-3ab626c51195",
      ResourceVersion: (string) (len=5) "22783",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946905,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "a01d36d9-232b-4aaf-b5e8-c619c935433a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 30  31 64 33 36 64 39 2d 32  |d\":\"a01d36d9-2|
              00000090  33 32 62 2d 34 61 61 66  2d 62 35 65 38 2d 63 36  |32b-4aaf-b5e8-c6|
              000000a0  31 39 63 39 33 35 34 33  33 61 5c 22 7d 22 3a 7b  |19c935433a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=706) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 30 2e 31 37 31 5c  22 7d 22 3a 7b 22 2e 22  |4.0.171\"}":{"."|
              000002a0  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              000002b0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000002c0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dfgdk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dfgdk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.48.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.48.103"
        }
      },
      PodIP: (string) (len=12) "10.244.0.171",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.171"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946905,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0510 14:08:27.915096 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-pq9rm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-pq9rm",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-6482",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2efa06ec-e9de-43c8-bc47-cbecbbaeef3f",
      ResourceVersion: (string) (len=5) "22756",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946905,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "a01d36d9-232b-4aaf-b5e8-c619c935433a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 30  31 64 33 36 64 39 2d 32  |d\":\"a01d36d9-2|
              00000090  33 32 62 2d 34 61 61 66  2d 62 35 65 38 2d 63 36  |32b-4aaf-b5e8-c6|
              000000a0  31 39 63 39 33 35 34 33  33 61 5c 22 7d 22 3a 7b  |19c935433a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-br9vn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-br9vn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.48.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.48.105"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946905,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0510 14:08:27.926560 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-qnk5p" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-qnk5p",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-6482",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4bbf1aa8-6260-4856-a1a6-5a0ee0d4fe4e",
      ResourceVersion: (string) (len=5) "22804",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946907,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "a01d36d9-232b-4aaf-b5e8-c619c935433a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 30  31 64 33 36 64 39 2d 32  |d\":\"a01d36d9-2|
              00000090  33 32 62 2d 34 61 61 66  2d 62 35 65 38 2d 63 36  |32b-4aaf-b5e8-c6|
              000000a0  31 39 63 39 33 35 34 33  33 61 5c 22 7d 22 3a 7b  |19c935433a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gmkkz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gmkkz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0510 14:08:27.928619 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-t2nv5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-t2nv5",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-6482",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a0f1b97b-5909-406b-a1db-39097c74d281",
      ResourceVersion: (string) (len=5) "22786",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946905,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "a01d36d9-232b-4aaf-b5e8-c619c935433a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 30  31 64 33 36 64 39 2d 32  |d\":\"a01d36d9-2|
              00000090  33 32 62 2d 34 61 61 66  2d 62 35 65 38 2d 63 36  |32b-4aaf-b5e8-c6|
              000000a0  31 39 63 39 33 35 34 33  33 61 5c 22 7d 22 3a 7b  |19c935433a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=706) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 30 2e 31 37 32 5c  22 7d 22 3a 7b 22 2e 22  |4.0.172\"}":{"."|
              000002a0  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              000002b0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000002c0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gx7bh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gx7bh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.48.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.48.103"
        }
      },
      PodIP: (string) (len=12) "10.244.0.172",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.172"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946905,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0510 14:08:27.931769 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-28j5r" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-28j5r",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6482",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dcded979-0673-4cc4-9825-1afce07852cc",
      ResourceVersion: (string) (len=5) "22678",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946903,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "bf12fdd6-a98a-4c8d-8609-89fa6ee898e9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 66  31 32 66 64 64 36 2d 61  |d\":\"bf12fdd6-a|
              00000090  39 38 61 2d 34 63 38 64  2d 38 36 30 39 2d 38 39  |98a-4c8d-8609-89|
              000000a0  66 61 36 65 65 38 39 38  65 39 5c 22 7d 22 3a 7b  |fa6ee898e9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  36 37 5c 22 7d 22 3a 7b  |.244.0.167\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lgvd8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lgvd8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.48.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.48.103"
        }
      },
      PodIP: (string) (len=12) "10.244.0.167",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.167"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946903,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850946904,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://55d35c65e21ce7edfd7ccc144ba5a0b2fb48fb9eb6e60f5dc924ea82b7f23ec9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0510 14:08:27.936987 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-2pzdl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-2pzdl",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6482",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3881ffc8-79b8-4c41-8b4e-2a5fd0e83d24",
      ResourceVersion: (string) (len=5) "22805",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946907,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "bf12fdd6-a98a-4c8d-8609-89fa6ee898e9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 66  31 32 66 64 64 36 2d 61  |d\":\"bf12fdd6-a|
              00000090  39 38 61 2d 34 63 38 64  2d 38 36 30 39 2d 38 39  |98a-4c8d-8609-89|
              000000a0  66 61 36 65 65 38 39 38  65 39 5c 22 7d 22 3a 7b  |fa6ee898e9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bs5n4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bs5n4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0510 14:08:27.938607 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-5s99l" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-5s99l",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6482",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0b44883b-0288-4e33-95a5-48ea255b7fa4",
      ResourceVersion: (string) (len=5) "22796",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946907,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "bf12fdd6-a98a-4c8d-8609-89fa6ee898e9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 66  31 32 66 64 64 36 2d 61  |d\":\"bf12fdd6-a|
              00000090  39 38 61 2d 34 63 38 64  2d 38 36 30 39 2d 38 39  |98a-4c8d-8609-89|
              000000a0  66 61 36 65 65 38 39 38  65 39 5c 22 7d 22 3a 7b  |fa6ee898e9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-spg7g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-spg7g",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0510 14:08:27.940293 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-5xplr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-5xplr",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6482",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "851431fb-9bd4-4cae-90f8-037ac34a17da",
      ResourceVersion: (string) (len=5) "22806",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946907,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "bf12fdd6-a98a-4c8d-8609-89fa6ee898e9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 66  31 32 66 64 64 36 2d 61  |d\":\"bf12fdd6-a|
              00000090  39 38 61 2d 34 63 38 64  2d 38 36 30 39 2d 38 39  |98a-4c8d-8609-89|
              000000a0  66 61 36 65 65 38 39 38  65 39 5c 22 7d 22 3a 7b  |fa6ee898e9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hfxq8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hfxq8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0510 14:08:27.941983 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-6pqzg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-6pqzg",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6482",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9d88e90f-8d46-4667-8931-88fd2f7ba804",
      ResourceVersion: (string) (len=5) "22701",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946903,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "bf12fdd6-a98a-4c8d-8609-89fa6ee898e9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 66  31 32 66 64 64 36 2d 61  |d\":\"bf12fdd6-a|
              00000090  39 38 61 2d 34 63 38 64  2d 38 36 30 39 2d 38 39  |98a-4c8d-8609-89|
              000000a0  66 61 36 65 65 38 39 38  65 39 5c 22 7d 22 3a 7b  |fa6ee898e9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 33  39 5c 22 7d 22 3a 7b 22  |.244.1.39\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x86sr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x86sr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.48.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.48.105"
        }
      },
      PodIP: (string) (len=11) "10.244.1.39",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.39"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946903,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850946904,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://88cd3ae68e73b761a157e36585416c6085bfb036ac7f14fe88f690f48cebfc9a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0510 14:08:27.949681 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-7lmv7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-7lmv7",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6482",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "49bde018-01ee-405a-b6c8-23b729f6d79a",
      ResourceVersion: (string) (len=5) "22807",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946907,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "bf12fdd6-a98a-4c8d-8609-89fa6ee898e9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 66  31 32 66 64 64 36 2d 61  |d\":\"bf12fdd6-a|
              00000090  39 38 61 2d 34 63 38 64  2d 38 36 30 39 2d 38 39  |98a-4c8d-8609-89|
              000000a0  66 61 36 65 65 38 39 38  65 39 5c 22 7d 22 3a 7b  |fa6ee898e9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9b984",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9b984",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0510 14:08:27.951489 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-btdw7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-btdw7",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6482",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b0e3b552-2b8f-40ec-87bd-63b0dee6948a",
      ResourceVersion: (string) (len=5) "22698",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946903,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "bf12fdd6-a98a-4c8d-8609-89fa6ee898e9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 66  31 32 66 64 64 36 2d 61  |d\":\"bf12fdd6-a|
              00000090  39 38 61 2d 34 63 38 64  2d 38 36 30 39 2d 38 39  |98a-4c8d-8609-89|
              000000a0  66 61 36 65 65 38 39 38  65 39 5c 22 7d 22 3a 7b  |fa6ee898e9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 34  31 5c 22 7d 22 3a 7b 22  |.244.1.41\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8nf4q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8nf4q",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946905,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.48.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.48.105"
        }
      },
      PodIP: (string) (len=11) "10.244.1.41",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.41"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946903,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850946904,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2979dfe553ea1a91f0066ff3d592437279b3b6e172de7654cbb0b41aad77f4ea",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0510 14:08:27.954246 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-c9lqs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-c9lqs",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6482",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1361df29-0471-4938-be21-ab8704dacba7",
      ResourceVersion: (string) (len=5) "22801",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946907,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "bf12fdd6-a98a-4c8d-8609-89fa6ee898e9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 66  31 32 66 64 64 36 2d 61  |d\":\"bf12fdd6-a|
              00000090  39 38 61 2d 34 63 38 64  2d 38 36 30 39 2d 38 39  |98a-4c8d-8609-89|
              000000a0  66 61 36 65 65 38 39 38  65 39 5c 22 7d 22 3a 7b  |fa6ee898e9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qn2tc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qn2tc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0510 14:08:27.956695 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-cvnbt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-cvnbt",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6482",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5d606639-3f63-4d5b-bf1f-0d7841c4951a",
      ResourceVersion: (string) (len=5) "22690",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946903,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "bf12fdd6-a98a-4c8d-8609-89fa6ee898e9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 66  31 32 66 64 64 36 2d 61  |d\":\"bf12fdd6-a|
              00000090  39 38 61 2d 34 63 38 64  2d 38 36 30 39 2d 38 39  |98a-4c8d-8609-89|
              000000a0  66 61 36 65 65 38 39 38  65 39 5c 22 7d 22 3a 7b  |fa6ee898e9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  36 36 5c 22 7d 22 3a 7b  |.244.0.166\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rvjsd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rvjsd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.48.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.48.103"
        }
      },
      PodIP: (string) (len=12) "10.244.0.166",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.166"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946903,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850946904,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b8d58e3b96cda6c58cf4fdec92351adc1cfd8cf4ac547be23d68273883f2c5ea",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0510 14:08:27.960601 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-d7s7x" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-d7s7x",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6482",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e253e02e-f570-4461-b89e-7d38dd518cd1",
      ResourceVersion: (string) (len=5) "22803",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946907,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "bf12fdd6-a98a-4c8d-8609-89fa6ee898e9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 66  31 32 66 64 64 36 2d 61  |d\":\"bf12fdd6-a|
              00000090  39 38 61 2d 34 63 38 64  2d 38 36 30 39 2d 38 39  |98a-4c8d-8609-89|
              000000a0  66 61 36 65 65 38 39 38  65 39 5c 22 7d 22 3a 7b  |fa6ee898e9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6krkx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6krkx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0510 14:08:27.962425 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-dqs9c" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-dqs9c",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6482",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6aec8b8a-09f5-4a05-ab57-55f3192b70c1",
      ResourceVersion: (string) (len=5) "22684",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946903,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "bf12fdd6-a98a-4c8d-8609-89fa6ee898e9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 66  31 32 66 64 64 36 2d 61  |d\":\"bf12fdd6-a|
              00000090  39 38 61 2d 34 63 38 64  2d 38 36 30 39 2d 38 39  |98a-4c8d-8609-89|
              000000a0  66 61 36 65 65 38 39 38  65 39 5c 22 7d 22 3a 7b  |fa6ee898e9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  37 30 5c 22 7d 22 3a 7b  |.244.0.170\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vp6x2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vp6x2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.48.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.48.103"
        }
      },
      PodIP: (string) (len=12) "10.244.0.170",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.170"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946903,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850946904,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0b2cb600353e3b87f9585148fc7f247a3aa3503e2ad8b616f6886d66d38c18ae",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0510 14:08:27.965234 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-j6wk2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-j6wk2",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6482",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ac373357-5cbb-435e-b6eb-2e03946a2811",
      ResourceVersion: (string) (len=5) "22688",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946903,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "bf12fdd6-a98a-4c8d-8609-89fa6ee898e9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 66  31 32 66 64 64 36 2d 61  |d\":\"bf12fdd6-a|
              00000090  39 38 61 2d 34 63 38 64  2d 38 36 30 39 2d 38 39  |98a-4c8d-8609-89|
              000000a0  66 61 36 65 65 38 39 38  65 39 5c 22 7d 22 3a 7b  |fa6ee898e9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  36 39 5c 22 7d 22 3a 7b  |.244.0.169\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bjzbv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bjzbv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.48.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.48.103"
        }
      },
      PodIP: (string) (len=12) "10.244.0.169",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.169"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946903,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850946904,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2596d4e604b6d4eb45d450f0c554e9dbaa57522f6904a2f0dfbf85644b34a64b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0510 14:08:27.970390 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-lxjgq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-lxjgq",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6482",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "83dd7ab3-64f8-4cde-b59e-ff584caf7628",
      ResourceVersion: (string) (len=5) "22676",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946903,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "bf12fdd6-a98a-4c8d-8609-89fa6ee898e9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 66  31 32 66 64 64 36 2d 61  |d\":\"bf12fdd6-a|
              00000090  39 38 61 2d 34 63 38 64  2d 38 36 30 39 2d 38 39  |98a-4c8d-8609-89|
              000000a0  66 61 36 65 65 38 39 38  65 39 5c 22 7d 22 3a 7b  |fa6ee898e9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  36 38 5c 22 7d 22 3a 7b  |.244.0.168\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k4s8d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k4s8d",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.48.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.48.103"
        }
      },
      PodIP: (string) (len=12) "10.244.0.168",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.168"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946903,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850946904,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f18d712d9e690fa19f10adbab985434be67c454f46c5528e6a869acf9ef957d0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0510 14:08:27.972830 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-rp2r8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-rp2r8",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6482",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8e1f68cc-a603-4188-9df5-74640565f251",
      ResourceVersion: (string) (len=5) "22808",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946907,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "bf12fdd6-a98a-4c8d-8609-89fa6ee898e9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 66  31 32 66 64 64 36 2d 61  |d\":\"bf12fdd6-a|
              00000090  39 38 61 2d 34 63 38 64  2d 38 36 30 39 2d 38 39  |98a-4c8d-8609-89|
              000000a0  66 61 36 65 65 38 39 38  65 39 5c 22 7d 22 3a 7b  |fa6ee898e9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-99zhg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-99zhg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0510 14:08:27.975053 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-vmnwz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-vmnwz",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6482",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "46d985ab-1e2c-4cb1-ae09-7e8f6e57665e",
      ResourceVersion: (string) (len=5) "22666",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946903,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "bf12fdd6-a98a-4c8d-8609-89fa6ee898e9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 66  31 32 66 64 64 36 2d 61  |d\":\"bf12fdd6-a|
              00000090  39 38 61 2d 34 63 38 64  2d 38 36 30 39 2d 38 39  |98a-4c8d-8609-89|
              000000a0  66 61 36 65 65 38 39 38  65 39 5c 22 7d 22 3a 7b  |fa6ee898e9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 33  38 5c 22 7d 22 3a 7b 22  |.244.1.38\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qb2gp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qb2gp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946904,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850946903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.48.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.48.105"
        }
      },
      PodIP: (string) (len=11) "10.244.1.38",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.38"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850946903,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850946904,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c6821a1f177e717a4dfa66c8587151f15bbed8da097c67602344673389d9600f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0510 14:08:27.977004 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6482" for this suite. @ 05/10/24 14:08:27.982
• [4.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1759
  STEP: Creating a kubernetes client @ 05/10/24 14:08:27.987
  I0510 14:08:27.987829 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 14:08:27.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:08:27.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:08:28.003
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/10/24 14:08:28.007
  I0510 14:08:28.007506 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-4906 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0510 14:08:28.079762 21 builder.go:146] stderr: ""
  I0510 14:08:28.079803 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 05/10/24 14:08:28.079
  I0510 14:08:28.082519 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-4906 delete pods e2e-test-httpd-pod'
  I0510 14:08:29.600533 21 builder.go:146] stderr: ""
  I0510 14:08:29.600642 21 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0510 14:08:29.600993 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4906" for this suite. @ 05/10/24 14:08:29.603
• [1.619 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 05/10/24 14:08:29.607
  I0510 14:08:29.607371 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 05/10/24 14:08:29.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:08:29.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:08:29.62
  STEP: creating a target pod @ 05/10/24 14:08:29.623
  STEP: adding an ephemeral container @ 05/10/24 14:08:31.634
  STEP: checking pod container endpoints @ 05/10/24 14:08:33.652
  I0510 14:08:33.652765 21 exec_util.go:55] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-8431 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0510 14:08:33.652792 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 14:08:33.653525 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0510 14:08:33.653595 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-8431/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0510 14:08:33.736564 21 exec_util.go:106] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 05/10/24 14:08:33.742
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 05/10/24 14:08:33.744
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 05/10/24 14:08:33.757
  I0510 14:08:33.760830 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-8431" for this suite. @ 05/10/24 14:08:33.765
• [4.167 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 05/10/24 14:08:33.774
  I0510 14:08:33.774881 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/10/24 14:08:33.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:08:33.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:08:33.799
  STEP: creating the policy @ 05/10/24 14:08:33.821
  STEP: waiting until the marker is denied @ 05/10/24 14:08:33.835
  STEP: testing a replicated Deployment to be allowed @ 05/10/24 14:08:34.44
  STEP: testing a non-replicated ReplicaSet not to be denied @ 05/10/24 14:08:34.45
  I0510 14:08:34.485582 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-614" for this suite. @ 05/10/24 14:08:34.49
• [0.721 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 05/10/24 14:08:34.496
  I0510 14:08:34.496461 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename cronjob @ 05/10/24 14:08:34.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:08:34.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:08:34.507
  STEP: Creating a ReplaceConcurrent cronjob @ 05/10/24 14:08:34.51
  STEP: Ensuring a job is scheduled @ 05/10/24 14:08:34.513
  STEP: Ensuring exactly one is scheduled @ 05/10/24 14:09:00.517
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 05/10/24 14:09:00.519
  STEP: Ensuring the job is replaced with a new one @ 05/10/24 14:09:00.521
  STEP: Removing cronjob @ 05/10/24 14:10:00.524
  I0510 14:10:00.528314 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4825" for this suite. @ 05/10/24 14:10:00.53
• [86.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 05/10/24 14:10:00.535
  I0510 14:10:00.535955 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename controllerrevisions @ 05/10/24 14:10:00.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:10:00.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:10:00.555
  STEP: Creating DaemonSet "e2e-6b25d-daemon-set" @ 05/10/24 14:10:00.567
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/10/24 14:10:00.572
  I0510 14:10:00.576584 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-6b25d-daemon-set: 0
  I0510 14:10:00.576623 21 fixtures.go:130] Node worker-0 is running 0 daemon pod, expected 1
  I0510 14:10:01.578394 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-6b25d-daemon-set: 0
  I0510 14:10:01.578434 21 fixtures.go:130] Node worker-0 is running 0 daemon pod, expected 1
  I0510 14:10:02.578032 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-6b25d-daemon-set: 2
  I0510 14:10:02.578069 21 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset e2e-6b25d-daemon-set
  STEP: Confirm DaemonSet "e2e-6b25d-daemon-set" successfully created with "daemonset-name=e2e-6b25d-daemon-set" label @ 05/10/24 14:10:02.58
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-6b25d-daemon-set" @ 05/10/24 14:10:02.584
  I0510 14:10:02.586366 21 controller_revision.go:162] Located ControllerRevision: "e2e-6b25d-daemon-set-7f8f7995cb"
  STEP: Patching ControllerRevision "e2e-6b25d-daemon-set-7f8f7995cb" @ 05/10/24 14:10:02.588
  I0510 14:10:02.592884 21 controller_revision.go:173] e2e-6b25d-daemon-set-7f8f7995cb has been patched
  STEP: Create a new ControllerRevision @ 05/10/24 14:10:02.592
  I0510 14:10:02.598009 21 controller_revision.go:191] Created ControllerRevision: e2e-6b25d-daemon-set-54bd5bd7cb
  STEP: Confirm that there are two ControllerRevisions @ 05/10/24 14:10:02.598
  I0510 14:10:02.598103 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0510 14:10:02.601802 21 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-6b25d-daemon-set-7f8f7995cb" @ 05/10/24 14:10:02.601
  STEP: Confirm that there is only one ControllerRevision @ 05/10/24 14:10:02.605
  I0510 14:10:02.605324 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0510 14:10:02.607131 21 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-6b25d-daemon-set-54bd5bd7cb" @ 05/10/24 14:10:02.608
  I0510 14:10:02.614190 21 controller_revision.go:220] e2e-6b25d-daemon-set-54bd5bd7cb has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 05/10/24 14:10:02.614
  W0510 14:10:02.620008      21 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 05/10/24 14:10:02.62
  I0510 14:10:02.620128 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0510 14:10:03.620453 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0510 14:10:03.622897 21 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-6b25d-daemon-set-54bd5bd7cb=updated" @ 05/10/24 14:10:03.622
  STEP: Confirm that there is only one ControllerRevision @ 05/10/24 14:10:03.627
  I0510 14:10:03.627483 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0510 14:10:03.629369 21 controller_revision.go:265] Found 1 ControllerRevisions
  I0510 14:10:03.631160 21 controller_revision.go:246] ControllerRevision "e2e-6b25d-daemon-set-68fdfbb677" has revision 3
  STEP: Deleting DaemonSet "e2e-6b25d-daemon-set" @ 05/10/24 14:10:03.633
  STEP: deleting DaemonSet.extensions e2e-6b25d-daemon-set in namespace controllerrevisions-5882, will wait for the garbage collector to delete the pods @ 05/10/24 14:10:03.633
  I0510 14:10:03.689467 21 resources.go:139] Deleting DaemonSet.extensions e2e-6b25d-daemon-set took: 3.475842ms
  I0510 14:10:03.789652 21 resources.go:163] Terminating DaemonSet.extensions e2e-6b25d-daemon-set pods took: 100.170442ms
  I0510 14:10:04.891895 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-6b25d-daemon-set: 0
  I0510 14:10:04.891935 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-6b25d-daemon-set
  I0510 14:10:04.893751 21 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"23619"},"items":null}

  I0510 14:10:04.895445 21 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"23619"},"items":null}

  I0510 14:10:04.901571 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-5882" for this suite. @ 05/10/24 14:10:04.903
• [4.372 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 05/10/24 14:10:04.909
  I0510 14:10:04.909155 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename container-runtime @ 05/10/24 14:10:04.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:10:04.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:10:04.92
  STEP: create the container @ 05/10/24 14:10:04.923
  W0510 14:10:04.927831      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 05/10/24 14:10:04.927
  STEP: get the container status @ 05/10/24 14:10:07.938
  STEP: the container should be terminated @ 05/10/24 14:10:07.94
  STEP: the termination message should be set @ 05/10/24 14:10:07.94
  I0510 14:10:07.940927 21 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 05/10/24 14:10:07.94
  I0510 14:10:07.951200 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3923" for this suite. @ 05/10/24 14:10:07.953
• [3.048 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 05/10/24 14:10:07.957
  I0510 14:10:07.957770 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 14:10:07.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:10:07.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:10:07.97
  STEP: Creating a pod to test downward api env vars @ 05/10/24 14:10:07.973
  STEP: Saw pod success @ 05/10/24 14:10:11.987
  I0510 14:10:11.989547 21 output.go:196] Trying to get logs from node worker-0 pod downward-api-95bc4772-f929-44a7-b181-fec1c0bee9c1 container dapi-container: <nil>
  STEP: delete the pod @ 05/10/24 14:10:12.003
  I0510 14:10:12.012781 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2071" for this suite. @ 05/10/24 14:10:12.017
• [4.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 05/10/24 14:10:12.022
  I0510 14:10:12.023044 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename cronjob @ 05/10/24 14:10:12.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:10:12.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:10:12.034
  STEP: Creating a suspended cronjob @ 05/10/24 14:10:12.037
  STEP: Ensuring no jobs are scheduled @ 05/10/24 14:10:12.04
  STEP: Ensuring no job exists by listing jobs explicitly @ 05/10/24 14:15:12.041
  STEP: Removing cronjob @ 05/10/24 14:15:12.043
  I0510 14:15:12.047884 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-488" for this suite. @ 05/10/24 14:15:12.05
• [300.031 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 05/10/24 14:15:12.054
  I0510 14:15:12.054605 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename emptydir-wrapper @ 05/10/24 14:15:12.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:15:12.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:15:12.068
  STEP: Cleaning up the secret @ 05/10/24 14:15:14.092
  STEP: Cleaning up the configmap @ 05/10/24 14:15:14.098
  STEP: Cleaning up the pod @ 05/10/24 14:15:14.101
  I0510 14:15:14.110041 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-4452" for this suite. @ 05/10/24 14:15:14.112
• [2.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 05/10/24 14:15:14.117
  I0510 14:15:14.117355 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename daemonsets @ 05/10/24 14:15:14.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:15:14.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:15:14.128
  STEP: Creating simple DaemonSet "daemon-set" @ 05/10/24 14:15:14.141
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/10/24 14:15:14.145
  I0510 14:15:14.151458 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0510 14:15:14.151497 21 fixtures.go:130] Node worker-0 is running 0 daemon pod, expected 1
  I0510 14:15:15.151174 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0510 14:15:15.151214 21 fixtures.go:130] Node worker-0 is running 0 daemon pod, expected 1
  I0510 14:15:16.151671 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0510 14:15:16.151709 21 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 05/10/24 14:15:16.153
  I0510 14:15:16.166037 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0510 14:15:16.166062 21 fixtures.go:130] Node worker-0 is running 0 daemon pod, expected 1
  I0510 14:15:17.168270 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0510 14:15:17.168426 21 fixtures.go:130] Node worker-0 is running 0 daemon pod, expected 1
  I0510 14:15:18.166660 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0510 14:15:18.166696 21 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/10/24 14:15:18.168
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3094, will wait for the garbage collector to delete the pods @ 05/10/24 14:15:18.168
  I0510 14:15:18.224825 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 3.560984ms
  I0510 14:15:18.325648 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.807973ms
  I0510 14:15:19.528536 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0510 14:15:19.528584 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0510 14:15:19.530512 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"24442"},"items":null}

  I0510 14:15:19.532265 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"24442"},"items":null}

  I0510 14:15:19.538447 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3094" for this suite. @ 05/10/24 14:15:19.54
• [5.429 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 05/10/24 14:15:19.547
  I0510 14:15:19.547058 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 14:15:19.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:15:19.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:15:19.558
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 14:15:19.56
  STEP: Saw pod success @ 05/10/24 14:15:21.573
  I0510 14:15:21.575426 21 output.go:196] Trying to get logs from node worker-1 pod downwardapi-volume-aa8dff2d-1f34-48c8-9cb3-a0de032263a6 container client-container: <nil>
  STEP: delete the pod @ 05/10/24 14:15:21.588
  I0510 14:15:21.597782 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2153" for this suite. @ 05/10/24 14:15:21.6
• [2.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 05/10/24 14:15:21.606
  I0510 14:15:21.606557 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename kubelet-test @ 05/10/24 14:15:21.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:15:21.616
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:15:21.618
  I0510 14:15:23.640019 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8617" for this suite. @ 05/10/24 14:15:23.642
• [2.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 05/10/24 14:15:23.652
  I0510 14:15:23.652755 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename var-expansion @ 05/10/24 14:15:23.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:15:23.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:15:23.666
  STEP: creating the pod with failed condition @ 05/10/24 14:15:23.669
  STEP: updating the pod @ 05/10/24 14:17:23.677
  I0510 14:17:24.186930 21 pod_client.go:141] Successfully updated pod "var-expansion-8e6594df-b47e-4568-bf7f-70d9e5e92fab"
  STEP: waiting for pod running @ 05/10/24 14:17:24.187
  STEP: deleting the pod gracefully @ 05/10/24 14:17:26.193
  I0510 14:17:26.193048 21 delete.go:62] Deleting pod "var-expansion-8e6594df-b47e-4568-bf7f-70d9e5e92fab" in namespace "var-expansion-1097"
  I0510 14:17:26.198440 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-8e6594df-b47e-4568-bf7f-70d9e5e92fab" to be fully deleted
  I0510 14:17:58.254792 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1097" for this suite. @ 05/10/24 14:17:58.257
• [154.609 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 05/10/24 14:17:58.261
  I0510 14:17:58.261653 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 14:17:58.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:17:58.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:17:58.274
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 05/10/24 14:17:58.277
  STEP: Saw pod success @ 05/10/24 14:18:02.291
  I0510 14:18:02.293654 21 output.go:196] Trying to get logs from node worker-1 pod pod-79d5cd26-05d2-45ce-aacb-8c8c7658d21c container test-container: <nil>
  STEP: delete the pod @ 05/10/24 14:18:02.305
  I0510 14:18:02.316830 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8251" for this suite. @ 05/10/24 14:18:02.319
• [4.062 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 05/10/24 14:18:02.323
  I0510 14:18:02.323794 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename emptydir-wrapper @ 05/10/24 14:18:02.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:18:02.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:18:02.335
  STEP: Creating 50 configmaps @ 05/10/24 14:18:02.338
  STEP: Creating RC which spawns configmap-volume pods @ 05/10/24 14:18:02.577
  I0510 14:18:02.703242 21 resource.go:87] Pod name wrapped-volume-race-8fc9133f-7c23-4811-a6e3-70591346c14e: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/10/24 14:18:02.703
  STEP: Creating RC which spawns configmap-volume pods @ 05/10/24 14:18:04.745
  I0510 14:18:04.769776 21 resource.go:87] Pod name wrapped-volume-race-a3b4630c-9e17-4907-8f20-c0378f3bfa3a: Found 0 pods out of 5
  I0510 14:18:09.776807 21 resource.go:87] Pod name wrapped-volume-race-a3b4630c-9e17-4907-8f20-c0378f3bfa3a: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/10/24 14:18:09.776
  STEP: Creating RC which spawns configmap-volume pods @ 05/10/24 14:18:09.791
  I0510 14:18:09.804992 21 resource.go:87] Pod name wrapped-volume-race-c50be637-1027-4754-bbae-9f7cf4d182a1: Found 0 pods out of 5
  I0510 14:18:14.814050 21 resource.go:87] Pod name wrapped-volume-race-c50be637-1027-4754-bbae-9f7cf4d182a1: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/10/24 14:18:14.814
  STEP: deleting ReplicationController wrapped-volume-race-c50be637-1027-4754-bbae-9f7cf4d182a1 in namespace emptydir-wrapper-6405, will wait for the garbage collector to delete the pods @ 05/10/24 14:18:14.826
  I0510 14:18:14.883704 21 resources.go:139] Deleting ReplicationController wrapped-volume-race-c50be637-1027-4754-bbae-9f7cf4d182a1 took: 4.144226ms
  I0510 14:18:14.984689 21 resources.go:163] Terminating ReplicationController wrapped-volume-race-c50be637-1027-4754-bbae-9f7cf4d182a1 pods took: 100.981662ms
  STEP: deleting ReplicationController wrapped-volume-race-a3b4630c-9e17-4907-8f20-c0378f3bfa3a in namespace emptydir-wrapper-6405, will wait for the garbage collector to delete the pods @ 05/10/24 14:18:15.984
  I0510 14:18:16.045622 21 resources.go:139] Deleting ReplicationController wrapped-volume-race-a3b4630c-9e17-4907-8f20-c0378f3bfa3a took: 4.308923ms
  I0510 14:18:16.145920 21 resources.go:163] Terminating ReplicationController wrapped-volume-race-a3b4630c-9e17-4907-8f20-c0378f3bfa3a pods took: 100.294663ms
  STEP: deleting ReplicationController wrapped-volume-race-8fc9133f-7c23-4811-a6e3-70591346c14e in namespace emptydir-wrapper-6405, will wait for the garbage collector to delete the pods @ 05/10/24 14:18:17.046
  I0510 14:18:17.105161 21 resources.go:139] Deleting ReplicationController wrapped-volume-race-8fc9133f-7c23-4811-a6e3-70591346c14e took: 4.04101ms
  I0510 14:18:17.206384 21 resources.go:163] Terminating ReplicationController wrapped-volume-race-8fc9133f-7c23-4811-a6e3-70591346c14e pods took: 101.21493ms
  STEP: Cleaning up the configMaps @ 05/10/24 14:18:18.007
  I0510 14:18:18.183989 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-6405" for this suite. @ 05/10/24 14:18:18.186
• [15.868 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 05/10/24 14:18:18.191
  I0510 14:18:18.191885 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename subpath @ 05/10/24 14:18:18.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:18:18.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:18:18.203
  STEP: Setting up data @ 05/10/24 14:18:18.206
  STEP: Creating pod pod-subpath-test-projected-qlrz @ 05/10/24 14:18:18.215
  STEP: Creating a pod to test atomic-volume-subpath @ 05/10/24 14:18:18.215
  STEP: Saw pod success @ 05/10/24 14:18:42.264
  I0510 14:18:42.266591 21 output.go:196] Trying to get logs from node worker-1 pod pod-subpath-test-projected-qlrz container test-container-subpath-projected-qlrz: <nil>
  STEP: delete the pod @ 05/10/24 14:18:42.272
  STEP: Deleting pod pod-subpath-test-projected-qlrz @ 05/10/24 14:18:42.284
  I0510 14:18:42.284045 21 delete.go:62] Deleting pod "pod-subpath-test-projected-qlrz" in namespace "subpath-9367"
  I0510 14:18:42.286155 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9367" for this suite. @ 05/10/24 14:18:42.288
• [24.100 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 05/10/24 14:18:42.292
  I0510 14:18:42.292474 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename configmap @ 05/10/24 14:18:42.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:18:42.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:18:42.305
  STEP: Creating configMap with name configmap-test-volume-672a5aa6-dbdc-47d9-a4d3-dba7f457cac3 @ 05/10/24 14:18:42.308
  STEP: Creating a pod to test consume configMaps @ 05/10/24 14:18:42.311
  STEP: Saw pod success @ 05/10/24 14:18:46.326
  I0510 14:18:46.328211 21 output.go:196] Trying to get logs from node worker-1 pod pod-configmaps-aad126cc-b802-4a4a-bf67-6a2941653795 container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 14:18:46.333
  I0510 14:18:46.343598 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2107" for this suite. @ 05/10/24 14:18:46.345
• [4.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 05/10/24 14:18:46.351
  I0510 14:18:46.351639 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename kubelet-test @ 05/10/24 14:18:46.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:18:46.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:18:46.363
  STEP: Waiting for pod completion @ 05/10/24 14:18:46.371
  I0510 14:18:50.386480 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4437" for this suite. @ 05/10/24 14:18:50.388
• [4.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 05/10/24 14:18:50.393
  I0510 14:18:50.393521 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename endpointslice @ 05/10/24 14:18:50.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:18:50.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:18:50.407
  I0510 14:18:52.440545 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4825" for this suite. @ 05/10/24 14:18:52.442
• [2.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 05/10/24 14:18:52.447
  I0510 14:18:52.448003 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename projected @ 05/10/24 14:18:52.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:18:52.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:18:52.459
  STEP: Creating configMap with name projected-configmap-test-volume-map-90c256ad-5ae5-4210-b751-87e5454eb23a @ 05/10/24 14:18:52.461
  STEP: Creating a pod to test consume configMaps @ 05/10/24 14:18:52.465
  STEP: Saw pod success @ 05/10/24 14:18:56.48
  I0510 14:18:56.482359 21 output.go:196] Trying to get logs from node worker-1 pod pod-projected-configmaps-030c641d-8b7f-4d33-b734-b8f845c74833 container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 14:18:56.487
  I0510 14:18:56.497187 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7108" for this suite. @ 05/10/24 14:18:56.499
• [4.057 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 05/10/24 14:18:56.505
  I0510 14:18:56.505638 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename apf @ 05/10/24 14:18:56.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:18:56.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:18:56.516
  STEP: getting /apis @ 05/10/24 14:18:56.519
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 05/10/24 14:18:56.523
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 05/10/24 14:18:56.524
  STEP: creating @ 05/10/24 14:18:56.525
  STEP: getting @ 05/10/24 14:18:56.536
  STEP: listing @ 05/10/24 14:18:56.538
  STEP: watching @ 05/10/24 14:18:56.54
  I0510 14:18:56.540750 21 flowcontrol.go:620] starting watch
  STEP: patching @ 05/10/24 14:18:56.541
  STEP: updating @ 05/10/24 14:18:56.545
  I0510 14:18:56.550728 21 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 05/10/24 14:18:56.55
  STEP: patching /status @ 05/10/24 14:18:56.552
  STEP: updating /status @ 05/10/24 14:18:56.557
  STEP: deleting @ 05/10/24 14:18:56.562
  STEP: deleting a collection @ 05/10/24 14:18:56.568
  I0510 14:18:56.579335 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-2198" for this suite. @ 05/10/24 14:18:56.581
• [0.080 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 05/10/24 14:18:56.585
  I0510 14:18:56.585409 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename projected @ 05/10/24 14:18:56.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:18:56.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:18:56.598
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 14:18:56.6
  STEP: Saw pod success @ 05/10/24 14:19:00.615
  I0510 14:19:00.617858 21 output.go:196] Trying to get logs from node worker-1 pod downwardapi-volume-755d817a-e94c-48f9-a9a9-7c5285adfc29 container client-container: <nil>
  STEP: delete the pod @ 05/10/24 14:19:00.624
  I0510 14:19:00.634782 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8817" for this suite. @ 05/10/24 14:19:00.637
• [4.056 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 05/10/24 14:19:00.641
  I0510 14:19:00.641531 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename apf @ 05/10/24 14:19:00.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:19:00.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:19:00.653
  STEP: getting /apis @ 05/10/24 14:19:00.655
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 05/10/24 14:19:00.66
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 05/10/24 14:19:00.661
  STEP: creating @ 05/10/24 14:19:00.662
  STEP: getting @ 05/10/24 14:19:00.672
  STEP: listing @ 05/10/24 14:19:00.674
  STEP: watching @ 05/10/24 14:19:00.677
  I0510 14:19:00.677307 21 flowcontrol.go:394] starting watch
  STEP: patching @ 05/10/24 14:19:00.678
  STEP: updating @ 05/10/24 14:19:00.682
  I0510 14:19:00.691339 21 flowcontrol.go:422] waiting for watch events with expected annotations
  I0510 14:19:00.691414 21 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 05/10/24 14:19:00.691
  STEP: patching /status @ 05/10/24 14:19:00.693
  STEP: updating /status @ 05/10/24 14:19:00.697
  STEP: deleting @ 05/10/24 14:19:00.721
  STEP: deleting a collection @ 05/10/24 14:19:00.728
  I0510 14:19:00.739852 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-4498" for this suite. @ 05/10/24 14:19:00.742
• [0.106 seconds]
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 05/10/24 14:19:00.747
  I0510 14:19:00.747614 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename var-expansion @ 05/10/24 14:19:00.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:19:00.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:19:00.759
  I0510 14:19:02.773110 21 delete.go:62] Deleting pod "var-expansion-8ec456d5-e326-4666-ae87-bc907839c547" in namespace "var-expansion-9599"
  I0510 14:19:02.778916 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-8ec456d5-e326-4666-ae87-bc907839c547" to be fully deleted
  I0510 14:19:04.784555 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9599" for this suite. @ 05/10/24 14:19:04.787
• [4.044 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1833
  STEP: Creating a kubernetes client @ 05/10/24 14:19:04.791
  I0510 14:19:04.791697 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 14:19:04.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:19:04.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:19:04.805
  STEP: starting the proxy server @ 05/10/24 14:19:04.809
  I0510 14:19:04.809500 21 util.go:592] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-8728 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 05/10/24 14:19:04.855
  I0510 14:19:04.862472 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0510 14:19:04.864562 21 kubectl.go:2223] kubectl proxy stdout: Starting to serve on 127.0.0.1:34595

  I0510 14:19:04.864563 21 kubectl.go:2228] kubectl proxy stderr: W0510 14:19:04.854677     697 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-8728" for this suite. @ 05/10/24 14:19:04.864
• [0.077 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 05/10/24 14:19:04.868
  I0510 14:19:04.868816 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename configmap @ 05/10/24 14:19:04.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:19:04.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:19:04.881
  STEP: Creating configMap with name cm-test-opt-del-7847bd98-0050-4ea2-a203-62aa2b0ffa0a @ 05/10/24 14:19:04.886
  STEP: Creating configMap with name cm-test-opt-upd-7d482938-e015-4c85-abd9-9f8084c6c1c4 @ 05/10/24 14:19:04.889
  STEP: Creating the pod @ 05/10/24 14:19:04.892
  STEP: Deleting configmap cm-test-opt-del-7847bd98-0050-4ea2-a203-62aa2b0ffa0a @ 05/10/24 14:19:06.92
  STEP: Updating configmap cm-test-opt-upd-7d482938-e015-4c85-abd9-9f8084c6c1c4 @ 05/10/24 14:19:06.923
  STEP: Creating configMap with name cm-test-opt-create-b0b457df-349d-40c7-8fa0-1de46db70ada @ 05/10/24 14:19:06.927
  STEP: waiting to observe update in volume @ 05/10/24 14:19:06.93
  I0510 14:20:29.250519 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6962" for this suite. @ 05/10/24 14:20:29.252
• [84.390 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 05/10/24 14:20:29.259
  I0510 14:20:29.259031 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename container-probe @ 05/10/24 14:20:29.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:20:29.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:20:29.27
  STEP: Creating pod test-grpc-c77e3b6f-d89d-4ada-8824-6c973be63197 in namespace container-probe-620 @ 05/10/24 14:20:29.273
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/10/24 14:20:31.284
  I0510 14:20:31.287087 21 container_probe.go:1749] Initial restart count of pod test-grpc-c77e3b6f-d89d-4ada-8824-6c973be63197 is 0
  I0510 14:20:31.288931 21 container_probe.go:1759] Get pod test-grpc-c77e3b6f-d89d-4ada-8824-6c973be63197 in namespace container-probe-620
  I0510 14:20:33.292766 21 container_probe.go:1759] Get pod test-grpc-c77e3b6f-d89d-4ada-8824-6c973be63197 in namespace container-probe-620
  I0510 14:20:35.296128 21 container_probe.go:1759] Get pod test-grpc-c77e3b6f-d89d-4ada-8824-6c973be63197 in namespace container-probe-620
  I0510 14:20:37.298608 21 container_probe.go:1759] Get pod test-grpc-c77e3b6f-d89d-4ada-8824-6c973be63197 in namespace container-probe-620
  I0510 14:20:39.302569 21 container_probe.go:1759] Get pod test-grpc-c77e3b6f-d89d-4ada-8824-6c973be63197 in namespace container-probe-620
  I0510 14:20:41.305604 21 container_probe.go:1759] Get pod test-grpc-c77e3b6f-d89d-4ada-8824-6c973be63197 in namespace container-probe-620
  I0510 14:20:43.308786 21 container_probe.go:1759] Get pod test-grpc-c77e3b6f-d89d-4ada-8824-6c973be63197 in namespace container-probe-620
  I0510 14:20:45.312291 21 container_probe.go:1759] Get pod test-grpc-c77e3b6f-d89d-4ada-8824-6c973be63197 in namespace container-probe-620
  I0510 14:20:47.315736 21 container_probe.go:1759] Get pod test-grpc-c77e3b6f-d89d-4ada-8824-6c973be63197 in namespace container-probe-620
  I0510 14:20:49.318088 21 container_probe.go:1759] Get pod test-grpc-c77e3b6f-d89d-4ada-8824-6c973be63197 in namespace container-probe-620
  I0510 14:20:51.322035 21 container_probe.go:1759] Get pod test-grpc-c77e3b6f-d89d-4ada-8824-6c973be63197 in namespace container-probe-620
  I0510 14:20:53.325441 21 container_probe.go:1759] Get pod test-grpc-c77e3b6f-d89d-4ada-8824-6c973be63197 in namespace container-probe-620
  I0510 14:20:55.329144 21 container_probe.go:1759] Get pod test-grpc-c77e3b6f-d89d-4ada-8824-6c973be63197 in namespace container-probe-620
  I0510 14:20:57.332575 21 container_probe.go:1759] Get pod test-grpc-c77e3b6f-d89d-4ada-8824-6c973be63197 in namespace container-probe-620
  I0510 14:20:59.336004 21 container_probe.go:1759] Get pod test-grpc-c77e3b6f-d89d-4ada-8824-6c973be63197 in namespace container-probe-620
  I0510 14:21:01.339322 21 container_probe.go:1759] Get pod test-grpc-c77e3b6f-d89d-4ada-8824-6c973be63197 in namespace container-probe-620
  I0510 14:21:03.342148 21 container_probe.go:1759] Get pod test-grpc-c77e3b6f-d89d-4ada-8824-6c973be63197 in namespace container-probe-620
  I0510 14:21:05.345233 21 container_probe.go:1759] Get pod test-grpc-c77e3b6f-d89d-4ada-8824-6c973be63197 in namespace container-probe-620
  I0510 14:21:07.348460 21 container_probe.go:1759] Get pod test-grpc-c77e3b6f-d89d-4ada-8824-6c973be63197 in namespace container-probe-620
  I0510 14:21:09.351786 21 container_probe.go:1759] Get pod test-grpc-c77e3b6f-d89d-4ada-8824-6c973be63197 in namespace container-probe-620
  I0510 14:21:11.355767 21 container_probe.go:1759] Get pod test-grpc-c77e3b6f-d89d-4ada-8824-6c973be63197 in namespace container-probe-620
  I0510 14:21:13.358926 21 container_probe.go:1759] Get pod test-grpc-c77e3b6f-d89d-4ada-8824-6c973be63197 in namespace container-probe-620
  I0510 14:21:15.362425 21 container_probe.go:1759] Get pod test-grpc-c77e3b6f-d89d-4ada-8824-6c973be63197 in namespace container-probe-620
  I0510 14:21:17.365701 21 container_probe.go:1759] Get pod test-grpc-c77e3b6f-d89d-4ada-8824-6c973be63197 in namespace container-probe-620
  I0510 14:21:19.369015 21 container_probe.go:1759] Get pod test-grpc-c77e3b6f-d89d-4ada-8824-6c973be63197 in namespace container-probe-620
  I0510 14:21:21.372617 21 container_probe.go:1759] Get pod test-grpc-c77e3b6f-d89d-4ada-8824-6c973be63197 in namespace container-probe-620
  I0510 14:21:23.376008 21 container_probe.go:1759] Get pod test-grpc-c77e3b6f-d89d-4ada-8824-6c973be63197 in namespace container-probe-620
  I0510 14:21:25.379370 21 container_probe.go:1759] Get pod test-grpc-c77e3b6f-d89d-4ada-8824-6c973be63197 in namespace container-probe-620
  I0510 14:21:27.382754 21 container_probe.go:1759] Get pod test-grpc-c77e3b6f-d89d-4ada-8824-6c973be63197 in namespace container-probe-620
  I0510 14:21:29.384966 21 container_probe.go:1759] Get pod test-grpc-c77e3b6f-d89d-4ada-8824-6c973be63197 in namespace container-probe-620
  I0510 14:21:31.388474 21 container_probe.go:1759] Get pod test-grpc-c77e3b6f-d89d-4ada-8824-6c973be63197 in namespace container-probe-620
  I0510 14:21:33.391767 21 container_probe.go:1759] Get pod test-grpc-c77e3b6f-d89d-4ada-8824-6c973be63197 in namespace container-probe-620
  I0510 14:21:35.394053 21 container_probe.go:1759] Get pod test-grpc-c77e3b6f-d89d-4ada-8824-6c973be63197 in namespace container-probe-620
  I0510 14:21:35.394093 21 container_probe.go:1763] Restart count of pod container-probe-620/test-grpc-c77e3b6f-d89d-4ada-8824-6c973be63197 is now 1 (1m4.106973113s elapsed)
  STEP: deleting the pod @ 05/10/24 14:21:35.394
  I0510 14:21:35.401678 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-620" for this suite. @ 05/10/24 14:21:35.404
• [66.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 05/10/24 14:21:35.409
  I0510 14:21:35.409134 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename resourcequota @ 05/10/24 14:21:35.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:21:35.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:21:35.42
  STEP: Counting existing ResourceQuota @ 05/10/24 14:21:35.423
  STEP: Creating a ResourceQuota @ 05/10/24 14:21:40.425
  STEP: Ensuring resource quota status is calculated @ 05/10/24 14:21:40.438
  I0510 14:21:42.442454 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5289" for this suite. @ 05/10/24 14:21:42.445
• [7.042 seconds]
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 05/10/24 14:21:42.451
  I0510 14:21:42.451125 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename disruption @ 05/10/24 14:21:42.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:21:42.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:21:42.463
  STEP: creating the pdb @ 05/10/24 14:21:42.465
  STEP: Waiting for the pdb to be processed @ 05/10/24 14:21:42.468
  STEP: updating the pdb @ 05/10/24 14:21:44.471
  STEP: Waiting for the pdb to be processed @ 05/10/24 14:21:44.478
  STEP: patching the pdb @ 05/10/24 14:21:46.481
  STEP: Waiting for the pdb to be processed @ 05/10/24 14:21:46.487
  STEP: Waiting for the pdb to be deleted @ 05/10/24 14:21:48.494
  I0510 14:21:48.496261 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8725" for this suite. @ 05/10/24 14:21:48.498
• [6.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 05/10/24 14:21:48.503
  I0510 14:21:48.503143 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/10/24 14:21:48.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:21:48.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:21:48.516
  STEP: create the container to handle the HTTPGet hook request. @ 05/10/24 14:21:48.521
  STEP: create the pod with lifecycle hook @ 05/10/24 14:21:50.533
  STEP: delete the pod with lifecycle hook @ 05/10/24 14:21:52.544
  STEP: check prestop hook @ 05/10/24 14:21:54.553
  I0510 14:21:54.566560 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4375" for this suite. @ 05/10/24 14:21:54.569
• [6.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 05/10/24 14:21:54.574
  I0510 14:21:54.574981 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename init-container @ 05/10/24 14:21:54.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:21:54.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:21:54.586
  STEP: creating the pod @ 05/10/24 14:21:54.589
  I0510 14:21:54.589079 21 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I0510 14:22:41.123325 21 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-c521d3d1-60d5-480a-99bc-a209bf916baa", GenerateName:"", Namespace:"init-container-7367", SelfLink:"", UID:"250dd603-6b4b-41b3-a672-71124a0cf0df", ResourceVersion:"26330", Generation:0, CreationTimestamp:time.Date(2024, time.May, 10, 14, 21, 54, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"589067054"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 14, 21, 54, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e910e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 10, 14, 22, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e91158), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-tjg5d", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc00382ed80), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-tjg5d", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-tjg5d", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-tjg5d", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc003a5c978), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"worker-1", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0011e9480), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003a5ca00)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003a5ca20)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc003a5ca28), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc003a5ca2c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc001183650), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 10, 14, 21, 56, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 10, 14, 21, 54, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 10, 14, 21, 54, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 10, 14, 21, 54, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 10, 14, 21, 54, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"10.0.48.105", HostIPs:[]v1.HostIP{v1.HostIP{IP:"10.0.48.105"}}, PodIP:"10.244.1.62", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.244.1.62"}}, StartTime:time.Date(2024, time.May, 10, 14, 21, 54, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00030e4d0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00030e540)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://ce63f0df3e3b292e0e97664f701595251e98c2b94dee1055248322e4dbf59d90", Started:(*bool)(0xc003a5caca), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00382ee00), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc003a5cadf), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00382ede0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc003a5caaf), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0510 14:22:41.123491 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7367" for this suite. @ 05/10/24 14:22:41.126
• [46.555 seconds]
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:927
  STEP: Creating a kubernetes client @ 05/10/24 14:22:41.13
  I0510 14:22:41.130592 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename job @ 05/10/24 14:22:41.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:22:41.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:22:41.144
  STEP: Creating a suspended job @ 05/10/24 14:22:41.149
  STEP: Patching the Job @ 05/10/24 14:22:41.152
  STEP: Watching for Job to be patched @ 05/10/24 14:22:41.17
  I0510 14:22:41.172164 21 job.go:1109] Event ADDED observed for Job e2e-4ndwz in namespace job-460 with labels: map[e2e-job-label:e2e-4ndwz] and annotations: map[]
  I0510 14:22:41.172200 21 job.go:1109] Event MODIFIED observed for Job e2e-4ndwz in namespace job-460 with labels: map[e2e-job-label:e2e-4ndwz] and annotations: map[]
  I0510 14:22:41.172222 21 job.go:1112] Event MODIFIED found for Job e2e-4ndwz in namespace job-460 with labels: map[e2e-4ndwz:patched e2e-job-label:e2e-4ndwz] and annotations: map[]
  STEP: Updating the job @ 05/10/24 14:22:41.172
  STEP: Watching for Job to be updated @ 05/10/24 14:22:41.177
  I0510 14:22:41.179156 21 job.go:1112] Event MODIFIED found for Job e2e-4ndwz in namespace job-460 with labels: map[e2e-4ndwz:patched e2e-job-label:e2e-4ndwz] and annotations: map[updated:true]
  I0510 14:22:41.179204 21 job.go:1005] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 05/10/24 14:22:41.179
  I0510 14:22:41.181056 21 job.go:1012] Job: e2e-4ndwz as labels: map[e2e-4ndwz:patched e2e-job-label:e2e-4ndwz]
  STEP: Waiting for job to complete @ 05/10/24 14:22:41.181
  STEP: Delete a job collection with a labelselector @ 05/10/24 14:22:49.184
  STEP: Watching for Job to be deleted @ 05/10/24 14:22:49.189
  I0510 14:22:49.191696 21 job.go:1109] Event MODIFIED observed for Job e2e-4ndwz in namespace job-460 with labels: map[e2e-4ndwz:patched e2e-job-label:e2e-4ndwz] and annotations: map[updated:true]
  I0510 14:22:49.191896 21 job.go:1109] Event MODIFIED observed for Job e2e-4ndwz in namespace job-460 with labels: map[e2e-4ndwz:patched e2e-job-label:e2e-4ndwz] and annotations: map[updated:true]
  I0510 14:22:49.191946 21 job.go:1109] Event MODIFIED observed for Job e2e-4ndwz in namespace job-460 with labels: map[e2e-4ndwz:patched e2e-job-label:e2e-4ndwz] and annotations: map[updated:true]
  I0510 14:22:49.192051 21 job.go:1109] Event MODIFIED observed for Job e2e-4ndwz in namespace job-460 with labels: map[e2e-4ndwz:patched e2e-job-label:e2e-4ndwz] and annotations: map[updated:true]
  I0510 14:22:49.192273 21 job.go:1109] Event MODIFIED observed for Job e2e-4ndwz in namespace job-460 with labels: map[e2e-4ndwz:patched e2e-job-label:e2e-4ndwz] and annotations: map[updated:true]
  I0510 14:22:49.192302 21 job.go:1109] Event MODIFIED observed for Job e2e-4ndwz in namespace job-460 with labels: map[e2e-4ndwz:patched e2e-job-label:e2e-4ndwz] and annotations: map[updated:true]
  I0510 14:22:49.192323 21 job.go:1109] Event MODIFIED observed for Job e2e-4ndwz in namespace job-460 with labels: map[e2e-4ndwz:patched e2e-job-label:e2e-4ndwz] and annotations: map[updated:true]
  I0510 14:22:49.192524 21 job.go:1109] Event MODIFIED observed for Job e2e-4ndwz in namespace job-460 with labels: map[e2e-4ndwz:patched e2e-job-label:e2e-4ndwz] and annotations: map[updated:true]
  I0510 14:22:49.192608 21 job.go:1109] Event MODIFIED observed for Job e2e-4ndwz in namespace job-460 with labels: map[e2e-4ndwz:patched e2e-job-label:e2e-4ndwz] and annotations: map[updated:true]
  I0510 14:22:49.192704 21 job.go:1112] Event DELETED found for Job e2e-4ndwz in namespace job-460 with labels: map[e2e-4ndwz:patched e2e-job-label:e2e-4ndwz] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 05/10/24 14:22:49.192
  I0510 14:22:49.194598 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-460" for this suite. @ 05/10/24 14:22:49.197
• [8.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 05/10/24 14:22:49.207
  I0510 14:22:49.207987 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename podtemplate @ 05/10/24 14:22:49.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:22:49.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:22:49.221
  STEP: Create set of pod templates @ 05/10/24 14:22:49.224
  I0510 14:22:49.227317 21 podtemplates.go:143] created test-podtemplate-1
  I0510 14:22:49.232217 21 podtemplates.go:143] created test-podtemplate-2
  I0510 14:22:49.235155 21 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 05/10/24 14:22:49.235
  STEP: delete collection of pod templates @ 05/10/24 14:22:49.237
  I0510 14:22:49.237144 21 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 05/10/24 14:22:49.245
  I0510 14:22:49.245140 21 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0510 14:22:49.246934 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7416" for this suite. @ 05/10/24 14:22:49.249
• [0.046 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 05/10/24 14:22:49.253
  I0510 14:22:49.253331 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/10/24 14:22:49.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:22:49.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:22:49.266
  I0510 14:22:49.269370 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 05/10/24 14:22:50.517
  I0510 14:22:50.517669 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=crd-publish-openapi-819 --namespace=crd-publish-openapi-819 create -f -'
  I0510 14:22:52.621022 21 builder.go:146] stderr: ""
  I0510 14:22:52.621076 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7281-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0510 14:22:52.621128 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=crd-publish-openapi-819 --namespace=crd-publish-openapi-819 delete e2e-test-crd-publish-openapi-7281-crds test-foo'
  I0510 14:22:52.683830 21 builder.go:146] stderr: ""
  I0510 14:22:52.683873 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7281-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0510 14:22:52.683941 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=crd-publish-openapi-819 --namespace=crd-publish-openapi-819 apply -f -'
  I0510 14:22:52.749888 21 builder.go:146] stderr: ""
  I0510 14:22:52.749928 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7281-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0510 14:22:52.749993 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=crd-publish-openapi-819 --namespace=crd-publish-openapi-819 delete e2e-test-crd-publish-openapi-7281-crds test-foo'
  I0510 14:22:52.810763 21 builder.go:146] stderr: ""
  I0510 14:22:52.810871 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7281-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 05/10/24 14:22:52.81
  I0510 14:22:52.811081 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=crd-publish-openapi-819 --namespace=crd-publish-openapi-819 create -f -'
  I0510 14:22:52.870347 21 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 05/10/24 14:22:52.87
  I0510 14:22:52.870480 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=crd-publish-openapi-819 --namespace=crd-publish-openapi-819 create -f -'
  I0510 14:22:52.927882 21 builder.go:135] rc: 1
  I0510 14:22:52.927972 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=crd-publish-openapi-819 --namespace=crd-publish-openapi-819 apply -f -'
  I0510 14:22:52.990523 21 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 05/10/24 14:22:52.99
  I0510 14:22:52.990951 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=crd-publish-openapi-819 --namespace=crd-publish-openapi-819 create -f -'
  I0510 14:22:53.051454 21 builder.go:135] rc: 1
  I0510 14:22:53.051576 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=crd-publish-openapi-819 --namespace=crd-publish-openapi-819 apply -f -'
  I0510 14:22:53.113911 21 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 05/10/24 14:22:53.113
  I0510 14:22:53.114040 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=crd-publish-openapi-819 explain e2e-test-crd-publish-openapi-7281-crds'
  I0510 14:22:53.172184 21 builder.go:146] stderr: ""
  I0510 14:22:53.172236 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7281-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 05/10/24 14:22:53.172
  I0510 14:22:53.172644 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=crd-publish-openapi-819 explain e2e-test-crd-publish-openapi-7281-crds.metadata'
  I0510 14:22:53.232564 21 builder.go:146] stderr: ""
  I0510 14:22:53.232745 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7281-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0510 14:22:53.233022 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=crd-publish-openapi-819 explain e2e-test-crd-publish-openapi-7281-crds.spec'
  I0510 14:22:53.290436 21 builder.go:146] stderr: ""
  I0510 14:22:53.290483 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7281-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0510 14:22:53.290618 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=crd-publish-openapi-819 explain e2e-test-crd-publish-openapi-7281-crds.spec.bars'
  I0510 14:22:53.348318 21 builder.go:146] stderr: ""
  I0510 14:22:53.348401 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7281-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 05/10/24 14:22:53.348
  I0510 14:22:53.348746 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=crd-publish-openapi-819 explain e2e-test-crd-publish-openapi-7281-crds.spec.bars2'
  I0510 14:22:53.405975 21 builder.go:135] rc: 1
  I0510 14:22:54.645970 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-819" for this suite. @ 05/10/24 14:22:54.652
• [5.403 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 05/10/24 14:22:54.657
  I0510 14:22:54.657363 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename proxy @ 05/10/24 14:22:54.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:22:54.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:22:54.67
  I0510 14:22:54.672626 21 proxy.go:387] Creating pod...
  I0510 14:22:56.682486 21 proxy.go:411] Creating service...
  I0510 14:22:56.695630 21 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7258/pods/agnhost/proxy?method=DELETE
  I0510 14:22:56.703357 21 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0510 14:22:56.703400 21 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7258/pods/agnhost/proxy?method=OPTIONS
  I0510 14:22:56.706308 21 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0510 14:22:56.706338 21 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7258/pods/agnhost/proxy?method=PATCH
  I0510 14:22:56.709365 21 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0510 14:22:56.709395 21 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7258/pods/agnhost/proxy?method=POST
  I0510 14:22:56.712150 21 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0510 14:22:56.712182 21 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7258/pods/agnhost/proxy?method=PUT
  I0510 14:22:56.714897 21 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0510 14:22:56.714928 21 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7258/services/e2e-proxy-test-service/proxy?method=DELETE
  I0510 14:22:56.718764 21 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0510 14:22:56.718802 21 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7258/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0510 14:22:56.722304 21 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0510 14:22:56.722333 21 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7258/services/e2e-proxy-test-service/proxy?method=PATCH
  I0510 14:22:56.725977 21 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0510 14:22:56.726010 21 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7258/services/e2e-proxy-test-service/proxy?method=POST
  I0510 14:22:56.729126 21 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0510 14:22:56.729154 21 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7258/services/e2e-proxy-test-service/proxy?method=PUT
  I0510 14:22:56.732409 21 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0510 14:22:56.732435 21 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7258/pods/agnhost/proxy?method=GET
  I0510 14:22:56.733878 21 proxy.go:487] http.Client request:GET StatusCode:301
  I0510 14:22:56.733905 21 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7258/services/e2e-proxy-test-service/proxy?method=GET
  I0510 14:22:56.735888 21 proxy.go:487] http.Client request:GET StatusCode:301
  I0510 14:22:56.735912 21 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7258/pods/agnhost/proxy?method=HEAD
  I0510 14:22:56.737319 21 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0510 14:22:56.737343 21 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-7258/services/e2e-proxy-test-service/proxy?method=HEAD
  I0510 14:22:56.739308 21 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0510 14:22:56.739469 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7258" for this suite. @ 05/10/24 14:22:56.741
• [2.088 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 05/10/24 14:22:56.745
  I0510 14:22:56.745641 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename security-context @ 05/10/24 14:22:56.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:22:56.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:22:56.757
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 05/10/24 14:22:56.76
  STEP: Saw pod success @ 05/10/24 14:23:00.775
  I0510 14:23:00.777340 21 output.go:196] Trying to get logs from node worker-1 pod security-context-6db6f417-828f-4022-abf0-a9bd10f0ba1a container test-container: <nil>
  STEP: delete the pod @ 05/10/24 14:23:00.788
  I0510 14:23:00.798612 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-9903" for this suite. @ 05/10/24 14:23:00.8
• [4.059 seconds]
------------------------------
SS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 05/10/24 14:23:00.805
  I0510 14:23:00.805046 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename volumeattachment @ 05/10/24 14:23:00.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:23:00.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:23:00.819
  STEP: Create VolumeAttachment "va-e2e-q4nmf" on node "worker-1" @ 05/10/24 14:23:00.824
  STEP: Get VolumeAttachment "va-e2e-q4nmf" on node "worker-1" @ 05/10/24 14:23:00.829
  STEP: Patch VolumeAttachment "va-e2e-q4nmf" on node "worker-1" @ 05/10/24 14:23:00.831
  STEP: List VolumeAttachments with "va-e2e-q4nmf=patched" label @ 05/10/24 14:23:00.834
  STEP: Delete VolumeAttachment "va-e2e-q4nmf" on node "worker-1" @ 05/10/24 14:23:00.836
  STEP: Confirm deletion of VolumeAttachment "va-e2e-q4nmf" on node "worker-1" @ 05/10/24 14:23:00.84
  STEP: Create VolumeAttachment "va-e2e-tdf6d" on node "worker-0" @ 05/10/24 14:23:00.844
  STEP: Update the VolumeAttachment "va-e2e-tdf6d" on node "worker-0" with label "va-e2e=updated" @ 05/10/24 14:23:00.846
  STEP: Create VolumeAttachment "va-e2e-jd529" on node "worker-1" @ 05/10/24 14:23:00.853
  STEP: Update the VolumeAttachment "va-e2e-jd529" on node "worker-1" with label "va-e2e=updated" @ 05/10/24 14:23:00.856
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 05/10/24 14:23:00.861
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 05/10/24 14:23:00.869
  I0510 14:23:00.871484 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-1621" for this suite. @ 05/10/24 14:23:00.873
• [0.072 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 05/10/24 14:23:00.877
  I0510 14:23:00.877692 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename container-probe @ 05/10/24 14:23:00.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:23:00.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:23:00.888
  STEP: Creating pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437 @ 05/10/24 14:23:00.891
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/10/24 14:23:02.901
  I0510 14:23:02.903578 21 container_probe.go:1749] Initial restart count of pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 is 0
  I0510 14:23:02.905457 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:23:04.908358 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:23:06.911655 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:23:08.915378 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:23:10.918115 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:23:12.921361 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:23:14.924356 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:23:16.927009 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:23:18.930804 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:23:20.933162 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:23:22.936111 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:23:24.939573 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:23:26.942096 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:23:28.945833 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:23:30.948459 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:23:32.951428 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:23:34.955158 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:23:36.958647 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:23:38.962262 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:23:40.965347 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:23:42.968408 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:23:44.971170 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:23:46.974573 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:23:48.978227 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:23:50.981861 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:23:52.984937 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:23:54.988635 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:23:56.991740 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:23:58.995223 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:24:00.998830 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:24:03.002007 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:24:05.005559 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:24:07.008746 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:24:09.013110 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:24:11.016755 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:24:13.019731 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:24:15.022622 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:24:17.025289 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:24:19.029086 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:24:21.032604 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:24:23.036389 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:24:25.039086 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:24:27.042523 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:24:29.045425 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:24:31.048769 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:24:33.051902 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:24:35.055640 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:24:37.059130 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:24:39.062614 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:24:41.065399 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:24:43.068456 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:24:45.071270 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:24:47.075124 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:24:49.078614 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:24:51.082197 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:24:53.085123 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:24:55.088225 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:24:57.091695 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:24:59.095795 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:25:01.099423 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:25:03.102782 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:25:05.106488 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:25:07.109120 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:25:09.112772 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:25:11.116389 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:25:13.120145 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:25:15.123862 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:25:17.126279 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:25:19.129937 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:25:21.133505 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:25:23.136580 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:25:25.140264 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:25:27.142654 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:25:29.145038 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:25:31.148593 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:25:33.152576 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:25:35.156445 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:25:37.160028 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:25:39.163626 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:25:41.166181 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:25:43.169416 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:25:45.173092 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:25:47.176440 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:25:49.179996 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:25:51.183669 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:25:53.187754 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:25:55.190454 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:25:57.193878 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:25:59.197623 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:26:01.201253 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:26:03.205274 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:26:05.208964 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:26:07.212275 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:26:09.215924 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:26:11.219444 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:26:13.223458 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:26:15.227179 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:26:17.230681 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:26:19.234306 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:26:21.237955 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:26:23.241532 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:26:25.244840 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:26:27.247314 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:26:29.250965 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:26:31.254723 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:26:33.258612 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:26:35.262196 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:26:37.264617 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:26:39.268087 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:26:41.271919 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:26:43.275046 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:26:45.278707 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:26:47.282048 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:26:49.285588 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:26:51.288460 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:26:53.291543 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:26:55.294448 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:26:57.297807 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:26:59.301362 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  I0510 14:27:01.304418 21 container_probe.go:1759] Get pod liveness-9b22b08b-8c16-4ba0-8ff8-627db6dda6e6 in namespace container-probe-5437
  STEP: deleting the pod @ 05/10/24 14:27:03.305
  I0510 14:27:03.314473 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5437" for this suite. @ 05/10/24 14:27:03.318
• [242.444 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 05/10/24 14:27:03.322
  I0510 14:27:03.322354 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename daemonsets @ 05/10/24 14:27:03.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:27:03.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:27:03.334
  I0510 14:27:03.347051 21 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/10/24 14:27:03.35
  I0510 14:27:03.362987 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0510 14:27:03.363027 21 fixtures.go:130] Node worker-0 is running 0 daemon pod, expected 1
  I0510 14:27:04.355878 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0510 14:27:04.355911 21 fixtures.go:130] Node worker-0 is running 0 daemon pod, expected 1
  I0510 14:27:05.356595 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0510 14:27:05.356633 21 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 05/10/24 14:27:05.364
  STEP: Check that daemon pods images are updated. @ 05/10/24 14:27:05.371
  I0510 14:27:05.374296 21 daemon_set.go:1178] Wrong image for pod: daemon-set-sbtrl. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0510 14:27:05.374325 21 daemon_set.go:1178] Wrong image for pod: daemon-set-tmp8r. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0510 14:27:06.374828 21 daemon_set.go:1183] Pod daemon-set-kqrnh is not available
  I0510 14:27:06.374896 21 daemon_set.go:1178] Wrong image for pod: daemon-set-tmp8r. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0510 14:27:07.373667 21 daemon_set.go:1183] Pod daemon-set-lwhxs is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 05/10/24 14:27:07.375
  I0510 14:27:07.379871 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0510 14:27:07.379901 21 fixtures.go:130] Node worker-0 is running 0 daemon pod, expected 1
  I0510 14:27:08.381484 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0510 14:27:08.381523 21 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/10/24 14:27:08.393
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3161, will wait for the garbage collector to delete the pods @ 05/10/24 14:27:08.393
  I0510 14:27:08.450067 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 4.239293ms
  I0510 14:27:08.551027 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.95447ms
  I0510 14:27:09.953776 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0510 14:27:09.953834 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0510 14:27:09.955876 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"27204"},"items":null}

  I0510 14:27:09.957778 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"27204"},"items":null}

  I0510 14:27:09.964075 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3161" for this suite. @ 05/10/24 14:27:09.966
• [6.650 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 05/10/24 14:27:09.972
  I0510 14:27:09.972925 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename daemonsets @ 05/10/24 14:27:09.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:27:09.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:27:09.983
  STEP: Creating simple DaemonSet "daemon-set" @ 05/10/24 14:27:09.999
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/10/24 14:27:10.003
  I0510 14:27:10.007984 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0510 14:27:10.008018 21 fixtures.go:130] Node worker-0 is running 0 daemon pod, expected 1
  I0510 14:27:11.009092 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0510 14:27:11.009122 21 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 05/10/24 14:27:11.011
  I0510 14:27:11.013221 21 daemon_set.go:912] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 05/10/24 14:27:11.013
  I0510 14:27:11.019228 21 daemon_set.go:932] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 05/10/24 14:27:11.019
  I0510 14:27:11.020939 21 daemon_set.go:957] Observed &DaemonSet event: ADDED
  I0510 14:27:11.021085 21 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0510 14:27:11.021214 21 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0510 14:27:11.021514 21 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0510 14:27:11.021647 21 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0510 14:27:11.021690 21 daemon_set.go:950] Found daemon set daemon-set in namespace daemonsets-4405 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0510 14:27:11.021714 21 daemon_set.go:961] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 05/10/24 14:27:11.021
  STEP: watching for the daemon set status to be patched @ 05/10/24 14:27:11.028
  I0510 14:27:11.029916 21 daemon_set.go:1001] Observed &DaemonSet event: ADDED
  I0510 14:27:11.030044 21 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0510 14:27:11.030213 21 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0510 14:27:11.030520 21 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0510 14:27:11.030647 21 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0510 14:27:11.030685 21 daemon_set.go:997] Observed daemon set daemon-set in namespace daemonsets-4405 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0510 14:27:11.030844 21 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0510 14:27:11.030913 21 daemon_set.go:994] Found daemon set daemon-set in namespace daemonsets-4405 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0510 14:27:11.030935 21 daemon_set.go:1005] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 05/10/24 14:27:11.033
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4405, will wait for the garbage collector to delete the pods @ 05/10/24 14:27:11.033
  I0510 14:27:11.089159 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 3.592048ms
  I0510 14:27:11.189995 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.832814ms
  I0510 14:27:12.892566 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0510 14:27:12.892599 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0510 14:27:12.894430 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"27257"},"items":null}

  I0510 14:27:12.896243 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"27257"},"items":null}

  I0510 14:27:12.902312 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4405" for this suite. @ 05/10/24 14:27:12.904
• [2.936 seconds]
------------------------------
SSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 05/10/24 14:27:12.908
  I0510 14:27:12.908823 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 14:27:12.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:27:12.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:27:12.922
  STEP: Creating a pod to test downward api env vars @ 05/10/24 14:27:12.925
  STEP: Saw pod success @ 05/10/24 14:27:14.937
  I0510 14:27:14.939879 21 output.go:196] Trying to get logs from node worker-1 pod downward-api-925d8cd6-c2fb-4116-9d0e-cad05f316cc9 container dapi-container: <nil>
  STEP: delete the pod @ 05/10/24 14:27:14.953
  I0510 14:27:14.965420 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2921" for this suite. @ 05/10/24 14:27:14.968
• [2.064 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 05/10/24 14:27:14.973
  I0510 14:27:14.973456 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename webhook @ 05/10/24 14:27:14.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:27:14.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:27:14.989
  STEP: Setting up server cert @ 05/10/24 14:27:15.006
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 14:27:15.642
  STEP: Deploying the webhook pod @ 05/10/24 14:27:15.647
  STEP: Wait for the deployment to be ready @ 05/10/24 14:27:15.658
  I0510 14:27:15.663476 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/10/24 14:27:17.669
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 14:27:17.68
  I0510 14:27:18.680749 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 05/10/24 14:27:18.685
  STEP: Creating a custom resource definition that should be denied by the webhook @ 05/10/24 14:27:18.702
  I0510 14:27:18.702037 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 14:27:18.744669 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-247" for this suite. @ 05/10/24 14:27:18.747
  STEP: Destroying namespace "webhook-markers-8894" for this suite. @ 05/10/24 14:27:18.752
• [3.782 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 05/10/24 14:27:18.757
  I0510 14:27:18.757759 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename disruption @ 05/10/24 14:27:18.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:27:18.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:27:18.77
  STEP: Waiting for the pdb to be processed @ 05/10/24 14:27:18.776
  STEP: Updating PodDisruptionBudget status @ 05/10/24 14:27:20.778
  STEP: Waiting for all pods to be running @ 05/10/24 14:27:20.787
  I0510 14:27:20.789864 21 disruption.go:578] running pods: 0 < 1
  STEP: locating a running pod @ 05/10/24 14:27:22.79
  STEP: Waiting for the pdb to be processed @ 05/10/24 14:27:22.798
  STEP: Patching PodDisruptionBudget status @ 05/10/24 14:27:22.802
  STEP: Waiting for the pdb to be processed @ 05/10/24 14:27:22.808
  I0510 14:27:22.810518 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8988" for this suite. @ 05/10/24 14:27:22.814
• [4.060 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 05/10/24 14:27:22.818
  I0510 14:27:22.818520 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename resourcequota @ 05/10/24 14:27:22.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:27:22.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:27:22.829
  STEP: Counting existing ResourceQuota @ 05/10/24 14:27:22.832
  STEP: Creating a ResourceQuota @ 05/10/24 14:27:27.834
  STEP: Ensuring resource quota status is calculated @ 05/10/24 14:27:27.838
  STEP: Creating a ReplicationController @ 05/10/24 14:27:29.842
  STEP: Ensuring resource quota status captures replication controller creation @ 05/10/24 14:27:29.852
  STEP: Deleting a ReplicationController @ 05/10/24 14:27:31.856
  STEP: Ensuring resource quota status released usage @ 05/10/24 14:27:31.86
  I0510 14:27:33.864062 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4045" for this suite. @ 05/10/24 14:27:33.866
• [11.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3572
  STEP: Creating a kubernetes client @ 05/10/24 14:27:33.871
  I0510 14:27:33.871451 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename services @ 05/10/24 14:27:33.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:27:33.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:27:33.885
  STEP: creating a collection of services @ 05/10/24 14:27:33.888
  I0510 14:27:33.888741 21 service.go:3608] Creating e2e-svc-a-rlkdg
  I0510 14:27:33.901494 21 service.go:3608] Creating e2e-svc-b-f27mk
  I0510 14:27:33.913463 21 service.go:3608] Creating e2e-svc-c-7flj5
  STEP: deleting service collection @ 05/10/24 14:27:33.927
  I0510 14:27:33.954163 21 service.go:3643] Collection of services has been deleted
  I0510 14:27:33.954269 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6499" for this suite. @ 05/10/24 14:27:33.956
• [0.090 seconds]
------------------------------
SS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 05/10/24 14:27:33.962
  I0510 14:27:33.962114 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 14:27:33.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:27:33.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:27:33.972
  STEP: Creating a pod to test downward api env vars @ 05/10/24 14:27:33.975
  STEP: Saw pod success @ 05/10/24 14:27:35.986
  I0510 14:27:35.988906 21 output.go:196] Trying to get logs from node worker-1 pod downward-api-9a1475d1-381b-4ead-87e2-d6e61226b0e6 container dapi-container: <nil>
  STEP: delete the pod @ 05/10/24 14:27:35.994
  I0510 14:27:36.005065 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6257" for this suite. @ 05/10/24 14:27:36.008
• [2.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 05/10/24 14:27:36.015
  I0510 14:27:36.015368 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename statefulset @ 05/10/24 14:27:36.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:27:36.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:27:36.027
  STEP: Creating service test in namespace statefulset-7722 @ 05/10/24 14:27:36.03
  STEP: Creating stateful set ss in namespace statefulset-7722 @ 05/10/24 14:27:36.033
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7722 @ 05/10/24 14:27:36.04
  I0510 14:27:36.041920 21 wait.go:40] Found 0 stateful pods, waiting for 1
  I0510 14:27:46.045821 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 05/10/24 14:27:46.045
  I0510 14:27:46.048112 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=statefulset-7722 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0510 14:27:46.165109 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0510 14:27:46.165155 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0510 14:27:46.165175 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0510 14:27:46.167730 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0510 14:27:56.168211 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0510 14:27:56.168254 21 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0510 14:27:56.178295 21 resource.go:168] POD   NODE      PHASE    GRACE  CONDITIONS
  I0510 14:27:56.178349 21 resource.go:175] ss-0  worker-1  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 14:27:36 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 14:27:36 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 14:27:46 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 14:27:46 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 14:27:36 +0000 UTC  }]
  I0510 14:27:56.178371 21 resource.go:178] 
  I0510 14:27:56.178384 21 statefulset.go:2147] StatefulSet ss has not reached scale 3, at 1
  I0510 14:27:57.181376 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 8.997569305s
  I0510 14:27:58.184634 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 7.994561862s
  I0510 14:27:59.187709 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 6.991288105s
  I0510 14:28:00.190659 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 5.988214168s
  I0510 14:28:01.193734 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 4.985265546s
  I0510 14:28:02.197889 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 3.981204933s
  I0510 14:28:03.201020 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 2.978037689s
  I0510 14:28:04.204164 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 1.974914547s
  I0510 14:28:05.207248 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 971.738564ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7722 @ 05/10/24 14:28:06.207
  I0510 14:28:06.210731 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=statefulset-7722 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0510 14:28:06.327099 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0510 14:28:06.327141 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0510 14:28:06.327176 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0510 14:28:06.327267 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=statefulset-7722 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0510 14:28:06.448169 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0510 14:28:06.448207 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0510 14:28:06.448225 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0510 14:28:06.448330 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=statefulset-7722 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0510 14:28:06.560942 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0510 14:28:06.560986 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0510 14:28:06.561004 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0510 14:28:06.563723 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0510 14:28:06.563753 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0510 14:28:06.563765 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 05/10/24 14:28:06.563
  I0510 14:28:06.566332 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=statefulset-7722 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0510 14:28:06.678125 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0510 14:28:06.678205 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0510 14:28:06.678226 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0510 14:28:06.678337 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=statefulset-7722 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0510 14:28:06.805278 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0510 14:28:06.805320 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0510 14:28:06.805339 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0510 14:28:06.805410 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=statefulset-7722 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0510 14:28:06.927099 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0510 14:28:06.927153 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0510 14:28:06.927191 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0510 14:28:06.927208 21 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0510 14:28:06.929172 21 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I0510 14:28:16.936879 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0510 14:28:16.936916 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0510 14:28:16.936928 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0510 14:28:16.945587 21 resource.go:168] POD   NODE      PHASE    GRACE  CONDITIONS
  I0510 14:28:16.945654 21 resource.go:175] ss-0  worker-1  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 14:27:36 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 14:27:36 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 14:28:07 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 14:28:07 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 14:27:36 +0000 UTC  }]
  I0510 14:28:16.945693 21 resource.go:175] ss-1  worker-1  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 14:27:56 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 14:27:56 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 14:28:07 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 14:28:07 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 14:27:56 +0000 UTC  }]
  I0510 14:28:16.945735 21 resource.go:175] ss-2  worker-0  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 14:27:56 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 14:27:56 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 14:28:07 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 14:28:07 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 14:27:56 +0000 UTC  }]
  I0510 14:28:16.945754 21 resource.go:178] 
  I0510 14:28:16.945768 21 statefulset.go:2147] StatefulSet ss has not reached scale 0, at 3
  I0510 14:28:17.948922 21 resource.go:168] POD   NODE      PHASE      GRACE  CONDITIONS
  I0510 14:28:17.948991 21 resource.go:175] ss-2  worker-0  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 14:28:17 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 14:27:56 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 14:28:07 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-10 14:28:07 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-10 14:27:56 +0000 UTC  }]
  I0510 14:28:17.949006 21 resource.go:178] 
  I0510 14:28:17.949018 21 statefulset.go:2147] StatefulSet ss has not reached scale 0, at 1
  I0510 14:28:18.951608 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 7.993817798s
  I0510 14:28:19.954113 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 6.991188183s
  I0510 14:28:20.956718 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 5.988683113s
  I0510 14:28:21.959710 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 4.985438548s
  I0510 14:28:22.962112 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 3.983158004s
  I0510 14:28:23.964703 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 2.980707984s
  I0510 14:28:24.967259 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 1.978121643s
  I0510 14:28:25.970259 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 974.983369ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7722 @ 05/10/24 14:28:26.97
  I0510 14:28:26.973248 21 rest.go:150] Scaling statefulset ss to 0
  I0510 14:28:26.980026 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0510 14:28:26.981901 21 statefulset.go:135] Deleting all statefulset in ns statefulset-7722
  I0510 14:28:26.983665 21 rest.go:150] Scaling statefulset ss to 0
  I0510 14:28:26.989835 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0510 14:28:26.991693 21 rest.go:88] Deleting statefulset ss
  I0510 14:28:26.998956 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7722" for this suite. @ 05/10/24 14:28:27.001
• [50.992 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 05/10/24 14:28:27.008
  I0510 14:28:27.008378 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename gc @ 05/10/24 14:28:27.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:28:27.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:28:27.019
  STEP: create the rc @ 05/10/24 14:28:27.024
  W0510 14:28:27.030396      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 05/10/24 14:28:33.034
  STEP: wait for the rc to be deleted @ 05/10/24 14:28:33.038
  I0510 14:28:34.056704 21 garbage_collector.go:670] 80 pods remaining
  I0510 14:28:34.056853 21 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0510 14:28:34.057105 21 garbage_collector.go:678] 
  I0510 14:28:35.053309 21 garbage_collector.go:670] 74 pods remaining
  I0510 14:28:35.053513 21 garbage_collector.go:677] 74 pods has nil DeletionTimestamp
  I0510 14:28:35.053648 21 garbage_collector.go:678] 
  I0510 14:28:36.050598 21 garbage_collector.go:670] 57 pods remaining
  I0510 14:28:36.050640 21 garbage_collector.go:677] 56 pods has nil DeletionTimestamp
  I0510 14:28:36.050654 21 garbage_collector.go:678] 
  I0510 14:28:37.049266 21 garbage_collector.go:670] 40 pods remaining
  I0510 14:28:37.049308 21 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I0510 14:28:37.049323 21 garbage_collector.go:678] 
  I0510 14:28:38.046795 21 garbage_collector.go:670] 34 pods remaining
  I0510 14:28:38.046838 21 garbage_collector.go:677] 34 pods has nil DeletionTimestamp
  I0510 14:28:38.046916 21 garbage_collector.go:678] 
  I0510 14:28:39.045672 21 garbage_collector.go:670] 17 pods remaining
  I0510 14:28:39.045714 21 garbage_collector.go:677] 16 pods has nil DeletionTimestamp
  I0510 14:28:39.045727 21 garbage_collector.go:678] 
  STEP: Gathering metrics @ 05/10/24 14:28:40.043
  W0510 14:28:40.058637      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0510 14:28:40.059144 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0510 14:28:40.064693 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5168" for this suite. @ 05/10/24 14:28:40.068
• [13.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 05/10/24 14:28:40.075
  I0510 14:28:40.075841 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename proxy @ 05/10/24 14:28:40.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:28:40.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:28:40.094
  I0510 14:28:40.097613 21 proxy.go:293] Creating pod...
  I0510 14:28:42.111953 21 proxy.go:317] Creating service...
  I0510 14:28:42.123399 21 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1445/pods/agnhost/proxy/some/path/with/DELETE
  I0510 14:28:42.129969 21 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0510 14:28:42.130012 21 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1445/pods/agnhost/proxy/some/path/with/GET
  I0510 14:28:42.132930 21 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0510 14:28:42.132959 21 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1445/pods/agnhost/proxy/some/path/with/HEAD
  I0510 14:28:42.135989 21 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0510 14:28:42.136016 21 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1445/pods/agnhost/proxy/some/path/with/OPTIONS
  I0510 14:28:42.138642 21 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0510 14:28:42.138673 21 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1445/pods/agnhost/proxy/some/path/with/PATCH
  I0510 14:28:42.141266 21 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0510 14:28:42.141305 21 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1445/pods/agnhost/proxy/some/path/with/POST
  I0510 14:28:42.143915 21 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0510 14:28:42.143944 21 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1445/pods/agnhost/proxy/some/path/with/PUT
  I0510 14:28:42.146801 21 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0510 14:28:42.146826 21 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1445/services/test-service/proxy/some/path/with/DELETE
  I0510 14:28:42.150333 21 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0510 14:28:42.150398 21 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1445/services/test-service/proxy/some/path/with/GET
  I0510 14:28:42.153697 21 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0510 14:28:42.153732 21 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1445/services/test-service/proxy/some/path/with/HEAD
  I0510 14:28:42.156738 21 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0510 14:28:42.156768 21 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1445/services/test-service/proxy/some/path/with/OPTIONS
  I0510 14:28:42.159938 21 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0510 14:28:42.159970 21 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1445/services/test-service/proxy/some/path/with/PATCH
  I0510 14:28:42.163070 21 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0510 14:28:42.163096 21 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1445/services/test-service/proxy/some/path/with/POST
  I0510 14:28:42.166041 21 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0510 14:28:42.166098 21 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-1445/services/test-service/proxy/some/path/with/PUT
  I0510 14:28:42.169135 21 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0510 14:28:42.169304 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1445" for this suite. @ 05/10/24 14:28:42.171
• [2.100 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 05/10/24 14:28:42.175
  I0510 14:28:42.175752 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename endpointslice @ 05/10/24 14:28:42.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:28:42.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:28:42.188
  I0510 14:28:42.196256 21 endpointslice.go:1045] Endpoints addresses: [10.0.33.170] , ports: [6443]
  I0510 14:28:42.196286 21 endpointslice.go:1075] EndpointSlices addresses: [10.0.33.170] , ports: [6443]
  I0510 14:28:42.196410 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1917" for this suite. @ 05/10/24 14:28:42.198
• [0.027 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 05/10/24 14:28:42.202
  I0510 14:28:42.202634 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename replicaset @ 05/10/24 14:28:42.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:28:42.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:28:42.215
  I0510 14:28:42.224966 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0510 14:28:47.227795 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/10/24 14:28:47.227
  STEP: Scaling up "test-rs" replicaset @ 05/10/24 14:28:47.227
  I0510 14:28:47.237607 21 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 05/10/24 14:28:47.237
  I0510 14:28:47.245179 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1796 with ReadyReplicas 1, AvailableReplicas 1
  I0510 14:28:47.256790 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1796 with ReadyReplicas 1, AvailableReplicas 1
  I0510 14:28:47.275683 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1796 with ReadyReplicas 1, AvailableReplicas 1
  I0510 14:28:47.282732 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1796 with ReadyReplicas 1, AvailableReplicas 1
  I0510 14:28:47.859172 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1796 with ReadyReplicas 2, AvailableReplicas 2
  I0510 14:28:48.288459 21 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-1796 with ReadyReplicas 3 found true
  I0510 14:28:48.288738 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1796" for this suite. @ 05/10/24 14:28:48.294
• [6.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 05/10/24 14:28:48.299
  I0510 14:28:48.299814 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename pods @ 05/10/24 14:28:48.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:28:48.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:28:48.312
  STEP: creating the pod @ 05/10/24 14:28:48.314
  STEP: submitting the pod to kubernetes @ 05/10/24 14:28:48.314
  W0510 14:28:48.322236      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 05/10/24 14:28:50.329
  STEP: updating the pod @ 05/10/24 14:28:50.331
  I0510 14:28:50.839675 21 pod_client.go:141] Successfully updated pod "pod-update-activedeadlineseconds-f7ca057e-502c-4613-bd4d-0b62f55bf95c"
  I0510 14:28:54.848260 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6404" for this suite. @ 05/10/24 14:28:54.85
• [6.559 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 05/10/24 14:28:54.859
  I0510 14:28:54.859609 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename deployment @ 05/10/24 14:28:54.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:28:54.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:28:54.873
  STEP: creating a Deployment @ 05/10/24 14:28:54.881
  STEP: waiting for Deployment to be created @ 05/10/24 14:28:54.885
  STEP: waiting for all Replicas to be Ready @ 05/10/24 14:28:54.887
  I0510 14:28:54.889209 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0510 14:28:54.889237 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0510 14:28:54.898467 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0510 14:28:54.898499 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0510 14:28:54.916124 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0510 14:28:54.916163 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0510 14:28:54.925303 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0510 14:28:54.925326 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0510 14:28:55.898111 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0510 14:28:55.898217 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0510 14:28:56.312970 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 05/10/24 14:28:56.313
  I0510 14:28:56.321233 21 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 05/10/24 14:28:56.321
  I0510 14:28:56.323379 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 0
  I0510 14:28:56.323413 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 0
  I0510 14:28:56.323441 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 0
  I0510 14:28:56.323455 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 0
  I0510 14:28:56.323475 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 0
  I0510 14:28:56.323490 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 0
  I0510 14:28:56.323834 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 0
  I0510 14:28:56.323860 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 0
  I0510 14:28:56.323876 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 1
  I0510 14:28:56.323889 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 1
  I0510 14:28:56.323913 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 2
  I0510 14:28:56.323931 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 2
  I0510 14:28:56.324072 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 2
  I0510 14:28:56.324089 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 2
  I0510 14:28:56.331925 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 2
  I0510 14:28:56.331954 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 2
  I0510 14:28:56.348600 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 2
  I0510 14:28:56.348630 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 2
  I0510 14:28:56.355297 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 1
  I0510 14:28:56.355328 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 1
  I0510 14:28:56.364830 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 1
  I0510 14:28:56.364857 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 1
  I0510 14:28:57.330931 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 2
  I0510 14:28:57.330978 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 2
  I0510 14:28:57.346930 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 1
  STEP: listing Deployments @ 05/10/24 14:28:57.347
  I0510 14:28:57.349711 21 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 05/10/24 14:28:57.349
  I0510 14:28:57.365062 21 deployment.go:360] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 05/10/24 14:28:57.365
  I0510 14:28:57.371031 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0510 14:28:57.374063 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0510 14:28:57.391623 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0510 14:28:57.406612 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0510 14:28:57.422355 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0510 14:28:57.922529 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0510 14:28:58.365647 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0510 14:28:58.384750 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0510 14:28:58.401033 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0510 14:28:58.919292 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 05/10/24 14:28:58.935
  STEP: fetching the DeploymentStatus @ 05/10/24 14:28:58.943
  I0510 14:28:58.949592 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 1
  I0510 14:28:58.949630 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 1
  I0510 14:28:58.949651 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 1
  I0510 14:28:58.949940 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 1
  I0510 14:28:58.949980 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 1
  I0510 14:28:58.950294 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 2
  I0510 14:28:58.950375 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 3
  I0510 14:28:58.950548 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 2
  I0510 14:28:58.950714 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 2
  I0510 14:28:58.950953 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-2656 with ReadyReplicas 3
  STEP: deleting the Deployment @ 05/10/24 14:28:58.951
  I0510 14:28:58.957532 21 deployment.go:475] observed event type MODIFIED
  I0510 14:28:58.957919 21 deployment.go:475] observed event type MODIFIED
  I0510 14:28:58.957994 21 deployment.go:475] observed event type MODIFIED
  I0510 14:28:58.958128 21 deployment.go:475] observed event type MODIFIED
  I0510 14:28:58.958176 21 deployment.go:475] observed event type MODIFIED
  I0510 14:28:58.958399 21 deployment.go:475] observed event type MODIFIED
  I0510 14:28:58.958418 21 deployment.go:475] observed event type MODIFIED
  I0510 14:28:58.958478 21 deployment.go:475] observed event type MODIFIED
  I0510 14:28:58.958533 21 deployment.go:475] observed event type MODIFIED
  I0510 14:28:58.958766 21 deployment.go:475] observed event type MODIFIED
  I0510 14:28:58.958789 21 deployment.go:475] observed event type MODIFIED
  I0510 14:28:58.958808 21 deployment.go:475] observed event type MODIFIED
  I0510 14:28:58.959045 21 deployment.go:475] observed event type MODIFIED
  I0510 14:28:58.962718 21 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0510 14:28:58.965758 21 deployment.go:657] ReplicaSet "test-deployment-5bf4984755":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-5bf4984755",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2656",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7d6500a6-63e0-4138-9408-4604cd2f0139",
      ResourceVersion: (string) (len=5) "29677",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850948134,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5bf4984755"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "c7cea605-a9b1-4bc4-a9af-2a2efd251528",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850948137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 63 37 63 65  61 36 30 35 2d 61 39 62  |":\"c7cea605-a9b|
              00000130  31 2d 34 62 63 34 2d 61  39 61 66 2d 32 61 32 65  |1-4bc4-a9af-2a2e|
              00000140  66 64 32 35 31 35 32 38  5c 22 7d 22 3a 7b 7d 7d  |fd251528\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850948137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "5bf4984755",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "5bf4984755",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0510 14:28:58.970017 21 deployment.go:657] ReplicaSet "test-deployment-65fbf5b65d":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-65fbf5b65d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2656",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2bffaeef-ab64-4df5-9ee2-ae923dbf1c3c",
      ResourceVersion: (string) (len=5) "29758",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850948136,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "65fbf5b65d",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "c7cea605-a9b1-4bc4-a9af-2a2efd251528",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850948138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 63 37 63 65  61 36 30 35 2d 61 39 62  |":\"c7cea605-a9b|
              00000130  31 2d 34 62 63 34 2d 61  39 61 66 2d 32 61 32 65  |1-4bc4-a9af-2a2e|
              00000140  66 64 32 35 31 35 32 38  5c 22 7d 22 3a 7b 7d 7d  |fd251528\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850948138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "65fbf5b65d",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "65fbf5b65d",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0510 14:28:58.977842 21 deployment.go:669] pod: "test-deployment-65fbf5b65d-2gxhm":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-65fbf5b65d-2gxhm",
      GenerateName: (string) (len=27) "test-deployment-65fbf5b65d-",
      Namespace: (string) (len=15) "deployment-2656",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "73b31ea9-19cf-4fe3-823f-5832303fac5f",
      ResourceVersion: (string) (len=5) "29753",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850948137,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850948140,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "65fbf5b65d",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-65fbf5b65d",
          UID: (types.UID) (len=36) "2bffaeef-ab64-4df5-9ee2-ae923dbf1c3c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850948137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  32 62 66 66 61 65 65 66  |uid\":\"2bffaeef|
              000000a0  2d 61 62 36 34 2d 34 64  66 35 2d 39 65 65 32 2d  |-ab64-4df5-9ee2-|
              000000b0  61 65 39 32 33 64 62 66  31 63 33 63 5c 22 7d 22  |ae923dbf1c3c\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850948137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 37  5c 22 7d 22 3a 7b 22 2e  |.244.0.7\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p74z2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p74z2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850948137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850948137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850948137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850948137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850948137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.48.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.48.103"
        }
      },
      PodIP: (string) (len=10) "10.244.0.7",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.244.0.7"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850948137,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850948137,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://53ea0d66d20d687604f52fb0f3b1a95f59db6d8bcc12af50a44034579485c7d8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0510 14:28:58.981034 21 deployment.go:669] pod: "test-deployment-65fbf5b65d-lxt5t":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-65fbf5b65d-lxt5t",
      GenerateName: (string) (len=27) "test-deployment-65fbf5b65d-",
      Namespace: (string) (len=15) "deployment-2656",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4109ee79-88c4-40cf-962c-d017cf29c4fd",
      ResourceVersion: (string) (len=5) "29744",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850948136,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850948140,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "65fbf5b65d",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-65fbf5b65d",
          UID: (types.UID) (len=36) "2bffaeef-ab64-4df5-9ee2-ae923dbf1c3c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850948136,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  32 62 66 66 61 65 65 66  |uid\":\"2bffaeef|
              000000a0  2d 61 62 36 34 2d 34 64  66 35 2d 39 65 65 32 2d  |-ab64-4df5-9ee2-|
              000000b0  61 65 39 32 33 64 62 66  31 63 33 63 5c 22 7d 22  |ae923dbf1c3c\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850948138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=621) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 72 65 61 73 6f 6e  |me":{},"f:reason|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000090  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000000a0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 49  |"k:{\"type\":\"I|
              000000b0  6e 69 74 69 61 6c 69 7a  65 64 5c 22 7d 22 3a 7b  |nitialized\"}":{|
              000000c0  22 2e 22 3a 7b 7d 2c 22  66 3a 6c 61 73 74 50 72  |".":{},"f:lastPr|
              000000d0  6f 62 65 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |obeTime":{},"f:l|
              000000e0  61 73 74 54 72 61 6e 73  69 74 69 6f 6e 54 69 6d  |astTransitionTim|
              000000f0  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000100  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000110  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              00000120  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 50 6f  |k:{\"type\":\"Po|
              00000130  64 52 65 61 64 79 54 6f  53 74 61 72 74 43 6f 6e  |dReadyToStartCon|
              00000140  74 61 69 6e 65 72 73 5c  22 7d 22 3a 7b 22 2e 22  |tainers\"}":{"."|
              00000150  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000160  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000170  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000180  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000190  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 2c 22 6b  |,"f:type":{}},"k|
              000001a0  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 52 65 61  |:{\"type\":\"Rea|
              000001b0  64 79 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |dy\"}":{".":{},"|
              000001c0  66 3a 6c 61 73 74 50 72  6f 62 65 54 69 6d 65 22  |f:lastProbeTime"|
              000001d0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 54 72 61 6e 73  |:{},"f:lastTrans|
              000001e0  69 74 69 6f 6e 54 69 6d  65 22 3a 7b 7d 2c 22 66  |itionTime":{},"f|
              000001f0  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000200  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000210  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000220  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000230  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000240  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000250  3a 70 68 61 73 65 22 3a  7b 7d 2c 22 66 3a 73 74  |:phase":{},"f:st|
              00000260  61 72 74 54 69 6d 65 22  3a 7b 7d 7d 7d           |artTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2z5mp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2z5mp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=9) "Succeeded",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850948138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850948136,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850948138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850948138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850948136,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.48.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.48.105"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850948136,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)({
              ExitCode: (int32) 0,
              Signal: (int32) 0,
              Reason: (string) (len=9) "Completed",
              Message: (string) "",
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850948136,
                  loc: (*time.Location)(<already shown>)
                }
              },
              FinishedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850948138,
                  loc: (*time.Location)(<already shown>)
                }
              },
              ContainerID: (string) (len=77) "containerd://f52bb9edc958bf066e5e35cf57cc233fe435f217a17f8548913b01b799b1f4ea"
            })
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://f52bb9edc958bf066e5e35cf57cc233fe435f217a17f8548913b01b799b1f4ea",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0510 14:28:58.983907 21 deployment.go:657] ReplicaSet "test-deployment-6b9f8f4d48":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6b9f8f4d48",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2656",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "05765688-68da-4655-bb5f-897e01b355c3",
      ResourceVersion: (string) (len=5) "29750",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850948137,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "c7cea605-a9b1-4bc4-a9af-2a2efd251528",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850948138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 63 37 63 65  61 36 30 35 2d 61 39 62  |":\"c7cea605-a9b|
              00000130  31 2d 34 62 63 34 2d 61  39 61 66 2d 32 61 32 65  |1-4bc4-a9af-2a2e|
              00000140  66 64 32 35 31 35 32 38  5c 22 7d 22 3a 7b 7d 7d  |fd251528\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850948138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0510 14:28:58.988042 21 deployment.go:669] pod: "test-deployment-6b9f8f4d48-nrbm4":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6b9f8f4d48-nrbm4",
      GenerateName: (string) (len=27) "test-deployment-6b9f8f4d48-",
      Namespace: (string) (len=15) "deployment-2656",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c106b10c-a2c5-4dbd-880d-1c8900702d15",
      ResourceVersion: (string) (len=5) "29767",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850948138,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850948139,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6b9f8f4d48",
          UID: (types.UID) (len=36) "05765688-68da-4655-bb5f-897e01b355c3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850948138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  30 35 37 36 35 36 38 38  |uid\":\"05765688|
              000000a0  2d 36 38 64 61 2d 34 36  35 35 2d 62 62 35 66 2d  |-68da-4655-bb5f-|
              000000b0  38 39 37 65 30 31 62 33  35 35 63 33 5c 22 7d 22  |897e01b355c3\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850948138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 38  5c 22 7d 22 3a 7b 22 2e  |.244.0.8\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rh8b8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rh8b8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850948138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850948138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850948138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850948138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850948138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.48.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.48.103"
        }
      },
      PodIP: (string) (len=10) "10.244.0.8",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.244.0.8"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850948138,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850948138,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9cc02b9ec11e59fd6301b40db5046c340fa523f627e879a3dac642429fd169d9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0510 14:28:58.990975 21 deployment.go:669] pod: "test-deployment-6b9f8f4d48-tdgnw":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6b9f8f4d48-tdgnw",
      GenerateName: (string) (len=27) "test-deployment-6b9f8f4d48-",
      Namespace: (string) (len=15) "deployment-2656",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a70cf262-fa94-4793-a8a1-a43299f0c925",
      ResourceVersion: (string) (len=5) "29766",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850948137,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850948139,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6b9f8f4d48",
          UID: (types.UID) (len=36) "05765688-68da-4655-bb5f-897e01b355c3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850948137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  30 35 37 36 35 36 38 38  |uid\":\"05765688|
              000000a0  2d 36 38 64 61 2d 34 36  35 35 2d 62 62 35 66 2d  |-68da-4655-bb5f-|
              000000b0  38 39 37 65 30 31 62 33  35 35 63 33 5c 22 7d 22  |897e01b355c3\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850948138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  33 32 5c 22 7d 22 3a 7b  |.244.1.132\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tx5vc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tx5vc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850948138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850948137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850948138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850948138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850948137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.48.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.48.105"
        }
      },
      PodIP: (string) (len=12) "10.244.1.132",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.132"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850948137,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850948137,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://bda056adf43c5f01b2c1c0835304dcaab43e91e7b087a311365652b21a25dc14",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0510 14:28:58.993133 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2656" for this suite. @ 05/10/24 14:28:58.996
• [4.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 05/10/24 14:28:59.002
  I0510 14:28:59.002223 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 14:28:59.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:28:59.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:28:59.013
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 14:28:59.016
  STEP: Saw pod success @ 05/10/24 14:29:03.031
  I0510 14:29:03.033256 21 output.go:196] Trying to get logs from node worker-1 pod downwardapi-volume-cc618993-cf39-4a04-96ff-a9acccb9a0ec container client-container: <nil>
  STEP: delete the pod @ 05/10/24 14:29:03.038
  I0510 14:29:03.049197 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2109" for this suite. @ 05/10/24 14:29:03.051
• [4.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 05/10/24 14:29:03.056
  I0510 14:29:03.056048 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename projected @ 05/10/24 14:29:03.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:29:03.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:29:03.07
  STEP: Creating configMap with name projected-configmap-test-volume-map-cc658973-b5ea-4c91-ad8e-6b533e2180f2 @ 05/10/24 14:29:03.072
  STEP: Creating a pod to test consume configMaps @ 05/10/24 14:29:03.075
  STEP: Saw pod success @ 05/10/24 14:29:07.091
  I0510 14:29:07.093574 21 output.go:196] Trying to get logs from node worker-1 pod pod-projected-configmaps-a5ab84eb-80f1-4ce7-bab6-d9276f545154 container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 14:29:07.098
  I0510 14:29:07.109850 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1330" for this suite. @ 05/10/24 14:29:07.112
• [4.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 05/10/24 14:29:07.119
  I0510 14:29:07.119121 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/10/24 14:29:07.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:29:07.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:29:07.131
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 05/10/24 14:29:07.133
  I0510 14:29:07.134070 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 05/10/24 14:29:12.285
  I0510 14:29:12.286498 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 14:29:13.531882 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 14:29:18.686096 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-243" for this suite. @ 05/10/24 14:29:18.692
• [11.578 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 05/10/24 14:29:18.697
  I0510 14:29:18.697130 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename var-expansion @ 05/10/24 14:29:18.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:29:18.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:29:18.71
  STEP: creating the pod @ 05/10/24 14:29:18.712
  STEP: waiting for pod running @ 05/10/24 14:29:18.717
  STEP: creating a file in subpath @ 05/10/24 14:29:20.722
  I0510 14:29:20.725112 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-3384 PodName:var-expansion-197eccba-0087-4cbc-b5e8-3c7898091223 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0510 14:29:20.725145 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 14:29:20.725654 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0510 14:29:20.725716 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-3384/pods/var-expansion-197eccba-0087-4cbc-b5e8-3c7898091223/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 05/10/24 14:29:20.789
  I0510 14:29:20.791842 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-3384 PodName:var-expansion-197eccba-0087-4cbc-b5e8-3c7898091223 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0510 14:29:20.791873 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 14:29:20.792356 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0510 14:29:20.792418 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-3384/pods/var-expansion-197eccba-0087-4cbc-b5e8-3c7898091223/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 05/10/24 14:29:20.848
  I0510 14:29:21.356752 21 pod_client.go:141] Successfully updated pod "var-expansion-197eccba-0087-4cbc-b5e8-3c7898091223"
  STEP: waiting for annotated pod running @ 05/10/24 14:29:21.356
  STEP: deleting the pod gracefully @ 05/10/24 14:29:21.359
  I0510 14:29:21.359183 21 delete.go:62] Deleting pod "var-expansion-197eccba-0087-4cbc-b5e8-3c7898091223" in namespace "var-expansion-3384"
  I0510 14:29:21.364119 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-197eccba-0087-4cbc-b5e8-3c7898091223" to be fully deleted
  I0510 14:29:53.415421 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3384" for this suite. @ 05/10/24 14:29:53.417
• [34.725 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 05/10/24 14:29:53.422
  I0510 14:29:53.422138 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename proxy @ 05/10/24 14:29:53.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:29:53.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:29:53.433
  STEP: starting an echo server on multiple ports @ 05/10/24 14:29:53.445
  STEP: creating replication controller proxy-service-48h9b in namespace proxy-5328 @ 05/10/24 14:29:53.446
  I0510 14:29:53.452504      21 runners.go:198] Created replication controller with name: proxy-service-48h9b, namespace: proxy-5328, replica count: 1
  I0510 14:29:54.504365      21 runners.go:198] proxy-service-48h9b Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0510 14:29:54.506603 21 proxy.go:230] setup took 1.070242236s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 05/10/24 14:29:54.506
  I0510 14:29:54.515698 21 proxy.go:558] (0) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 8.651391ms)
  I0510 14:29:54.518092 21 proxy.go:558] (0) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 11.391069ms)
  I0510 14:29:54.518944 21 proxy.go:558] (0) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 11.9563ms)
  I0510 14:29:54.519006 21 proxy.go:558] (0) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">test<... (200; 11.667625ms)
  I0510 14:29:54.519033 21 proxy.go:558] (0) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname2/proxy/: bar (200; 12.258108ms)
  I0510 14:29:54.519934 21 proxy.go:558] (0) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">... (200; 12.82445ms)
  I0510 14:29:54.520958 21 proxy.go:558] (0) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 14.0601ms)
  I0510 14:29:54.521395 21 proxy.go:558] (0) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname2/proxy/: bar (200; 14.173135ms)
  I0510 14:29:54.521407 21 proxy.go:558] (0) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname1/proxy/: foo (200; 14.403272ms)
  I0510 14:29:54.525474 21 proxy.go:558] (0) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/rewriteme">test</a> (200; 18.600083ms)
  I0510 14:29:54.526011 21 proxy.go:558] (0) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname1/proxy/: foo (200; 18.869717ms)
  I0510 14:29:54.528677 21 proxy.go:558] (0) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname1/proxy/: tls baz (200; 21.71077ms)
  I0510 14:29:54.528684 21 proxy.go:558] (0) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:460/proxy/: tls baz (200; 21.442453ms)
  I0510 14:29:54.529483 21 proxy.go:558] (0) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname2/proxy/: tls qux (200; 22.287253ms)
  I0510 14:29:54.529742 21 proxy.go:558] (0) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:462/proxy/: tls qux (200; 22.653023ms)
  I0510 14:29:54.532569 21 proxy.go:558] (0) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/tlsrewritem... (200; 25.629012ms)
  I0510 14:29:54.537900 21 proxy.go:558] (1) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 5.279301ms)
  I0510 14:29:54.538389 21 proxy.go:558] (1) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/rewriteme">test</a> (200; 5.638242ms)
  I0510 14:29:54.539627 21 proxy.go:558] (1) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 6.916888ms)
  I0510 14:29:54.540027 21 proxy.go:558] (1) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 7.194101ms)
  I0510 14:29:54.541894 21 proxy.go:558] (1) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/tlsrewritem... (200; 8.883226ms)
  I0510 14:29:54.541890 21 proxy.go:558] (1) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:462/proxy/: tls qux (200; 8.972619ms)
  I0510 14:29:54.542800 21 proxy.go:558] (1) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">test<... (200; 9.923374ms)
  I0510 14:29:54.542914 21 proxy.go:558] (1) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname2/proxy/: bar (200; 10.047547ms)
  I0510 14:29:54.542984 21 proxy.go:558] (1) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname1/proxy/: foo (200; 9.802744ms)
  I0510 14:29:54.543140 21 proxy.go:558] (1) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">... (200; 10.08469ms)
  I0510 14:29:54.543229 21 proxy.go:558] (1) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:460/proxy/: tls baz (200; 10.107493ms)
  I0510 14:29:54.543840 21 proxy.go:558] (1) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname1/proxy/: foo (200; 11.136873ms)
  I0510 14:29:54.544107 21 proxy.go:558] (1) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname2/proxy/: bar (200; 11.039853ms)
  I0510 14:29:54.544435 21 proxy.go:558] (1) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 11.546403ms)
  I0510 14:29:54.544849 21 proxy.go:558] (1) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname1/proxy/: tls baz (200; 11.843596ms)
  I0510 14:29:54.545111 21 proxy.go:558] (1) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname2/proxy/: tls qux (200; 12.27062ms)
  I0510 14:29:54.549983 21 proxy.go:558] (2) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 4.721893ms)
  I0510 14:29:54.550015 21 proxy.go:558] (2) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 4.851805ms)
  I0510 14:29:54.550377 21 proxy.go:558] (2) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:462/proxy/: tls qux (200; 5.075942ms)
  I0510 14:29:54.552937 21 proxy.go:558] (2) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">... (200; 7.599723ms)
  I0510 14:29:54.553038 21 proxy.go:558] (2) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/rewriteme">test</a> (200; 7.457922ms)
  I0510 14:29:54.554159 21 proxy.go:558] (2) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/tlsrewritem... (200; 8.601824ms)
  I0510 14:29:54.555229 21 proxy.go:558] (2) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 9.626111ms)
  I0510 14:29:54.555699 21 proxy.go:558] (2) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname2/proxy/: bar (200; 10.534783ms)
  I0510 14:29:54.555804 21 proxy.go:558] (2) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname1/proxy/: tls baz (200; 10.268904ms)
  I0510 14:29:54.556394 21 proxy.go:558] (2) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname1/proxy/: foo (200; 10.984943ms)
  I0510 14:29:54.556575 21 proxy.go:558] (2) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:460/proxy/: tls baz (200; 11.152882ms)
  I0510 14:29:54.556874 21 proxy.go:558] (2) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname2/proxy/: bar (200; 11.416989ms)
  I0510 14:29:54.557299 21 proxy.go:558] (2) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 11.818082ms)
  I0510 14:29:54.557326 21 proxy.go:558] (2) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname2/proxy/: tls qux (200; 12.138668ms)
  I0510 14:29:54.557461 21 proxy.go:558] (2) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">test<... (200; 12.027906ms)
  I0510 14:29:54.557420 21 proxy.go:558] (2) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname1/proxy/: foo (200; 11.837068ms)
  I0510 14:29:54.563237 21 proxy.go:558] (3) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:462/proxy/: tls qux (200; 4.884545ms)
  I0510 14:29:54.564753 21 proxy.go:558] (3) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/tlsrewritem... (200; 6.078789ms)
  I0510 14:29:54.564822 21 proxy.go:558] (3) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 6.27852ms)
  I0510 14:29:54.564864 21 proxy.go:558] (3) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 6.161463ms)
  I0510 14:29:54.567423 21 proxy.go:558] (3) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 8.830564ms)
  I0510 14:29:54.570969 21 proxy.go:558] (3) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:460/proxy/: tls baz (200; 12.353057ms)
  I0510 14:29:54.571425 21 proxy.go:558] (3) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">test<... (200; 12.97981ms)
  I0510 14:29:54.571693 21 proxy.go:558] (3) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname2/proxy/: bar (200; 13.166527ms)
  I0510 14:29:54.571717 21 proxy.go:558] (3) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 12.921399ms)
  I0510 14:29:54.571861 21 proxy.go:558] (3) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname1/proxy/: foo (200; 13.042348ms)
  I0510 14:29:54.571883 21 proxy.go:558] (3) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname1/proxy/: foo (200; 13.12258ms)
  I0510 14:29:54.571908 21 proxy.go:558] (3) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">... (200; 13.332767ms)
  I0510 14:29:54.571915 21 proxy.go:558] (3) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname2/proxy/: bar (200; 13.164247ms)
  I0510 14:29:54.571972 21 proxy.go:558] (3) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/rewriteme">test</a> (200; 13.339575ms)
  I0510 14:29:54.571986 21 proxy.go:558] (3) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname2/proxy/: tls qux (200; 13.285467ms)
  I0510 14:29:54.572690 21 proxy.go:558] (3) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname1/proxy/: tls baz (200; 13.899766ms)
  I0510 14:29:54.577499 21 proxy.go:558] (4) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname1/proxy/: foo (200; 4.446532ms)
  I0510 14:29:54.578276 21 proxy.go:558] (4) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/tlsrewritem... (200; 5.153397ms)
  I0510 14:29:54.580437 21 proxy.go:558] (4) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname1/proxy/: foo (200; 7.244915ms)
  I0510 14:29:54.580491 21 proxy.go:558] (4) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">... (200; 7.220265ms)
  I0510 14:29:54.580523 21 proxy.go:558] (4) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">test<... (200; 6.906967ms)
  I0510 14:29:54.580944 21 proxy.go:558] (4) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 7.305573ms)
  I0510 14:29:54.582310 21 proxy.go:558] (4) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 8.551478ms)
  I0510 14:29:54.583231 21 proxy.go:558] (4) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/rewriteme">test</a> (200; 9.483563ms)
  I0510 14:29:54.583216 21 proxy.go:558] (4) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:462/proxy/: tls qux (200; 9.310696ms)
  I0510 14:29:54.583367 21 proxy.go:558] (4) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 9.5512ms)
  I0510 14:29:54.583403 21 proxy.go:558] (4) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:460/proxy/: tls baz (200; 10.094167ms)
  I0510 14:29:54.583379 21 proxy.go:558] (4) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 9.521415ms)
  I0510 14:29:54.584355 21 proxy.go:558] (4) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname1/proxy/: tls baz (200; 10.774745ms)
  I0510 14:29:54.584657 21 proxy.go:558] (4) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname2/proxy/: bar (200; 11.27962ms)
  I0510 14:29:54.585350 21 proxy.go:558] (4) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname2/proxy/: bar (200; 11.889723ms)
  I0510 14:29:54.585350 21 proxy.go:558] (4) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname2/proxy/: tls qux (200; 11.553751ms)
  I0510 14:29:54.588880 21 proxy.go:558] (5) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/tlsrewritem... (200; 3.4723ms)
  I0510 14:29:54.590338 21 proxy.go:558] (5) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:460/proxy/: tls baz (200; 4.920901ms)
  I0510 14:29:54.593130 21 proxy.go:558] (5) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 7.383231ms)
  I0510 14:29:54.593513 21 proxy.go:558] (5) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 7.6044ms)
  I0510 14:29:54.594294 21 proxy.go:558] (5) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">test<... (200; 8.580405ms)
  I0510 14:29:54.594307 21 proxy.go:558] (5) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 8.539511ms)
  I0510 14:29:54.594590 21 proxy.go:558] (5) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname1/proxy/: tls baz (200; 8.914796ms)
  I0510 14:29:54.594771 21 proxy.go:558] (5) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">... (200; 8.691824ms)
  I0510 14:29:54.594795 21 proxy.go:558] (5) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/rewriteme">test</a> (200; 8.994415ms)
  I0510 14:29:54.595120 21 proxy.go:558] (5) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:462/proxy/: tls qux (200; 9.107001ms)
  I0510 14:29:54.595525 21 proxy.go:558] (5) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname1/proxy/: foo (200; 9.672114ms)
  I0510 14:29:54.596166 21 proxy.go:558] (5) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 10.627712ms)
  I0510 14:29:54.596660 21 proxy.go:558] (5) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname2/proxy/: tls qux (200; 10.718972ms)
  I0510 14:29:54.596654 21 proxy.go:558] (5) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname2/proxy/: bar (200; 11.035522ms)
  I0510 14:29:54.596975 21 proxy.go:558] (5) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname1/proxy/: foo (200; 11.389674ms)
  I0510 14:29:54.597035 21 proxy.go:558] (5) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname2/proxy/: bar (200; 11.084606ms)
  I0510 14:29:54.603019 21 proxy.go:558] (6) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 5.695508ms)
  I0510 14:29:54.603400 21 proxy.go:558] (6) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 6.016577ms)
  I0510 14:29:54.603655 21 proxy.go:558] (6) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">... (200; 6.195099ms)
  I0510 14:29:54.604854 21 proxy.go:558] (6) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/tlsrewritem... (200; 7.243695ms)
  I0510 14:29:54.605876 21 proxy.go:558] (6) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">test<... (200; 8.24856ms)
  I0510 14:29:54.606035 21 proxy.go:558] (6) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 8.424795ms)
  I0510 14:29:54.606079 21 proxy.go:558] (6) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/rewriteme">test</a> (200; 8.376856ms)
  I0510 14:29:54.606129 21 proxy.go:558] (6) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 8.62744ms)
  I0510 14:29:54.606844 21 proxy.go:558] (6) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:460/proxy/: tls baz (200; 9.583607ms)
  I0510 14:29:54.606974 21 proxy.go:558] (6) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:462/proxy/: tls qux (200; 9.598561ms)
  I0510 14:29:54.607512 21 proxy.go:558] (6) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname1/proxy/: foo (200; 9.860533ms)
  I0510 14:29:54.607923 21 proxy.go:558] (6) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname2/proxy/: bar (200; 10.5053ms)
  I0510 14:29:54.607941 21 proxy.go:558] (6) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname1/proxy/: foo (200; 10.543789ms)
  I0510 14:29:54.608368 21 proxy.go:558] (6) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname2/proxy/: tls qux (200; 10.928721ms)
  I0510 14:29:54.608380 21 proxy.go:558] (6) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname2/proxy/: bar (200; 10.580288ms)
  I0510 14:29:54.609791 21 proxy.go:558] (6) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname1/proxy/: tls baz (200; 12.294745ms)
  I0510 14:29:54.614060 21 proxy.go:558] (7) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 4.230529ms)
  I0510 14:29:54.614065 21 proxy.go:558] (7) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">test<... (200; 4.104782ms)
  I0510 14:29:54.616116 21 proxy.go:558] (7) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/tlsrewritem... (200; 5.880056ms)
  I0510 14:29:54.617789 21 proxy.go:558] (7) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname1/proxy/: tls baz (200; 7.828102ms)
  I0510 14:29:54.618301 21 proxy.go:558] (7) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 8.288909ms)
  I0510 14:29:54.619481 21 proxy.go:558] (7) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 9.23545ms)
  I0510 14:29:54.619532 21 proxy.go:558] (7) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">... (200; 9.324182ms)
  I0510 14:29:54.619648 21 proxy.go:558] (7) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/rewriteme">test</a> (200; 9.375164ms)
  I0510 14:29:54.619790 21 proxy.go:558] (7) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:462/proxy/: tls qux (200; 9.632992ms)
  I0510 14:29:54.619913 21 proxy.go:558] (7) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname2/proxy/: tls qux (200; 9.892839ms)
  I0510 14:29:54.620005 21 proxy.go:558] (7) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:460/proxy/: tls baz (200; 9.954312ms)
  I0510 14:29:54.620600 21 proxy.go:558] (7) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 10.401479ms)
  I0510 14:29:54.620603 21 proxy.go:558] (7) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname1/proxy/: foo (200; 10.527229ms)
  I0510 14:29:54.620881 21 proxy.go:558] (7) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname1/proxy/: foo (200; 10.672005ms)
  I0510 14:29:54.621182 21 proxy.go:558] (7) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname2/proxy/: bar (200; 11.014259ms)
  I0510 14:29:54.623229 21 proxy.go:558] (7) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname2/proxy/: bar (200; 12.880729ms)
  I0510 14:29:54.628553 21 proxy.go:558] (8) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:462/proxy/: tls qux (200; 5.074175ms)
  I0510 14:29:54.629420 21 proxy.go:558] (8) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">test<... (200; 5.613155ms)
  I0510 14:29:54.629755 21 proxy.go:558] (8) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 5.759351ms)
  I0510 14:29:54.629893 21 proxy.go:558] (8) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:460/proxy/: tls baz (200; 6.097049ms)
  I0510 14:29:54.629913 21 proxy.go:558] (8) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">... (200; 5.993599ms)
  I0510 14:29:54.629935 21 proxy.go:558] (8) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 6.058408ms)
  I0510 14:29:54.633299 21 proxy.go:558] (8) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname1/proxy/: tls baz (200; 9.818432ms)
  I0510 14:29:54.633705 21 proxy.go:558] (8) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname2/proxy/: bar (200; 9.848248ms)
  I0510 14:29:54.634569 21 proxy.go:558] (8) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 10.392993ms)
  I0510 14:29:54.634669 21 proxy.go:558] (8) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname2/proxy/: tls qux (200; 10.606408ms)
  I0510 14:29:54.634791 21 proxy.go:558] (8) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/tlsrewritem... (200; 10.74828ms)
  I0510 14:29:54.635180 21 proxy.go:558] (8) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname1/proxy/: foo (200; 11.173478ms)
  I0510 14:29:54.635207 21 proxy.go:558] (8) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 11.157178ms)
  I0510 14:29:54.635244 21 proxy.go:558] (8) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname2/proxy/: bar (200; 11.053584ms)
  I0510 14:29:54.635538 21 proxy.go:558] (8) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/rewriteme">test</a> (200; 11.36631ms)
  I0510 14:29:54.636151 21 proxy.go:558] (8) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname1/proxy/: foo (200; 12.143188ms)
  I0510 14:29:54.642063 21 proxy.go:558] (9) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 5.613318ms)
  I0510 14:29:54.642908 21 proxy.go:558] (9) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 6.619219ms)
  I0510 14:29:54.643145 21 proxy.go:558] (9) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/tlsrewritem... (200; 6.875412ms)
  I0510 14:29:54.644903 21 proxy.go:558] (9) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:462/proxy/: tls qux (200; 8.210759ms)
  I0510 14:29:54.645280 21 proxy.go:558] (9) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:460/proxy/: tls baz (200; 8.723912ms)
  I0510 14:29:54.645326 21 proxy.go:558] (9) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">test<... (200; 8.674215ms)
  I0510 14:29:54.646223 21 proxy.go:558] (9) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname1/proxy/: foo (200; 9.615848ms)
  I0510 14:29:54.646324 21 proxy.go:558] (9) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">... (200; 9.854964ms)
  I0510 14:29:54.647010 21 proxy.go:558] (9) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/rewriteme">test</a> (200; 10.588009ms)
  I0510 14:29:54.647255 21 proxy.go:558] (9) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname1/proxy/: foo (200; 10.709015ms)
  I0510 14:29:54.647288 21 proxy.go:558] (9) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname1/proxy/: tls baz (200; 10.529253ms)
  I0510 14:29:54.647300 21 proxy.go:558] (9) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 10.502385ms)
  I0510 14:29:54.647292 21 proxy.go:558] (9) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname2/proxy/: bar (200; 10.794232ms)
  I0510 14:29:54.647322 21 proxy.go:558] (9) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname2/proxy/: tls qux (200; 10.73719ms)
  I0510 14:29:54.648464 21 proxy.go:558] (9) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 11.818681ms)
  I0510 14:29:54.648464 21 proxy.go:558] (9) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname2/proxy/: bar (200; 11.718959ms)
  I0510 14:29:54.653505 21 proxy.go:558] (10) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/tlsrewritem... (200; 4.969831ms)
  I0510 14:29:54.655860 21 proxy.go:558] (10) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 7.212186ms)
  I0510 14:29:54.656040 21 proxy.go:558] (10) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 7.108289ms)
  I0510 14:29:54.656259 21 proxy.go:558] (10) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">... (200; 7.551344ms)
  I0510 14:29:54.658484 21 proxy.go:558] (10) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">test<... (200; 9.587872ms)
  I0510 14:29:54.658536 21 proxy.go:558] (10) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/rewriteme">test</a> (200; 9.667396ms)
  I0510 14:29:54.658487 21 proxy.go:558] (10) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 9.519463ms)
  I0510 14:29:54.659190 21 proxy.go:558] (10) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname1/proxy/: foo (200; 10.55816ms)
  I0510 14:29:54.659293 21 proxy.go:558] (10) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:460/proxy/: tls baz (200; 10.528201ms)
  I0510 14:29:54.659359 21 proxy.go:558] (10) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:462/proxy/: tls qux (200; 10.581461ms)
  I0510 14:29:54.659876 21 proxy.go:558] (10) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname1/proxy/: tls baz (200; 11.058907ms)
  I0510 14:29:54.659853 21 proxy.go:558] (10) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname2/proxy/: bar (200; 11.306149ms)
  I0510 14:29:54.659913 21 proxy.go:558] (10) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname2/proxy/: bar (200; 10.912248ms)
  I0510 14:29:54.660478 21 proxy.go:558] (10) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 11.691512ms)
  I0510 14:29:54.660675 21 proxy.go:558] (10) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname2/proxy/: tls qux (200; 11.902621ms)
  I0510 14:29:54.660691 21 proxy.go:558] (10) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname1/proxy/: foo (200; 11.738151ms)
  I0510 14:29:54.668747 21 proxy.go:558] (11) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/tlsrewritem... (200; 7.945346ms)
  I0510 14:29:54.669007 21 proxy.go:558] (11) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:462/proxy/: tls qux (200; 8.19964ms)
  I0510 14:29:54.669155 21 proxy.go:558] (11) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 8.375499ms)
  I0510 14:29:54.669366 21 proxy.go:558] (11) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 7.928182ms)
  I0510 14:29:54.669372 21 proxy.go:558] (11) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname1/proxy/: foo (200; 8.445465ms)
  I0510 14:29:54.670418 21 proxy.go:558] (11) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/rewriteme">test</a> (200; 9.054229ms)
  I0510 14:29:54.670829 21 proxy.go:558] (11) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 9.519031ms)
  I0510 14:29:54.670941 21 proxy.go:558] (11) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname1/proxy/: foo (200; 10.072985ms)
  I0510 14:29:54.671068 21 proxy.go:558] (11) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">... (200; 9.658842ms)
  I0510 14:29:54.671563 21 proxy.go:558] (11) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:460/proxy/: tls baz (200; 10.065375ms)
  I0510 14:29:54.671817 21 proxy.go:558] (11) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">test<... (200; 10.548222ms)
  I0510 14:29:54.671898 21 proxy.go:558] (11) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname2/proxy/: tls qux (200; 10.88565ms)
  I0510 14:29:54.671917 21 proxy.go:558] (11) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname1/proxy/: tls baz (200; 10.721874ms)
  I0510 14:29:54.671947 21 proxy.go:558] (11) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname2/proxy/: bar (200; 10.819684ms)
  I0510 14:29:54.672321 21 proxy.go:558] (11) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 10.918706ms)
  I0510 14:29:54.672726 21 proxy.go:558] (11) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname2/proxy/: bar (200; 11.755595ms)
  I0510 14:29:54.676627 21 proxy.go:558] (12) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 3.851005ms)
  I0510 14:29:54.677117 21 proxy.go:558] (12) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 4.207184ms)
  I0510 14:29:54.677728 21 proxy.go:558] (12) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:462/proxy/: tls qux (200; 4.905698ms)
  I0510 14:29:54.679137 21 proxy.go:558] (12) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">... (200; 6.152121ms)
  I0510 14:29:54.679258 21 proxy.go:558] (12) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname2/proxy/: bar (200; 6.362327ms)
  I0510 14:29:54.682095 21 proxy.go:558] (12) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname2/proxy/: bar (200; 9.109601ms)
  I0510 14:29:54.682926 21 proxy.go:558] (12) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname1/proxy/: foo (200; 10.123829ms)
  I0510 14:29:54.682941 21 proxy.go:558] (12) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 9.75013ms)
  I0510 14:29:54.683701 21 proxy.go:558] (12) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:460/proxy/: tls baz (200; 10.676082ms)
  I0510 14:29:54.683708 21 proxy.go:558] (12) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/tlsrewritem... (200; 10.564047ms)
  I0510 14:29:54.684672 21 proxy.go:558] (12) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/rewriteme">test</a> (200; 11.553943ms)
  I0510 14:29:54.684735 21 proxy.go:558] (12) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname2/proxy/: tls qux (200; 11.630696ms)
  I0510 14:29:54.685332 21 proxy.go:558] (12) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname1/proxy/: tls baz (200; 12.219256ms)
  I0510 14:29:54.685453 21 proxy.go:558] (12) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname1/proxy/: foo (200; 12.576105ms)
  I0510 14:29:54.685457 21 proxy.go:558] (12) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">test<... (200; 12.341097ms)
  I0510 14:29:54.685802 21 proxy.go:558] (12) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 12.563189ms)
  I0510 14:29:54.689791 21 proxy.go:558] (13) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:462/proxy/: tls qux (200; 3.934436ms)
  I0510 14:29:54.692779 21 proxy.go:558] (13) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">test<... (200; 6.59084ms)
  I0510 14:29:54.694241 21 proxy.go:558] (13) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 7.895412ms)
  I0510 14:29:54.694526 21 proxy.go:558] (13) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname1/proxy/: foo (200; 8.468495ms)
  I0510 14:29:54.695328 21 proxy.go:558] (13) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 9.169968ms)
  I0510 14:29:54.695328 21 proxy.go:558] (13) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/rewriteme">test</a> (200; 9.314071ms)
  I0510 14:29:54.695396 21 proxy.go:558] (13) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">... (200; 9.488427ms)
  I0510 14:29:54.695421 21 proxy.go:558] (13) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:460/proxy/: tls baz (200; 9.449976ms)
  I0510 14:29:54.695847 21 proxy.go:558] (13) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 9.641474ms)
  I0510 14:29:54.696660 21 proxy.go:558] (13) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname1/proxy/: foo (200; 10.802ms)
  I0510 14:29:54.696899 21 proxy.go:558] (13) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/tlsrewritem... (200; 10.611531ms)
  I0510 14:29:54.696902 21 proxy.go:558] (13) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 10.572573ms)
  I0510 14:29:54.698245 21 proxy.go:558] (13) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname2/proxy/: bar (200; 12.307009ms)
  I0510 14:29:54.698323 21 proxy.go:558] (13) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname2/proxy/: tls qux (200; 12.212647ms)
  I0510 14:29:54.699495 21 proxy.go:558] (13) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname1/proxy/: tls baz (200; 13.207459ms)
  I0510 14:29:54.700100 21 proxy.go:558] (13) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname2/proxy/: bar (200; 13.860643ms)
  I0510 14:29:54.705507 21 proxy.go:558] (14) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 5.30754ms)
  I0510 14:29:54.706389 21 proxy.go:558] (14) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname1/proxy/: tls baz (200; 6.237162ms)
  I0510 14:29:54.706994 21 proxy.go:558] (14) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">... (200; 6.708654ms)
  I0510 14:29:54.707331 21 proxy.go:558] (14) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 6.780952ms)
  I0510 14:29:54.707409 21 proxy.go:558] (14) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname2/proxy/: bar (200; 6.998416ms)
  I0510 14:29:54.709313 21 proxy.go:558] (14) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname2/proxy/: tls qux (200; 9.161626ms)
  I0510 14:29:54.709815 21 proxy.go:558] (14) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:460/proxy/: tls baz (200; 9.498852ms)
  I0510 14:29:54.710211 21 proxy.go:558] (14) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname1/proxy/: foo (200; 9.658902ms)
  I0510 14:29:54.710672 21 proxy.go:558] (14) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/rewriteme">test</a> (200; 10.166515ms)
  I0510 14:29:54.710989 21 proxy.go:558] (14) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:462/proxy/: tls qux (200; 10.457285ms)
  I0510 14:29:54.711205 21 proxy.go:558] (14) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">test<... (200; 10.876484ms)
  I0510 14:29:54.711154 21 proxy.go:558] (14) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/tlsrewritem... (200; 10.803592ms)
  I0510 14:29:54.711401 21 proxy.go:558] (14) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname2/proxy/: bar (200; 11.190907ms)
  I0510 14:29:54.712125 21 proxy.go:558] (14) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 11.740133ms)
  I0510 14:29:54.712243 21 proxy.go:558] (14) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname1/proxy/: foo (200; 11.841397ms)
  I0510 14:29:54.713024 21 proxy.go:558] (14) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 12.577425ms)
  I0510 14:29:54.717036 21 proxy.go:558] (15) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 3.902987ms)
  I0510 14:29:54.721361 21 proxy.go:558] (15) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 8.110545ms)
  I0510 14:29:54.722005 21 proxy.go:558] (15) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/tlsrewritem... (200; 8.596954ms)
  I0510 14:29:54.722005 21 proxy.go:558] (15) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:462/proxy/: tls qux (200; 8.732032ms)
  I0510 14:29:54.722773 21 proxy.go:558] (15) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 9.155391ms)
  I0510 14:29:54.723041 21 proxy.go:558] (15) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname2/proxy/: bar (200; 9.68404ms)
  I0510 14:29:54.723069 21 proxy.go:558] (15) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">test<... (200; 9.611212ms)
  I0510 14:29:54.723780 21 proxy.go:558] (15) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:460/proxy/: tls baz (200; 10.360463ms)
  I0510 14:29:54.723820 21 proxy.go:558] (15) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">... (200; 10.406872ms)
  I0510 14:29:54.723867 21 proxy.go:558] (15) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname1/proxy/: tls baz (200; 10.255431ms)
  I0510 14:29:54.724131 21 proxy.go:558] (15) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/rewriteme">test</a> (200; 10.547091ms)
  I0510 14:29:54.724254 21 proxy.go:558] (15) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname1/proxy/: foo (200; 10.882825ms)
  I0510 14:29:54.724588 21 proxy.go:558] (15) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname2/proxy/: tls qux (200; 11.435887ms)
  I0510 14:29:54.724603 21 proxy.go:558] (15) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname1/proxy/: foo (200; 11.125105ms)
  I0510 14:29:54.724818 21 proxy.go:558] (15) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname2/proxy/: bar (200; 11.220704ms)
  I0510 14:29:54.725640 21 proxy.go:558] (15) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 12.287838ms)
  I0510 14:29:54.729586 21 proxy.go:558] (16) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:460/proxy/: tls baz (200; 3.822023ms)
  I0510 14:29:54.730255 21 proxy.go:558] (16) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/tlsrewritem... (200; 4.505354ms)
  I0510 14:29:54.730973 21 proxy.go:558] (16) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/rewriteme">test</a> (200; 5.154951ms)
  I0510 14:29:54.731308 21 proxy.go:558] (16) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 5.332075ms)
  I0510 14:29:54.732959 21 proxy.go:558] (16) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname1/proxy/: foo (200; 7.04106ms)
  I0510 14:29:54.733364 21 proxy.go:558] (16) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname2/proxy/: tls qux (200; 7.416966ms)
  I0510 14:29:54.734135 21 proxy.go:558] (16) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">... (200; 8.076523ms)
  I0510 14:29:54.734977 21 proxy.go:558] (16) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 9.123577ms)
  I0510 14:29:54.741863 21 proxy.go:558] (16) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname1/proxy/: tls baz (200; 15.765254ms)
  I0510 14:29:54.741915 21 proxy.go:558] (16) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">test<... (200; 15.601993ms)
  I0510 14:29:54.742502 21 proxy.go:558] (16) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:462/proxy/: tls qux (200; 16.489841ms)
  I0510 14:29:54.742801 21 proxy.go:558] (16) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname1/proxy/: foo (200; 16.66098ms)
  I0510 14:29:54.742702 21 proxy.go:558] (16) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 16.809233ms)
  I0510 14:29:54.743203 21 proxy.go:558] (16) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 16.959525ms)
  I0510 14:29:54.743215 21 proxy.go:558] (16) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname2/proxy/: bar (200; 17.044377ms)
  I0510 14:29:54.743817 21 proxy.go:558] (16) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname2/proxy/: bar (200; 17.780324ms)
  I0510 14:29:54.750635 21 proxy.go:558] (17) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 6.771264ms)
  I0510 14:29:54.750971 21 proxy.go:558] (17) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:462/proxy/: tls qux (200; 7.006768ms)
  I0510 14:29:54.751016 21 proxy.go:558] (17) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:460/proxy/: tls baz (200; 7.146488ms)
  I0510 14:29:54.750981 21 proxy.go:558] (17) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/rewriteme">test</a> (200; 6.818583ms)
  I0510 14:29:54.752073 21 proxy.go:558] (17) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 8.175148ms)
  I0510 14:29:54.752408 21 proxy.go:558] (17) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/tlsrewritem... (200; 8.266382ms)
  I0510 14:29:54.753016 21 proxy.go:558] (17) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">... (200; 8.952844ms)
  I0510 14:29:54.754474 21 proxy.go:558] (17) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 10.190505ms)
  I0510 14:29:54.754475 21 proxy.go:558] (17) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname1/proxy/: foo (200; 10.473557ms)
  I0510 14:29:54.754504 21 proxy.go:558] (17) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 10.302305ms)
  I0510 14:29:54.754551 21 proxy.go:558] (17) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">test<... (200; 10.277268ms)
  I0510 14:29:54.755057 21 proxy.go:558] (17) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname1/proxy/: foo (200; 10.710723ms)
  I0510 14:29:54.755809 21 proxy.go:558] (17) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname2/proxy/: bar (200; 11.746893ms)
  I0510 14:29:54.756351 21 proxy.go:558] (17) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname2/proxy/: tls qux (200; 11.962881ms)
  I0510 14:29:54.756374 21 proxy.go:558] (17) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname1/proxy/: tls baz (200; 12.275364ms)
  I0510 14:29:54.756469 21 proxy.go:558] (17) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname2/proxy/: bar (200; 12.457464ms)
  I0510 14:29:54.760673 21 proxy.go:558] (18) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 4.163864ms)
  I0510 14:29:54.760707 21 proxy.go:558] (18) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">... (200; 4.192639ms)
  I0510 14:29:54.763112 21 proxy.go:558] (18) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 6.260517ms)
  I0510 14:29:54.763141 21 proxy.go:558] (18) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/rewriteme">test</a> (200; 6.221379ms)
  I0510 14:29:54.763452 21 proxy.go:558] (18) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 6.548409ms)
  I0510 14:29:54.765083 21 proxy.go:558] (18) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:462/proxy/: tls qux (200; 8.328566ms)
  I0510 14:29:54.765723 21 proxy.go:558] (18) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname2/proxy/: bar (200; 8.858929ms)
  I0510 14:29:54.765989 21 proxy.go:558] (18) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname1/proxy/: tls baz (200; 9.046444ms)
  I0510 14:29:54.765835 21 proxy.go:558] (18) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:460/proxy/: tls baz (200; 9.213901ms)
  I0510 14:29:54.765872 21 proxy.go:558] (18) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 9.179428ms)
  I0510 14:29:54.766241 21 proxy.go:558] (18) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">test<... (200; 9.5827ms)
  I0510 14:29:54.766743 21 proxy.go:558] (18) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/tlsrewritem... (200; 10.018239ms)
  I0510 14:29:54.767197 21 proxy.go:558] (18) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname1/proxy/: foo (200; 10.399167ms)
  I0510 14:29:54.767720 21 proxy.go:558] (18) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname1/proxy/: foo (200; 10.892993ms)
  I0510 14:29:54.767720 21 proxy.go:558] (18) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname2/proxy/: bar (200; 10.790319ms)
  I0510 14:29:54.767949 21 proxy.go:558] (18) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname2/proxy/: tls qux (200; 11.273614ms)
  I0510 14:29:54.773890 21 proxy.go:558] (19) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 5.744805ms)
  I0510 14:29:54.774360 21 proxy.go:558] (19) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:443/proxy/tlsrewritem... (200; 6.031482ms)
  I0510 14:29:54.775028 21 proxy.go:558] (19) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:462/proxy/: tls qux (200; 6.493971ms)
  I0510 14:29:54.775280 21 proxy.go:558] (19) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 6.784981ms)
  I0510 14:29:54.775450 21 proxy.go:558] (19) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:162/proxy/: bar (200; 6.647283ms)
  I0510 14:29:54.775832 21 proxy.go:558] (19) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">... (200; 7.203324ms)
  I0510 14:29:54.776146 21 proxy.go:558] (19) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh:1080/proxy/rewriteme">test<... (200; 7.455172ms)
  I0510 14:29:54.776166 21 proxy.go:558] (19) /api/v1/namespaces/proxy-5328/pods/http:proxy-service-48h9b-gkcrh:160/proxy/: foo (200; 7.968256ms)
  I0510 14:29:54.776242 21 proxy.go:558] (19) /api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/: <a href="/api/v1/namespaces/proxy-5328/pods/proxy-service-48h9b-gkcrh/proxy/rewriteme">test</a> (200; 7.404302ms)
  I0510 14:29:54.777157 21 proxy.go:558] (19) /api/v1/namespaces/proxy-5328/pods/https:proxy-service-48h9b-gkcrh:460/proxy/: tls baz (200; 9.116846ms)
  I0510 14:29:54.778469 21 proxy.go:558] (19) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname2/proxy/: bar (200; 9.875711ms)
  I0510 14:29:54.779052 21 proxy.go:558] (19) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname2/proxy/: tls qux (200; 10.61572ms)
  I0510 14:29:54.779503 21 proxy.go:558] (19) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname1/proxy/: foo (200; 11.230865ms)
  I0510 14:29:54.779550 21 proxy.go:558] (19) /api/v1/namespaces/proxy-5328/services/https:proxy-service-48h9b:tlsportname1/proxy/: tls baz (200; 10.751986ms)
  I0510 14:29:54.779611 21 proxy.go:558] (19) /api/v1/namespaces/proxy-5328/services/proxy-service-48h9b:portname1/proxy/: foo (200; 11.243544ms)
  I0510 14:29:54.779609 21 proxy.go:558] (19) /api/v1/namespaces/proxy-5328/services/http:proxy-service-48h9b:portname2/proxy/: bar (200; 10.843412ms)
  STEP: deleting ReplicationController proxy-service-48h9b in namespace proxy-5328, will wait for the garbage collector to delete the pods @ 05/10/24 14:29:54.779
  I0510 14:29:54.835786 21 resources.go:139] Deleting ReplicationController proxy-service-48h9b took: 3.507366ms
  I0510 14:29:54.936172 21 resources.go:163] Terminating ReplicationController proxy-service-48h9b pods took: 100.383123ms
  I0510 14:29:57.536641 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5328" for this suite. @ 05/10/24 14:29:57.539
• [4.123 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1858
  STEP: Creating a kubernetes client @ 05/10/24 14:29:57.545
  I0510 14:29:57.545374 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 14:29:57.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:29:57.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:29:57.557
  STEP: Starting the proxy @ 05/10/24 14:29:57.56
  I0510 14:29:57.560665 21 util.go:592] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-623 proxy --unix-socket=/tmp/kubectl-proxy-unix985860362/test'
  STEP: retrieving proxy /api/ output @ 05/10/24 14:29:57.607
  I0510 14:29:57.608736 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-623" for this suite. @ 05/10/24 14:29:57.611
• [0.071 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1693
  STEP: Creating a kubernetes client @ 05/10/24 14:29:57.616
  I0510 14:29:57.616981 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 14:29:57.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:29:57.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:29:57.627
  STEP: creating Agnhost RC @ 05/10/24 14:29:57.63
  I0510 14:29:57.630535 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-639 create -f -'
  I0510 14:29:57.750822 21 builder.go:146] stderr: ""
  I0510 14:29:57.750918 21 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/10/24 14:29:57.75
  I0510 14:29:58.754664 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0510 14:29:58.754701 21 framework.go:733] Found 1 / 1
  I0510 14:29:58.754729 21 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 05/10/24 14:29:58.754
  I0510 14:29:58.756859 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0510 14:29:58.756893 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0510 14:29:58.756944 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-639 patch pod agnhost-primary-zqqml -p {"metadata":{"annotations":{"x":"y"}}}'
  I0510 14:29:58.822363 21 builder.go:146] stderr: ""
  I0510 14:29:58.822409 21 builder.go:147] stdout: "pod/agnhost-primary-zqqml patched\n"
  STEP: checking annotations @ 05/10/24 14:29:58.822
  I0510 14:29:58.824684 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0510 14:29:58.824712 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0510 14:29:58.824824 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-639" for this suite. @ 05/10/24 14:29:58.827
• [1.214 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 05/10/24 14:29:58.831
  I0510 14:29:58.831764 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename subpath @ 05/10/24 14:29:58.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:29:58.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:29:58.845
  STEP: Setting up data @ 05/10/24 14:29:58.848
  STEP: Creating pod pod-subpath-test-configmap-5gnh @ 05/10/24 14:29:58.854
  STEP: Creating a pod to test atomic-volume-subpath @ 05/10/24 14:29:58.854
  STEP: Saw pod success @ 05/10/24 14:30:20.903
  I0510 14:30:20.905173 21 output.go:196] Trying to get logs from node worker-1 pod pod-subpath-test-configmap-5gnh container test-container-subpath-configmap-5gnh: <nil>
  STEP: delete the pod @ 05/10/24 14:30:20.911
  STEP: Deleting pod pod-subpath-test-configmap-5gnh @ 05/10/24 14:30:20.921
  I0510 14:30:20.921806 21 delete.go:62] Deleting pod "pod-subpath-test-configmap-5gnh" in namespace "subpath-5941"
  I0510 14:30:20.923742 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5941" for this suite. @ 05/10/24 14:30:20.926
• [22.098 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 05/10/24 14:30:20.93
  I0510 14:30:20.930116 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename disruption @ 05/10/24 14:30:20.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:30:20.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:30:20.941
  STEP: Waiting for the pdb to be processed @ 05/10/24 14:30:20.947
  STEP: Waiting for all pods to be running @ 05/10/24 14:30:22.964
  I0510 14:30:22.968545 21 disruption.go:578] running pods: 0 < 3
  I0510 14:30:24.969850 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5760" for this suite. @ 05/10/24 14:30:24.972
• [4.046 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 05/10/24 14:30:24.976
  I0510 14:30:24.976299 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename replication-controller @ 05/10/24 14:30:24.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:30:24.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:30:24.99
  STEP: creating a ReplicationController @ 05/10/24 14:30:24.995
  STEP: waiting for RC to be added @ 05/10/24 14:30:24.998
  STEP: waiting for available Replicas @ 05/10/24 14:30:24.999
  STEP: patching ReplicationController @ 05/10/24 14:30:26.084
  STEP: waiting for RC to be modified @ 05/10/24 14:30:26.091
  STEP: patching ReplicationController status @ 05/10/24 14:30:26.092
  STEP: waiting for RC to be modified @ 05/10/24 14:30:26.098
  STEP: waiting for available Replicas @ 05/10/24 14:30:26.098
  STEP: fetching ReplicationController status @ 05/10/24 14:30:26.101
  STEP: patching ReplicationController scale @ 05/10/24 14:30:26.103
  STEP: waiting for RC to be modified @ 05/10/24 14:30:26.109
  STEP: waiting for ReplicationController's scale to be the max amount @ 05/10/24 14:30:26.109
  STEP: fetching ReplicationController; ensuring that it's patched @ 05/10/24 14:30:27.53
  STEP: updating ReplicationController status @ 05/10/24 14:30:27.532
  STEP: waiting for RC to be modified @ 05/10/24 14:30:27.537
  STEP: listing all ReplicationControllers @ 05/10/24 14:30:27.538
  STEP: checking that ReplicationController has expected values @ 05/10/24 14:30:27.54
  STEP: deleting ReplicationControllers by collection @ 05/10/24 14:30:27.54
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 05/10/24 14:30:27.547
  I0510 14:30:27.585160 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0510 14:30:27.585537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-6056" for this suite. @ 05/10/24 14:30:27.587
• [2.617 seconds]
------------------------------
SS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 05/10/24 14:30:27.593
  I0510 14:30:27.593503 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename taint-single-pod @ 05/10/24 14:30:27.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:30:27.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:30:27.605
  I0510 14:30:27.607374 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0510 14:30:28.586510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:30:29.586694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:30:30.587017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:30:31.587249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:30:32.587348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:30:33.587503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:30:34.588223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:30:35.588337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:30:36.589209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:30:37.589560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:30:38.590458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:30:39.590650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:30:40.590998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:30:41.592108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:30:42.592597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:30:43.592823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:30:44.593167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:30:45.593247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:30:46.593462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:30:47.593770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:30:48.594519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:30:49.594719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:30:50.595492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:30:51.595778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:30:52.596024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:30:53.596220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:30:54.597110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:30:55.597312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:30:56.597509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:30:57.597827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:30:58.598626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:30:59.598818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:00.598989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:01.599011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:02.600098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:03.600302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:04.601195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:05.601432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:06.601768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:07.602072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:08.602174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:09.602376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:10.602514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:11.602937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:12.602990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:13.603917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:14.604082      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:15.604194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:16.604250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:17.604630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:18.605464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:19.605709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:20.605992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:21.606368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:22.606543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:23.606722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:24.607111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:25.608085      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:26.608501      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:31:27.607729 21 util.go:400] Waiting for terminating namespaces to be deleted...
  E0510 14:31:27.608819      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:31:27.609973 21 taints.go:150] Starting informer...
  STEP: Starting pod... @ 05/10/24 14:31:27.61
  I0510 14:31:27.822201 21 taints.go:300] Pod is running on worker-1. Tainting Node
  STEP: Trying to apply a taint on the Node @ 05/10/24 14:31:27.822
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/10/24 14:31:27.831
  STEP: Waiting short time to make sure Pod is queued for deletion @ 05/10/24 14:31:27.834
  I0510 14:31:27.834070 21 taints.go:319] Pod wasn't evicted. Proceeding
  I0510 14:31:27.834089 21 taints.go:326] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/10/24 14:31:27.843
  STEP: Waiting some time to make sure that toleration time passed. @ 05/10/24 14:31:27.846
  E0510 14:31:28.609772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:29.610196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:30.610315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:31.610357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:32.610681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:33.610919      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:34.610980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:35.611202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:36.611334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:37.611668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:38.611870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:39.612101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:40.612188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:41.612455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:42.612793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:43.612905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:44.613141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:45.613256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:46.613368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:47.613700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:48.613913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:49.614125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:50.614313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:51.614614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:52.614708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:53.614944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:54.615013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:55.615214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:56.615424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:57.615748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:58.616045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:31:59.616857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:00.617072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:01.617367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:02.617685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:03.617992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:04.618101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:05.618320      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:06.618505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:07.618833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:08.619068      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:09.620063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:10.620287      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:11.620576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:12.620867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:13.621183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:14.621371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:15.621592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:16.621790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:17.622804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:18.623018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:19.623214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:20.623433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:21.624309      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:22.624696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:23.624903      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:24.625092      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:25.625290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:26.625503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:27.625816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:28.626001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:29.626185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:30.626400      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:31.626691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:32.626751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:33.626998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:34.627350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:35.627541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:36.627678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:37.627960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:38.628155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:39.628290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:40.628480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:41.629321      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:42.629671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:32:42.847065 21 taints.go:335] Pod wasn't evicted. Test successful
  I0510 14:32:42.847280 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-2055" for this suite. @ 05/10/24 14:32:42.85
• [135.263 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 05/10/24 14:32:42.856
  I0510 14:32:42.856501 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename configmap @ 05/10/24 14:32:42.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:32:42.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:32:42.868
  STEP: Creating configMap with name configmap-test-volume-map-f827cd2c-fe47-44d6-a952-40c12dde6014 @ 05/10/24 14:32:42.871
  STEP: Creating a pod to test consume configMaps @ 05/10/24 14:32:42.874
  E0510 14:32:43.630016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:44.630214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 14:32:44.884
  I0510 14:32:44.886811 21 output.go:196] Trying to get logs from node worker-1 pod pod-configmaps-a8595d67-f9b5-4cff-8101-f339ddd47be2 container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 14:32:44.9
  I0510 14:32:44.911286 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7354" for this suite. @ 05/10/24 14:32:44.913
• [2.061 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:707
  STEP: Creating a kubernetes client @ 05/10/24 14:32:44.917
  I0510 14:32:44.917576 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename sched-pred @ 05/10/24 14:32:44.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:32:44.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:32:44.929
  I0510 14:32:44.932202 21 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0510 14:32:44.936318 21 util.go:400] Waiting for terminating namespaces to be deleted...
  I0510 14:32:44.938317 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node worker-0 before test
  I0510 14:32:44.941924 21 predicates.go:887] coredns-6997b8f8bd-47z52 from kube-system started at 2024-05-10 13:16:07 +0000 UTC (1 container statuses recorded)
  I0510 14:32:44.941950 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0510 14:32:44.941960 21 predicates.go:887] konnectivity-agent-2lmmj from kube-system started at 2024-05-10 13:15:10 +0000 UTC (1 container statuses recorded)
  I0510 14:32:44.941972 21 predicates.go:889] 	Container konnectivity-agent ready: true, restart count 0
  I0510 14:32:44.941985 21 predicates.go:887] kube-proxy-9fgls from kube-system started at 2024-05-10 13:15:10 +0000 UTC (1 container statuses recorded)
  I0510 14:32:44.941997 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0510 14:32:44.942012 21 predicates.go:887] kube-router-nhmxc from kube-system started at 2024-05-10 13:15:10 +0000 UTC (1 container statuses recorded)
  I0510 14:32:44.942024 21 predicates.go:889] 	Container kube-router ready: true, restart count 0
  I0510 14:32:44.942038 21 predicates.go:887] metrics-server-5cd4986bbc-7kh5s from kube-system started at 2024-05-10 13:15:22 +0000 UTC (1 container statuses recorded)
  I0510 14:32:44.942049 21 predicates.go:889] 	Container metrics-server ready: true, restart count 0
  I0510 14:32:44.942062 21 predicates.go:887] sonobuoy-e2e-job-12fbf0b104f946c7 from sonobuoy started at 2024-05-10 13:15:34 +0000 UTC (2 container statuses recorded)
  I0510 14:32:44.942074 21 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0510 14:32:44.942086 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0510 14:32:44.942101 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-24515f3172df4c25-pblpt from sonobuoy started at 2024-05-10 13:15:34 +0000 UTC (2 container statuses recorded)
  I0510 14:32:44.942114 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0510 14:32:44.942127 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0510 14:32:44.942140 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node worker-1 before test
  I0510 14:32:44.945902 21 predicates.go:887] coredns-6997b8f8bd-g6q9b from kube-system started at 2024-05-10 14:31:29 +0000 UTC (1 container statuses recorded)
  I0510 14:32:44.945928 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0510 14:32:44.945943 21 predicates.go:887] konnectivity-agent-lxwc4 from kube-system started at 2024-05-10 13:15:10 +0000 UTC (1 container statuses recorded)
  I0510 14:32:44.945955 21 predicates.go:889] 	Container konnectivity-agent ready: true, restart count 0
  I0510 14:32:44.945969 21 predicates.go:887] kube-proxy-jvb27 from kube-system started at 2024-05-10 13:15:10 +0000 UTC (1 container statuses recorded)
  I0510 14:32:44.945982 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0510 14:32:44.945996 21 predicates.go:887] kube-router-rpbbz from kube-system started at 2024-05-10 13:15:10 +0000 UTC (1 container statuses recorded)
  I0510 14:32:44.946009 21 predicates.go:889] 	Container kube-router ready: true, restart count 0
  I0510 14:32:44.946024 21 predicates.go:887] sonobuoy from sonobuoy started at 2024-05-10 13:15:30 +0000 UTC (1 container statuses recorded)
  I0510 14:32:44.946044 21 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0510 14:32:44.946085 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-24515f3172df4c25-xm8fw from sonobuoy started at 2024-05-10 13:15:34 +0000 UTC (2 container statuses recorded)
  I0510 14:32:44.946098 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0510 14:32:44.946110 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0510 14:32:44.946123 21 predicates.go:887] taint-eviction-4 from taint-single-pod-2055 started at 2024-05-10 14:31:27 +0000 UTC (1 container statuses recorded)
  I0510 14:32:44.946134 21 predicates.go:889] 	Container pause ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/10/24 14:32:44.946
  E0510 14:32:45.631084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:46.632097      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/10/24 14:32:46.958
  STEP: Trying to apply a random label on the found node. @ 05/10/24 14:32:46.97
  STEP: verifying the node has the label kubernetes.io/e2e-5eb5f2ed-3c3a-4060-9e43-b0451c985005 95 @ 05/10/24 14:32:46.976
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 05/10/24 14:32:46.979
  E0510 14:32:47.632149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:48.632360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 10.0.48.105 on the node which pod4 resides and expect not scheduled @ 05/10/24 14:32:48.988
  E0510 14:32:49.632579      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:50.632797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:51.633789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:52.634098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:53.634888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:54.635082      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:55.636085      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:56.636308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:57.637382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:58.637576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:32:59.637706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:00.637924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:01.637978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:02.638373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:03.639338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:04.640079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:05.641064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:06.641281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:07.642046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:08.642247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:09.642555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:10.642652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:11.643406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:12.643730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:13.644728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:14.644842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:15.645842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:16.646050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:17.646988      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:18.647221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:19.648326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:20.648856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:21.649472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:22.649843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:23.650749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:24.650972      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:25.651844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:26.652018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:27.652126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:28.652334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:29.652799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:30.652994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:31.653923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:32.654422      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:33.655339      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:34.655470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:35.655538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:36.655731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:37.656709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:38.656879      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:39.657013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:40.657255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:41.657912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:42.658030      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:43.658650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:44.658831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:45.658969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:46.660054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:47.661028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:48.661267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:49.662023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:50.662220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:51.663245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:52.663595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:53.664055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:54.664232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:55.664731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:56.664911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:57.665667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:58.666591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:33:59.667480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:00.668065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:01.668191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:02.668533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:03.669301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:04.669487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:05.669681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:06.669864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:07.670546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:08.670719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:09.671622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:10.671818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:11.672451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:12.672721      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:13.673487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:14.673667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:15.673825      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:16.674021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:17.674871      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:18.674991      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:19.676048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:20.676235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:21.677145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:22.677485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:23.678228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:24.678361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:25.679091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:26.679276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:27.680046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:28.680246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:29.680979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:30.681173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:31.681511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:32.681795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:33.681892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:34.682070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:35.682144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:36.682324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:37.682889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:38.682993      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:39.684049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:40.684233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:41.684763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:42.685035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:43.685474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:44.685663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:45.686366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:46.686534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:47.686768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:48.686927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:49.687242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:50.687474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:51.688042      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:52.688392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:53.688870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:54.688981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:55.689253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:56.689436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:57.689891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:58.690005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:34:59.690663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:00.690778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:01.691271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:02.691675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:03.692362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:04.692569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:05.693201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:06.693406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:07.694052      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:08.694255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:09.694612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:10.694801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:11.695380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:12.695756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:13.696206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:14.696328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:15.696779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:16.697610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:17.698261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:18.698443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:19.699561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:20.699459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:21.700306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:22.700645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:23.700768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:24.700953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:25.701954      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:26.702077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:27.702749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:28.702977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:29.704014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:30.704211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:31.704983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:32.705349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:33.706130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:34.706250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:35.706973      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:36.707098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:37.707203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:38.707332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:39.707361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:40.707497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:41.708318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:42.708726      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:43.709508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:44.709694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:45.710566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:46.710761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:47.711069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:48.711273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:49.711839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:50.712044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:51.712763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:52.713063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:53.713809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:54.713988      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:55.714776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:56.714970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:57.715795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:58.715979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:35:59.716708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:00.716829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:01.717738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:02.718055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:03.718848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:04.719055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:05.719802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:06.719999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:07.720699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:08.720885      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:09.721075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:10.721279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:11.722056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:12.722370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:13.723100      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:14.723288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:15.723882      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:16.724074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:17.724710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:18.724826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:19.725530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:20.725744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:21.726602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:22.726880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:23.727060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:24.727254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:25.728044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:26.728161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:27.728724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:28.729753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:29.730396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:30.730584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:31.731342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:32.731729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:33.731924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:34.732110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:35.732549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:36.732663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:37.733091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:38.733203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:39.733625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:40.734409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:41.734983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:42.735362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:43.735408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:44.735589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:45.736170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:46.736348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:47.736859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:48.736976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:49.737693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:50.737868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:51.738831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:52.739191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:53.739263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:54.739404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:55.740051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:56.740176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:57.740953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:58.741138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:36:59.741879      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:00.742067      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:01.742730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:02.743002      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:03.743520      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:04.743725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:05.744097      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:06.744287      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:07.744924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:08.745097      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:09.745819      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:10.746000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:11.746920      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:12.747249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:13.747880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:14.748066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:15.748650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:16.748789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:17.749351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:18.749573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:19.749736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:20.750468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:21.750661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:22.750971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:23.751654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:24.751756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:25.752799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:26.752997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:27.753829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:28.753944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:29.754670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:30.754879      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:31.755764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:32.756033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:33.756556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:34.756725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:35.757497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:36.757669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:37.757975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:38.758150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:39.758958      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:40.758992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:41.759739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:42.759998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:43.760761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:44.760936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:45.761829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:46.762013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:47.762779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:48.762983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-5eb5f2ed-3c3a-4060-9e43-b0451c985005 off the node worker-1 @ 05/10/24 14:37:48.994
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-5eb5f2ed-3c3a-4060-9e43-b0451c985005 @ 05/10/24 14:37:49.003
  I0510 14:37:49.006837 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-311" for this suite. @ 05/10/24 14:37:49.009
• [304.095 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 05/10/24 14:37:49.012
  I0510 14:37:49.012922 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename resourcequota @ 05/10/24 14:37:49.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:37:49.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:37:49.026
  STEP: Counting existing ResourceQuota @ 05/10/24 14:37:49.029
  E0510 14:37:49.764066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:50.764807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:51.765401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:52.766104      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:53.766643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/10/24 14:37:54.032
  STEP: Ensuring resource quota status is calculated @ 05/10/24 14:37:54.037
  E0510 14:37:54.766749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:55.766841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 05/10/24 14:37:56.04
  STEP: Ensuring ResourceQuota status captures the pod usage @ 05/10/24 14:37:56.053
  E0510 14:37:56.767755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:57.767855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 05/10/24 14:37:58.055
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 05/10/24 14:37:58.057
  STEP: Ensuring a pod cannot update its resource requirements @ 05/10/24 14:37:58.059
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 05/10/24 14:37:58.062
  E0510 14:37:58.768363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:37:59.768551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 05/10/24 14:38:00.065
  STEP: Ensuring resource quota status released the pod usage @ 05/10/24 14:38:00.074
  E0510 14:38:00.768890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:01.769304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:38:02.077310 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7822" for this suite. @ 05/10/24 14:38:02.079
• [13.071 seconds]
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 05/10/24 14:38:02.083
  I0510 14:38:02.083889 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename pod-network-test @ 05/10/24 14:38:02.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:38:02.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:38:02.095
  STEP: Performing setup for networking test in namespace pod-network-test-3325 @ 05/10/24 14:38:02.098
  STEP: creating a selector @ 05/10/24 14:38:02.098
  STEP: Creating the service pods in kubernetes @ 05/10/24 14:38:02.098
  I0510 14:38:02.098724 21 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0510 14:38:02.770383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:03.770512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:04.770619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:05.770751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:06.770984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:07.772066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:08.772205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:09.772438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:10.773350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:11.773517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:12.774395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:13.774478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:14.774799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:15.775066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:16.775695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:17.775853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:18.775953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:19.776164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:20.777270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:21.777590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:22.778579      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:23.778768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 05/10/24 14:38:24.164
  E0510 14:38:24.778972      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:25.779021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:38:26.187424 21 utils.go:779] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0510 14:38:26.187464 21 utils.go:472] Going to poll 10.244.0.11 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0510 14:38:26.189228 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.0.11:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3325 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0510 14:38:26.189257 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 14:38:26.189743 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0510 14:38:26.189804 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3325/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.0.11%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0510 14:38:26.249561 21 utils.go:489] Found all 1 expected endpoints: [netserver-0]
  I0510 14:38:26.249659 21 utils.go:472] Going to poll 10.244.1.147 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0510 14:38:26.251833 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.1.147:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3325 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0510 14:38:26.251865 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 14:38:26.252344 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0510 14:38:26.252413 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3325/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.1.147%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0510 14:38:26.318105 21 utils.go:489] Found all 1 expected endpoints: [netserver-1]
  I0510 14:38:26.318261 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3325" for this suite. @ 05/10/24 14:38:26.321
• [24.241 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 05/10/24 14:38:26.325
  I0510 14:38:26.325135 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename pod-network-test @ 05/10/24 14:38:26.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:38:26.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:38:26.339
  STEP: Performing setup for networking test in namespace pod-network-test-2976 @ 05/10/24 14:38:26.341
  STEP: creating a selector @ 05/10/24 14:38:26.342
  STEP: Creating the service pods in kubernetes @ 05/10/24 14:38:26.342
  I0510 14:38:26.342052 21 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0510 14:38:26.780066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:27.780648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:28.781294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:29.781499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:30.782252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:31.782642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:32.783387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:33.784117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:34.784935      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:35.785126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:36.786067      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:37.786491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 05/10/24 14:38:38.388
  E0510 14:38:38.787498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:39.787749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:38:40.401007 21 utils.go:779] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0510 14:38:40.401042 21 networking.go:42] Breadth first check of 10.244.0.12 on host 10.0.48.103...
  I0510 14:38:40.402929 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.150:9080/dial?request=hostname&protocol=udp&host=10.244.0.12&port=8081&tries=1'] Namespace:pod-network-test-2976 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0510 14:38:40.402960 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 14:38:40.403474 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0510 14:38:40.403531 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-2976/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.150%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.0.12%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0510 14:38:40.465146 21 utils.go:331] Waiting for responses: map[]
  I0510 14:38:40.465181 21 utils.go:335] reached 10.244.0.12 after 0/1 tries
  I0510 14:38:40.465194 21 networking.go:42] Breadth first check of 10.244.1.149 on host 10.0.48.105...
  I0510 14:38:40.467048 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.150:9080/dial?request=hostname&protocol=udp&host=10.244.1.149&port=8081&tries=1'] Namespace:pod-network-test-2976 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0510 14:38:40.467076 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 14:38:40.467567 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0510 14:38:40.467621 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-2976/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.150%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.1.149%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0510 14:38:40.527567 21 utils.go:331] Waiting for responses: map[]
  I0510 14:38:40.527625 21 utils.go:335] reached 10.244.1.149 after 0/1 tries
  I0510 14:38:40.527663 21 networking.go:53] Going to retry 0 out of 2 pods....
  I0510 14:38:40.527749 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2976" for this suite. @ 05/10/24 14:38:40.53
• [14.209 seconds]
------------------------------
S
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 05/10/24 14:38:40.534
  I0510 14:38:40.534513 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/10/24 14:38:40.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:38:40.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:38:40.554
  STEP: create the container to handle the HTTPGet hook request. @ 05/10/24 14:38:40.559
  E0510 14:38:40.788474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:41.788796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 05/10/24 14:38:42.572
  E0510 14:38:42.789626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:43.789831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:44.790642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:45.790739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:46.790964      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:47.791306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:48.791785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:49.791973      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:50.792497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:51.792540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:52.793311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:53.793523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:54.794471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:55.794656      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 05/10/24 14:38:56.6
  STEP: delete the pod with lifecycle hook @ 05/10/24 14:38:56.614
  E0510 14:38:56.795600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:57.795880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:38:58.624860 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1195" for this suite. @ 05/10/24 14:38:58.627
• [18.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 05/10/24 14:38:58.632
  I0510 14:38:58.632631 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename watch @ 05/10/24 14:38:58.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:38:58.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:38:58.644
  STEP: getting a starting resourceVersion @ 05/10/24 14:38:58.646
  STEP: starting a background goroutine to produce watch events @ 05/10/24 14:38:58.648
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 05/10/24 14:38:58.648
  E0510 14:38:58.796127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:38:59.797161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:00.797443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:39:01.437730 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2385" for this suite. @ 05/10/24 14:39:01.486
• [2.905 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 05/10/24 14:39:01.538
  I0510 14:39:01.538454 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename init-container @ 05/10/24 14:39:01.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:39:01.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:39:01.55
  STEP: creating the pod @ 05/10/24 14:39:01.553
  I0510 14:39:01.553546 21 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E0510 14:39:01.797804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:02.797990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:03.798774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:39:04.459395 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4" for this suite. @ 05/10/24 14:39:04.462
• [2.929 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 05/10/24 14:39:04.468
  I0510 14:39:04.468327 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename projected @ 05/10/24 14:39:04.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:39:04.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:39:04.48
  STEP: Creating projection with secret that has name projected-secret-test-map-b8c886f1-2a9a-470b-91c2-f0e8c315cdbf @ 05/10/24 14:39:04.483
  STEP: Creating a pod to test consume secrets @ 05/10/24 14:39:04.487
  E0510 14:39:04.798926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:05.799148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:06.800107      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:07.800446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 14:39:08.5
  I0510 14:39:08.502893 21 output.go:196] Trying to get logs from node worker-0 pod pod-projected-secrets-be61f1bf-56b2-4245-bb73-c335d89328d1 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 14:39:08.508
  I0510 14:39:08.518990 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2580" for this suite. @ 05/10/24 14:39:08.521
• [4.057 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 05/10/24 14:39:08.525
  I0510 14:39:08.525744 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename var-expansion @ 05/10/24 14:39:08.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:39:08.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:39:08.537
  STEP: Creating a pod to test substitution in volume subpath @ 05/10/24 14:39:08.54
  E0510 14:39:08.800835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:09.801315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:10.802406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:11.803202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 14:39:12.553
  I0510 14:39:12.555896 21 output.go:196] Trying to get logs from node worker-0 pod var-expansion-39a72fec-3af3-4215-a445-2e2458aee62f container dapi-container: <nil>
  STEP: delete the pod @ 05/10/24 14:39:12.564
  I0510 14:39:12.572976 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-68" for this suite. @ 05/10/24 14:39:12.575
• [4.055 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 05/10/24 14:39:12.581
  I0510 14:39:12.581209 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename container-runtime @ 05/10/24 14:39:12.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:39:12.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:39:12.592
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 05/10/24 14:39:12.601
  E0510 14:39:12.803276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:13.803897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:14.804308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:15.804584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:16.805429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:17.805919      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:18.806677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:19.806903      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:20.807640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:21.808429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:22.809247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:23.809830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:24.810395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 05/10/24 14:39:25.639
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 05/10/24 14:39:25.642
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 05/10/24 14:39:25.645
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 05/10/24 14:39:25.645
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 05/10/24 14:39:25.662
  E0510 14:39:25.810576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:26.811227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 05/10/24 14:39:27.67
  E0510 14:39:27.811605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 05/10/24 14:39:28.675
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 05/10/24 14:39:28.679
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 05/10/24 14:39:28.679
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 05/10/24 14:39:28.694
  E0510 14:39:28.812541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 05/10/24 14:39:29.698
  E0510 14:39:29.812815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 05/10/24 14:39:30.703
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 05/10/24 14:39:30.707
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 05/10/24 14:39:30.707
  I0510 14:39:30.724430 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5092" for this suite. @ 05/10/24 14:39:30.726
• [18.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 05/10/24 14:39:30.731
  I0510 14:39:30.731778 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename certificates @ 05/10/24 14:39:30.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:39:30.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:39:30.743
  E0510 14:39:30.812887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting /apis @ 05/10/24 14:39:31.403
  STEP: getting /apis/certificates.k8s.io @ 05/10/24 14:39:31.407
  STEP: getting /apis/certificates.k8s.io/v1 @ 05/10/24 14:39:31.408
  STEP: creating @ 05/10/24 14:39:31.409
  STEP: getting @ 05/10/24 14:39:31.421
  STEP: listing @ 05/10/24 14:39:31.424
  STEP: watching @ 05/10/24 14:39:31.426
  I0510 14:39:31.426322 21 certificates.go:316] starting watch
  STEP: patching @ 05/10/24 14:39:31.427
  STEP: updating @ 05/10/24 14:39:31.432
  I0510 14:39:31.436269 21 certificates.go:332] waiting for watch events with expected annotations
  I0510 14:39:31.436307 21 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 05/10/24 14:39:31.436
  STEP: patching /approval @ 05/10/24 14:39:31.438
  STEP: updating /approval @ 05/10/24 14:39:31.443
  STEP: getting /status @ 05/10/24 14:39:31.449
  STEP: patching /status @ 05/10/24 14:39:31.451
  STEP: updating /status @ 05/10/24 14:39:31.457
  STEP: deleting @ 05/10/24 14:39:31.462
  STEP: deleting a collection @ 05/10/24 14:39:31.469
  I0510 14:39:31.480036 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-6689" for this suite. @ 05/10/24 14:39:31.482
• [0.754 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 05/10/24 14:39:31.486
  I0510 14:39:31.486225 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename resourcequota @ 05/10/24 14:39:31.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:39:31.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:39:31.497
  E0510 14:39:31.813671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:32.814254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:33.814625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:34.815364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:35.816024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:36.816152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:37.817170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:38.817686      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:39.818298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:40.818939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:41.818986      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:42.819981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:43.821031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:44.821743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:45.821765      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:46.822567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:47.823440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 05/10/24 14:39:48.503
  E0510 14:39:48.823978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:49.824175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:50.824362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:51.824991      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:52.825465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/10/24 14:39:53.506
  STEP: Ensuring resource quota status is calculated @ 05/10/24 14:39:53.51
  E0510 14:39:53.826448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:54.826654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 05/10/24 14:39:55.512
  STEP: Ensuring resource quota status captures configMap creation @ 05/10/24 14:39:55.521
  E0510 14:39:55.827281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:56.827491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 05/10/24 14:39:57.524
  STEP: Ensuring resource quota status released usage @ 05/10/24 14:39:57.528
  E0510 14:39:57.828516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:39:58.828692      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:39:59.530773 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9743" for this suite. @ 05/10/24 14:39:59.533
• [28.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1497
  STEP: Creating a kubernetes client @ 05/10/24 14:39:59.538
  I0510 14:39:59.538321 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename services @ 05/10/24 14:39:59.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:39:59.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:39:59.549
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-3205 @ 05/10/24 14:39:59.552
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 05/10/24 14:39:59.563
  STEP: creating service externalsvc in namespace services-3205 @ 05/10/24 14:39:59.564
  STEP: creating replication controller externalsvc in namespace services-3205 @ 05/10/24 14:39:59.574
  I0510 14:39:59.580827      21 runners.go:198] Created replication controller with name: externalsvc, namespace: services-3205, replica count: 2
  E0510 14:39:59.828785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:40:00.829772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:40:01.829996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:40:02.632152      21 runners.go:198] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 05/10/24 14:40:02.634
  I0510 14:40:02.645833 21 resource.go:361] Creating new exec pod
  E0510 14:40:02.830276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:40:03.830579      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:40:04.655867 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-3205 exec execpodgffmk -- /bin/sh -x -c nslookup clusterip-service.services-3205.svc.cluster.local'
  I0510 14:40:04.804208 21 builder.go:146] stderr: "+ nslookup clusterip-service.services-3205.svc.cluster.local\n"
  I0510 14:40:04.804254 21 builder.go:147] stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nclusterip-service.services-3205.svc.cluster.local\tcanonical name = externalsvc.services-3205.svc.cluster.local.\nName:\texternalsvc.services-3205.svc.cluster.local\nAddress: 10.103.20.160\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-3205, will wait for the garbage collector to delete the pods @ 05/10/24 14:40:04.804
  E0510 14:40:04.830743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:40:04.862498 21 resources.go:139] Deleting ReplicationController externalsvc took: 4.541671ms
  I0510 14:40:04.962906 21 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.403171ms
  E0510 14:40:05.830975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:40:06.831726      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:40:07.675269 21 service.go:1506] Cleaning up the ClusterIP to ExternalName test service
  I0510 14:40:07.682227 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3205" for this suite. @ 05/10/24 14:40:07.684
• [8.152 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 05/10/24 14:40:07.69
  I0510 14:40:07.691015 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename pods @ 05/10/24 14:40:07.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:40:07.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:40:07.704
  STEP: creating the pod @ 05/10/24 14:40:07.707
  STEP: setting up watch @ 05/10/24 14:40:07.707
  STEP: submitting the pod to kubernetes @ 05/10/24 14:40:07.809
  STEP: verifying the pod is in kubernetes @ 05/10/24 14:40:07.816
  STEP: verifying pod creation was observed @ 05/10/24 14:40:07.818
  E0510 14:40:07.832342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:40:08.832741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 05/10/24 14:40:09.826
  STEP: verifying pod deletion was observed @ 05/10/24 14:40:09.831
  E0510 14:40:09.833363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:40:10.619554 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6861" for this suite. @ 05/10/24 14:40:10.622
• [2.935 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 05/10/24 14:40:10.626
  I0510 14:40:10.626555 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename prestop @ 05/10/24 14:40:10.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:40:10.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:40:10.639
  STEP: Creating server pod server in namespace prestop-2985 @ 05/10/24 14:40:10.641
  STEP: Waiting for pods to come up. @ 05/10/24 14:40:10.646
  E0510 14:40:10.834216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:40:11.834481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-2985 @ 05/10/24 14:40:12.652
  E0510 14:40:12.834640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:40:13.834750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 05/10/24 14:40:14.661
  E0510 14:40:14.835621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:40:15.836090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:40:16.836222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:40:17.836605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:40:18.836820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:40:19.673810 21 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 05/10/24 14:40:19.674
  I0510 14:40:19.684050 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-2985" for this suite. @ 05/10/24 14:40:19.686
• [9.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 05/10/24 14:40:19.691
  I0510 14:40:19.691838 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename limitrange @ 05/10/24 14:40:19.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:40:19.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:40:19.705
  STEP: Creating LimitRange "e2e-limitrange-km8dq" in namespace "limitrange-6284" @ 05/10/24 14:40:19.708
  STEP: Creating another limitRange in another namespace @ 05/10/24 14:40:19.712
  I0510 14:40:19.722289 21 limit_range.go:299] Namespace "e2e-limitrange-km8dq-9750" created
  I0510 14:40:19.722321 21 limit_range.go:300] Creating LimitRange "e2e-limitrange-km8dq" in namespace "e2e-limitrange-km8dq-9750"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-km8dq" @ 05/10/24 14:40:19.725
  I0510 14:40:19.727487 21 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-km8dq" in "limitrange-6284" namespace @ 05/10/24 14:40:19.727
  I0510 14:40:19.733079 21 limit_range.go:335] LimitRange "e2e-limitrange-km8dq" has been patched
  STEP: Delete LimitRange "e2e-limitrange-km8dq" by Collection with labelSelector: "e2e-limitrange-km8dq=patched" @ 05/10/24 14:40:19.733
  STEP: Confirm that the limitRange "e2e-limitrange-km8dq" has been deleted @ 05/10/24 14:40:19.739
  I0510 14:40:19.739441 21 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0510 14:40:19.741062 21 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-km8dq=patched"
  I0510 14:40:19.741087 21 limit_range.go:344] LimitRange "e2e-limitrange-km8dq" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-km8dq" @ 05/10/24 14:40:19.741
  I0510 14:40:19.743003 21 limit_range.go:350] Found 1 limitRange
  I0510 14:40:19.743111 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-6284" for this suite. @ 05/10/24 14:40:19.745
  STEP: Destroying namespace "e2e-limitrange-km8dq-9750" for this suite. @ 05/10/24 14:40:19.75
• [0.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 05/10/24 14:40:19.754
  I0510 14:40:19.754942 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/10/24 14:40:19.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:40:19.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:40:19.768
  I0510 14:40:19.770626 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  E0510 14:40:19.837650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:40:20.838592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:40:21.839000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:40:22.816585 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-3730" for this suite. @ 05/10/24 14:40:22.819
• [3.069 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 05/10/24 14:40:22.823
  I0510 14:40:22.823755 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename secrets @ 05/10/24 14:40:22.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:40:22.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:40:22.835
  STEP: Creating secret with name secret-test-a4de241f-1a03-4cdd-82c4-1a9dc742ddcd @ 05/10/24 14:40:22.837
  E0510 14:40:22.839786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a pod to test consume secrets @ 05/10/24 14:40:22.84
  E0510 14:40:23.840384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:40:24.840636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 14:40:24.852
  I0510 14:40:24.854506 21 output.go:196] Trying to get logs from node worker-1 pod pod-secrets-28a2f467-9d42-45cb-9fa4-6d57cd23b1db container secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 14:40:24.87
  I0510 14:40:24.880477 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8709" for this suite. @ 05/10/24 14:40:24.884
• [2.066 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 05/10/24 14:40:24.89
  I0510 14:40:24.890553 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename container-probe @ 05/10/24 14:40:24.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:40:24.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:40:24.903
  STEP: Creating pod busybox-b43617c8-6ec4-4c78-a733-e3302f3a4081 in namespace container-probe-4403 @ 05/10/24 14:40:24.905
  E0510 14:40:25.841321      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:40:26.841564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/10/24 14:40:26.915
  I0510 14:40:26.917325 21 container_probe.go:1749] Initial restart count of pod busybox-b43617c8-6ec4-4c78-a733-e3302f3a4081 is 0
  I0510 14:40:26.919109 21 container_probe.go:1759] Get pod busybox-b43617c8-6ec4-4c78-a733-e3302f3a4081 in namespace container-probe-4403
  E0510 14:40:27.842402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:40:28.842496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:40:28.922160 21 container_probe.go:1759] Get pod busybox-b43617c8-6ec4-4c78-a733-e3302f3a4081 in namespace container-probe-4403
  E0510 14:40:29.843051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:40:30.843268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:40:30.924778 21 container_probe.go:1759] Get pod busybox-b43617c8-6ec4-4c78-a733-e3302f3a4081 in namespace container-probe-4403
  E0510 14:40:31.843830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:40:32.844863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:40:32.927896 21 container_probe.go:1759] Get pod busybox-b43617c8-6ec4-4c78-a733-e3302f3a4081 in namespace container-probe-4403
  E0510 14:40:33.844983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:40:34.845091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:40:34.931196 21 container_probe.go:1759] Get pod busybox-b43617c8-6ec4-4c78-a733-e3302f3a4081 in namespace container-probe-4403
  E0510 14:40:35.845197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:40:36.845423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:40:36.934272 21 container_probe.go:1759] Get pod busybox-b43617c8-6ec4-4c78-a733-e3302f3a4081 in namespace container-probe-4403
  E0510 14:40:37.846356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:40:38.846585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:40:38.937358 21 container_probe.go:1759] Get pod busybox-b43617c8-6ec4-4c78-a733-e3302f3a4081 in namespace container-probe-4403
  E0510 14:40:39.847316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:40:40.847396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:40:40.940224 21 container_probe.go:1759] Get pod busybox-b43617c8-6ec4-4c78-a733-e3302f3a4081 in namespace container-probe-4403
  E0510 14:40:41.848373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:40:42.848704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:40:42.943093 21 container_probe.go:1759] Get pod busybox-b43617c8-6ec4-4c78-a733-e3302f3a4081 in namespace container-probe-4403
  E0510 14:40:43.848818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:40:44.848931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:40:44.947060 21 container_probe.go:1759] Get pod busybox-b43617c8-6ec4-4c78-a733-e3302f3a4081 in namespace container-probe-4403
  E0510 14:40:45.849131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:40:46.849333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:40:46.949926 21 container_probe.go:1759] Get pod busybox-b43617c8-6ec4-4c78-a733-e3302f3a4081 in namespace container-probe-4403
  E0510 14:40:47.849969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:40:48.850059      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:40:48.953021 21 container_probe.go:1759] Get pod busybox-b43617c8-6ec4-4c78-a733-e3302f3a4081 in namespace container-probe-4403
  E0510 14:40:49.850965      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:40:50.851001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:40:50.955945 21 container_probe.go:1759] Get pod busybox-b43617c8-6ec4-4c78-a733-e3302f3a4081 in namespace container-probe-4403
  E0510 14:40:51.852086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:40:52.852877      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:40:52.958534 21 container_probe.go:1759] Get pod busybox-b43617c8-6ec4-4c78-a733-e3302f3a4081 in namespace container-probe-4403
  E0510 14:40:53.852974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:40:54.853199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:40:54.962314 21 container_probe.go:1759] Get pod busybox-b43617c8-6ec4-4c78-a733-e3302f3a4081 in namespace container-probe-4403
  E0510 14:40:55.854238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:40:56.854501      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:40:56.965081 21 container_probe.go:1759] Get pod busybox-b43617c8-6ec4-4c78-a733-e3302f3a4081 in namespace container-probe-4403
  E0510 14:40:57.855152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:40:58.855361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:40:58.968162 21 container_probe.go:1759] Get pod busybox-b43617c8-6ec4-4c78-a733-e3302f3a4081 in namespace container-probe-4403
  E0510 14:40:59.856001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:00.856186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:41:00.971168 21 container_probe.go:1759] Get pod busybox-b43617c8-6ec4-4c78-a733-e3302f3a4081 in namespace container-probe-4403
  E0510 14:41:01.856440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:02.856885      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:41:02.974680 21 container_probe.go:1759] Get pod busybox-b43617c8-6ec4-4c78-a733-e3302f3a4081 in namespace container-probe-4403
  E0510 14:41:03.857009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:04.857189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:41:04.978182 21 container_probe.go:1759] Get pod busybox-b43617c8-6ec4-4c78-a733-e3302f3a4081 in namespace container-probe-4403
  E0510 14:41:05.858026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:06.858213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:41:06.980912 21 container_probe.go:1759] Get pod busybox-b43617c8-6ec4-4c78-a733-e3302f3a4081 in namespace container-probe-4403
  E0510 14:41:07.858953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:08.859014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:41:08.983707 21 container_probe.go:1759] Get pod busybox-b43617c8-6ec4-4c78-a733-e3302f3a4081 in namespace container-probe-4403
  E0510 14:41:09.859720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:10.859799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:41:10.986716 21 container_probe.go:1759] Get pod busybox-b43617c8-6ec4-4c78-a733-e3302f3a4081 in namespace container-probe-4403
  E0510 14:41:11.860677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:12.860946      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:41:12.989750 21 container_probe.go:1759] Get pod busybox-b43617c8-6ec4-4c78-a733-e3302f3a4081 in namespace container-probe-4403
  E0510 14:41:13.861097      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:14.861189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:41:14.993457 21 container_probe.go:1759] Get pod busybox-b43617c8-6ec4-4c78-a733-e3302f3a4081 in namespace container-probe-4403
  E0510 14:41:15.861307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:16.861431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:41:16.996252 21 container_probe.go:1759] Get pod busybox-b43617c8-6ec4-4c78-a733-e3302f3a4081 in namespace container-probe-4403
  I0510 14:41:16.996296 21 container_probe.go:1763] Restart count of pod container-probe-4403/busybox-b43617c8-6ec4-4c78-a733-e3302f3a4081 is now 1 (50.07893613s elapsed)
  STEP: deleting the pod @ 05/10/24 14:41:16.996
  I0510 14:41:17.003951 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4403" for this suite. @ 05/10/24 14:41:17.008
• [52.122 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 05/10/24 14:41:17.012
  I0510 14:41:17.012849 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 14:41:17.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:41:17.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:41:17.025
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 05/10/24 14:41:17.028
  E0510 14:41:17.862492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:18.862697      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 14:41:19.038
  I0510 14:41:19.040520 21 output.go:196] Trying to get logs from node worker-1 pod pod-062cc517-9b6d-4859-b302-c56f6d4428ca container test-container: <nil>
  STEP: delete the pod @ 05/10/24 14:41:19.045
  I0510 14:41:19.055119 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7932" for this suite. @ 05/10/24 14:41:19.057
• [2.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 05/10/24 14:41:19.063
  I0510 14:41:19.063448 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename cronjob @ 05/10/24 14:41:19.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:41:19.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:41:19.076
  STEP: Creating a ForbidConcurrent cronjob @ 05/10/24 14:41:19.079
  STEP: Ensuring a job is scheduled @ 05/10/24 14:41:19.083
  E0510 14:41:19.863200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:20.863539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:21.864429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:22.864549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:23.865042      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:24.865238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:25.865351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:26.865548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:27.866465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:28.866640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:29.867078      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:30.868046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:31.868791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:32.869060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:33.869613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:34.869739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:35.870402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:36.870584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:37.871405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:38.871607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:39.871744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:40.872053      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:41.872940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:42.873058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:43.873679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:44.873872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:45.873996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:46.874189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:47.874802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:48.874998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:49.875109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:50.875320      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:51.876132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:52.876252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:53.876408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:54.876606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:55.877153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:56.877377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:57.878139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:58.878262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:41:59.878762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:00.879044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 05/10/24 14:42:01.085
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 05/10/24 14:42:01.087
  STEP: Ensuring no more jobs are scheduled @ 05/10/24 14:42:01.089
  STEP: Removing cronjob @ 05/10/24 14:42:01.091
  I0510 14:42:01.095488 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6189" for this suite. @ 05/10/24 14:42:01.098
• [42.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 05/10/24 14:42:01.109
  I0510 14:42:01.109455 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename secrets @ 05/10/24 14:42:01.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:42:01.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:42:01.127
  I0510 14:42:01.153442 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7417" for this suite. @ 05/10/24 14:42:01.155
• [0.052 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 05/10/24 14:42:01.161
  I0510 14:42:01.161731 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename endpointslicemirroring @ 05/10/24 14:42:01.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:42:01.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:42:01.172
  STEP: mirroring a new custom Endpoint @ 05/10/24 14:42:01.184
  I0510 14:42:01.190171 21 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  E0510 14:42:01.879031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:02.879472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 05/10/24 14:42:03.193
  I0510 14:42:03.199167 21 endpointslicemirroring.go:171] Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E0510 14:42:03.880280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:04.880506      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 05/10/24 14:42:05.202
  I0510 14:42:05.208865 21 endpointslicemirroring.go:194] Waiting for 0 EndpointSlices to exist, got 1
  E0510 14:42:05.880632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:06.880842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:42:07.212011 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-4301" for this suite. @ 05/10/24 14:42:07.214
• [6.058 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 05/10/24 14:42:07.22
  I0510 14:42:07.220044 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename pod-network-test @ 05/10/24 14:42:07.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:42:07.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:42:07.231
  STEP: Performing setup for networking test in namespace pod-network-test-7098 @ 05/10/24 14:42:07.234
  STEP: creating a selector @ 05/10/24 14:42:07.234
  STEP: Creating the service pods in kubernetes @ 05/10/24 14:42:07.234
  I0510 14:42:07.234410 21 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0510 14:42:07.881122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:08.882014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:09.882527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:10.882729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:11.882809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:12.883409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:13.884062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:14.884250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:15.885093      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:16.885279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:17.886317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:18.886533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:19.886957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:20.887173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:21.887193      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:22.887623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:23.888495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:24.888703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:25.889579      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:26.889791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:27.890769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:28.891001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:29.891073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:30.891307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:31.891377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:32.892080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:33.893066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:34.893249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:35.894157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:36.894342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:37.894669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:38.894785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 05/10/24 14:42:39.312
  E0510 14:42:39.895286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:40.895524      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:42:41.339002 21 utils.go:779] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0510 14:42:41.339037 21 utils.go:472] Going to poll 10.244.0.19 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0510 14:42:41.340981 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.0.19 8081 | grep -v '^\s*$'] Namespace:pod-network-test-7098 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0510 14:42:41.341011 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 14:42:41.341485 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0510 14:42:41.341552 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-7098/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.0.19+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0510 14:42:41.896057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:42:42.404037 21 utils.go:489] Found all 1 expected endpoints: [netserver-0]
  I0510 14:42:42.404087 21 utils.go:472] Going to poll 10.244.1.163 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0510 14:42:42.406624 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.1.163 8081 | grep -v '^\s*$'] Namespace:pod-network-test-7098 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0510 14:42:42.406654 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 14:42:42.407235 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0510 14:42:42.407295 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-7098/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.1.163+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0510 14:42:42.896180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:42:43.464069 21 utils.go:489] Found all 1 expected endpoints: [netserver-1]
  I0510 14:42:43.464199 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7098" for this suite. @ 05/10/24 14:42:43.466
• [36.251 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 05/10/24 14:42:43.471
  I0510 14:42:43.471571 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename pods @ 05/10/24 14:42:43.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:42:43.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:42:43.484
  STEP: Create set of pods @ 05/10/24 14:42:43.487
  I0510 14:42:43.495393 21 pods.go:871] created test-pod-1
  I0510 14:42:43.502004 21 pods.go:871] created test-pod-2
  I0510 14:42:43.509320 21 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 05/10/24 14:42:43.509
  E0510 14:42:43.897107      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:44.897318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 05/10/24 14:42:45.542
  I0510 14:42:45.545541 21 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  E0510 14:42:45.897835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:42:46.546232 21 pods.go:1140] Pod quantity 2 is different from expected quantity 0
  E0510 14:42:46.898414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:42:47.545892 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5259" for this suite. @ 05/10/24 14:42:47.548
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 05/10/24 14:42:47.552
  I0510 14:42:47.552790 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename projected @ 05/10/24 14:42:47.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:42:47.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:42:47.565
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 14:42:47.568
  E0510 14:42:47.899285      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:48.900057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:49.900645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:50.900828      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 14:42:51.582
  I0510 14:42:51.584371 21 output.go:196] Trying to get logs from node worker-1 pod downwardapi-volume-2a5d02f1-c4d2-4ae2-8525-170dd112a398 container client-container: <nil>
  STEP: delete the pod @ 05/10/24 14:42:51.595
  I0510 14:42:51.605162 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7871" for this suite. @ 05/10/24 14:42:51.607
• [4.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:355
  STEP: Creating a kubernetes client @ 05/10/24 14:42:51.612
  I0510 14:42:51.612475 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 14:42:51.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:42:51.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:42:51.624
  STEP: creating a replication controller @ 05/10/24 14:42:51.626
  I0510 14:42:51.626759 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-2471 create -f -'
  I0510 14:42:51.746380 21 builder.go:146] stderr: ""
  I0510 14:42:51.746417 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/10/24 14:42:51.746
  I0510 14:42:51.746502 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-2471 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0510 14:42:51.809797 21 builder.go:146] stderr: ""
  I0510 14:42:51.809837 21 builder.go:147] stdout: "update-demo-nautilus-fds67 update-demo-nautilus-nnzl8 "
  I0510 14:42:51.809890 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-2471 get pods update-demo-nautilus-fds67 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0510 14:42:51.872346 21 builder.go:146] stderr: ""
  I0510 14:42:51.872517 21 builder.go:147] stdout: ""
  I0510 14:42:51.872578 21 kubectl.go:2501] update-demo-nautilus-fds67 is created but not running
  E0510 14:42:51.901538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:52.901969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:53.902093      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:54.902301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:55.902423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:42:56.873566 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-2471 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0510 14:42:56.902988      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:42:56.933157 21 builder.go:146] stderr: ""
  I0510 14:42:56.933206 21 builder.go:147] stdout: "update-demo-nautilus-fds67 update-demo-nautilus-nnzl8 "
  I0510 14:42:56.933259 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-2471 get pods update-demo-nautilus-fds67 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0510 14:42:56.990878 21 builder.go:146] stderr: ""
  I0510 14:42:56.990924 21 builder.go:147] stdout: "true"
  I0510 14:42:56.990981 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-2471 get pods update-demo-nautilus-fds67 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0510 14:42:57.048422 21 builder.go:146] stderr: ""
  I0510 14:42:57.048459 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0510 14:42:57.048472 21 kubectl.go:2392] validating pod update-demo-nautilus-fds67
  I0510 14:42:57.054549 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0510 14:42:57.054609 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0510 14:42:57.054626 21 kubectl.go:2519] update-demo-nautilus-fds67 is verified up and running
  I0510 14:42:57.054672 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-2471 get pods update-demo-nautilus-nnzl8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0510 14:42:57.112431 21 builder.go:146] stderr: ""
  I0510 14:42:57.112466 21 builder.go:147] stdout: "true"
  I0510 14:42:57.112528 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-2471 get pods update-demo-nautilus-nnzl8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0510 14:42:57.170512 21 builder.go:146] stderr: ""
  I0510 14:42:57.170556 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0510 14:42:57.170575 21 kubectl.go:2392] validating pod update-demo-nautilus-nnzl8
  I0510 14:42:57.175863 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0510 14:42:57.175917 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0510 14:42:57.175936 21 kubectl.go:2519] update-demo-nautilus-nnzl8 is verified up and running
  STEP: scaling down the replication controller @ 05/10/24 14:42:57.175
  I0510 14:42:57.177518 21 kubectl.go:324] scanned /root for discovery docs: <nil>
  I0510 14:42:57.177570 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-2471 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0510 14:42:57.903104      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:42:58.249819 21 builder.go:146] stderr: ""
  I0510 14:42:58.250048 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/10/24 14:42:58.25
  I0510 14:42:58.250163 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-2471 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0510 14:42:58.311277 21 builder.go:146] stderr: ""
  I0510 14:42:58.311317 21 builder.go:147] stdout: "update-demo-nautilus-fds67 update-demo-nautilus-nnzl8 "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 05/10/24 14:42:58.311
  E0510 14:42:58.904038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:42:59.904222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:00.904433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:01.904671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:02.905126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:43:03.311723 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-2471 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0510 14:43:03.371059 21 builder.go:146] stderr: ""
  I0510 14:43:03.371100 21 builder.go:147] stdout: "update-demo-nautilus-fds67 "
  I0510 14:43:03.371318 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-2471 get pods update-demo-nautilus-fds67 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0510 14:43:03.429099 21 builder.go:146] stderr: ""
  I0510 14:43:03.429139 21 builder.go:147] stdout: "true"
  I0510 14:43:03.429358 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-2471 get pods update-demo-nautilus-fds67 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0510 14:43:03.487452 21 builder.go:146] stderr: ""
  I0510 14:43:03.487494 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0510 14:43:03.487514 21 kubectl.go:2392] validating pod update-demo-nautilus-fds67
  I0510 14:43:03.491083 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0510 14:43:03.491137 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0510 14:43:03.491156 21 kubectl.go:2519] update-demo-nautilus-fds67 is verified up and running
  STEP: scaling up the replication controller @ 05/10/24 14:43:03.491
  I0510 14:43:03.492630 21 kubectl.go:324] scanned /root for discovery docs: <nil>
  I0510 14:43:03.492677 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-2471 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0510 14:43:03.905377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:43:04.563260 21 builder.go:146] stderr: ""
  I0510 14:43:04.563372 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/10/24 14:43:04.563
  I0510 14:43:04.563556 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-2471 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0510 14:43:04.626503 21 builder.go:146] stderr: ""
  I0510 14:43:04.626746 21 builder.go:147] stdout: "update-demo-nautilus-fds67 update-demo-nautilus-gbvp6 "
  I0510 14:43:04.626816 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-2471 get pods update-demo-nautilus-fds67 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0510 14:43:04.685351 21 builder.go:146] stderr: ""
  I0510 14:43:04.685529 21 builder.go:147] stdout: "true"
  I0510 14:43:04.685623 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-2471 get pods update-demo-nautilus-fds67 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0510 14:43:04.745706 21 builder.go:146] stderr: ""
  I0510 14:43:04.745753 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0510 14:43:04.745771 21 kubectl.go:2392] validating pod update-demo-nautilus-fds67
  I0510 14:43:04.749458 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0510 14:43:04.749524 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0510 14:43:04.749543 21 kubectl.go:2519] update-demo-nautilus-fds67 is verified up and running
  I0510 14:43:04.749601 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-2471 get pods update-demo-nautilus-gbvp6 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0510 14:43:04.808053 21 builder.go:146] stderr: ""
  I0510 14:43:04.808252 21 builder.go:147] stdout: "true"
  I0510 14:43:04.808313 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-2471 get pods update-demo-nautilus-gbvp6 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0510 14:43:04.866902 21 builder.go:146] stderr: ""
  I0510 14:43:04.866944 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0510 14:43:04.866962 21 kubectl.go:2392] validating pod update-demo-nautilus-gbvp6
  I0510 14:43:04.872764 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0510 14:43:04.872830 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0510 14:43:04.872849 21 kubectl.go:2519] update-demo-nautilus-gbvp6 is verified up and running
  STEP: using delete to clean up resources @ 05/10/24 14:43:04.872
  I0510 14:43:04.872948 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-2471 delete --grace-period=0 --force -f -'
  E0510 14:43:04.906333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:43:04.934387 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0510 14:43:04.934432 21 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0510 14:43:04.934490 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-2471 get rc,svc -l name=update-demo --no-headers'
  I0510 14:43:04.999021 21 builder.go:146] stderr: "No resources found in kubectl-2471 namespace.\n"
  I0510 14:43:04.999065 21 builder.go:147] stdout: ""
  I0510 14:43:04.999114 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-2471 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0510 14:43:05.062316 21 builder.go:146] stderr: ""
  I0510 14:43:05.062365 21 builder.go:147] stdout: ""
  I0510 14:43:05.062481 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2471" for this suite. @ 05/10/24 14:43:05.064
• [13.458 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 05/10/24 14:43:05.07
  I0510 14:43:05.070404 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename gc @ 05/10/24 14:43:05.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:43:05.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:43:05.082
  STEP: create the deployment @ 05/10/24 14:43:05.085
  W0510 14:43:05.090076      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 05/10/24 14:43:05.09
  STEP: delete the deployment @ 05/10/24 14:43:05.592
  STEP: wait for all rs to be garbage collected @ 05/10/24 14:43:05.596
  STEP: expected 0 pods, got 2 pods @ 05/10/24 14:43:05.599
  E0510 14:43:05.906490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/10/24 14:43:06.103
  W0510 14:43:06.106664      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0510 14:43:06.106697 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0510 14:43:06.106920 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7641" for this suite. @ 05/10/24 14:43:06.109
• [1.043 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 05/10/24 14:43:06.113
  I0510 14:43:06.113516 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename chunking @ 05/10/24 14:43:06.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:43:06.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:43:06.125
  STEP: creating a large number of resources @ 05/10/24 14:43:06.127
  E0510 14:43:06.907352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:07.907432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:08.907979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:09.908785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:10.909269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:11.910125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:12.910981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:13.911284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:14.911464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:15.911928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:16.912383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:17.913035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:18.913144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:19.913535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:20.913419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:21.913693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:22.914587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 05/10/24 14:43:23.817
  I0510 14:43:23.867999 21 chunking.go:163] Retrieved 40/40 results with rv 33667 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 05/10/24 14:43:23.868
  E0510 14:43:23.914960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:24.915633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:25.915836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:26.916335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:27.916713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:28.916831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:29.917021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:30.917207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:31.917536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:32.917876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:33.917997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:34.918195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:35.918312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:36.918433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:37.918787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:38.919210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:39.919357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:40.919595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:41.919979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:42.920624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:43:43.872606 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0510 14:43:43.921362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:44.921534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:45.921736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:46.921917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:47.922268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:48.922468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:49.922651      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:50.922878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:51.923236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:52.923587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:53.923776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:54.923975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:55.924168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:56.924373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:57.924715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:58.924912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:43:59.925091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:00.925287      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:01.925413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:02.925823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:44:03.872748 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0510 14:44:03.926431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:04.926673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:05.926896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:06.927091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:07.927468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:08.927691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:09.927876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:10.928066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:11.928425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:12.928774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:13.928960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:14.929143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:15.929326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:16.929450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:17.929856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:18.929973      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:19.930094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:20.930286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:21.930522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:22.930974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:44:23.873330 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0510 14:44:23.931261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:24.931586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:25.931711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:26.931895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:27.932358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:28.932813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:29.933186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:30.933532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:31.933845      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:32.933973      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:33.934168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:34.934290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:35.934480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:36.934663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:37.934780      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:38.934925      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:39.934991      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:40.936058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:41.936167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:42.936302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:44:43.872190 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0510 14:44:43.937073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:44.937258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:45.937444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:46.937586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:47.937720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:48.937922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:49.938036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:50.938220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:51.938352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:52.938696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:53.938827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:54.938975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:55.939159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:56.939335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:57.939671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:58.939799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:44:59.939986      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:00.940108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:01.940469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:02.940547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:45:03.872060 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0510 14:45:03.940671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:04.940804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:05.940945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:06.941153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:07.941691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:08.941818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:09.942014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:10.942253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:11.942544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:12.942813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:13.943032      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:14.943220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:15.944057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:16.944240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:17.944357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:18.944541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:19.944664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:20.945169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:21.946048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:22.946524      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:45:23.872503 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0510 14:45:23.947190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:24.947325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:25.948057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:26.948238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:27.948591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:28.948717      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:29.948894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:30.949074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:31.949212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:32.949335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:33.949536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:34.949724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:35.949866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:36.949979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:37.950335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:38.950521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:39.950699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:40.950928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:41.950979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:42.951108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:45:43.871911 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0510 14:45:43.951496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:44.951702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:45.951829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:46.951955      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:47.952368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:48.952499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:49.952694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:50.952882      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:51.953455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:52.953572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:53.953768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:54.953896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:55.954026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:56.954165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:57.954508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:58.954622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:45:59.954754      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:00.954961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:01.955338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:02.956056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:46:03.873104 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0510 14:46:03.956772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:04.956955      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:05.957117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:06.957245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:07.957567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:08.957689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:09.957812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:10.957991      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:11.958112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:12.958227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:13.958630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:14.958751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:15.958969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:16.959165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:17.959613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:18.959749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:19.959926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:20.960105      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:21.960447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:22.960833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:46:23.871930 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0510 14:46:23.961506      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:24.961718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:25.961903      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:26.962018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:27.962388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:28.962586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:29.962684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:30.962893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:31.962989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:32.963104      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:33.963826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:34.964021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:35.964219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:36.964316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:37.964441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:38.965169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:39.965357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:40.965539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:41.965556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:42.965671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:46:43.872535 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0510 14:46:43.966421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:44.966591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:45.966778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:46.966974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:47.967312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:48.968063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:49.968244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:50.968419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:51.968716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:52.968992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:53.969171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:54.969359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:55.969550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:56.969739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:57.970018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:58.970204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:46:59.970330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:00.970520      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:01.970663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:02.971012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:47:03.872373 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0510 14:47:03.971369      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:04.971570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:05.971783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:06.971919      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:07.972360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:08.972474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:09.972661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:10.972852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:11.973182      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:12.973543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:13.973887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:14.974071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:15.974257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:16.974389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:17.974737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:18.974965      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:19.975048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:20.976061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:21.976398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:22.976883      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:47:23.871740 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0510 14:47:23.977765      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:24.977907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:25.978087      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:26.978269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:27.978653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:28.978838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:29.979049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:30.980048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:31.980403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:32.980747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:33.980929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:34.981101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:35.981210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:36.981387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:37.981505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:38.981625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:39.981995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:40.982136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:41.982259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:42.982623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:47:43.872764 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0510 14:47:43.983385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:44.983589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:45.983794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:46.983990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:47.984412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:48.984597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:49.984775      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:50.984973      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:51.985328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:52.985679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:53.985861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:54.986004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:55.986194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:56.986377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:57.986493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:58.986684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:47:59.986822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:00.986979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:01.987123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:02.987505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:48:03.872142 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0510 14:48:03.987858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:04.988049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:05.988235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:06.988412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:07.988755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:08.988873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:09.989062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:10.989170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:11.989547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:12.989662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:13.989864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:14.990061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:15.990247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:16.990427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:17.990783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:18.990985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:19.991188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:20.992065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:21.992413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:22.992800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:48:23.872626 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0510 14:48:23.993419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:24.993614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:25.993806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:26.993958      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:27.994309      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:28.994440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:29.994640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:30.994826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:31.995298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:32.995638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:33.995842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:34.995951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:35.996138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:36.996266      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:37.996391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:38.996568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:39.996744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:40.996930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:41.997436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:42.997790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:48:43.872576 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0510 14:48:43.998220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:44.998415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:45.998607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:46.998797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:47.998955      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:48.999165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:49.999356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:50.999488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:51.999799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:53.000071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:54.000257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:55.000444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:56.000655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:57.000849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:58.000979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:48:59.001182      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:00.001392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:01.001803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:02.002309      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:03.002447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:49:03.872518 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0510 14:49:04.003109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:05.003252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:06.003456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:07.004048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:08.004182      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:09.004374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:10.004510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:11.004632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:12.004770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:13.005053      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:14.005242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:15.005464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:16.005584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:17.005803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:18.006075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:19.006271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:20.006414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:21.006615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:22.007355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:23.007199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:49:23.871748 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0510 14:49:24.007617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:25.007828      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:26.008015      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:27.008221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:28.008590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:29.008779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:30.008961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:31.009148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:32.009276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:33.009612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:34.009749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:35.009876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:36.010065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:37.010184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:38.010290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:39.010470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:40.010611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:41.010804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:42.010966      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:43.011333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:49:43.871916 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzM2NjcsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0510 14:49:44.011793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:45.011992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:46.012196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:47.012323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:48.012665      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:49.012793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:50.012915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:51.013099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:52.013218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:53.013330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:54.013414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:55.013529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:56.013714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:57.013894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:58.014233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:49:59.014434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:00.014617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:01.014824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:02.015231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:03.015587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:50:03.870794 21 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0510 14:50:03.870832 21 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 05/10/24 14:50:03.87
  STEP: retrieving all remaining pages @ 05/10/24 14:50:03.874
  I0510 14:50:03.877365 21 chunking.go:221] Retrieved 40/40 results with rv 34470 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ0NzAsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0510 14:50:03.880618 21 chunking.go:221] Retrieved 40/40 results with rv 34470 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ0NzAsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0510 14:50:03.883589 21 chunking.go:221] Retrieved 40/40 results with rv 34470 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ0NzAsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0510 14:50:03.886676 21 chunking.go:221] Retrieved 40/40 results with rv 34470 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ0NzAsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0510 14:50:03.889634 21 chunking.go:221] Retrieved 40/40 results with rv 34470 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ0NzAsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0510 14:50:03.892669 21 chunking.go:221] Retrieved 40/40 results with rv 34470 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ0NzAsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0510 14:50:03.895769 21 chunking.go:221] Retrieved 40/40 results with rv 34470 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQ0NzAsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0510 14:50:03.898603 21 chunking.go:221] Retrieved 40/40 results with rv 34470 and continue 
  I0510 14:50:03.898751 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-1476" for this suite. @ 05/10/24 14:50:03.901
• [417.791 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 05/10/24 14:50:03.905
  I0510 14:50:03.905096 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 14:50:03.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:50:03.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:50:03.916
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 14:50:03.919
  E0510 14:50:04.016416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:05.016772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 14:50:05.929
  I0510 14:50:05.931861 21 output.go:196] Trying to get logs from node worker-1 pod downwardapi-volume-4008d816-8d68-4c9d-906b-8362ec3933f4 container client-container: <nil>
  STEP: delete the pod @ 05/10/24 14:50:05.944
  I0510 14:50:05.953943 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2784" for this suite. @ 05/10/24 14:50:05.956
• [2.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 05/10/24 14:50:05.96
  I0510 14:50:05.960850 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename dns @ 05/10/24 14:50:05.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:50:05.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:50:05.973
  STEP: Creating a test headless service @ 05/10/24 14:50:05.976
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5832.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-5832.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5832.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-5832.svc.cluster.local;sleep 1; done
   @ 05/10/24 14:50:05.98
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5832.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-5832.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5832.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-5832.svc.cluster.local;sleep 1; done
   @ 05/10/24 14:50:05.98
  STEP: creating a pod to probe DNS @ 05/10/24 14:50:05.98
  STEP: submitting the pod to kubernetes @ 05/10/24 14:50:05.98
  E0510 14:50:06.017061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:07.017247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/10/24 14:50:07.995
  STEP: looking for the results for each expected name from probers @ 05/10/24 14:50:07.997
  I0510 14:50:08.002601 21 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:08.005591 21 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:08.008441 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:08.011062 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:08.013683 21 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  E0510 14:50:08.017721      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:50:08.017756 21 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:08.020510 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:08.023099 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:08.023132 21 dns_common.go:489] Lookups using dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5832.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5832.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local jessie_udp@dns-test-service-2.dns-5832.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5832.svc.cluster.local]

  I0510 14:50:08.027387 21 dns_common.go:495] Pod client logs for webserver: 
  I0510 14:50:08.031538 21 dns_common.go:495] Pod client logs for querier: 
  I0510 14:50:08.035769 21 dns_common.go:495] Pod client logs for jessie-querier: 
  E0510 14:50:09.017861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:10.018007      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:11.018217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:12.018631      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:50:13.002009 21 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:13.005080 21 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:13.007778 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:13.010528 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:13.013167 21 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:13.015941 21 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:13.018607 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  E0510 14:50:13.018646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:50:13.021290 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:13.021324 21 dns_common.go:489] Lookups using dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5832.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5832.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local jessie_udp@dns-test-service-2.dns-5832.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5832.svc.cluster.local]

  I0510 14:50:13.025742 21 dns_common.go:495] Pod client logs for webserver: 
  I0510 14:50:13.029734 21 dns_common.go:495] Pod client logs for querier: 
  I0510 14:50:13.033714 21 dns_common.go:495] Pod client logs for jessie-querier: 
  E0510 14:50:14.018817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:15.019016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:16.019229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:17.020068      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:50:18.001861 21 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:18.004896 21 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:18.007720 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:18.010544 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:18.013272 21 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:18.016001 21 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:18.018685 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  E0510 14:50:18.020903      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:50:18.023067 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:18.023096 21 dns_common.go:489] Lookups using dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5832.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5832.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local jessie_udp@dns-test-service-2.dns-5832.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5832.svc.cluster.local]

  I0510 14:50:18.028911 21 dns_common.go:495] Pod client logs for webserver: 
  I0510 14:50:18.033552 21 dns_common.go:495] Pod client logs for querier: 
  I0510 14:50:18.038101 21 dns_common.go:495] Pod client logs for jessie-querier: 
  E0510 14:50:19.021203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:20.021453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:21.021679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:22.022054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:50:23.002362 21 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:23.005420 21 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:23.008138 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:23.010982 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:23.013625 21 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:23.016335 21 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:23.019044 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:23.021775 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:23.021804 21 dns_common.go:489] Lookups using dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5832.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5832.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local jessie_udp@dns-test-service-2.dns-5832.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5832.svc.cluster.local]

  E0510 14:50:23.022082      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:50:23.026241 21 dns_common.go:495] Pod client logs for webserver: 
  I0510 14:50:23.030445 21 dns_common.go:495] Pod client logs for querier: 
  I0510 14:50:23.034816 21 dns_common.go:495] Pod client logs for jessie-querier: 
  E0510 14:50:24.022221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:25.022458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:26.022554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:27.022688      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:50:28.001730 21 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:28.004826 21 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:28.007777 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:28.010615 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:28.013359 21 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:28.016034 21 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:28.018784 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:28.021404 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:28.021434 21 dns_common.go:489] Lookups using dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5832.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5832.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local jessie_udp@dns-test-service-2.dns-5832.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5832.svc.cluster.local]

  E0510 14:50:28.023589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:50:28.025674 21 dns_common.go:495] Pod client logs for webserver: 
  I0510 14:50:28.029716 21 dns_common.go:495] Pod client logs for querier: 
  I0510 14:50:28.033753 21 dns_common.go:495] Pod client logs for jessie-querier: 
  E0510 14:50:29.023861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:30.024070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:31.024278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:32.024591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:50:33.001722 21 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:33.005168 21 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:33.008059 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:33.010901 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:33.013649 21 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:33.016228 21 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:33.018983 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:33.021626 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-5832.svc.cluster.local from pod dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c: the server could not find the requested resource (get pods dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c)
  I0510 14:50:33.021653 21 dns_common.go:489] Lookups using dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5832.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5832.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5832.svc.cluster.local jessie_udp@dns-test-service-2.dns-5832.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5832.svc.cluster.local]

  E0510 14:50:33.024769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:50:33.025974 21 dns_common.go:495] Pod client logs for webserver: 
  I0510 14:50:33.029991 21 dns_common.go:495] Pod client logs for querier: 
  I0510 14:50:33.033969 21 dns_common.go:495] Pod client logs for jessie-querier: 
  E0510 14:50:34.025101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:35.025312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:36.025575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:37.025765      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:50:38.022574 21 dns_common.go:527] DNS probes using dns-5832/dns-test-4651ce5f-03ba-41bd-956d-b81c4bfdc35c succeeded

  STEP: deleting the pod @ 05/10/24 14:50:38.022
  E0510 14:50:38.026740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the test headless service @ 05/10/24 14:50:38.031
  I0510 14:50:38.041810 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5832" for this suite. @ 05/10/24 14:50:38.047
• [32.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 05/10/24 14:50:38.052
  I0510 14:50:38.052049 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename server-version @ 05/10/24 14:50:38.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:50:38.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:50:38.065
  STEP: Request ServerVersion @ 05/10/24 14:50:38.067
  STEP: Confirm major version @ 05/10/24 14:50:38.068
  I0510 14:50:38.068556 21 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 05/10/24 14:50:38.068
  I0510 14:50:38.068621 21 server_version.go:58] cleanMinorVersion: 30
  I0510 14:50:38.068648 21 server_version.go:62] Minor version: 30
  I0510 14:50:38.068781 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-1399" for this suite. @ 05/10/24 14:50:38.071
• [0.023 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 05/10/24 14:50:38.074
  I0510 14:50:38.074895 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename projected @ 05/10/24 14:50:38.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:50:38.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:50:38.085
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 14:50:38.087
  E0510 14:50:39.026987      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:40.028055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 14:50:40.097
  I0510 14:50:40.100086 21 output.go:196] Trying to get logs from node worker-1 pod downwardapi-volume-e15b470a-99af-4873-a4b3-d3d1da67774a container client-container: <nil>
  STEP: delete the pod @ 05/10/24 14:50:40.105
  I0510 14:50:40.114166 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5961" for this suite. @ 05/10/24 14:50:40.116
• [2.046 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 05/10/24 14:50:40.12
  I0510 14:50:40.120908 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename configmap @ 05/10/24 14:50:40.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:50:40.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:50:40.134
  STEP: Creating configMap with name configmap-test-volume-map-0f87b37e-9be8-4157-8093-e40a5cf114c8 @ 05/10/24 14:50:40.136
  STEP: Creating a pod to test consume configMaps @ 05/10/24 14:50:40.139
  E0510 14:50:41.028839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:42.029209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 14:50:42.15
  I0510 14:50:42.152282 21 output.go:196] Trying to get logs from node worker-1 pod pod-configmaps-409f1c5b-ad8d-4ca2-ae08-1e40f5f75d06 container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 14:50:42.157
  I0510 14:50:42.167504 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4766" for this suite. @ 05/10/24 14:50:42.169
• [2.053 seconds]
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 05/10/24 14:50:42.173
  I0510 14:50:42.173896 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename ingress @ 05/10/24 14:50:42.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:50:42.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:50:42.185
  STEP: getting /apis @ 05/10/24 14:50:42.188
  STEP: getting /apis/networking.k8s.io @ 05/10/24 14:50:42.192
  STEP: getting /apis/networking.k8s.iov1 @ 05/10/24 14:50:42.193
  STEP: creating @ 05/10/24 14:50:42.194
  STEP: getting @ 05/10/24 14:50:42.204
  STEP: listing @ 05/10/24 14:50:42.206
  STEP: watching @ 05/10/24 14:50:42.208
  I0510 14:50:42.208175 21 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 05/10/24 14:50:42.209
  STEP: cluster-wide watching @ 05/10/24 14:50:42.211
  I0510 14:50:42.211185 21 ingress.go:198] starting watch
  STEP: patching @ 05/10/24 14:50:42.212
  STEP: updating @ 05/10/24 14:50:42.217
  I0510 14:50:42.222172 21 ingress.go:221] waiting for watch events with expected annotations
  I0510 14:50:42.222211 21 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 05/10/24 14:50:42.222
  STEP: updating /status @ 05/10/24 14:50:42.226
  STEP: get /status @ 05/10/24 14:50:42.231
  STEP: deleting @ 05/10/24 14:50:42.233
  STEP: deleting a collection @ 05/10/24 14:50:42.241
  I0510 14:50:42.249348 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-5255" for this suite. @ 05/10/24 14:50:42.251
• [0.082 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 05/10/24 14:50:42.255
  I0510 14:50:42.255795 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename tables @ 05/10/24 14:50:42.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:50:42.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:50:42.269
  I0510 14:50:42.273937 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-5654" for this suite. @ 05/10/24 14:50:42.276
• [0.025 seconds]
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 05/10/24 14:50:42.281
  I0510 14:50:42.281257 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename deployment @ 05/10/24 14:50:42.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:50:42.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:50:42.292
  I0510 14:50:42.294847 21 deployment.go:1645] Creating simple deployment test-new-deployment
  I0510 14:50:42.302928 21 deployment.go:222] deployment "test-new-deployment" doesn't have the required revision set
  E0510 14:50:43.029323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:44.029534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 05/10/24 14:50:44.312
  STEP: updating a scale subresource @ 05/10/24 14:50:44.313
  STEP: verifying the deployment Spec.Replicas was modified @ 05/10/24 14:50:44.319
  STEP: Patch a scale subresource @ 05/10/24 14:50:44.321
  I0510 14:50:44.336347 21 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6a9cfd43-fdb4-45b0-8d29-fbe0fc16f923",
      ResourceVersion: (string) (len=5) "35113",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850949442,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949442,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949443,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949443,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949443,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949443,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949442,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-77db57d8df\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0510 14:50:44.341961 21 deployment.go:39] New ReplicaSet "test-new-deployment-77db57d8df" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-77db57d8df",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7c32b07d-0ca2-4c32-a56c-88d150a5e9cb",
      ResourceVersion: (string) (len=5) "35118",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850949442,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "6a9cfd43-fdb4-45b0-8d29-fbe0fc16f923",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949444,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 61 39 63 66 64  34 33 2d 66 64 62 34 2d  |\"6a9cfd43-fdb4-|
              00000120  34 35 62 30 2d 38 64 32  39 2d 66 62 65 30 66 63  |45b0-8d29-fbe0fc|
              00000130  31 36 66 39 32 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |16f923\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949444,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0510 14:50:44.346729 21 deployment.go:67] Pod "test-new-deployment-77db57d8df-gmzcj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-77db57d8df-gmzcj",
      GenerateName: (string) (len=31) "test-new-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b668f6a4-42d5-47d4-8fb4-fca701afe7fd",
      ResourceVersion: (string) (len=5) "35117",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850949444,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-77db57d8df",
          UID: (types.UID) (len=36) "7c32b07d-0ca2-4c32-a56c-88d150a5e9cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949444,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 63  33 32 62 30 37 64 2d 30  |d\":\"7c32b07d-0|
              00000090  63 61 32 2d 34 63 33 32  2d 61 35 36 63 2d 38 38  |ca2-4c32-a56c-88|
              000000a0  64 31 35 30 61 35 65 39  63 62 5c 22 7d 22 3a 7b  |d150a5e9cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9zfh8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9zfh8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949444,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0510 14:50:44.348994 21 deployment.go:67] Pod "test-new-deployment-77db57d8df-mssbm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-77db57d8df-mssbm",
      GenerateName: (string) (len=31) "test-new-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aae77a4d-19f8-47f4-9703-c08ddc55588d",
      ResourceVersion: (string) (len=5) "35108",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850949442,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-77db57d8df",
          UID: (types.UID) (len=36) "7c32b07d-0ca2-4c32-a56c-88d150a5e9cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949442,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 63  33 32 62 30 37 64 2d 30  |d\":\"7c32b07d-0|
              00000090  63 61 32 2d 34 63 33 32  2d 61 35 36 63 2d 38 38  |ca2-4c32-a56c-88|
              000000a0  64 31 35 30 61 35 65 39  63 62 5c 22 7d 22 3a 7b  |d150a5e9cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949443,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  37 34 5c 22 7d 22 3a 7b  |.244.1.174\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c5qh4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c5qh4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949443,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949442,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949443,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949443,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949442,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.48.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.48.105"
        }
      },
      PodIP: (string) (len=12) "10.244.1.174",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.174"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850949442,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850949442,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://69dfdaedb8a9df4078e5a4c6fb9c043486fac83af57cb83a9bbb356a60d121aa",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0510 14:50:44.351559 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6679" for this suite. @ 05/10/24 14:50:44.354
• [2.082 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:342
  STEP: Creating a kubernetes client @ 05/10/24 14:50:44.363
  I0510 14:50:44.363810 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 14:50:44.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:50:44.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:50:44.378
  STEP: creating a replication controller @ 05/10/24 14:50:44.381
  I0510 14:50:44.382068 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-381 create -f -'
  I0510 14:50:44.504799 21 builder.go:146] stderr: ""
  I0510 14:50:44.504856 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/10/24 14:50:44.504
  I0510 14:50:44.504962 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-381 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0510 14:50:44.572910 21 builder.go:146] stderr: ""
  I0510 14:50:44.572958 21 builder.go:147] stdout: "update-demo-nautilus-nchbz update-demo-nautilus-qxbs4 "
  I0510 14:50:44.573011 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-381 get pods update-demo-nautilus-nchbz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0510 14:50:44.633474 21 builder.go:146] stderr: ""
  I0510 14:50:44.633533 21 builder.go:147] stdout: ""
  I0510 14:50:44.633552 21 kubectl.go:2501] update-demo-nautilus-nchbz is created but not running
  E0510 14:50:45.029838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:46.030047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:47.030155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:48.030593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:49.030784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:50:49.634612 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-381 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0510 14:50:49.698594 21 builder.go:146] stderr: ""
  I0510 14:50:49.698640 21 builder.go:147] stdout: "update-demo-nautilus-nchbz update-demo-nautilus-qxbs4 "
  I0510 14:50:49.698750 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-381 get pods update-demo-nautilus-nchbz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0510 14:50:49.755949 21 builder.go:146] stderr: ""
  I0510 14:50:49.755988 21 builder.go:147] stdout: "true"
  I0510 14:50:49.756195 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-381 get pods update-demo-nautilus-nchbz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0510 14:50:49.812413 21 builder.go:146] stderr: ""
  I0510 14:50:49.812456 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0510 14:50:49.812505 21 kubectl.go:2392] validating pod update-demo-nautilus-nchbz
  I0510 14:50:49.817908 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0510 14:50:49.817964 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0510 14:50:49.817983 21 kubectl.go:2519] update-demo-nautilus-nchbz is verified up and running
  I0510 14:50:49.818062 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-381 get pods update-demo-nautilus-qxbs4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0510 14:50:49.875005 21 builder.go:146] stderr: ""
  I0510 14:50:49.875043 21 builder.go:147] stdout: "true"
  I0510 14:50:49.875095 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-381 get pods update-demo-nautilus-qxbs4 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0510 14:50:49.931409 21 builder.go:146] stderr: ""
  I0510 14:50:49.931652 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0510 14:50:49.931686 21 kubectl.go:2392] validating pod update-demo-nautilus-qxbs4
  I0510 14:50:49.936856 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0510 14:50:49.936913 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0510 14:50:49.936934 21 kubectl.go:2519] update-demo-nautilus-qxbs4 is verified up and running
  STEP: using delete to clean up resources @ 05/10/24 14:50:49.936
  I0510 14:50:49.937055 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-381 delete --grace-period=0 --force -f -'
  I0510 14:50:49.998038 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0510 14:50:49.998081 21 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0510 14:50:49.998127 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-381 get rc,svc -l name=update-demo --no-headers'
  E0510 14:50:50.031709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:50:50.070430 21 builder.go:146] stderr: "No resources found in kubectl-381 namespace.\n"
  I0510 14:50:50.070482 21 builder.go:147] stdout: ""
  I0510 14:50:50.070542 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-381 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0510 14:50:50.140331 21 builder.go:146] stderr: ""
  I0510 14:50:50.140386 21 builder.go:147] stdout: ""
  I0510 14:50:50.140516 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-381" for this suite. @ 05/10/24 14:50:50.143
• [5.783 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 05/10/24 14:50:50.147
  I0510 14:50:50.147332 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 14:50:50.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:50:50.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:50:50.16
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 05/10/24 14:50:50.163
  E0510 14:50:51.031846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:52.032781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 14:50:52.173
  I0510 14:50:52.175688 21 output.go:196] Trying to get logs from node worker-1 pod pod-a7cfb210-497f-4263-ba34-63347a9169d5 container test-container: <nil>
  STEP: delete the pod @ 05/10/24 14:50:52.18
  I0510 14:50:52.187958 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7048" for this suite. @ 05/10/24 14:50:52.19
• [2.049 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 05/10/24 14:50:52.196
  I0510 14:50:52.196430 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename cronjob @ 05/10/24 14:50:52.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:50:52.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:50:52.208
  STEP: Creating a cronjob @ 05/10/24 14:50:52.211
  STEP: Ensuring more than one job is running at a time @ 05/10/24 14:50:52.216
  E0510 14:50:53.032931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:54.033249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:55.033887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:56.034124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:57.034221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:58.034565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:50:59.034711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:00.034986      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:01.035368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:02.036096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:03.037066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:04.037309      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:05.038310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:06.039165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:07.040101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:08.040423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:09.041453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:10.041807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:11.042630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:12.043022      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:13.044099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:14.044331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:15.044438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:16.044555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:17.045528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:18.045880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:19.046638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:20.046738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:21.047514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:22.047938      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:23.047699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:24.047895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:25.048165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:26.048349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:27.048977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:28.049324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:29.050037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:30.050221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:31.050334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:32.050601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:33.050978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:34.051101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:35.052051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:36.052252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:37.052710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:38.053065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:39.054091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:40.054278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:41.054978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:42.055090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:43.055217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:44.056053      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:45.056640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:46.056839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:47.056946      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:48.057307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:49.057651      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:50.057765      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:51.057872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:52.058212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:53.058976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:54.060055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:55.060822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:56.060939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:57.061503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:58.061889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:51:59.062609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:00.062804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 05/10/24 14:52:00.219
  STEP: Removing cronjob @ 05/10/24 14:52:00.221
  I0510 14:52:00.225431 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2414" for this suite. @ 05/10/24 14:52:00.227
• [68.037 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 05/10/24 14:52:00.234
  I0510 14:52:00.234106 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/10/24 14:52:00.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:52:00.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:52:00.26
  I0510 14:52:00.266510 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  E0510 14:52:01.063868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:02.064240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:03.064967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:52:03.359746 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6337" for this suite. @ 05/10/24 14:52:03.362
• [3.133 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 05/10/24 14:52:03.367
  I0510 14:52:03.367953 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename resourcequota @ 05/10/24 14:52:03.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:52:03.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:52:03.379
  STEP: Creating a ResourceQuota @ 05/10/24 14:52:03.381
  STEP: Getting a ResourceQuota @ 05/10/24 14:52:03.384
  STEP: Updating a ResourceQuota @ 05/10/24 14:52:03.386
  STEP: Verifying a ResourceQuota was modified @ 05/10/24 14:52:03.392
  STEP: Deleting a ResourceQuota @ 05/10/24 14:52:03.394
  STEP: Verifying the deleted ResourceQuota @ 05/10/24 14:52:03.398
  I0510 14:52:03.400569 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5825" for this suite. @ 05/10/24 14:52:03.403
• [0.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 05/10/24 14:52:03.407
  I0510 14:52:03.407481 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 14:52:03.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:52:03.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:52:03.419
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 05/10/24 14:52:03.422
  E0510 14:52:04.065054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:05.065512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:06.065589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:07.065701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 14:52:07.437
  I0510 14:52:07.439340 21 output.go:196] Trying to get logs from node worker-1 pod pod-b1dfad29-4bf0-4bd6-affe-733fd6d72707 container test-container: <nil>
  STEP: delete the pod @ 05/10/24 14:52:07.444
  I0510 14:52:07.454314 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8591" for this suite. @ 05/10/24 14:52:07.456
• [4.053 seconds]
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 05/10/24 14:52:07.46
  I0510 14:52:07.460233 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 14:52:07.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:52:07.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:52:07.473
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 14:52:07.475
  E0510 14:52:08.065818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:09.066902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:10.067089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:11.067188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 14:52:11.491
  I0510 14:52:11.493731 21 output.go:196] Trying to get logs from node worker-1 pod downwardapi-volume-73fa20b1-e14e-4708-8d21-0de2ec46fcb0 container client-container: <nil>
  STEP: delete the pod @ 05/10/24 14:52:11.498
  I0510 14:52:11.508518 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8680" for this suite. @ 05/10/24 14:52:11.51
• [4.054 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 05/10/24 14:52:11.515
  I0510 14:52:11.515169 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename container-probe @ 05/10/24 14:52:11.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:52:11.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:52:11.527
  E0510 14:52:12.067787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:13.068364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:14.068480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:15.069190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:16.069809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:17.069926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:18.070349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:19.070761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:20.071188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:21.071878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:22.072844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:23.073385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:24.073638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:25.074266      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:26.074396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:27.074738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:28.075006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:29.075403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:30.075468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:31.076586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:32.077218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:33.078160      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:34.078598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:35.079344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:36.079624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:37.080668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:38.081576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:39.082322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:40.082776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:41.083045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:42.083092      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:43.083529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:44.083822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:45.083916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:46.084045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:47.084996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:48.085077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:49.085688      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:50.085992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:51.086408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:52.086594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:53.086795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:54.086979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:55.087539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:56.088058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:57.088722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:58.088835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:52:59.089138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:00.089551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:01.090208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:02.090742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:03.091554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:04.092173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:05.092854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:06.093509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:07.094368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:08.094658      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:09.095282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:10.095731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:11.096291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:53:11.539536 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8401" for this suite. @ 05/10/24 14:53:11.542
• [60.031 seconds]
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:446
  STEP: Creating a kubernetes client @ 05/10/24 14:53:11.545
  I0510 14:53:11.545898 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename sched-pred @ 05/10/24 14:53:11.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:53:11.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:53:11.557
  I0510 14:53:11.560496 21 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0510 14:53:11.565027 21 util.go:400] Waiting for terminating namespaces to be deleted...
  I0510 14:53:11.566998 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node worker-0 before test
  I0510 14:53:11.571139 21 predicates.go:887] coredns-6997b8f8bd-47z52 from kube-system started at 2024-05-10 13:16:07 +0000 UTC (1 container statuses recorded)
  I0510 14:53:11.571172 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0510 14:53:11.571187 21 predicates.go:887] konnectivity-agent-2lmmj from kube-system started at 2024-05-10 13:15:10 +0000 UTC (1 container statuses recorded)
  I0510 14:53:11.571200 21 predicates.go:889] 	Container konnectivity-agent ready: true, restart count 0
  I0510 14:53:11.571213 21 predicates.go:887] kube-proxy-9fgls from kube-system started at 2024-05-10 13:15:10 +0000 UTC (1 container statuses recorded)
  I0510 14:53:11.571226 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0510 14:53:11.571240 21 predicates.go:887] kube-router-nhmxc from kube-system started at 2024-05-10 13:15:10 +0000 UTC (1 container statuses recorded)
  I0510 14:53:11.571251 21 predicates.go:889] 	Container kube-router ready: true, restart count 0
  I0510 14:53:11.571264 21 predicates.go:887] metrics-server-5cd4986bbc-7kh5s from kube-system started at 2024-05-10 13:15:22 +0000 UTC (1 container statuses recorded)
  I0510 14:53:11.571276 21 predicates.go:889] 	Container metrics-server ready: true, restart count 0
  I0510 14:53:11.571289 21 predicates.go:887] sonobuoy-e2e-job-12fbf0b104f946c7 from sonobuoy started at 2024-05-10 13:15:34 +0000 UTC (2 container statuses recorded)
  I0510 14:53:11.571301 21 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0510 14:53:11.571312 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0510 14:53:11.571326 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-24515f3172df4c25-pblpt from sonobuoy started at 2024-05-10 13:15:34 +0000 UTC (2 container statuses recorded)
  I0510 14:53:11.571339 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0510 14:53:11.571351 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0510 14:53:11.571362 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node worker-1 before test
  I0510 14:53:11.575031 21 predicates.go:887] test-webserver-e8275167-c69d-4096-9a79-d5112a32f065 from container-probe-8401 started at 2024-05-10 14:52:11 +0000 UTC (1 container statuses recorded)
  I0510 14:53:11.575058 21 predicates.go:889] 	Container test-webserver ready: false, restart count 0
  I0510 14:53:11.575074 21 predicates.go:887] coredns-6997b8f8bd-g6q9b from kube-system started at 2024-05-10 14:31:29 +0000 UTC (1 container statuses recorded)
  I0510 14:53:11.575086 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0510 14:53:11.575099 21 predicates.go:887] konnectivity-agent-lxwc4 from kube-system started at 2024-05-10 13:15:10 +0000 UTC (1 container statuses recorded)
  I0510 14:53:11.575110 21 predicates.go:889] 	Container konnectivity-agent ready: true, restart count 0
  I0510 14:53:11.575124 21 predicates.go:887] kube-proxy-jvb27 from kube-system started at 2024-05-10 13:15:10 +0000 UTC (1 container statuses recorded)
  I0510 14:53:11.575135 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0510 14:53:11.575148 21 predicates.go:887] kube-router-rpbbz from kube-system started at 2024-05-10 13:15:10 +0000 UTC (1 container statuses recorded)
  I0510 14:53:11.575160 21 predicates.go:889] 	Container kube-router ready: true, restart count 0
  I0510 14:53:11.575174 21 predicates.go:887] sonobuoy from sonobuoy started at 2024-05-10 13:15:30 +0000 UTC (1 container statuses recorded)
  I0510 14:53:11.575188 21 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0510 14:53:11.575203 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-24515f3172df4c25-xm8fw from sonobuoy started at 2024-05-10 13:15:34 +0000 UTC (2 container statuses recorded)
  I0510 14:53:11.575214 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0510 14:53:11.575227 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 05/10/24 14:53:11.575
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17ce28468f102462], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.] @ 05/10/24 14:53:11.594
  E0510 14:53:12.097066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:53:12.590733 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6564" for this suite. @ 05/10/24 14:53:12.593
• [1.051 seconds]
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 05/10/24 14:53:12.597
  I0510 14:53:12.597378 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename svcaccounts @ 05/10/24 14:53:12.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:53:12.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:53:12.608
  I0510 14:53:12.613102 21 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-2139"
  I0510 14:53:12.616605 21 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-2139"
  E0510 14:53:13.097177      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for a new root ca configmap created @ 05/10/24 14:53:13.117
  I0510 14:53:13.119926 21 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-2139"
  I0510 14:53:13.123371 21 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-2139"
  STEP: waiting for the root ca configmap reconciled @ 05/10/24 14:53:13.624
  I0510 14:53:13.626407 21 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-2139"
  I0510 14:53:13.626511 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2139" for this suite. @ 05/10/24 14:53:13.628
• [1.037 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 05/10/24 14:53:13.634
  I0510 14:53:13.634131 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename projected @ 05/10/24 14:53:13.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:53:13.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:53:13.645
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 14:53:13.647
  E0510 14:53:14.098165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:15.098384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:16.099089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:17.099543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 14:53:17.665
  I0510 14:53:17.667282 21 output.go:196] Trying to get logs from node worker-1 pod downwardapi-volume-b84f62f4-85d2-4ff2-b33a-c3f49c762626 container client-container: <nil>
  STEP: delete the pod @ 05/10/24 14:53:17.672
  I0510 14:53:17.681638 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7211" for this suite. @ 05/10/24 14:53:17.684
• [4.056 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 05/10/24 14:53:17.69
  I0510 14:53:17.690293 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 14:53:17.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:53:17.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:53:17.702
  STEP: Creating a pod to test emptydir volume type on node default medium @ 05/10/24 14:53:17.706
  E0510 14:53:18.100244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:19.100446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:20.101389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:21.101574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 14:53:21.72
  I0510 14:53:21.722749 21 output.go:196] Trying to get logs from node worker-1 pod pod-e3b8cc47-da4a-4b9e-a6da-4b8b580ec424 container test-container: <nil>
  STEP: delete the pod @ 05/10/24 14:53:21.727
  I0510 14:53:21.739091 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4966" for this suite. @ 05/10/24 14:53:21.741
• [4.056 seconds]
------------------------------
SSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 05/10/24 14:53:21.746
  I0510 14:53:21.746172 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 14:53:21.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:53:21.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:53:21.76
  STEP: Creating a pod to test downward api env vars @ 05/10/24 14:53:21.762
  E0510 14:53:22.102026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:23.102016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:24.102616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:25.102819      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 14:53:25.775
  I0510 14:53:25.777932 21 output.go:196] Trying to get logs from node worker-1 pod downward-api-2d422f65-2e0c-493b-9754-dbeea0718859 container dapi-container: <nil>
  STEP: delete the pod @ 05/10/24 14:53:25.784
  I0510 14:53:25.793660 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6867" for this suite. @ 05/10/24 14:53:25.796
• [4.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 05/10/24 14:53:25.8
  I0510 14:53:25.800524 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename projected @ 05/10/24 14:53:25.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:53:25.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:53:25.811
  STEP: Creating the pod @ 05/10/24 14:53:25.814
  E0510 14:53:26.103260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:27.103652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:28.103890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:53:28.341857 21 pod_client.go:141] Successfully updated pod "labelsupdate9ca0bab0-a2f1-42b1-9497-ebe5afea655a"
  E0510 14:53:29.103947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:30.104138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:53:30.352819 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7757" for this suite. @ 05/10/24 14:53:30.355
• [4.559 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 05/10/24 14:53:30.359
  I0510 14:53:30.359288 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename var-expansion @ 05/10/24 14:53:30.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:53:30.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:53:30.372
  STEP: Creating a pod to test env composition @ 05/10/24 14:53:30.375
  E0510 14:53:31.105130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:32.105644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 14:53:32.387
  I0510 14:53:32.389710 21 output.go:196] Trying to get logs from node worker-1 pod var-expansion-dd333333-762a-4c8c-bb7e-30936f10e389 container dapi-container: <nil>
  STEP: delete the pod @ 05/10/24 14:53:32.395
  I0510 14:53:32.405887 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2760" for this suite. @ 05/10/24 14:53:32.408
• [2.055 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:715
  STEP: Creating a kubernetes client @ 05/10/24 14:53:32.416
  I0510 14:53:32.416439 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename webhook @ 05/10/24 14:53:32.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:53:32.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:53:32.428
  STEP: Setting up server cert @ 05/10/24 14:53:32.443
  E0510 14:53:33.105698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 14:53:33.311
  STEP: Deploying the webhook pod @ 05/10/24 14:53:33.318
  STEP: Wait for the deployment to be ready @ 05/10/24 14:53:33.328
  I0510 14:53:33.333011 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0510 14:53:34.105985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:35.106115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/10/24 14:53:35.34
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 14:53:35.349
  E0510 14:53:36.106521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:53:36.349880 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 05/10/24 14:53:36.354
  STEP: verifying the validating webhook match conditions @ 05/10/24 14:53:36.36
  STEP: updating the validating webhook match conditions @ 05/10/24 14:53:36.363
  STEP: verifying the validating webhook match conditions @ 05/10/24 14:53:36.369
  I0510 14:53:36.399626 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2829" for this suite. @ 05/10/24 14:53:36.402
  STEP: Destroying namespace "webhook-markers-122" for this suite. @ 05/10/24 14:53:36.408
• [3.996 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:668
  STEP: Creating a kubernetes client @ 05/10/24 14:53:36.412
  I0510 14:53:36.412773 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename job @ 05/10/24 14:53:36.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:53:36.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:53:36.424
  STEP: Creating a job @ 05/10/24 14:53:36.427
  STEP: Ensuring active pods == parallelism @ 05/10/24 14:53:36.431
  E0510 14:53:37.107113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:38.107307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete a job @ 05/10/24 14:53:38.434
  STEP: deleting Job.batch foo in namespace job-7209, will wait for the garbage collector to delete the pods @ 05/10/24 14:53:38.434
  I0510 14:53:38.490694 21 resources.go:139] Deleting Job.batch foo took: 3.502308ms
  I0510 14:53:38.591084 21 resources.go:163] Terminating Job.batch foo pods took: 100.385965ms
  E0510 14:53:39.107510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 05/10/24 14:53:39.191
  I0510 14:53:39.194050 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7209" for this suite. @ 05/10/24 14:53:39.196
• [2.787 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:817
  STEP: Creating a kubernetes client @ 05/10/24 14:53:39.2
  I0510 14:53:39.200366 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename webhook @ 05/10/24 14:53:39.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:53:39.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:53:39.213
  STEP: Setting up server cert @ 05/10/24 14:53:39.228
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 14:53:39.8
  STEP: Deploying the webhook pod @ 05/10/24 14:53:39.803
  STEP: Wait for the deployment to be ready @ 05/10/24 14:53:39.814
  I0510 14:53:39.819168 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0510 14:53:40.108564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:41.108951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/10/24 14:53:41.826
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 14:53:41.835
  E0510 14:53:42.109817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:53:42.835769 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 05/10/24 14:53:42.84
  I0510 14:53:42.868130 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9893" for this suite. @ 05/10/24 14:53:42.87
  STEP: Destroying namespace "webhook-markers-7718" for this suite. @ 05/10/24 14:53:42.876
• [3.682 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 05/10/24 14:53:42.882
  I0510 14:53:42.882353 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 14:53:42.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:53:42.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:53:42.894
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 14:53:42.897
  E0510 14:53:43.110261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:44.110484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:45.111131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:46.112056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 14:53:46.91
  I0510 14:53:46.912664 21 output.go:196] Trying to get logs from node worker-1 pod downwardapi-volume-9752e811-1901-41db-a675-e96b74cff1ab container client-container: <nil>
  STEP: delete the pod @ 05/10/24 14:53:46.917
  I0510 14:53:46.927831 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2409" for this suite. @ 05/10/24 14:53:46.93
• [4.053 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:397
  STEP: Creating a kubernetes client @ 05/10/24 14:53:46.935
  I0510 14:53:46.935718 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 14:53:46.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:53:46.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:53:46.946
  STEP: creating all guestbook components @ 05/10/24 14:53:46.949
  I0510 14:53:46.949538 21 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0510 14:53:46.949717 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-2901 create -f -'
  I0510 14:53:47.077516 21 builder.go:146] stderr: ""
  I0510 14:53:47.077565 21 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0510 14:53:47.077620 21 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0510 14:53:47.077756 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-2901 create -f -'
  E0510 14:53:47.112175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:53:47.199146 21 builder.go:146] stderr: ""
  I0510 14:53:47.199194 21 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0510 14:53:47.199254 21 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0510 14:53:47.199371 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-2901 create -f -'
  I0510 14:53:47.320541 21 builder.go:146] stderr: ""
  I0510 14:53:47.320582 21 builder.go:147] stdout: "service/frontend created\n"
  I0510 14:53:47.320646 21 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0510 14:53:47.320783 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-2901 create -f -'
  I0510 14:53:47.407266 21 builder.go:146] stderr: ""
  I0510 14:53:47.407305 21 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0510 14:53:47.407363 21 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0510 14:53:47.407488 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-2901 create -f -'
  I0510 14:53:47.498631 21 builder.go:146] stderr: ""
  I0510 14:53:47.498671 21 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0510 14:53:47.498738 21 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0510 14:53:47.498938 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-2901 create -f -'
  I0510 14:53:47.596122 21 builder.go:146] stderr: ""
  I0510 14:53:47.596165 21 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 05/10/24 14:53:47.596
  I0510 14:53:47.596216 21 kubectl.go:2271] Waiting for all frontend pods to be Running.
  E0510 14:53:48.112611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:49.112908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:50.113132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:51.113388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:52.113854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:53:52.647692 21 kubectl.go:2275] Waiting for frontend to serve content.
  I0510 14:53:52.657421 21 kubectl.go:2280] Trying to add a new entry to the guestbook.
  I0510 14:53:52.665845 21 kubectl.go:2285] Verifying that added entry can be retrieved.
  I0510 14:53:52.671218 21 kubectl.go:2298] Failed to get response from guestbook. err: <nil>, response: {"data":""}
  E0510 14:53:53.114747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:54.114879      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:55.115082      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:56.115270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:53:57.115645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: using delete to clean up resources @ 05/10/24 14:53:57.678
  I0510 14:53:57.678210 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-2901 delete --grace-period=0 --force -f -'
  I0510 14:53:57.748511 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0510 14:53:57.748730 21 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 05/10/24 14:53:57.748
  I0510 14:53:57.748909 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-2901 delete --grace-period=0 --force -f -'
  I0510 14:53:57.817341 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0510 14:53:57.817381 21 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 05/10/24 14:53:57.817
  I0510 14:53:57.817685 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-2901 delete --grace-period=0 --force -f -'
  I0510 14:53:57.884456 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0510 14:53:57.884519 21 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 05/10/24 14:53:57.884
  I0510 14:53:57.884765 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-2901 delete --grace-period=0 --force -f -'
  I0510 14:53:57.944386 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0510 14:53:57.944429 21 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 05/10/24 14:53:57.944
  I0510 14:53:57.944641 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-2901 delete --grace-period=0 --force -f -'
  I0510 14:53:58.012312 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0510 14:53:58.012354 21 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 05/10/24 14:53:58.012
  I0510 14:53:58.012666 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-2901 delete --grace-period=0 --force -f -'
  I0510 14:53:58.089915 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0510 14:53:58.089964 21 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0510 14:53:58.090316 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2901" for this suite. @ 05/10/24 14:53:58.093
• [11.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 05/10/24 14:53:58.103
  I0510 14:53:58.103482 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename subjectreview @ 05/10/24 14:53:58.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:53:58.115
  E0510 14:53:58.116448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:53:58.121
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-7552" @ 05/10/24 14:53:58.125
  I0510 14:53:58.129095 21 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-7552:e2e"
  I0510 14:53:58.129170 21 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-7552"}
  I0510 14:53:58.129186 21 subjectreviews.go:71] saUID: "18a690f5-4d44-4463-8b2b-4d5e79819448"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-7552:e2e" @ 05/10/24 14:53:58.129
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-7552:e2e" @ 05/10/24 14:53:58.129
  I0510 14:53:58.131522 21 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-7552:e2e" api 'list' configmaps in "subjectreview-7552" namespace @ 05/10/24 14:53:58.131
  I0510 14:53:58.133337 21 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-7552:e2e" @ 05/10/24 14:53:58.133
  I0510 14:53:58.135299 21 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0510 14:53:58.135327 21 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0510 14:53:58.135437 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-7552" for this suite. @ 05/10/24 14:53:58.138
• [0.039 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 05/10/24 14:53:58.142
  I0510 14:53:58.142965 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/10/24 14:53:58.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:53:58.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:53:58.158
  STEP: getting /apis @ 05/10/24 14:53:58.166
  STEP: getting /apis/admissionregistration.k8s.io @ 05/10/24 14:53:58.171
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 05/10/24 14:53:58.172
  STEP: creating @ 05/10/24 14:53:58.173
  STEP: getting @ 05/10/24 14:53:58.186
  STEP: listing @ 05/10/24 14:53:58.189
  STEP: watching @ 05/10/24 14:53:58.192
  I0510 14:53:58.192211 21 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 05/10/24 14:53:58.193
  STEP: updating @ 05/10/24 14:53:58.197
  I0510 14:53:58.249510 21 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  STEP: getting /status @ 05/10/24 14:53:58.249
  STEP: patching /status @ 05/10/24 14:53:58.252
  STEP: updating /status @ 05/10/24 14:53:58.259
  STEP: deleting @ 05/10/24 14:53:58.286
  STEP: deleting a collection @ 05/10/24 14:53:58.293
  I0510 14:53:58.307374 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6407" for this suite. @ 05/10/24 14:53:58.31
• [0.173 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 05/10/24 14:53:58.316
  I0510 14:53:58.316594 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename watch @ 05/10/24 14:53:58.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:53:58.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:53:58.328
  STEP: creating a watch on configmaps with label A @ 05/10/24 14:53:58.331
  STEP: creating a watch on configmaps with label B @ 05/10/24 14:53:58.332
  STEP: creating a watch on configmaps with label A or B @ 05/10/24 14:53:58.333
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 05/10/24 14:53:58.335
  I0510 14:53:58.339331 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9673  d5f42847-506c-4f24-ad2d-4e9dcf7f3788 36361 0 2024-05-10 14:53:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-10 14:53:58 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0510 14:53:58.339492 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9673  d5f42847-506c-4f24-ad2d-4e9dcf7f3788 36361 0 2024-05-10 14:53:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-10 14:53:58 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 05/10/24 14:53:58.339
  I0510 14:53:58.346177 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9673  d5f42847-506c-4f24-ad2d-4e9dcf7f3788 36362 0 2024-05-10 14:53:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-10 14:53:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0510 14:53:58.346297 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9673  d5f42847-506c-4f24-ad2d-4e9dcf7f3788 36362 0 2024-05-10 14:53:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-10 14:53:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 05/10/24 14:53:58.346
  I0510 14:53:58.351680 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9673  d5f42847-506c-4f24-ad2d-4e9dcf7f3788 36363 0 2024-05-10 14:53:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-10 14:53:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0510 14:53:58.351798 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9673  d5f42847-506c-4f24-ad2d-4e9dcf7f3788 36363 0 2024-05-10 14:53:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-10 14:53:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 05/10/24 14:53:58.351
  I0510 14:53:58.357628 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9673  d5f42847-506c-4f24-ad2d-4e9dcf7f3788 36365 0 2024-05-10 14:53:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-10 14:53:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0510 14:53:58.357681 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9673  d5f42847-506c-4f24-ad2d-4e9dcf7f3788 36365 0 2024-05-10 14:53:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-10 14:53:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 05/10/24 14:53:58.357
  I0510 14:53:58.361549 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9673  9080cd7b-25e8-4251-9c4a-1683fdcee88b 36366 0 2024-05-10 14:53:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-10 14:53:58 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0510 14:53:58.361643 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9673  9080cd7b-25e8-4251-9c4a-1683fdcee88b 36366 0 2024-05-10 14:53:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-10 14:53:58 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0510 14:53:59.117401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:00.117712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:01.117930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:02.118561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:03.118789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:04.119560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:05.119803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:06.119904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:07.120331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:08.120519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 05/10/24 14:54:08.361
  I0510 14:54:08.365769 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9673  9080cd7b-25e8-4251-9c4a-1683fdcee88b 36453 0 2024-05-10 14:53:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-10 14:53:58 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0510 14:54:08.365829 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9673  9080cd7b-25e8-4251-9c4a-1683fdcee88b 36453 0 2024-05-10 14:53:58 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-10 14:53:58 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0510 14:54:09.120807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:10.120956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:11.121072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:12.121542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:13.121655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:14.121774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:15.121960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:16.122093      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:17.122317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:18.122507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:54:18.367010 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9673" for this suite. @ 05/10/24 14:54:18.37
• [20.058 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 05/10/24 14:54:18.374
  I0510 14:54:18.374359 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename webhook @ 05/10/24 14:54:18.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:54:18.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:54:18.385
  STEP: Setting up server cert @ 05/10/24 14:54:18.399
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 14:54:18.987
  STEP: Deploying the webhook pod @ 05/10/24 14:54:18.992
  STEP: Wait for the deployment to be ready @ 05/10/24 14:54:19.002
  I0510 14:54:19.007781 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0510 14:54:19.122960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:20.123012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/10/24 14:54:21.014
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 14:54:21.023
  E0510 14:54:21.123526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:54:22.023613 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0510 14:54:22.028180 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  E0510 14:54:22.123913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9405-crds.webhook.example.com via the AdmissionRegistration API @ 05/10/24 14:54:22.536
  STEP: Creating a custom resource while v1 is storage version @ 05/10/24 14:54:22.553
  E0510 14:54:23.124791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:24.125014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 05/10/24 14:54:24.589
  STEP: Patching the custom resource while v2 is storage version @ 05/10/24 14:54:24.613
  E0510 14:54:25.125302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:54:25.208116 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-784" for this suite. @ 05/10/24 14:54:25.21
  STEP: Destroying namespace "webhook-markers-3887" for this suite. @ 05/10/24 14:54:25.216
• [6.848 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 05/10/24 14:54:25.222
  I0510 14:54:25.222432 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename webhook @ 05/10/24 14:54:25.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:54:25.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:54:25.236
  STEP: Setting up server cert @ 05/10/24 14:54:25.251
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 14:54:25.767
  STEP: Deploying the webhook pod @ 05/10/24 14:54:25.771
  STEP: Wait for the deployment to be ready @ 05/10/24 14:54:25.78
  I0510 14:54:25.786835 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0510 14:54:26.126287      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:27.127328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/10/24 14:54:27.792
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 14:54:27.802
  E0510 14:54:28.128091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:54:28.802923 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 05/10/24 14:54:28.807
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 05/10/24 14:54:28.809
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 05/10/24 14:54:28.809
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 05/10/24 14:54:28.809
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 05/10/24 14:54:28.81
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 05/10/24 14:54:28.81
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 05/10/24 14:54:28.811
  I0510 14:54:28.836699 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9441" for this suite. @ 05/10/24 14:54:28.839
  STEP: Destroying namespace "webhook-markers-3040" for this suite. @ 05/10/24 14:54:28.845
• [3.628 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 05/10/24 14:54:28.85
  I0510 14:54:28.850336 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/10/24 14:54:28.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:54:28.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:54:28.864
  STEP: getting /apis @ 05/10/24 14:54:28.871
  STEP: getting /apis/admissionregistration.k8s.io @ 05/10/24 14:54:28.875
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 05/10/24 14:54:28.877
  STEP: creating @ 05/10/24 14:54:28.878
  STEP: getting @ 05/10/24 14:54:28.888
  STEP: listing @ 05/10/24 14:54:28.89
  STEP: watching @ 05/10/24 14:54:28.892
  I0510 14:54:28.892377 21 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 05/10/24 14:54:28.893
  STEP: updating @ 05/10/24 14:54:28.896
  I0510 14:54:28.901856 21 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 05/10/24 14:54:28.902
  STEP: deleting a collection @ 05/10/24 14:54:28.908
  I0510 14:54:28.920231 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-566" for this suite. @ 05/10/24 14:54:28.923
• [0.077 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 05/10/24 14:54:28.927
  I0510 14:54:28.927968 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename disruption @ 05/10/24 14:54:28.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:54:28.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:54:28.939
  STEP: Creating a kubernetes client @ 05/10/24 14:54:28.942
  I0510 14:54:28.942727 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename disruption-2 @ 05/10/24 14:54:28.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:54:28.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:54:28.954
  STEP: Waiting for the pdb to be processed @ 05/10/24 14:54:28.961
  E0510 14:54:29.128244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:30.128971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 05/10/24 14:54:30.969
  E0510 14:54:31.129756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:32.130349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 05/10/24 14:54:32.975
  E0510 14:54:33.130837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:34.130995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 05/10/24 14:54:34.978
  STEP: listing a collection of PDBs in namespace disruption-1497 @ 05/10/24 14:54:34.98
  STEP: deleting a collection of PDBs @ 05/10/24 14:54:34.982
  STEP: Waiting for the PDB collection to be deleted @ 05/10/24 14:54:34.988
  I0510 14:54:34.990570 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-769" for this suite. @ 05/10/24 14:54:34.992
  I0510 14:54:34.996468 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1497" for this suite. @ 05/10/24 14:54:34.998
• [6.074 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 05/10/24 14:54:35.002
  I0510 14:54:35.002981 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename security-context-test @ 05/10/24 14:54:35.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:54:35.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:54:35.016
  E0510 14:54:35.131557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:36.131880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:37.131993      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:38.132117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:54:39.039895 21 security_context.go:538] Got logs for pod "busybox-privileged-false-a00c86d0-64ab-4cbc-8ba9-1329e934ccd6": "ip: RTNETLINK answers: Operation not permitted\n"
  I0510 14:54:39.040024 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4849" for this suite. @ 05/10/24 14:54:39.042
• [4.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 05/10/24 14:54:39.047
  I0510 14:54:39.047413 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename statefulset @ 05/10/24 14:54:39.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:54:39.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:54:39.061
  STEP: Creating service test in namespace statefulset-740 @ 05/10/24 14:54:39.063
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 05/10/24 14:54:39.067
  STEP: Creating stateful set ss in namespace statefulset-740 @ 05/10/24 14:54:39.069
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-740 @ 05/10/24 14:54:39.074
  I0510 14:54:39.076347 21 wait.go:40] Found 0 stateful pods, waiting for 1
  E0510 14:54:39.133171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:40.133308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:41.133379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:42.133859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:43.134062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:44.134440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:45.134638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:46.134892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:47.135286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:48.135365      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:54:49.077606 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 05/10/24 14:54:49.077
  I0510 14:54:49.080011 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=statefulset-740 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0510 14:54:49.136462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:54:49.202404 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0510 14:54:49.202447 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0510 14:54:49.202492 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0510 14:54:49.204753 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0510 14:54:50.137544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:51.137789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:52.138331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:53.138360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:54.138601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:55.138848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:56.138994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:57.139405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:58.140086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:54:59.140307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:54:59.206614 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0510 14:54:59.206655 21 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0510 14:54:59.218592 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 9.999998717s
  E0510 14:55:00.140524      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:55:00.221422 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 8.997732618s
  E0510 14:55:01.141257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:55:01.224235 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 7.994978187s
  E0510 14:55:02.141366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:55:02.227406 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 6.991839501s
  E0510 14:55:03.141486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:55:03.230478 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 5.988696496s
  E0510 14:55:04.141505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:55:04.233385 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 4.985679803s
  E0510 14:55:05.142220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:55:05.237382 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 3.981926588s
  E0510 14:55:06.143175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:55:06.241069 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 2.978016171s
  E0510 14:55:07.144201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:55:07.244075 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 1.974960557s
  E0510 14:55:08.145117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:55:08.247225 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 972.072813ms
  E0510 14:55:09.146018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-740 @ 05/10/24 14:55:09.248
  I0510 14:55:09.251420 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=statefulset-740 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0510 14:55:09.367102 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0510 14:55:09.367161 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0510 14:55:09.367182 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0510 14:55:09.369326 21 wait.go:40] Found 1 stateful pods, waiting for 3
  E0510 14:55:10.146546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:55:11.146588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:55:12.147110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:55:13.147335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:55:14.147571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:55:15.147786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:55:16.147897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:55:17.148340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:55:18.148586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:55:19.148854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:55:19.371124 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0510 14:55:19.371169 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0510 14:55:19.371187 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 05/10/24 14:55:19.371
  STEP: Scale down will halt with unhealthy stateful pod @ 05/10/24 14:55:19.371
  I0510 14:55:19.375934 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=statefulset-740 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0510 14:55:19.490842 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0510 14:55:19.490917 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0510 14:55:19.490933 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0510 14:55:19.491007 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=statefulset-740 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0510 14:55:19.619554 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0510 14:55:19.619602 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0510 14:55:19.619622 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0510 14:55:19.619693 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=statefulset-740 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0510 14:55:19.745990 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0510 14:55:19.746032 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0510 14:55:19.746045 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0510 14:55:19.746058 21 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0510 14:55:19.748447 21 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 2
  E0510 14:55:20.149222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:55:21.149360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:55:22.149778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:55:23.149755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:55:24.149987      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:55:25.150170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:55:26.150300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:55:27.150792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:55:28.151492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:55:29.151629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:55:29.751223 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0510 14:55:29.751265 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0510 14:55:29.751282 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0510 14:55:29.761432 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 9.999998575s
  E0510 14:55:30.151736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:55:30.765046 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 8.99645543s
  E0510 14:55:31.152526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:55:31.767891 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 7.993644716s
  E0510 14:55:32.153465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:55:32.770807 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 6.990938219s
  E0510 14:55:33.154256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:55:33.773654 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 5.988089665s
  E0510 14:55:34.154966      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:55:34.777236 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 4.984243604s
  E0510 14:55:35.155651      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:55:35.780306 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 3.9816124s
  E0510 14:55:36.155655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:55:36.783032 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 2.978610572s
  E0510 14:55:37.156310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:55:37.786956 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 1.975029018s
  E0510 14:55:38.157426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:55:38.790561 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 971.029606ms
  E0510 14:55:39.157921      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-740 @ 05/10/24 14:55:39.79
  I0510 14:55:39.793676 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=statefulset-740 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0510 14:55:39.906443 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0510 14:55:39.906482 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0510 14:55:39.906497 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0510 14:55:39.906559 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=statefulset-740 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0510 14:55:40.024409 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0510 14:55:40.024594 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0510 14:55:40.024653 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0510 14:55:40.024709 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=statefulset-740 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0510 14:55:40.142125 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0510 14:55:40.142167 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0510 14:55:40.142206 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0510 14:55:40.142223 21 rest.go:150] Scaling statefulset ss to 0
  E0510 14:55:40.158597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:55:41.159556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:55:42.159933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:55:43.160976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:55:44.161160      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:55:45.161353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:55:46.161543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:55:47.161905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:55:48.161985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:55:49.162179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 05/10/24 14:55:50.15
  I0510 14:55:50.150200 21 statefulset.go:135] Deleting all statefulset in ns statefulset-740
  I0510 14:55:50.152308 21 rest.go:150] Scaling statefulset ss to 0
  I0510 14:55:50.159102 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0510 14:55:50.160924 21 rest.go:88] Deleting statefulset ss
  E0510 14:55:50.163018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:55:50.168394 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-740" for this suite. @ 05/10/24 14:55:50.171
• [71.128 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2203
  STEP: Creating a kubernetes client @ 05/10/24 14:55:50.175
  I0510 14:55:50.175708 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename services @ 05/10/24 14:55:50.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:55:50.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:55:50.187
  STEP: creating service in namespace services-2875 @ 05/10/24 14:55:50.189
  STEP: creating service affinity-clusterip-transition in namespace services-2875 @ 05/10/24 14:55:50.19
  STEP: creating replication controller affinity-clusterip-transition in namespace services-2875 @ 05/10/24 14:55:50.199
  I0510 14:55:50.206471      21 runners.go:198] Created replication controller with name: affinity-clusterip-transition, namespace: services-2875, replica count: 3
  E0510 14:55:51.163877      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:55:52.164148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:55:53.164342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:55:53.257661      21 runners.go:198] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0510 14:55:53.262046 21 resource.go:361] Creating new exec pod
  E0510 14:55:54.164795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:55:55.165121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:55:56.165208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:55:56.271630 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-2875 exec execpod-affinity6dfbv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0510 14:55:56.384691 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I0510 14:55:56.384747 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0510 14:55:56.384844 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-2875 exec execpod-affinity6dfbv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.251.163 80'
  I0510 14:55:56.495258 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.251.163 80\nConnection to 10.96.251.163 80 port [tcp/http] succeeded!\n"
  I0510 14:55:56.495487 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0510 14:55:56.502034 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-2875 exec execpod-affinity6dfbv -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.96.251.163:80/ ; done'
  I0510 14:55:56.689437 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.251.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.251.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.251.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.251.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.251.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.251.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.251.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.251.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.251.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.251.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.251.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.251.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.251.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.251.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.251.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.251.163:80/\n"
  I0510 14:55:56.689518 21 builder.go:147] stdout: "\naffinity-clusterip-transition-jss8z\naffinity-clusterip-transition-s27gs\naffinity-clusterip-transition-t725x\naffinity-clusterip-transition-t725x\naffinity-clusterip-transition-s27gs\naffinity-clusterip-transition-s27gs\naffinity-clusterip-transition-t725x\naffinity-clusterip-transition-s27gs\naffinity-clusterip-transition-t725x\naffinity-clusterip-transition-s27gs\naffinity-clusterip-transition-jss8z\naffinity-clusterip-transition-s27gs\naffinity-clusterip-transition-s27gs\naffinity-clusterip-transition-s27gs\naffinity-clusterip-transition-s27gs\naffinity-clusterip-transition-jss8z"
  I0510 14:55:56.689571 21 service.go:242] Received response from host: affinity-clusterip-transition-jss8z
  I0510 14:55:56.689589 21 service.go:242] Received response from host: affinity-clusterip-transition-s27gs
  I0510 14:55:56.689602 21 service.go:242] Received response from host: affinity-clusterip-transition-t725x
  I0510 14:55:56.689616 21 service.go:242] Received response from host: affinity-clusterip-transition-t725x
  I0510 14:55:56.689649 21 service.go:242] Received response from host: affinity-clusterip-transition-s27gs
  I0510 14:55:56.689692 21 service.go:242] Received response from host: affinity-clusterip-transition-s27gs
  I0510 14:55:56.689742 21 service.go:242] Received response from host: affinity-clusterip-transition-t725x
  I0510 14:55:56.689757 21 service.go:242] Received response from host: affinity-clusterip-transition-s27gs
  I0510 14:55:56.689771 21 service.go:242] Received response from host: affinity-clusterip-transition-t725x
  I0510 14:55:56.689784 21 service.go:242] Received response from host: affinity-clusterip-transition-s27gs
  I0510 14:55:56.689798 21 service.go:242] Received response from host: affinity-clusterip-transition-jss8z
  I0510 14:55:56.689813 21 service.go:242] Received response from host: affinity-clusterip-transition-s27gs
  I0510 14:55:56.689827 21 service.go:242] Received response from host: affinity-clusterip-transition-s27gs
  I0510 14:55:56.689854 21 service.go:242] Received response from host: affinity-clusterip-transition-s27gs
  I0510 14:55:56.689868 21 service.go:242] Received response from host: affinity-clusterip-transition-s27gs
  I0510 14:55:56.689881 21 service.go:242] Received response from host: affinity-clusterip-transition-jss8z
  I0510 14:55:56.696425 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-2875 exec execpod-affinity6dfbv -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.96.251.163:80/ ; done'
  I0510 14:55:56.889114 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.251.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.251.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.251.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.251.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.251.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.251.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.251.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.251.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.251.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.251.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.251.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.251.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.251.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.251.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.251.163:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.251.163:80/\n"
  I0510 14:55:56.889218 21 builder.go:147] stdout: "\naffinity-clusterip-transition-jss8z\naffinity-clusterip-transition-jss8z\naffinity-clusterip-transition-jss8z\naffinity-clusterip-transition-jss8z\naffinity-clusterip-transition-jss8z\naffinity-clusterip-transition-jss8z\naffinity-clusterip-transition-jss8z\naffinity-clusterip-transition-jss8z\naffinity-clusterip-transition-jss8z\naffinity-clusterip-transition-jss8z\naffinity-clusterip-transition-jss8z\naffinity-clusterip-transition-jss8z\naffinity-clusterip-transition-jss8z\naffinity-clusterip-transition-jss8z\naffinity-clusterip-transition-jss8z\naffinity-clusterip-transition-jss8z"
  I0510 14:55:56.889239 21 service.go:242] Received response from host: affinity-clusterip-transition-jss8z
  I0510 14:55:56.889253 21 service.go:242] Received response from host: affinity-clusterip-transition-jss8z
  I0510 14:55:56.889266 21 service.go:242] Received response from host: affinity-clusterip-transition-jss8z
  I0510 14:55:56.889279 21 service.go:242] Received response from host: affinity-clusterip-transition-jss8z
  I0510 14:55:56.889293 21 service.go:242] Received response from host: affinity-clusterip-transition-jss8z
  I0510 14:55:56.889308 21 service.go:242] Received response from host: affinity-clusterip-transition-jss8z
  I0510 14:55:56.889321 21 service.go:242] Received response from host: affinity-clusterip-transition-jss8z
  I0510 14:55:56.889334 21 service.go:242] Received response from host: affinity-clusterip-transition-jss8z
  I0510 14:55:56.889349 21 service.go:242] Received response from host: affinity-clusterip-transition-jss8z
  I0510 14:55:56.889364 21 service.go:242] Received response from host: affinity-clusterip-transition-jss8z
  I0510 14:55:56.889380 21 service.go:242] Received response from host: affinity-clusterip-transition-jss8z
  I0510 14:55:56.889394 21 service.go:242] Received response from host: affinity-clusterip-transition-jss8z
  I0510 14:55:56.889407 21 service.go:242] Received response from host: affinity-clusterip-transition-jss8z
  I0510 14:55:56.889506 21 service.go:242] Received response from host: affinity-clusterip-transition-jss8z
  I0510 14:55:56.889523 21 service.go:242] Received response from host: affinity-clusterip-transition-jss8z
  I0510 14:55:56.889537 21 service.go:242] Received response from host: affinity-clusterip-transition-jss8z
  I0510 14:55:56.889639 21 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-2875, will wait for the garbage collector to delete the pods @ 05/10/24 14:55:56.9
  I0510 14:55:56.957199 21 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 3.51686ms
  I0510 14:55:57.058298 21 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 101.09272ms
  E0510 14:55:57.165989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:55:58.166974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:55:59.167911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:55:59.972486 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2875" for this suite. @ 05/10/24 14:55:59.975
• [9.811 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 05/10/24 14:55:59.987
  I0510 14:55:59.987149 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename configmap @ 05/10/24 14:55:59.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:55:59.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:55:59.998
  STEP: Creating configMap with name configmap-test-volume-075e7b6b-94ae-4f17-b95a-c03279e86099 @ 05/10/24 14:56:00
  STEP: Creating a pod to test consume configMaps @ 05/10/24 14:56:00.003
  E0510 14:56:00.168330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:01.168541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:02.168657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:03.168887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 14:56:04.018
  I0510 14:56:04.020406 21 output.go:196] Trying to get logs from node worker-1 pod pod-configmaps-9a604b69-e6f6-44ea-bb4e-6fe508997d4c container agnhost-container: <nil>
  STEP: delete the pod @ 05/10/24 14:56:04.026
  I0510 14:56:04.037548 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6959" for this suite. @ 05/10/24 14:56:04.04
• [4.057 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 05/10/24 14:56:04.044
  I0510 14:56:04.044122 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename deployment @ 05/10/24 14:56:04.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:56:04.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:56:04.058
  I0510 14:56:04.068300 21 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  E0510 14:56:04.169618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:05.170227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:06.170807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:07.171304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:08.171541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:56:09.071069 21 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/10/24 14:56:09.071
  I0510 14:56:09.071153 21 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 05/10/24 14:56:09.078
  I0510 14:56:09.085484 21 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "32d4b20e-5176-420d-85e0-3070505e0fd6",
      ResourceVersion: (string) (len=5) "37293",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850949769,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949769,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0510 14:56:09.089521 21 deployment.go:41] New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  I0510 14:56:09.089548 21 deployment.go:44] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I0510 14:56:09.089831 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fb7c9663-4206-4bb9-952b-083ff53cb107",
      ResourceVersion: (string) (len=5) "37295",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850949764,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "32d4b20e-5176-420d-85e0-3070505e0fd6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949769,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 33 32 64 34 62 32 30  |"uid\":\"32d4b20|
              00000040  65 2d 35 31 37 36 2d 34  32 30 64 2d 38 35 65 30  |e-5176-420d-85e0|
              00000050  2d 33 30 37 30 35 30 35  65 30 66 64 36 5c 22 7d  |-3070505e0fd6\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0510 14:56:09.094048 21 deployment.go:67] Pod "test-cleanup-controller-5vkjf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-5vkjf",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-5276",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c66ca747-04aa-434c-b93f-6aa9acff0978",
      ResourceVersion: (string) (len=5) "37279",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850949764,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "fb7c9663-4206-4bb9-952b-083ff53cb107",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  66 62 37 63 39 36 36 33  |uid\":\"fb7c9663|
              00000080  2d 34 32 30 36 2d 34 62  62 39 2d 39 35 32 62 2d  |-4206-4bb9-952b-|
              00000090  30 38 33 66 66 35 33 63  62 31 30 37 5c 22 7d 22  |083ff53cb107\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  30 33 5c 22 7d 22 3a 7b  |.244.1.203\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m2qfd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m2qfd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949764,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.48.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.48.105"
        }
      },
      PodIP: (string) (len=12) "10.244.1.203",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.203"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850949764,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63850949764,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e6f0ec3d6ca30ce4e62db0e546697b75884894231fb928c09869a69aa65127fe",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0510 14:56:09.096376 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5276" for this suite. @ 05/10/24 14:56:09.101
• [5.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 05/10/24 14:56:09.111
  I0510 14:56:09.111163 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename configmap @ 05/10/24 14:56:09.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:56:09.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:56:09.127
  STEP: Creating configMap that has name configmap-test-emptyKey-51106bf0-9789-46cc-847b-cee33d03d553 @ 05/10/24 14:56:09.13
  I0510 14:56:09.131856 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7176" for this suite. @ 05/10/24 14:56:09.134
• [0.029 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 05/10/24 14:56:09.14
  I0510 14:56:09.141006 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 05/10/24 14:56:09.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:56:09.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:56:09.153
  STEP: creating a target pod @ 05/10/24 14:56:09.155
  E0510 14:56:09.171808      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:10.172203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 05/10/24 14:56:11.169
  E0510 14:56:11.172595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:12.173493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:13.173577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:14.174534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:15.174625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 05/10/24 14:56:15.185
  I0510 14:56:15.185468 21 exec_util.go:55] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-58 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0510 14:56:15.185489 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  I0510 14:56:15.185989 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0510 14:56:15.186054 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-58/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0510 14:56:15.253797 21 exec_util.go:106] Exec stderr: ""
  I0510 14:56:15.266998 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-58" for this suite. @ 05/10/24 14:56:15.269
• [6.132 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 05/10/24 14:56:15.273
  I0510 14:56:15.273581 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename configmap @ 05/10/24 14:56:15.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:56:15.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:56:15.287
  STEP: Creating configMap with name configmap-test-upd-e73b8133-294c-470b-82fe-64c94d503a70 @ 05/10/24 14:56:15.292
  STEP: Creating the pod @ 05/10/24 14:56:15.296
  E0510 14:56:16.174761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:17.175336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-e73b8133-294c-470b-82fe-64c94d503a70 @ 05/10/24 14:56:17.315
  STEP: waiting to observe update in volume @ 05/10/24 14:56:17.32
  E0510 14:56:18.175397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:19.175728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:20.176287      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:21.176404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:22.176504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:23.176739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:24.177284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:25.177481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:26.178476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:27.178840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:28.179056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:29.179244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:30.179980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:31.180090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:32.180421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:33.180769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:34.180971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:35.181199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:36.181307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:37.181711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:38.182123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:39.182255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:40.183315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:41.183529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:42.184274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:43.184472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:44.185432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:45.185653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:46.185773      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:47.186664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:48.187140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:49.187352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:50.187656      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:51.188062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:52.189013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:53.189189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:54.190226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:55.190412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:56.191185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:57.191533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:58.192503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:56:59.192697      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:00.193456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:01.193591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:02.194671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:03.194914      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:04.195419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:05.195659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:06.195769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:07.196188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:08.196809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:09.197017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:10.197655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:11.197986      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:12.198673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:13.198900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:14.199614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:15.199856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:16.200239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:17.201196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:18.201512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:19.201704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:20.202103      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:21.202221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:22.202675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:23.203373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:24.203529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:25.204073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:26.204487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:27.204884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:28.205402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:29.205614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:30.206194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:31.206409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:32.206924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:33.207122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:34.207727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:35.208064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:36.208319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:37.208634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:38.209670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:39.209865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:40.209952      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:41.210171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:42.210338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:43.210546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:57:43.631921 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8046" for this suite. @ 05/10/24 14:57:43.634
• [88.365 seconds]
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 05/10/24 14:57:43.638
  I0510 14:57:43.638796 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename svcaccounts @ 05/10/24 14:57:43.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:57:43.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:57:43.651
  E0510 14:57:44.210614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:45.210895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 05/10/24 14:57:45.666
  I0510 14:57:45.667031 21 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4462 pod-service-account-7b555a93-5f01-477a-adff-ab52b39d19a5 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 05/10/24 14:57:45.786
  I0510 14:57:45.786706 21 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4462 pod-service-account-7b555a93-5f01-477a-adff-ab52b39d19a5 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 05/10/24 14:57:45.906
  I0510 14:57:45.906707 21 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4462 pod-service-account-7b555a93-5f01-477a-adff-ab52b39d19a5 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0510 14:57:46.032113 21 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-4462"
  I0510 14:57:46.034348 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4462" for this suite. @ 05/10/24 14:57:46.036
• [2.404 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1420
  STEP: Creating a kubernetes client @ 05/10/24 14:57:46.043
  I0510 14:57:46.043312 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename services @ 05/10/24 14:57:46.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:57:46.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:57:46.055
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-1537 @ 05/10/24 14:57:46.057
  STEP: changing the ExternalName service to type=ClusterIP @ 05/10/24 14:57:46.063
  STEP: creating replication controller externalname-service in namespace services-1537 @ 05/10/24 14:57:46.074
  I0510 14:57:46.081498      21 runners.go:198] Created replication controller with name: externalname-service, namespace: services-1537, replica count: 2
  E0510 14:57:46.211426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:47.211804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:48.212006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:57:49.132015      21 runners.go:198] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0510 14:57:49.132057 21 resource.go:361] Creating new exec pod
  E0510 14:57:49.212354      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:50.212541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:51.213581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:57:52.143845 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-1537 exec execpodhtrzk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0510 14:57:52.214428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:57:52.262333 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0510 14:57:52.262375 21 builder.go:147] stdout: ""
  I0510 14:57:53.144284 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-1537 exec execpodhtrzk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0510 14:57:53.214670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:57:53.265532 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0510 14:57:53.265578 21 builder.go:147] stdout: "externalname-service-hc8h5"
  I0510 14:57:53.265663 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-1537 exec execpodhtrzk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.185.8 80'
  I0510 14:57:53.402427 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.108.185.8 80\nConnection to 10.108.185.8 80 port [tcp/http] succeeded!\n"
  I0510 14:57:53.402476 21 builder.go:147] stdout: "externalname-service-r945q"
  I0510 14:57:53.402766 21 service.go:1429] Cleaning up the ExternalName to ClusterIP test service
  I0510 14:57:53.415880 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1537" for this suite. @ 05/10/24 14:57:53.418
• [7.379 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 05/10/24 14:57:53.422
  I0510 14:57:53.422657 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename webhook @ 05/10/24 14:57:53.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:57:53.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:57:53.436
  STEP: Setting up server cert @ 05/10/24 14:57:53.45
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 14:57:53.935
  STEP: Deploying the webhook pod @ 05/10/24 14:57:53.94
  STEP: Wait for the deployment to be ready @ 05/10/24 14:57:53.951
  I0510 14:57:53.957067 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0510 14:57:54.215414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:55.216460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/10/24 14:57:55.963
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 14:57:55.973
  E0510 14:57:56.216543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:57:56.973414 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 05/10/24 14:57:57.029
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/10/24 14:57:57.063
  STEP: Deleting the collection of validation webhooks @ 05/10/24 14:57:57.094
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/10/24 14:57:57.123
  I0510 14:57:57.161783 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7068" for this suite. @ 05/10/24 14:57:57.164
  STEP: Destroying namespace "webhook-markers-7604" for this suite. @ 05/10/24 14:57:57.188
• [3.770 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 05/10/24 14:57:57.193
  I0510 14:57:57.193844 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename projected @ 05/10/24 14:57:57.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:57:57.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:57:57.204
  STEP: Creating secret with name projected-secret-test-6378b900-a3ae-45d0-8bfc-de97783fd432 @ 05/10/24 14:57:57.207
  STEP: Creating a pod to test consume secrets @ 05/10/24 14:57:57.21
  E0510 14:57:57.216637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:58.216968      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:57:59.217170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:00.217286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:01.217567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 14:58:01.223
  I0510 14:58:01.225433 21 output.go:196] Trying to get logs from node worker-1 pod pod-projected-secrets-facca2c0-2ecf-4869-9d3c-2708e759f8e8 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 14:58:01.232
  I0510 14:58:01.243491 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2536" for this suite. @ 05/10/24 14:58:01.245
• [4.058 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 05/10/24 14:58:01.251
  I0510 14:58:01.251996 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename deployment @ 05/10/24 14:58:01.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:58:01.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:58:01.264
  I0510 14:58:01.267286 21 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0510 14:58:01.275091 21 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0510 14:58:01.280153 21 deployment.go:222] deployment "test-recreate-deployment" doesn't have the required revision set
  E0510 14:58:02.218393      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:03.218517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:58:03.285373 21 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0510 14:58:03.287268 21 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0510 14:58:03.294338 21 deployment.go:313] Updating deployment test-recreate-deployment
  I0510 14:58:03.294369 21 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0510 14:58:03.348985 21 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7338",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fd0d41bc-0140-45af-9271-3a9c70a35e08",
      ResourceVersion: (string) (len=5) "37879",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850949881,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949883,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949883,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949883,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949883,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949883,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949881,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-66b65d9f8f\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0510 14:58:03.353100 21 deployment.go:39] New ReplicaSet "test-recreate-deployment-66b65d9f8f" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-66b65d9f8f",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7338",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0188730f-d6d8-40bc-8e91-31e311fb15e4",
      ResourceVersion: (string) (len=5) "37876",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850949883,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "fd0d41bc-0140-45af-9271-3a9c70a35e08",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949883,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 64 30 64 34 31  62 63 2d 30 31 34 30 2d  |\"fd0d41bc-0140-|
              00000120  34 35 61 66 2d 39 32 37  31 2d 33 61 39 63 37 30  |45af-9271-3a9c70|
              00000130  61 33 35 65 30 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a35e08\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949883,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0510 14:58:03.354437 21 deployment.go:44] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0510 14:58:03.354725 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-6b6d9cd7b6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7338",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5f722735-9c5b-44b4-ab04-abbb995b3e42",
      ResourceVersion: (string) (len=5) "37867",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850949881,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "fd0d41bc-0140-45af-9271-3a9c70a35e08",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949883,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 64 30 64 34 31  62 63 2d 30 31 34 30 2d  |\"fd0d41bc-0140-|
              00000120  34 35 61 66 2d 39 32 37  31 2d 33 61 39 63 37 30  |45af-9271-3a9c70|
              00000130  61 33 35 65 30 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a35e08\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949883,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0510 14:58:03.358422 21 deployment.go:67] Pod "test-recreate-deployment-66b65d9f8f-mfshv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-66b65d9f8f-mfshv",
      GenerateName: (string) (len=36) "test-recreate-deployment-66b65d9f8f-",
      Namespace: (string) (len=15) "deployment-7338",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "212d6927-9532-493f-8a2a-ca7e638720b4",
      ResourceVersion: (string) (len=5) "37878",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850949883,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-66b65d9f8f",
          UID: (types.UID) (len=36) "0188730f-d6d8-40bc-8e91-31e311fb15e4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949883,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  38 38 37 33 30 66 2d 64  |d\":\"0188730f-d|
              00000090  36 64 38 2d 34 30 62 63  2d 38 65 39 31 2d 33 31  |6d8-40bc-8e91-31|
              000000a0  65 33 31 31 66 62 31 35  65 34 5c 22 7d 22 3a 7b  |e311fb15e4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949883,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-95dcx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-95dcx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949883,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949883,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949883,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949883,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63850949883,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.48.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.48.105"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63850949883,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0510 14:58:03.361069 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7338" for this suite. @ 05/10/24 14:58:03.364
• [2.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 05/10/24 14:58:03.369
  I0510 14:58:03.369311 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename dns @ 05/10/24 14:58:03.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:58:03.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:58:03.38
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-7469.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-7469.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 05/10/24 14:58:03.382
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-7469.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-7469.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 05/10/24 14:58:03.382
  STEP: creating a pod to probe /etc/hosts @ 05/10/24 14:58:03.382
  STEP: submitting the pod to kubernetes @ 05/10/24 14:58:03.382
  E0510 14:58:04.218660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:05.218893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/10/24 14:58:05.395
  STEP: looking for the results for each expected name from probers @ 05/10/24 14:58:05.397
  I0510 14:58:05.411523 21 dns_common.go:527] DNS probes using dns-7469/dns-test-c153b7c8-22a1-4404-bdb3-5a7bd0b3d4e5 succeeded

  STEP: deleting the pod @ 05/10/24 14:58:05.411
  I0510 14:58:05.421515 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7469" for this suite. @ 05/10/24 14:58:05.424
• [2.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 05/10/24 14:58:05.429
  I0510 14:58:05.429038 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename secrets @ 05/10/24 14:58:05.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:58:05.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:58:05.442
  STEP: Creating secret with name secret-test-53f10cf1-7ead-4995-ab61-93826afeb732 @ 05/10/24 14:58:05.445
  STEP: Creating a pod to test consume secrets @ 05/10/24 14:58:05.448
  E0510 14:58:06.219029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:07.219431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:08.220421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:09.220615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 14:58:09.463
  I0510 14:58:09.465844 21 output.go:196] Trying to get logs from node worker-1 pod pod-secrets-5d92768c-afe6-45f7-aeaf-6cde16114e40 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 14:58:09.471
  I0510 14:58:09.481733 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8832" for this suite. @ 05/10/24 14:58:09.484
• [4.061 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 05/10/24 14:58:09.49
  I0510 14:58:09.490409 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename runtimeclass @ 05/10/24 14:58:09.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:58:09.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:58:09.502
  STEP: getting /apis @ 05/10/24 14:58:09.505
  STEP: getting /apis/node.k8s.io @ 05/10/24 14:58:09.509
  STEP: getting /apis/node.k8s.io/v1 @ 05/10/24 14:58:09.511
  STEP: creating @ 05/10/24 14:58:09.512
  STEP: watching @ 05/10/24 14:58:09.523
  I0510 14:58:09.523140 21 runtimeclass.go:275] starting watch
  STEP: getting @ 05/10/24 14:58:09.526
  STEP: listing @ 05/10/24 14:58:09.528
  STEP: patching @ 05/10/24 14:58:09.53
  STEP: updating @ 05/10/24 14:58:09.533
  I0510 14:58:09.536722 21 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 05/10/24 14:58:09.536
  STEP: deleting a collection @ 05/10/24 14:58:09.543
  I0510 14:58:09.552723 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1840" for this suite. @ 05/10/24 14:58:09.554
• [0.068 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3161
  STEP: Creating a kubernetes client @ 05/10/24 14:58:09.559
  I0510 14:58:09.559513 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename services @ 05/10/24 14:58:09.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:58:09.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:58:09.57
  STEP: creating an Endpoint @ 05/10/24 14:58:09.575
  STEP: waiting for available Endpoint @ 05/10/24 14:58:09.578
  STEP: listing all Endpoints @ 05/10/24 14:58:09.579
  STEP: updating the Endpoint @ 05/10/24 14:58:09.581
  STEP: fetching the Endpoint @ 05/10/24 14:58:09.586
  STEP: patching the Endpoint @ 05/10/24 14:58:09.588
  STEP: fetching the Endpoint @ 05/10/24 14:58:09.595
  STEP: deleting the Endpoint by Collection @ 05/10/24 14:58:09.597
  STEP: waiting for Endpoint deletion @ 05/10/24 14:58:09.601
  STEP: fetching the Endpoint @ 05/10/24 14:58:09.602
  I0510 14:58:09.604800 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6247" for this suite. @ 05/10/24 14:58:09.607
• [0.051 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:841
  STEP: Creating a kubernetes client @ 05/10/24 14:58:09.611
  I0510 14:58:09.611037 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename webhook @ 05/10/24 14:58:09.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:58:09.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:58:09.623
  STEP: Setting up server cert @ 05/10/24 14:58:09.638
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 14:58:09.926
  STEP: Deploying the webhook pod @ 05/10/24 14:58:09.929
  STEP: Wait for the deployment to be ready @ 05/10/24 14:58:09.939
  I0510 14:58:09.943806 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0510 14:58:10.221113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:11.221392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/10/24 14:58:11.95
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 14:58:11.959
  E0510 14:58:12.222314      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:58:12.960172 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 05/10/24 14:58:12.964
  I0510 14:58:12.992233 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-411" for this suite. @ 05/10/24 14:58:12.994
  STEP: Destroying namespace "webhook-markers-5816" for this suite. @ 05/10/24 14:58:12.999
• [3.393 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 05/10/24 14:58:13.004
  I0510 14:58:13.004783 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename configmap @ 05/10/24 14:58:13.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:58:13.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:58:13.017
  STEP: Creating configMap with name configmap-test-upd-c6236be4-5575-4704-9427-21663f49953e @ 05/10/24 14:58:13.022
  STEP: Creating the pod @ 05/10/24 14:58:13.025
  E0510 14:58:13.223310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:14.223860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 05/10/24 14:58:15.037
  STEP: Waiting for pod with binary data @ 05/10/24 14:58:15.042
  I0510 14:58:15.046912 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5054" for this suite. @ 05/10/24 14:58:15.049
• [2.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 05/10/24 14:58:15.053
  I0510 14:58:15.053479 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename sched-preemption @ 05/10/24 14:58:15.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:58:15.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:58:15.066
  I0510 14:58:15.077744 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0510 14:58:15.224433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:16.224632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:17.225067      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:18.225364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:19.226091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:20.226271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:21.226996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:22.227370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:23.228312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:24.228517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:25.229050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:26.229358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:27.230304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:28.230424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:29.231108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:30.232069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:31.233159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:32.233696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:33.233879      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:34.234075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:35.235112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:36.235298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:37.235643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:38.235891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:39.236570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:40.236714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:41.236807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:42.237381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:43.237488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:44.237714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:45.238655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:46.238842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:47.239036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:48.239242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:49.239357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:50.239605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:51.239920      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:52.240427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:53.241236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:54.241439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:55.241754      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:56.241827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:57.242272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:58.242505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:58:59.242925      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:00.243060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:01.243682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:02.244384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:03.245327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:04.245704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:05.246499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:06.246581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:07.246658      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:08.246845      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:09.246937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:10.247012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:11.247047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:12.247515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:13.248373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:14.248512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:59:15.080654 21 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 05/10/24 14:59:15.083
  I0510 14:59:15.083056 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename sched-preemption-path @ 05/10/24 14:59:15.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:59:15.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:59:15.097
  I0510 14:59:15.109479 21 preemption.go:818] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0510 14:59:15.111894 21 preemption.go:824] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  I0510 14:59:15.155336 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-4105" for this suite. @ 05/10/24 14:59:15.157
  I0510 14:59:15.161404 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5806" for this suite. @ 05/10/24 14:59:15.163
• [60.114 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 05/10/24 14:59:15.167
  I0510 14:59:15.167920 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 14:59:15.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:59:15.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:59:15.182
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 05/10/24 14:59:15.184
  E0510 14:59:15.249553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:16.249967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 14:59:17.194
  I0510 14:59:17.196260 21 output.go:196] Trying to get logs from node worker-1 pod pod-cc075513-71cd-4a7e-b95e-575f49494b2a container test-container: <nil>
  STEP: delete the pod @ 05/10/24 14:59:17.201
  I0510 14:59:17.210105 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1301" for this suite. @ 05/10/24 14:59:17.212
• [2.050 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 05/10/24 14:59:17.218
  I0510 14:59:17.218208 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename dns @ 05/10/24 14:59:17.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:59:17.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:59:17.23
  STEP: Creating a test headless service @ 05/10/24 14:59:17.232
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1043.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-1043.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 05/10/24 14:59:17.237
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1043.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-1043.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 05/10/24 14:59:17.237
  STEP: creating a pod to probe DNS @ 05/10/24 14:59:17.237
  STEP: submitting the pod to kubernetes @ 05/10/24 14:59:17.237
  E0510 14:59:17.250863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:18.251300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 05/10/24 14:59:19.251
  E0510 14:59:19.251405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: looking for the results for each expected name from probers @ 05/10/24 14:59:19.253
  I0510 14:59:19.267248 21 dns_common.go:527] DNS probes using dns-1043/dns-test-502a29bb-b794-4685-8592-b09cb29ca6c5 succeeded

  STEP: deleting the pod @ 05/10/24 14:59:19.267
  STEP: deleting the test headless service @ 05/10/24 14:59:19.275
  I0510 14:59:19.284521 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1043" for this suite. @ 05/10/24 14:59:19.287
• [2.073 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 05/10/24 14:59:19.291
  I0510 14:59:19.291767 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename init-container @ 05/10/24 14:59:19.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:59:19.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:59:19.312
  STEP: creating the pod @ 05/10/24 14:59:19.316
  I0510 14:59:19.316361 21 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E0510 14:59:20.252011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:21.252457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:22.252986      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 14:59:23.036649 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5211" for this suite. @ 05/10/24 14:59:23.039
• [3.751 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 05/10/24 14:59:23.043
  I0510 14:59:23.043978 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename projected @ 05/10/24 14:59:23.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:59:23.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:59:23.056
  STEP: Creating configMap with name configmap-projected-all-test-volume-fd2973fe-a65b-4013-9b06-b90cf73fa748 @ 05/10/24 14:59:23.059
  STEP: Creating secret with name secret-projected-all-test-volume-1eaaa301-5418-4d90-929d-760eddb006ba @ 05/10/24 14:59:23.062
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 05/10/24 14:59:23.066
  E0510 14:59:23.253954      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:24.254154      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 14:59:25.077
  I0510 14:59:25.079078 21 output.go:196] Trying to get logs from node worker-1 pod projected-volume-6cf45ffe-45bf-4873-a7ab-3501aae086a9 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 05/10/24 14:59:25.083
  I0510 14:59:25.093043 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1726" for this suite. @ 05/10/24 14:59:25.095
• [2.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 05/10/24 14:59:25.099
  I0510 14:59:25.099350 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename projected @ 05/10/24 14:59:25.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 14:59:25.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 14:59:25.112
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-e2a6e1c1-71ad-4d19-8eb1-214ab4b7e071 @ 05/10/24 14:59:25.12
  STEP: Creating the pod @ 05/10/24 14:59:25.124
  E0510 14:59:25.254817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:26.255043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-e2a6e1c1-71ad-4d19-8eb1-214ab4b7e071 @ 05/10/24 14:59:27.144
  STEP: waiting to observe update in volume @ 05/10/24 14:59:27.147
  E0510 14:59:27.255465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:28.256226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:29.257175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:30.257432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:31.258181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:32.258827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:33.259669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:34.259882      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:35.260737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:36.260923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:37.261863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:38.261931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:39.262974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:40.263189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:41.264039      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:42.264543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:43.264932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:44.265117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:45.265195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:46.265409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:47.265807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:48.265937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:49.266139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:50.266364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:51.266754      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:52.267317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:53.267866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:54.268045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:55.268436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:56.268627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:57.269551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:58.269688      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 14:59:59.270523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:00.270744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:01.271426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:02.271966      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:03.272198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:04.272433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:05.272810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:06.273143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:07.273494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:08.274362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:09.274557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:10.275263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:11.275482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:12.275580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:13.276058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:14.276843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:15.277056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:16.277893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:17.278386      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:18.278691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:19.278803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:20.278899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:21.279011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:22.280094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:23.280274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:24.280776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:25.280953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:26.281783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:27.282118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:28.283005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:29.283197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:30.284075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:31.284264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:32.285090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:33.285274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 15:00:33.377616 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6238" for this suite. @ 05/10/24 15:00:33.38
• [68.286 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 05/10/24 15:00:33.385
  I0510 15:00:33.385337 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename resourcequota @ 05/10/24 15:00:33.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 15:00:33.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 15:00:33.402
  STEP: Creating a ResourceQuota @ 05/10/24 15:00:33.405
  STEP: Getting a ResourceQuota @ 05/10/24 15:00:33.409
  STEP: Listing all ResourceQuotas with LabelSelector @ 05/10/24 15:00:33.411
  STEP: Patching the ResourceQuota @ 05/10/24 15:00:33.414
  STEP: Deleting a Collection of ResourceQuotas @ 05/10/24 15:00:33.421
  STEP: Verifying the deleted ResourceQuota @ 05/10/24 15:00:33.427
  I0510 15:00:33.428850 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5584" for this suite. @ 05/10/24 15:00:33.433
• [0.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2240
  STEP: Creating a kubernetes client @ 05/10/24 15:00:33.439
  I0510 15:00:33.439312 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename services @ 05/10/24 15:00:33.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 15:00:33.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 15:00:33.45
  STEP: creating service in namespace services-7796 @ 05/10/24 15:00:33.453
  STEP: creating service affinity-nodeport-transition in namespace services-7796 @ 05/10/24 15:00:33.453
  STEP: creating replication controller affinity-nodeport-transition in namespace services-7796 @ 05/10/24 15:00:33.467
  I0510 15:00:33.475665      21 runners.go:198] Created replication controller with name: affinity-nodeport-transition, namespace: services-7796, replica count: 3
  E0510 15:00:34.285983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:35.286959      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:36.286987      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 15:00:36.527468      21 runners.go:198] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0510 15:00:36.534285 21 resource.go:361] Creating new exec pod
  E0510 15:00:37.287636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:38.287870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:39.288051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 15:00:39.552704 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-7796 exec execpod-affinityjhv2p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0510 15:00:39.667578 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I0510 15:00:39.667631 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0510 15:00:39.667729 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-7796 exec execpod-affinityjhv2p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.176.6 80'
  I0510 15:00:39.785577 21 builder.go:146] stderr: "+ + echonc hostName -v\n -t -w 2 10.96.176.6 80\nConnection to 10.96.176.6 80 port [tcp/http] succeeded!\n"
  I0510 15:00:39.785626 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0510 15:00:39.785856 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-7796 exec execpod-affinityjhv2p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.48.103 31113'
  I0510 15:00:39.900749 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.48.103 31113\nConnection to 10.0.48.103 31113 port [tcp/*] succeeded!\n"
  I0510 15:00:39.900866 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0510 15:00:39.900962 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-7796 exec execpod-affinityjhv2p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.48.105 31113'
  I0510 15:00:40.018370 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.48.105 31113\nConnection to 10.0.48.105 31113 port [tcp/*] succeeded!\n"
  I0510 15:00:40.018444 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0510 15:00:40.024420 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-7796 exec execpod-affinityjhv2p -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.0.48.103:31113/ ; done'
  I0510 15:00:40.222295 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:31113/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:31113/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:31113/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:31113/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:31113/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:31113/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:31113/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:31113/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:31113/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:31113/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:31113/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:31113/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:31113/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:31113/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:31113/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:31113/\n"
  I0510 15:00:40.222420 21 builder.go:147] stdout: "\naffinity-nodeport-transition-j7lnw\naffinity-nodeport-transition-j7lnw\naffinity-nodeport-transition-j7lnw\naffinity-nodeport-transition-j7lnw\naffinity-nodeport-transition-6thff\naffinity-nodeport-transition-j7lnw\naffinity-nodeport-transition-6thff\naffinity-nodeport-transition-j7lnw\naffinity-nodeport-transition-6thff\naffinity-nodeport-transition-j7lnw\naffinity-nodeport-transition-6thff\naffinity-nodeport-transition-j7lnw\naffinity-nodeport-transition-j7lnw\naffinity-nodeport-transition-t9hlz\naffinity-nodeport-transition-t9hlz\naffinity-nodeport-transition-t9hlz"
  I0510 15:00:40.222447 21 service.go:242] Received response from host: affinity-nodeport-transition-j7lnw
  I0510 15:00:40.222466 21 service.go:242] Received response from host: affinity-nodeport-transition-j7lnw
  I0510 15:00:40.222481 21 service.go:242] Received response from host: affinity-nodeport-transition-j7lnw
  I0510 15:00:40.222619 21 service.go:242] Received response from host: affinity-nodeport-transition-j7lnw
  I0510 15:00:40.222637 21 service.go:242] Received response from host: affinity-nodeport-transition-6thff
  I0510 15:00:40.222652 21 service.go:242] Received response from host: affinity-nodeport-transition-j7lnw
  I0510 15:00:40.222666 21 service.go:242] Received response from host: affinity-nodeport-transition-6thff
  I0510 15:00:40.222679 21 service.go:242] Received response from host: affinity-nodeport-transition-j7lnw
  I0510 15:00:40.222693 21 service.go:242] Received response from host: affinity-nodeport-transition-6thff
  I0510 15:00:40.222768 21 service.go:242] Received response from host: affinity-nodeport-transition-j7lnw
  I0510 15:00:40.222786 21 service.go:242] Received response from host: affinity-nodeport-transition-6thff
  I0510 15:00:40.222801 21 service.go:242] Received response from host: affinity-nodeport-transition-j7lnw
  I0510 15:00:40.222826 21 service.go:242] Received response from host: affinity-nodeport-transition-j7lnw
  I0510 15:00:40.222872 21 service.go:242] Received response from host: affinity-nodeport-transition-t9hlz
  I0510 15:00:40.222892 21 service.go:242] Received response from host: affinity-nodeport-transition-t9hlz
  I0510 15:00:40.222905 21 service.go:242] Received response from host: affinity-nodeport-transition-t9hlz
  I0510 15:00:40.229966 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=services-7796 exec execpod-affinityjhv2p -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.0.48.103:31113/ ; done'
  E0510 15:00:40.288695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 15:00:40.426995 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:31113/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:31113/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:31113/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:31113/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:31113/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:31113/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:31113/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:31113/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:31113/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:31113/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:31113/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:31113/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:31113/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:31113/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:31113/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.48.103:31113/\n"
  I0510 15:00:40.427067 21 builder.go:147] stdout: "\naffinity-nodeport-transition-6thff\naffinity-nodeport-transition-6thff\naffinity-nodeport-transition-6thff\naffinity-nodeport-transition-6thff\naffinity-nodeport-transition-6thff\naffinity-nodeport-transition-6thff\naffinity-nodeport-transition-6thff\naffinity-nodeport-transition-6thff\naffinity-nodeport-transition-6thff\naffinity-nodeport-transition-6thff\naffinity-nodeport-transition-6thff\naffinity-nodeport-transition-6thff\naffinity-nodeport-transition-6thff\naffinity-nodeport-transition-6thff\naffinity-nodeport-transition-6thff\naffinity-nodeport-transition-6thff"
  I0510 15:00:40.427091 21 service.go:242] Received response from host: affinity-nodeport-transition-6thff
  I0510 15:00:40.427107 21 service.go:242] Received response from host: affinity-nodeport-transition-6thff
  I0510 15:00:40.427173 21 service.go:242] Received response from host: affinity-nodeport-transition-6thff
  I0510 15:00:40.427201 21 service.go:242] Received response from host: affinity-nodeport-transition-6thff
  I0510 15:00:40.427217 21 service.go:242] Received response from host: affinity-nodeport-transition-6thff
  I0510 15:00:40.427232 21 service.go:242] Received response from host: affinity-nodeport-transition-6thff
  I0510 15:00:40.427246 21 service.go:242] Received response from host: affinity-nodeport-transition-6thff
  I0510 15:00:40.427335 21 service.go:242] Received response from host: affinity-nodeport-transition-6thff
  I0510 15:00:40.427349 21 service.go:242] Received response from host: affinity-nodeport-transition-6thff
  I0510 15:00:40.427363 21 service.go:242] Received response from host: affinity-nodeport-transition-6thff
  I0510 15:00:40.427378 21 service.go:242] Received response from host: affinity-nodeport-transition-6thff
  I0510 15:00:40.427392 21 service.go:242] Received response from host: affinity-nodeport-transition-6thff
  I0510 15:00:40.427406 21 service.go:242] Received response from host: affinity-nodeport-transition-6thff
  I0510 15:00:40.427592 21 service.go:242] Received response from host: affinity-nodeport-transition-6thff
  I0510 15:00:40.427602 21 service.go:242] Received response from host: affinity-nodeport-transition-6thff
  I0510 15:00:40.427611 21 service.go:242] Received response from host: affinity-nodeport-transition-6thff
  I0510 15:00:40.427729 21 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-7796, will wait for the garbage collector to delete the pods @ 05/10/24 15:00:40.438
  I0510 15:00:40.494385 21 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 3.831922ms
  I0510 15:00:40.594805 21 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 100.418103ms
  E0510 15:00:41.289737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:42.290728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:43.291783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 15:00:43.508478 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7796" for this suite. @ 05/10/24 15:00:43.51
• [10.075 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 05/10/24 15:00:43.514
  I0510 15:00:43.514740 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename field-validation @ 05/10/24 15:00:43.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 15:00:43.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 15:00:43.527
  I0510 15:00:43.529608 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  W0510 15:00:43.530192      21 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc004b5c290 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0510 15:00:44.292165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:45.292528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0510 15:00:46.090527      21 warnings.go:70] unknown field "alpha"
  W0510 15:00:46.090553      21 warnings.go:70] unknown field "beta"
  W0510 15:00:46.090559      21 warnings.go:70] unknown field "delta"
  W0510 15:00:46.090565      21 warnings.go:70] unknown field "epsilon"
  W0510 15:00:46.090571      21 warnings.go:70] unknown field "gamma"
  E0510 15:00:46.293276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 15:00:46.617410 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3783" for this suite. @ 05/10/24 15:00:46.619
• [3.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 05/10/24 15:00:46.624
  I0510 15:00:46.624218 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename replication-controller @ 05/10/24 15:00:46.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 15:00:46.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 15:00:46.638
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 05/10/24 15:00:46.641
  E0510 15:00:47.293562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:48.293775      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 05/10/24 15:00:48.653
  STEP: Then the orphan pod is adopted @ 05/10/24 15:00:48.657
  E0510 15:00:49.294004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 15:00:49.662210 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2772" for this suite. @ 05/10/24 15:00:49.664
• [3.046 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 05/10/24 15:00:49.67
  I0510 15:00:49.670174 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename runtimeclass @ 05/10/24 15:00:49.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 15:00:49.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 15:00:49.681
  I0510 15:00:49.688629 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8078" for this suite. @ 05/10/24 15:00:49.69
• [0.026 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 05/10/24 15:00:49.696
  I0510 15:00:49.696160 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename downward-api @ 05/10/24 15:00:49.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 15:00:49.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 15:00:49.706
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 15:00:49.709
  E0510 15:00:50.294305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:51.295171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:52.295505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:53.296253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 15:00:53.724
  I0510 15:00:53.726749 21 output.go:196] Trying to get logs from node worker-1 pod downwardapi-volume-d2d727fc-4b60-4433-9de3-ba6de00350d9 container client-container: <nil>
  STEP: delete the pod @ 05/10/24 15:00:53.731
  I0510 15:00:53.741730 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8679" for this suite. @ 05/10/24 15:00:53.744
• [4.052 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 05/10/24 15:00:53.748
  I0510 15:00:53.748389 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename podtemplate @ 05/10/24 15:00:53.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 15:00:53.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 15:00:53.76
  STEP: Create a pod template @ 05/10/24 15:00:53.763
  STEP: Replace a pod template @ 05/10/24 15:00:53.766
  I0510 15:00:53.772264 21 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0510 15:00:53.772387 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-2491" for this suite. @ 05/10/24 15:00:53.774
• [0.030 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 05/10/24 15:00:53.778
  I0510 15:00:53.778598 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename kubelet-test @ 05/10/24 15:00:53.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 15:00:53.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 15:00:53.789
  E0510 15:00:54.297015      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:55.297214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 15:00:55.809874 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6442" for this suite. @ 05/10/24 15:00:55.812
• [2.037 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 05/10/24 15:00:55.816
  I0510 15:00:55.816071 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 15:00:55.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 15:00:55.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 15:00:55.828
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 05/10/24 15:00:55.831
  E0510 15:00:56.297305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:57.297911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:58.298594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:00:59.298678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 15:00:59.845
  I0510 15:00:59.847396 21 output.go:196] Trying to get logs from node worker-1 pod pod-d296b623-550e-406d-87f4-444e061910d4 container test-container: <nil>
  STEP: delete the pod @ 05/10/24 15:00:59.852
  I0510 15:00:59.862457 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6200" for this suite. @ 05/10/24 15:00:59.864
• [4.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:882
  STEP: Creating a kubernetes client @ 05/10/24 15:00:59.869
  I0510 15:00:59.869746 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename kubectl @ 05/10/24 15:00:59.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 15:00:59.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 15:00:59.882
  STEP: validating api versions @ 05/10/24 15:00:59.885
  I0510 15:00:59.885872 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4131627046 --namespace=kubectl-4730 api-versions'
  I0510 15:00:59.945607 21 builder.go:146] stderr: ""
  I0510 15:00:59.945647 21 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautopilot.k0sproject.io/v1beta2\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\netcd.k0sproject.io/v1beta1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nhelm.k0sproject.io/v1beta1\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0510 15:00:59.945744 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4730" for this suite. @ 05/10/24 15:00:59.948
• [0.084 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 05/10/24 15:00:59.953
  I0510 15:00:59.953253 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename crd-webhook @ 05/10/24 15:00:59.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 15:00:59.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 15:00:59.963
  STEP: Setting up server cert @ 05/10/24 15:00:59.966
  E0510 15:01:00.299538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/10/24 15:01:00.431
  STEP: Deploying the custom resource conversion webhook pod @ 05/10/24 15:01:00.436
  STEP: Wait for the deployment to be ready @ 05/10/24 15:01:00.446
  I0510 15:01:00.452449 21 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0510 15:01:01.300365      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:01:02.300933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/10/24 15:01:02.46
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 15:01:02.472
  E0510 15:01:03.301216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 15:01:03.473570 21 util.go:427] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0510 15:01:03.478561 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  E0510 15:01:04.301609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:01:05.302001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 05/10/24 15:01:06.032
  STEP: v2 custom resource should be converted @ 05/10/24 15:01:06.038
  E0510 15:01:06.302492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 15:01:06.587445 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-6222" for this suite. @ 05/10/24 15:01:06.59
• [6.642 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 05/10/24 15:01:06.596
  I0510 15:01:06.596862 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename var-expansion @ 05/10/24 15:01:06.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 15:01:06.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 15:01:06.61
  E0510 15:01:07.303075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:01:08.304112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 15:01:08.624473 21 delete.go:62] Deleting pod "var-expansion-bdeb4bff-b590-440e-b20b-50270c77feca" in namespace "var-expansion-4872"
  I0510 15:01:08.628748 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-bdeb4bff-b590-440e-b20b-50270c77feca" to be fully deleted
  E0510 15:01:09.304953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:01:10.305330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 15:01:10.633944 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4872" for this suite. @ 05/10/24 15:01:10.636
• [4.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 05/10/24 15:01:10.643
  I0510 15:01:10.643091 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/10/24 15:01:10.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 15:01:10.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 15:01:10.654
  STEP: fetching the /apis discovery document @ 05/10/24 15:01:10.657
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 05/10/24 15:01:10.659
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 05/10/24 15:01:10.659
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 05/10/24 15:01:10.659
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 05/10/24 15:01:10.66
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 05/10/24 15:01:10.66
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 05/10/24 15:01:10.661
  I0510 15:01:10.661368 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4927" for this suite. @ 05/10/24 15:01:10.663
• [0.024 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:420
  STEP: Creating a kubernetes client @ 05/10/24 15:01:10.667
  I0510 15:01:10.667800 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename job @ 05/10/24 15:01:10.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 15:01:10.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 15:01:10.679
  STEP: Creating Indexed job @ 05/10/24 15:01:10.681
  STEP: Ensuring job reaches completions @ 05/10/24 15:01:10.685
  E0510 15:01:11.305453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:01:12.306082      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:01:13.306156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:01:14.306269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:01:15.307073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:01:16.308115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:01:17.308648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:01:18.308841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 05/10/24 15:01:18.687
  I0510 15:01:18.690776 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3842" for this suite. @ 05/10/24 15:01:18.693
• [8.029 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 05/10/24 15:01:18.697
  I0510 15:01:18.697444 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename security-context-test @ 05/10/24 15:01:18.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 15:01:18.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 15:01:18.71
  E0510 15:01:19.309862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:01:20.310125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:01:21.310815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:01:22.311443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 15:01:22.726489 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4580" for this suite. @ 05/10/24 15:01:22.728
• [4.035 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 05/10/24 15:01:22.733
  I0510 15:01:22.733102 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename projected @ 05/10/24 15:01:22.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 15:01:22.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 15:01:22.746
  STEP: Creating a pod to test downward API volume plugin @ 05/10/24 15:01:22.749
  E0510 15:01:23.312083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:01:24.312308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:01:25.313093      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:01:26.313277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 15:01:26.763
  I0510 15:01:26.765342 21 output.go:196] Trying to get logs from node worker-1 pod downwardapi-volume-03f3b924-98df-4a64-ba08-f0bdf78aa8ad container client-container: <nil>
  STEP: delete the pod @ 05/10/24 15:01:26.772
  I0510 15:01:26.781998 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4642" for this suite. @ 05/10/24 15:01:26.784
• [4.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 05/10/24 15:01:26.788
  I0510 15:01:26.788732 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename endpointslice @ 05/10/24 15:01:26.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 15:01:26.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 15:01:26.801
  E0510 15:01:27.313706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:01:28.313888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 05/10/24 15:01:28.854
  STEP: referencing matching pods with named port @ 05/10/24 15:01:28.858
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 05/10/24 15:01:28.861
  STEP: recreating EndpointSlices after they've been deleted @ 05/10/24 15:01:28.865
  I0510 15:01:28.875742 21 endpointslice.go:938] EndpointSlice for Service endpointslice-9130/example-named-port not found
  E0510 15:01:29.314039      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:01:30.314213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 15:01:30.879173 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9130" for this suite. @ 05/10/24 15:01:30.881
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 05/10/24 15:01:30.885
  I0510 15:01:30.885759 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename secrets @ 05/10/24 15:01:30.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 15:01:30.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 15:01:30.898
  STEP: Creating projection with secret that has name secret-emptykey-test-44aca856-d56c-4515-9abc-c3949de79327 @ 05/10/24 15:01:30.901
  I0510 15:01:30.903310 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7549" for this suite. @ 05/10/24 15:01:30.905
• [0.024 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 05/10/24 15:01:30.91
  I0510 15:01:30.910108 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename emptydir @ 05/10/24 15:01:30.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 15:01:30.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 15:01:30.922
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 05/10/24 15:01:30.925
  E0510 15:01:31.314819      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:01:32.315437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/10/24 15:01:32.935
  I0510 15:01:32.937688 21 output.go:196] Trying to get logs from node worker-0 pod pod-72488b96-cf61-4ef5-b3a4-dd1287586352 container test-container: <nil>
  STEP: delete the pod @ 05/10/24 15:01:32.952
  I0510 15:01:32.962731 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3915" for this suite. @ 05/10/24 15:01:32.965
• [2.059 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 05/10/24 15:01:32.969
  I0510 15:01:32.969838 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename webhook @ 05/10/24 15:01:32.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 15:01:32.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 15:01:32.981
  STEP: Setting up server cert @ 05/10/24 15:01:32.996
  E0510 15:01:33.315482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/10/24 15:01:33.331
  STEP: Deploying the webhook pod @ 05/10/24 15:01:33.337
  STEP: Wait for the deployment to be ready @ 05/10/24 15:01:33.347
  I0510 15:01:33.353819 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0510 15:01:34.316497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0510 15:01:35.316656      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/10/24 15:01:35.361
  STEP: Verifying the service has paired with the endpoint @ 05/10/24 15:01:35.373
  E0510 15:01:36.317026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0510 15:01:36.375282 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 05/10/24 15:01:36.433
  STEP: Creating a configMap that should be mutated @ 05/10/24 15:01:36.451
  STEP: Deleting the collection of validation webhooks @ 05/10/24 15:01:36.482
  STEP: Creating a configMap that should not be mutated @ 05/10/24 15:01:36.511
  I0510 15:01:36.543660 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8287" for this suite. @ 05/10/24 15:01:36.547
  STEP: Destroying namespace "webhook-markers-855" for this suite. @ 05/10/24 15:01:36.553
• [3.598 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 05/10/24 15:01:36.568
  I0510 15:01:36.568263 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-4131627046
  STEP: Building a namespace api object, basename configmap @ 05/10/24 15:01:36.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/10/24 15:01:36.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/10/24 15:01:36.582
  STEP: creating a ConfigMap @ 05/10/24 15:01:36.585
  STEP: fetching the ConfigMap @ 05/10/24 15:01:36.588
  STEP: patching the ConfigMap @ 05/10/24 15:01:36.59
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 05/10/24 15:01:36.596
  STEP: deleting the ConfigMap by collection with a label selector @ 05/10/24 15:01:36.598
  STEP: listing all ConfigMaps in test namespace @ 05/10/24 15:01:36.603
  I0510 15:01:36.604859 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3173" for this suite. @ 05/10/24 15:01:36.607
• [0.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0510 15:01:36.612609 21 suites.go:34] Running AfterSuite actions on node 1
  I0510 15:01:36.612641 21 util.go:614] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
[ReportAfterSuite] PASSED [0.054 seconds]
------------------------------

Ran 402 of 7197 Specs in 6344.218 seconds
SUCCESS! -- 402 Passed | 0 Failed | 0 Pending | 6795 Skipped
PASS

Ginkgo ran 1 suite in 1h45m45.368876856s
Test Suite Passed
