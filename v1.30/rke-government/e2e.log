  I0513 18:54:30.026716      21 e2e.go:109] Starting e2e run "588a36b1-2f9c-463c-bdb4-1c9b60588518" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1715626468 - will randomize all specs

Will run 402 of 7197 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0513 18:54:30.401037 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 18:54:30.402428 21 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0513 18:54:30.477810 21 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0513 18:54:30.485515 21 e2e.go:153] 4 / 4 pods ready in namespace 'kube-system' in daemonset 'rke2-canal' (0 seconds elapsed)
  I0513 18:54:30.485907 21 e2e.go:153] 4 / 4 pods ready in namespace 'kube-system' in daemonset 'rke2-ingress-nginx-controller' (0 seconds elapsed)
  I0513 18:54:30.485937 21 e2e.go:245] e2e test version: v1.30.0
  I0513 18:54:30.487261 21 e2e.go:254] kube-apiserver version: v1.30.0+rke2r1
  I0513 18:54:30.487364 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 18:54:30.493022 21 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.092 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 05/13/24 18:54:30.737
  I0513 18:54:30.737932 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename limitrange @ 05/13/24 18:54:30.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:54:30.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:54:30.824
  STEP: Creating LimitRange "e2e-limitrange-qzzck" in namespace "limitrange-6648" @ 05/13/24 18:54:30.828
  STEP: Creating another limitRange in another namespace @ 05/13/24 18:54:30.837
  I0513 18:54:30.875026 21 limit_range.go:299] Namespace "e2e-limitrange-qzzck-7304" created
  I0513 18:54:30.875129 21 limit_range.go:300] Creating LimitRange "e2e-limitrange-qzzck" in namespace "e2e-limitrange-qzzck-7304"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-qzzck" @ 05/13/24 18:54:30.884
  I0513 18:54:30.889032 21 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-qzzck" in "limitrange-6648" namespace @ 05/13/24 18:54:30.889
  I0513 18:54:30.900078 21 limit_range.go:335] LimitRange "e2e-limitrange-qzzck" has been patched
  STEP: Delete LimitRange "e2e-limitrange-qzzck" by Collection with labelSelector: "e2e-limitrange-qzzck=patched" @ 05/13/24 18:54:30.9
  STEP: Confirm that the limitRange "e2e-limitrange-qzzck" has been deleted @ 05/13/24 18:54:30.912
  I0513 18:54:30.912392 21 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0513 18:54:30.915867 21 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-qzzck=patched"
  I0513 18:54:30.916039 21 limit_range.go:344] LimitRange "e2e-limitrange-qzzck" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-qzzck" @ 05/13/24 18:54:30.916
  I0513 18:54:30.919716 21 limit_range.go:350] Found 1 limitRange
  I0513 18:54:30.919923 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-6648" for this suite. @ 05/13/24 18:54:30.924
  STEP: Destroying namespace "e2e-limitrange-qzzck-7304" for this suite. @ 05/13/24 18:54:30.936
• [0.221 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 05/13/24 18:54:30.96
  I0513 18:54:30.960095 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename var-expansion @ 05/13/24 18:54:30.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:54:31.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:54:31.066
  STEP: creating the pod with failed condition @ 05/13/24 18:54:31.069
  STEP: updating the pod @ 05/13/24 18:56:31.095
  I0513 18:56:31.618122 21 pod_client.go:141] Successfully updated pod "var-expansion-17e24ef4-0b7b-427f-bcc6-30a200b78989"
  STEP: waiting for pod running @ 05/13/24 18:56:31.618
  STEP: deleting the pod gracefully @ 05/13/24 18:56:33.628
  I0513 18:56:33.629105 21 delete.go:62] Deleting pod "var-expansion-17e24ef4-0b7b-427f-bcc6-30a200b78989" in namespace "var-expansion-9940"
  I0513 18:56:33.648616 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-17e24ef4-0b7b-427f-bcc6-30a200b78989" to be fully deleted
  I0513 18:57:05.753243 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9940" for this suite. @ 05/13/24 18:57:05.758
• [154.811 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 05/13/24 18:57:05.771
  I0513 18:57:05.771830 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename namespaces @ 05/13/24 18:57:05.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:57:05.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:57:05.812
  STEP: creating a Namespace @ 05/13/24 18:57:05.815
  STEP: patching the Namespace @ 05/13/24 18:57:05.848
  STEP: get the Namespace and ensuring it has the label @ 05/13/24 18:57:05.855
  I0513 18:57:05.860181 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6185" for this suite. @ 05/13/24 18:57:05.865
  STEP: Destroying namespace "nspatchtest-b701109c-4b3f-4f29-893a-e115bddd75ad-7163" for this suite. @ 05/13/24 18:57:05.872
• [0.109 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 05/13/24 18:57:05.881
  I0513 18:57:05.881284 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename projected @ 05/13/24 18:57:05.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:57:05.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:57:05.911
  STEP: Creating a pod to test downward API volume plugin @ 05/13/24 18:57:05.914
  STEP: Saw pod success @ 05/13/24 18:57:09.955
  I0513 18:57:09.964734 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod downwardapi-volume-46cb2f0a-7be0-47cc-b53f-ff89bfb710e7 container client-container: <nil>
  STEP: delete the pod @ 05/13/24 18:57:10.025
  I0513 18:57:10.046098 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6561" for this suite. @ 05/13/24 18:57:10.05
• [4.179 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 05/13/24 18:57:10.062
  I0513 18:57:10.062668 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename kubelet-test @ 05/13/24 18:57:10.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:57:10.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:57:10.091
  STEP: Waiting for pod completion @ 05/13/24 18:57:10.107
  I0513 18:57:16.318528 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2166" for this suite. @ 05/13/24 18:57:16.323
• [6.268 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 05/13/24 18:57:16.331
  I0513 18:57:16.331273 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename init-container @ 05/13/24 18:57:16.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:57:16.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:57:16.357
  STEP: creating the pod @ 05/13/24 18:57:16.361
  I0513 18:57:16.361723 21 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I0513 18:57:21.007062 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1758" for this suite. @ 05/13/24 18:57:21.017
• [4.701 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 05/13/24 18:57:21.034
  I0513 18:57:21.034271 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename var-expansion @ 05/13/24 18:57:21.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:57:21.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:57:21.069
  I0513 18:57:23.098834 21 delete.go:62] Deleting pod "var-expansion-da5ceb27-a798-41ad-b64c-0dc3d1b73143" in namespace "var-expansion-513"
  I0513 18:57:23.113453 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-da5ceb27-a798-41ad-b64c-0dc3d1b73143" to be fully deleted
  I0513 18:57:27.139452 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-513" for this suite. @ 05/13/24 18:57:27.146
• [6.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 05/13/24 18:57:27.156
  I0513 18:57:27.156161 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename svcaccounts @ 05/13/24 18:57:27.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:57:27.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:57:27.814
  I0513 18:57:27.834005 21 service_accounts.go:618] created pod
  STEP: Saw pod success @ 05/13/24 18:57:31.854
  I0513 18:58:01.855327 21 service_accounts.go:624] polling logs
  I0513 18:58:01.924408 21 service_accounts.go:634] Pod logs: 
  I0513 18:57:28.975341       1 log.go:245] OK: Got token
  I0513 18:57:28.975445       1 log.go:245] validating with in-cluster discovery
  I0513 18:57:28.975867       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0513 18:57:28.976069       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-1081:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000012ff0), NotBefore:(*jwt.NumericDate)(0xc0000130e0), IssuedAt:(*jwt.NumericDate)(0xc000013000), ID:"815b292d-108e-418e-9dee-a34366b37579"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-1081", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"614ca0e0-92fa-4f72-be87-590d18869adc"}}}
  I0513 18:57:29.007593       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0513 18:57:29.014586       1 log.go:245] OK: Validated signature on JWT
  I0513 18:57:29.014879       1 log.go:245] OK: Got valid claims from token!
  I0513 18:57:29.014932       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-1081:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000452890), NotBefore:(*jwt.NumericDate)(0xc0004528b8), IssuedAt:(*jwt.NumericDate)(0xc000452898), ID:"815b292d-108e-418e-9dee-a34366b37579"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-1081", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"614ca0e0-92fa-4f72-be87-590d18869adc"}}}

  I0513 18:58:01.924531 21 service_accounts.go:638] completed pod
  I0513 18:58:01.952367 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1081" for this suite. @ 05/13/24 18:58:01.959
• [34.818 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 05/13/24 18:58:01.974
  I0513 18:58:01.974471 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename projected @ 05/13/24 18:58:01.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:58:02.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:58:02.007
  STEP: Creating configMap with name projected-configmap-test-volume-9dc8a4dc-3024-4f72-8033-fdb1a48d94ed @ 05/13/24 18:58:02.011
  STEP: Creating a pod to test consume configMaps @ 05/13/24 18:58:02.018
  STEP: Saw pod success @ 05/13/24 18:58:06.319
  I0513 18:58:06.324540 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-projected-configmaps-eb1b9e29-2403-46a5-a326-d314d5dbe952 container agnhost-container: <nil>
  STEP: delete the pod @ 05/13/24 18:58:06.334
  I0513 18:58:06.380008 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9648" for this suite. @ 05/13/24 18:58:06.385
• [4.425 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:866
  STEP: Creating a kubernetes client @ 05/13/24 18:58:06.399
  I0513 18:58:06.400011 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename webhook @ 05/13/24 18:58:06.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:58:06.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:58:06.441
  STEP: Setting up server cert @ 05/13/24 18:58:06.982
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 18:58:08.315
  STEP: Deploying the webhook pod @ 05/13/24 18:58:08.334
  STEP: Wait for the deployment to be ready @ 05/13/24 18:58:08.377
  I0513 18:58:08.407505 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/13/24 18:58:10.427
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 18:58:10.471
  I0513 18:58:11.472678 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 05/13/24 18:58:11.48
  STEP: create the configmap with a random name @ 05/13/24 18:58:11.724
  STEP: verify the configmap is mutated @ 05/13/24 18:58:11.757
  STEP: create the configmap with 'skip-me' name @ 05/13/24 18:58:11.757
  I0513 18:58:11.895634 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4026" for this suite. @ 05/13/24 18:58:11.919
  STEP: Destroying namespace "webhook-markers-7647" for this suite. @ 05/13/24 18:58:11.939
• [5.560 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 05/13/24 18:58:11.96
  I0513 18:58:11.960589 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename configmap @ 05/13/24 18:58:11.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:58:12.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:58:12.01
  STEP: creating a ConfigMap @ 05/13/24 18:58:12.017
  STEP: fetching the ConfigMap @ 05/13/24 18:58:12.039
  STEP: patching the ConfigMap @ 05/13/24 18:58:12.046
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 05/13/24 18:58:12.065
  STEP: deleting the ConfigMap by collection with a label selector @ 05/13/24 18:58:12.07
  STEP: listing all ConfigMaps in test namespace @ 05/13/24 18:58:12.085
  I0513 18:58:12.089541 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8816" for this suite. @ 05/13/24 18:58:12.094
• [0.153 seconds]
------------------------------
SS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 05/13/24 18:58:12.114
  I0513 18:58:12.114375 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename pv @ 05/13/24 18:58:12.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:58:12.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:58:12.713
  STEP: Creating initial PV and PVC @ 05/13/24 18:58:12.721
  I0513 18:58:12.721142 21 pv.go:390] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-9558" @ 05/13/24 18:58:12.814
  STEP: Listing PVCs in namespace "pv-9558" @ 05/13/24 18:58:12.823
  STEP: Reading "pvc-jzxpv" Status @ 05/13/24 18:58:12.829
  STEP: Reading "pv-9558-5wb86" Status @ 05/13/24 18:58:12.842
  STEP: Patching "pvc-jzxpv" Status @ 05/13/24 18:58:12.85
  STEP: Patching "pv-9558-5wb86" Status @ 05/13/24 18:58:12.876
  STEP: Updating "pvc-jzxpv" Status @ 05/13/24 18:58:12.921
  STEP: Updating "pv-9558-5wb86" Status @ 05/13/24 18:58:12.935
  I0513 18:58:13.002503 21 persistent_volumes.go:407] AfterEach: deleting 1 PVCs and 1 PVs...
  I0513 18:58:13.002732 21 pv.go:201] Deleting PersistentVolumeClaim "pvc-jzxpv"
  I0513 18:58:13.021874 21 pv.go:189] Deleting PersistentVolume "pv-9558-5wb86"
  I0513 18:58:13.033221 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-9558" for this suite. @ 05/13/24 18:58:13.038
• [0.942 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 05/13/24 18:58:13.059
  I0513 18:58:13.059277 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename dns @ 05/13/24 18:58:13.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:58:13.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:58:13.118
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 05/13/24 18:58:13.122
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 05/13/24 18:58:13.122
  STEP: creating a pod to probe DNS @ 05/13/24 18:58:13.122
  STEP: submitting the pod to kubernetes @ 05/13/24 18:58:13.128
  STEP: retrieving the pod @ 05/13/24 18:58:17.516
  STEP: looking for the results for each expected name from probers @ 05/13/24 18:58:17.525
  I0513 18:58:17.558193 21 dns_common.go:527] DNS probes using dns-2281/dns-test-dcc39c6c-b787-4924-ab1b-b7d08e3e540f succeeded

  STEP: deleting the pod @ 05/13/24 18:58:17.558
  I0513 18:58:17.596029 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2281" for this suite. @ 05/13/24 18:58:17.63
• [4.589 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 05/13/24 18:58:17.652
  I0513 18:58:17.652630 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename watch @ 05/13/24 18:58:17.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:58:17.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:58:17.708
  STEP: creating a watch on configmaps with a certain label @ 05/13/24 18:58:17.713
  STEP: creating a new configmap @ 05/13/24 18:58:17.714
  STEP: modifying the configmap once @ 05/13/24 18:58:17.73
  STEP: changing the label value of the configmap @ 05/13/24 18:58:17.749
  STEP: Expecting to observe a delete notification for the watched object @ 05/13/24 18:58:17.768
  I0513 18:58:17.768485 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7064  9d03cab4-0a02-4e4b-b15e-3b86ab491391 43361 0 2024-05-13 18:58:17 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-13 18:58:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0513 18:58:17.768906 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7064  9d03cab4-0a02-4e4b-b15e-3b86ab491391 43363 0 2024-05-13 18:58:17 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-13 18:58:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0513 18:58:17.769291 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7064  9d03cab4-0a02-4e4b-b15e-3b86ab491391 43365 0 2024-05-13 18:58:17 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-13 18:58:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 05/13/24 18:58:17.769
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 05/13/24 18:58:17.785
  STEP: changing the label value of the configmap back @ 05/13/24 18:58:27.787
  STEP: modifying the configmap a third time @ 05/13/24 18:58:27.798
  STEP: deleting the configmap @ 05/13/24 18:58:27.815
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 05/13/24 18:58:28.001
  I0513 18:58:28.001741 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7064  9d03cab4-0a02-4e4b-b15e-3b86ab491391 43426 0 2024-05-13 18:58:17 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-13 18:58:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0513 18:58:28.001979 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7064  9d03cab4-0a02-4e4b-b15e-3b86ab491391 43427 0 2024-05-13 18:58:17 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-13 18:58:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0513 18:58:28.002092 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7064  9d03cab4-0a02-4e4b-b15e-3b86ab491391 43428 0 2024-05-13 18:58:17 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-13 18:58:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0513 18:58:28.002178 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7064" for this suite. @ 05/13/24 18:58:28.007
• [10.363 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 05/13/24 18:58:28.017
  I0513 18:58:28.017459 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename webhook @ 05/13/24 18:58:28.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:58:28.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:58:28.046
  STEP: Setting up server cert @ 05/13/24 18:58:28.083
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 18:58:28.749
  STEP: Deploying the webhook pod @ 05/13/24 18:58:28.757
  STEP: Wait for the deployment to be ready @ 05/13/24 18:58:28.78
  I0513 18:58:28.809190 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0513 18:58:30.825863 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 18, 58, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 18, 58, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 18, 58, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 18, 58, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 05/13/24 18:58:32.833
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 18:58:32.844
  I0513 18:58:33.844397 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 05/13/24 18:58:34.066
  STEP: Creating a configMap that should be mutated @ 05/13/24 18:58:34.083
  STEP: Deleting the collection of validation webhooks @ 05/13/24 18:58:34.126
  STEP: Creating a configMap that should not be mutated @ 05/13/24 18:58:34.194
  I0513 18:58:34.296427 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1260" for this suite. @ 05/13/24 18:58:34.303
  STEP: Destroying namespace "webhook-markers-2263" for this suite. @ 05/13/24 18:58:34.319
• [6.327 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 05/13/24 18:58:34.355
  I0513 18:58:34.356162 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/13/24 18:58:34.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:58:34.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:58:34.41
  I0513 18:58:34.414337 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 18:58:37.786878 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6005" for this suite. @ 05/13/24 18:58:37.793
• [3.451 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 05/13/24 18:58:37.808
  I0513 18:58:37.808300 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename proxy @ 05/13/24 18:58:37.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:58:37.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:58:37.854
  STEP: starting an echo server on multiple ports @ 05/13/24 18:58:37.885
  STEP: creating replication controller proxy-service-4tflk in namespace proxy-3249 @ 05/13/24 18:58:37.888
  I0513 18:58:37.910096      21 runners.go:198] Created replication controller with name: proxy-service-4tflk, namespace: proxy-3249, replica count: 1
  I0513 18:58:38.961570      21 runners.go:198] proxy-service-4tflk Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0513 18:58:39.962414      21 runners.go:198] proxy-service-4tflk Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I0513 18:58:40.962789      21 runners.go:198] proxy-service-4tflk Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0513 18:58:40.972623 21 proxy.go:230] setup took 3.113249427s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 05/13/24 18:58:40.972
  I0513 18:58:41.018406 21 proxy.go:558] (0) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 45.092947ms)
  I0513 18:58:41.018451 21 proxy.go:558] (0) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 44.884484ms)
  I0513 18:58:41.018469 21 proxy.go:558] (0) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">... (200; 44.942195ms)
  I0513 18:58:41.031886 21 proxy.go:558] (0) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/tlsrewritem... (200; 58.931056ms)
  I0513 18:58:41.035289 21 proxy.go:558] (0) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">test<... (200; 62.05173ms)
  I0513 18:58:41.035351 21 proxy.go:558] (0) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname2/proxy/: bar (200; 61.943639ms)
  I0513 18:58:41.035415 21 proxy.go:558] (0) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname2/proxy/: bar (200; 61.811428ms)
  I0513 18:58:41.035530 21 proxy.go:558] (0) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 62.262903ms)
  I0513 18:58:41.041098 21 proxy.go:558] (0) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname1/proxy/: foo (200; 68.000926ms)
  I0513 18:58:41.041479 21 proxy.go:558] (0) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/rewriteme">test</a> (200; 68.727997ms)
  I0513 18:58:41.041751 21 proxy.go:558] (0) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname2/proxy/: tls qux (200; 68.288631ms)
  I0513 18:58:41.041789 21 proxy.go:558] (0) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:462/proxy/: tls qux (200; 68.446002ms)
  I0513 18:58:41.041821 21 proxy.go:558] (0) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname1/proxy/: foo (200; 68.330511ms)
  I0513 18:58:41.041863 21 proxy.go:558] (0) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 68.238359ms)
  I0513 18:58:41.042195 21 proxy.go:558] (0) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname1/proxy/: tls baz (200; 69.057671ms)
  I0513 18:58:41.042277 21 proxy.go:558] (0) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:460/proxy/: tls baz (200; 69.231564ms)
  I0513 18:58:41.057488 21 proxy.go:558] (1) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 13.531245ms)
  I0513 18:58:41.057561 21 proxy.go:558] (1) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/tlsrewritem... (200; 14.833133ms)
  I0513 18:58:41.058203 21 proxy.go:558] (1) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:460/proxy/: tls baz (200; 15.379781ms)
  I0513 18:58:41.058226 21 proxy.go:558] (1) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 15.138317ms)
  I0513 18:58:41.058252 21 proxy.go:558] (1) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 14.451808ms)
  I0513 18:58:41.060809 21 proxy.go:558] (1) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">test<... (200; 18.356053ms)
  I0513 18:58:41.061307 21 proxy.go:558] (1) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:462/proxy/: tls qux (200; 18.994453ms)
  I0513 18:58:41.061364 21 proxy.go:558] (1) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">... (200; 18.8202ms)
  I0513 18:58:41.066320 21 proxy.go:558] (1) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname1/proxy/: foo (200; 23.406127ms)
  I0513 18:58:41.067166 21 proxy.go:558] (1) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname2/proxy/: bar (200; 24.167297ms)
  I0513 18:58:41.067449 21 proxy.go:558] (1) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname1/proxy/: foo (200; 24.243689ms)
  I0513 18:58:41.067533 21 proxy.go:558] (1) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/rewriteme">test</a> (200; 23.958684ms)
  I0513 18:58:41.067621 21 proxy.go:558] (1) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname2/proxy/: bar (200; 24.265378ms)
  I0513 18:58:41.067656 21 proxy.go:558] (1) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 25.01824ms)
  I0513 18:58:41.067681 21 proxy.go:558] (1) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname1/proxy/: tls baz (200; 24.41914ms)
  I0513 18:58:41.067698 21 proxy.go:558] (1) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname2/proxy/: tls qux (200; 24.251109ms)
  I0513 18:58:41.077929 21 proxy.go:558] (2) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">test<... (200; 9.457986ms)
  I0513 18:58:41.079067 21 proxy.go:558] (2) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 10.743735ms)
  I0513 18:58:41.080315 21 proxy.go:558] (2) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:462/proxy/: tls qux (200; 12.098024ms)
  I0513 18:58:41.081225 21 proxy.go:558] (2) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">... (200; 12.665452ms)
  I0513 18:58:41.081294 21 proxy.go:558] (2) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:460/proxy/: tls baz (200; 12.421889ms)
  I0513 18:58:41.081458 21 proxy.go:558] (2) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/tlsrewritem... (200; 12.667612ms)
  I0513 18:58:41.081843 21 proxy.go:558] (2) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 13.20196ms)
  I0513 18:58:41.082823 21 proxy.go:558] (2) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname2/proxy/: bar (200; 13.779428ms)
  I0513 18:58:41.084219 21 proxy.go:558] (2) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname2/proxy/: tls qux (200; 14.842754ms)
  I0513 18:58:41.084219 21 proxy.go:558] (2) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname1/proxy/: foo (200; 15.26286ms)
  I0513 18:58:41.084276 21 proxy.go:558] (2) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 14.564359ms)
  I0513 18:58:41.087089 21 proxy.go:558] (2) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname1/proxy/: tls baz (200; 17.529482ms)
  I0513 18:58:41.088472 21 proxy.go:558] (2) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname2/proxy/: bar (200; 18.83649ms)
  I0513 18:58:41.089297 21 proxy.go:558] (2) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 19.379918ms)
  I0513 18:58:41.089407 21 proxy.go:558] (2) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/rewriteme">test</a> (200; 19.613042ms)
  I0513 18:58:41.091128 21 proxy.go:558] (2) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname1/proxy/: foo (200; 21.59541ms)
  I0513 18:58:41.103787 21 proxy.go:558] (3) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">... (200; 11.956372ms)
  I0513 18:58:41.104202 21 proxy.go:558] (3) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 11.82486ms)
  I0513 18:58:41.104463 21 proxy.go:558] (3) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/rewriteme">test</a> (200; 12.014782ms)
  I0513 18:58:41.104611 21 proxy.go:558] (3) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/tlsrewritem... (200; 12.491449ms)
  I0513 18:58:41.105273 21 proxy.go:558] (3) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 12.935056ms)
  I0513 18:58:41.105271 21 proxy.go:558] (3) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:460/proxy/: tls baz (200; 13.115779ms)
  I0513 18:58:41.105337 21 proxy.go:558] (3) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">test<... (200; 13.134929ms)
  I0513 18:58:41.105372 21 proxy.go:558] (3) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 13.087158ms)
  I0513 18:58:41.105300 21 proxy.go:558] (3) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:462/proxy/: tls qux (200; 12.884575ms)
  I0513 18:58:41.105871 21 proxy.go:558] (3) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 13.798118ms)
  I0513 18:58:41.108502 21 proxy.go:558] (3) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname2/proxy/: bar (200; 16.69732ms)
  I0513 18:58:41.108648 21 proxy.go:558] (3) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname1/proxy/: tls baz (200; 16.73314ms)
  I0513 18:58:41.108951 21 proxy.go:558] (3) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname2/proxy/: tls qux (200; 16.937244ms)
  I0513 18:58:41.109015 21 proxy.go:558] (3) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname2/proxy/: bar (200; 16.74868ms)
  I0513 18:58:41.109056 21 proxy.go:558] (3) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname1/proxy/: foo (200; 17.379279ms)
  I0513 18:58:41.108859 21 proxy.go:558] (3) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname1/proxy/: foo (200; 16.906402ms)
  I0513 18:58:41.122140 21 proxy.go:558] (4) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 12.648862ms)
  I0513 18:58:41.122140 21 proxy.go:558] (4) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/rewriteme">test</a> (200; 12.943026ms)
  I0513 18:58:41.124500 21 proxy.go:558] (4) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 14.897474ms)
  I0513 18:58:41.124470 21 proxy.go:558] (4) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname1/proxy/: foo (200; 15.146607ms)
  I0513 18:58:41.124470 21 proxy.go:558] (4) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname1/proxy/: tls baz (200; 15.058046ms)
  I0513 18:58:41.127512 21 proxy.go:558] (4) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 18.296723ms)
  I0513 18:58:41.127962 21 proxy.go:558] (4) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 17.605683ms)
  I0513 18:58:41.128045 21 proxy.go:558] (4) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">test<... (200; 17.853507ms)
  I0513 18:58:41.128367 21 proxy.go:558] (4) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">... (200; 18.413734ms)
  I0513 18:58:41.128397 21 proxy.go:558] (4) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:460/proxy/: tls baz (200; 18.286593ms)
  I0513 18:58:41.128493 21 proxy.go:558] (4) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:462/proxy/: tls qux (200; 18.78546ms)
  I0513 18:58:41.129000 21 proxy.go:558] (4) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/tlsrewritem... (200; 18.966973ms)
  I0513 18:58:41.131666 21 proxy.go:558] (4) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname2/proxy/: bar (200; 21.196365ms)
  I0513 18:58:41.133479 21 proxy.go:558] (4) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname2/proxy/: tls qux (200; 23.610719ms)
  I0513 18:58:41.133479 21 proxy.go:558] (4) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname1/proxy/: foo (200; 23.200953ms)
  I0513 18:58:41.133949 21 proxy.go:558] (4) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname2/proxy/: bar (200; 24.158967ms)
  I0513 18:58:41.143848 21 proxy.go:558] (5) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">test<... (200; 9.06274ms)
  I0513 18:58:41.144092 21 proxy.go:558] (5) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">... (200; 9.840881ms)
  I0513 18:58:41.149113 21 proxy.go:558] (5) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 14.078212ms)
  I0513 18:58:41.149178 21 proxy.go:558] (5) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:462/proxy/: tls qux (200; 14.788952ms)
  I0513 18:58:41.149200 21 proxy.go:558] (5) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 14.820163ms)
  I0513 18:58:41.149430 21 proxy.go:558] (5) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 14.989975ms)
  I0513 18:58:41.149502 21 proxy.go:558] (5) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 14.914504ms)
  I0513 18:58:41.149521 21 proxy.go:558] (5) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/tlsrewritem... (200; 14.897144ms)
  I0513 18:58:41.149540 21 proxy.go:558] (5) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:460/proxy/: tls baz (200; 14.829423ms)
  I0513 18:58:41.149669 21 proxy.go:558] (5) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/rewriteme">test</a> (200; 14.711101ms)
  I0513 18:58:41.151761 21 proxy.go:558] (5) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname1/proxy/: foo (200; 16.900502ms)
  I0513 18:58:41.151965 21 proxy.go:558] (5) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname2/proxy/: bar (200; 17.45376ms)
  I0513 18:58:41.152048 21 proxy.go:558] (5) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname1/proxy/: tls baz (200; 17.051965ms)
  I0513 18:58:41.152080 21 proxy.go:558] (5) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname2/proxy/: bar (200; 17.191517ms)
  I0513 18:58:41.152855 21 proxy.go:558] (5) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname1/proxy/: foo (200; 18.035189ms)
  I0513 18:58:41.152932 21 proxy.go:558] (5) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname2/proxy/: tls qux (200; 18.385034ms)
  I0513 18:58:41.160988 21 proxy.go:558] (6) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 7.963175ms)
  I0513 18:58:41.164956 21 proxy.go:558] (6) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">... (200; 11.652978ms)
  I0513 18:58:41.165523 21 proxy.go:558] (6) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/tlsrewritem... (200; 12.042043ms)
  I0513 18:58:41.165523 21 proxy.go:558] (6) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 12.131914ms)
  I0513 18:58:41.165545 21 proxy.go:558] (6) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">test<... (200; 12.331907ms)
  I0513 18:58:41.165637 21 proxy.go:558] (6) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:460/proxy/: tls baz (200; 12.071574ms)
  I0513 18:58:41.168341 21 proxy.go:558] (6) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname1/proxy/: foo (200; 14.430037ms)
  I0513 18:58:41.168370 21 proxy.go:558] (6) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 13.97506ms)
  I0513 18:58:41.168713 21 proxy.go:558] (6) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/rewriteme">test</a> (200; 14.439278ms)
  I0513 18:58:41.169277 21 proxy.go:558] (6) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:462/proxy/: tls qux (200; 16.301174ms)
  I0513 18:58:41.169300 21 proxy.go:558] (6) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 15.116547ms)
  I0513 18:58:41.170822 21 proxy.go:558] (6) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname2/proxy/: bar (200; 17.089415ms)
  I0513 18:58:41.173509 21 proxy.go:558] (6) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname1/proxy/: foo (200; 19.859096ms)
  I0513 18:58:41.173800 21 proxy.go:558] (6) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname2/proxy/: tls qux (200; 19.979077ms)
  I0513 18:58:41.173829 21 proxy.go:558] (6) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname2/proxy/: bar (200; 19.737393ms)
  I0513 18:58:41.174501 21 proxy.go:558] (6) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname1/proxy/: tls baz (200; 20.507565ms)
  I0513 18:58:41.183112 21 proxy.go:558] (7) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:462/proxy/: tls qux (200; 8.307429ms)
  I0513 18:58:41.185724 21 proxy.go:558] (7) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 10.332249ms)
  I0513 18:58:41.186244 21 proxy.go:558] (7) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/tlsrewritem... (200; 10.651974ms)
  I0513 18:58:41.186843 21 proxy.go:558] (7) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 11.733149ms)
  I0513 18:58:41.187535 21 proxy.go:558] (7) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 12.033403ms)
  I0513 18:58:41.187662 21 proxy.go:558] (7) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:460/proxy/: tls baz (200; 11.582227ms)
  I0513 18:58:41.188158 21 proxy.go:558] (7) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 13.502264ms)
  I0513 18:58:41.189573 21 proxy.go:558] (7) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/rewriteme">test</a> (200; 13.677726ms)
  I0513 18:58:41.189711 21 proxy.go:558] (7) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">test<... (200; 13.727877ms)
  I0513 18:58:41.190219 21 proxy.go:558] (7) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">... (200; 14.045951ms)
  I0513 18:58:41.191214 21 proxy.go:558] (7) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname2/proxy/: bar (200; 15.508143ms)
  I0513 18:58:41.191605 21 proxy.go:558] (7) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname1/proxy/: foo (200; 16.391915ms)
  I0513 18:58:41.191679 21 proxy.go:558] (7) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname1/proxy/: tls baz (200; 16.333175ms)
  I0513 18:58:41.193284 21 proxy.go:558] (7) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname1/proxy/: foo (200; 18.357923ms)
  I0513 18:58:41.193752 21 proxy.go:558] (7) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname2/proxy/: bar (200; 18.732669ms)
  I0513 18:58:41.194732 21 proxy.go:558] (7) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname2/proxy/: tls qux (200; 18.935572ms)
  I0513 18:58:41.206247 21 proxy.go:558] (8) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 10.833845ms)
  I0513 18:58:41.212355 21 proxy.go:558] (8) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/rewriteme">test</a> (200; 16.433856ms)
  I0513 18:58:41.212436 21 proxy.go:558] (8) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 16.339704ms)
  I0513 18:58:41.212472 21 proxy.go:558] (8) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 16.03156ms)
  I0513 18:58:41.212505 21 proxy.go:558] (8) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">test<... (200; 17.704464ms)
  I0513 18:58:41.213150 21 proxy.go:558] (8) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:460/proxy/: tls baz (200; 16.616569ms)
  I0513 18:58:41.213206 21 proxy.go:558] (8) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 18.248292ms)
  I0513 18:58:41.213260 21 proxy.go:558] (8) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:462/proxy/: tls qux (200; 17.075015ms)
  I0513 18:58:41.213359 21 proxy.go:558] (8) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">... (200; 17.351899ms)
  I0513 18:58:41.213226 21 proxy.go:558] (8) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/tlsrewritem... (200; 16.875263ms)
  I0513 18:58:41.217127 21 proxy.go:558] (8) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname2/proxy/: bar (200; 22.041477ms)
  I0513 18:58:41.218803 21 proxy.go:558] (8) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname1/proxy/: foo (200; 23.062341ms)
  I0513 18:58:41.218960 21 proxy.go:558] (8) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname1/proxy/: foo (200; 23.414486ms)
  I0513 18:58:41.219590 21 proxy.go:558] (8) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname2/proxy/: tls qux (200; 23.764701ms)
  I0513 18:58:41.219912 21 proxy.go:558] (8) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname1/proxy/: tls baz (200; 24.269939ms)
  I0513 18:58:41.220349 21 proxy.go:558] (8) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname2/proxy/: bar (200; 24.080236ms)
  I0513 18:58:41.229535 21 proxy.go:558] (9) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 8.533782ms)
  I0513 18:58:41.229915 21 proxy.go:558] (9) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/rewriteme">test</a> (200; 9.437435ms)
  I0513 18:58:41.230698 21 proxy.go:558] (9) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">test<... (200; 9.73731ms)
  I0513 18:58:41.231180 21 proxy.go:558] (9) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:460/proxy/: tls baz (200; 10.765395ms)
  I0513 18:58:41.231656 21 proxy.go:558] (9) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:462/proxy/: tls qux (200; 10.447139ms)
  I0513 18:58:41.233481 21 proxy.go:558] (9) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname1/proxy/: foo (200; 12.748433ms)
  I0513 18:58:41.235290 21 proxy.go:558] (9) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">... (200; 14.235095ms)
  I0513 18:58:41.235675 21 proxy.go:558] (9) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 14.991145ms)
  I0513 18:58:41.236071 21 proxy.go:558] (9) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 14.901924ms)
  I0513 18:58:41.236109 21 proxy.go:558] (9) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/tlsrewritem... (200; 14.977005ms)
  I0513 18:58:41.236126 21 proxy.go:558] (9) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname2/proxy/: tls qux (200; 15.226409ms)
  I0513 18:58:41.236148 21 proxy.go:558] (9) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 15.056016ms)
  I0513 18:58:41.237548 21 proxy.go:558] (9) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname2/proxy/: bar (200; 16.687669ms)
  I0513 18:58:41.237597 21 proxy.go:558] (9) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname1/proxy/: foo (200; 17.005124ms)
  I0513 18:58:41.238087 21 proxy.go:558] (9) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname1/proxy/: tls baz (200; 17.277048ms)
  I0513 18:58:41.238838 21 proxy.go:558] (9) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname2/proxy/: bar (200; 18.206772ms)
  I0513 18:58:41.246284 21 proxy.go:558] (10) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 6.677045ms)
  I0513 18:58:41.246950 21 proxy.go:558] (10) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/tlsrewritem... (200; 7.312745ms)
  I0513 18:58:41.249850 21 proxy.go:558] (10) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 10.46607ms)
  I0513 18:58:41.250255 21 proxy.go:558] (10) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">... (200; 10.699983ms)
  I0513 18:58:41.257076 21 proxy.go:558] (10) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/rewriteme">test</a> (200; 17.338228ms)
  I0513 18:58:41.257732 21 proxy.go:558] (10) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:460/proxy/: tls baz (200; 18.050619ms)
  I0513 18:58:41.257741 21 proxy.go:558] (10) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">test<... (200; 18.85216ms)
  I0513 18:58:41.257907 21 proxy.go:558] (10) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 18.996722ms)
  I0513 18:58:41.258552 21 proxy.go:558] (10) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:462/proxy/: tls qux (200; 19.116344ms)
  I0513 18:58:41.262172 21 proxy.go:558] (10) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname1/proxy/: foo (200; 22.886418ms)
  I0513 18:58:41.262167 21 proxy.go:558] (10) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname1/proxy/: tls baz (200; 22.914858ms)
  I0513 18:58:41.262668 21 proxy.go:558] (10) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname2/proxy/: bar (200; 23.602529ms)
  I0513 18:58:41.262778 21 proxy.go:558] (10) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname2/proxy/: bar (200; 23.262574ms)
  I0513 18:58:41.262961 21 proxy.go:558] (10) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 23.858712ms)
  I0513 18:58:41.264691 21 proxy.go:558] (10) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname2/proxy/: tls qux (200; 24.969499ms)
  I0513 18:58:41.265132 21 proxy.go:558] (10) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname1/proxy/: foo (200; 25.952842ms)
  I0513 18:58:41.279131 21 proxy.go:558] (11) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname2/proxy/: bar (200; 13.558775ms)
  I0513 18:58:41.280054 21 proxy.go:558] (11) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/tlsrewritem... (200; 13.622875ms)
  I0513 18:58:41.280051 21 proxy.go:558] (11) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname1/proxy/: tls baz (200; 14.863463ms)
  I0513 18:58:41.280178 21 proxy.go:558] (11) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">... (200; 13.94662ms)
  I0513 18:58:41.280247 21 proxy.go:558] (11) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 14.271875ms)
  I0513 18:58:41.280083 21 proxy.go:558] (11) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:460/proxy/: tls baz (200; 13.564975ms)
  I0513 18:58:41.280989 21 proxy.go:558] (11) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 14.678301ms)
  I0513 18:58:41.281310 21 proxy.go:558] (11) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/rewriteme">test</a> (200; 15.517342ms)
  I0513 18:58:41.281553 21 proxy.go:558] (11) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:462/proxy/: tls qux (200; 15.487223ms)
  I0513 18:58:41.282313 21 proxy.go:558] (11) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">test<... (200; 16.161012ms)
  I0513 18:58:41.282313 21 proxy.go:558] (11) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 16.434826ms)
  I0513 18:58:41.284094 21 proxy.go:558] (11) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname1/proxy/: foo (200; 17.480681ms)
  I0513 18:58:41.284619 21 proxy.go:558] (11) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname2/proxy/: tls qux (200; 18.912942ms)
  I0513 18:58:41.285009 21 proxy.go:558] (11) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname2/proxy/: bar (200; 18.304293ms)
  I0513 18:58:41.285184 21 proxy.go:558] (11) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname1/proxy/: foo (200; 18.306283ms)
  I0513 18:58:41.285215 21 proxy.go:558] (11) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 18.426584ms)
  I0513 18:58:41.297736 21 proxy.go:558] (12) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/rewriteme">test</a> (200; 11.373493ms)
  I0513 18:58:41.297801 21 proxy.go:558] (12) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 11.285972ms)
  I0513 18:58:41.297778 21 proxy.go:558] (12) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 11.342263ms)
  I0513 18:58:41.298195 21 proxy.go:558] (12) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:462/proxy/: tls qux (200; 11.574826ms)
  I0513 18:58:41.298353 21 proxy.go:558] (12) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 12.397298ms)
  I0513 18:58:41.300457 21 proxy.go:558] (12) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:460/proxy/: tls baz (200; 14.934424ms)
  I0513 18:58:41.301967 21 proxy.go:558] (12) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname2/proxy/: bar (200; 16.04709ms)
  I0513 18:58:41.303930 21 proxy.go:558] (12) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname2/proxy/: tls qux (200; 17.651663ms)
  I0513 18:58:41.304505 21 proxy.go:558] (12) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">... (200; 17.695565ms)
  I0513 18:58:41.304503 21 proxy.go:558] (12) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname1/proxy/: foo (200; 18.712548ms)
  I0513 18:58:41.307218 21 proxy.go:558] (12) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 20.299271ms)
  I0513 18:58:41.308134 21 proxy.go:558] (12) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">test<... (200; 21.427778ms)
  I0513 18:58:41.308610 21 proxy.go:558] (12) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/tlsrewritem... (200; 21.568309ms)
  I0513 18:58:41.309201 21 proxy.go:558] (12) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname1/proxy/: tls baz (200; 23.082262ms)
  I0513 18:58:41.309490 21 proxy.go:558] (12) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname2/proxy/: bar (200; 23.226043ms)
  I0513 18:58:41.309725 21 proxy.go:558] (12) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname1/proxy/: foo (200; 23.68384ms)
  I0513 18:58:41.324398 21 proxy.go:558] (13) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 14.229334ms)
  I0513 18:58:41.327544 21 proxy.go:558] (13) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 16.308924ms)
  I0513 18:58:41.327959 21 proxy.go:558] (13) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 17.143756ms)
  I0513 18:58:41.328536 21 proxy.go:558] (13) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 17.647873ms)
  I0513 18:58:41.328610 21 proxy.go:558] (13) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">test<... (200; 17.550452ms)
  I0513 18:58:41.328819 21 proxy.go:558] (13) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:460/proxy/: tls baz (200; 17.848046ms)
  I0513 18:58:41.329063 21 proxy.go:558] (13) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/rewriteme">test</a> (200; 18.262132ms)
  I0513 18:58:41.328536 21 proxy.go:558] (13) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">... (200; 17.390659ms)
  I0513 18:58:41.329378 21 proxy.go:558] (13) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/tlsrewritem... (200; 18.000039ms)
  I0513 18:58:41.329483 21 proxy.go:558] (13) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:462/proxy/: tls qux (200; 18.957972ms)
  I0513 18:58:41.330502 21 proxy.go:558] (13) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname2/proxy/: bar (200; 19.877615ms)
  I0513 18:58:41.330938 21 proxy.go:558] (13) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname2/proxy/: bar (200; 19.400249ms)
  I0513 18:58:41.332184 21 proxy.go:558] (13) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname1/proxy/: foo (200; 21.917775ms)
  I0513 18:58:41.332247 21 proxy.go:558] (13) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname1/proxy/: foo (200; 20.84003ms)
  I0513 18:58:41.332693 21 proxy.go:558] (13) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname1/proxy/: tls baz (200; 22.334511ms)
  I0513 18:58:41.333064 21 proxy.go:558] (13) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname2/proxy/: tls qux (200; 22.355631ms)
  I0513 18:58:41.346132 21 proxy.go:558] (14) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:460/proxy/: tls baz (200; 12.996977ms)
  I0513 18:58:41.353569 21 proxy.go:558] (14) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 19.985147ms)
  I0513 18:58:41.360066 21 proxy.go:558] (14) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 25.881072ms)
  I0513 18:58:41.360136 21 proxy.go:558] (14) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 25.867921ms)
  I0513 18:58:41.360474 21 proxy.go:558] (14) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">... (200; 26.019624ms)
  I0513 18:58:41.360734 21 proxy.go:558] (14) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname1/proxy/: foo (200; 27.294392ms)
  I0513 18:58:41.360935 21 proxy.go:558] (14) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">test<... (200; 25.808281ms)
  I0513 18:58:41.361985 21 proxy.go:558] (14) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/rewriteme">test</a> (200; 27.887891ms)
  I0513 18:58:41.362406 21 proxy.go:558] (14) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname2/proxy/: bar (200; 28.916126ms)
  I0513 18:58:41.362583 21 proxy.go:558] (14) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:462/proxy/: tls qux (200; 28.743342ms)
  I0513 18:58:41.362714 21 proxy.go:558] (14) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/tlsrewritem... (200; 28.086383ms)
  I0513 18:58:41.363667 21 proxy.go:558] (14) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 29.080687ms)
  I0513 18:58:41.364738 21 proxy.go:558] (14) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname1/proxy/: tls baz (200; 30.989765ms)
  I0513 18:58:41.367680 21 proxy.go:558] (14) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname2/proxy/: bar (200; 33.746714ms)
  I0513 18:58:41.367719 21 proxy.go:558] (14) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname2/proxy/: tls qux (200; 33.703924ms)
  I0513 18:58:41.367813 21 proxy.go:558] (14) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname1/proxy/: foo (200; 34.15301ms)
  I0513 18:58:41.379288 21 proxy.go:558] (15) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 10.779305ms)
  I0513 18:58:41.382360 21 proxy.go:558] (15) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:460/proxy/: tls baz (200; 12.737073ms)
  I0513 18:58:41.388474 21 proxy.go:558] (15) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname1/proxy/: tls baz (200; 19.390428ms)
  I0513 18:58:41.388530 21 proxy.go:558] (15) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 18.607947ms)
  I0513 18:58:41.388595 21 proxy.go:558] (15) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">... (200; 18.575267ms)
  I0513 18:58:41.388459 21 proxy.go:558] (15) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname2/proxy/: bar (200; 19.017173ms)
  I0513 18:58:41.388806 21 proxy.go:558] (15) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname1/proxy/: foo (200; 19.802745ms)
  I0513 18:58:41.388878 21 proxy.go:558] (15) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 19.699293ms)
  I0513 18:58:41.388906 21 proxy.go:558] (15) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/rewriteme">test</a> (200; 19.640342ms)
  I0513 18:58:41.388963 21 proxy.go:558] (15) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/tlsrewritem... (200; 19.252376ms)
  I0513 18:58:41.388989 21 proxy.go:558] (15) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname1/proxy/: foo (200; 20.301341ms)
  I0513 18:58:41.389006 21 proxy.go:558] (15) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname2/proxy/: bar (200; 20.17997ms)
  I0513 18:58:41.389322 21 proxy.go:558] (15) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:462/proxy/: tls qux (200; 19.966336ms)
  I0513 18:58:41.389376 21 proxy.go:558] (15) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname2/proxy/: tls qux (200; 19.853455ms)
  I0513 18:58:41.389486 21 proxy.go:558] (15) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 20.566686ms)
  I0513 18:58:41.389567 21 proxy.go:558] (15) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">test<... (200; 19.722743ms)
  I0513 18:58:41.403727 21 proxy.go:558] (16) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:460/proxy/: tls baz (200; 13.826528ms)
  I0513 18:58:41.404416 21 proxy.go:558] (16) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">... (200; 14.440597ms)
  I0513 18:58:41.404442 21 proxy.go:558] (16) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 14.64224ms)
  I0513 18:58:41.404743 21 proxy.go:558] (16) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/rewriteme">test</a> (200; 14.388577ms)
  I0513 18:58:41.406357 21 proxy.go:558] (16) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 16.72956ms)
  I0513 18:58:41.407161 21 proxy.go:558] (16) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 16.911582ms)
  I0513 18:58:41.408061 21 proxy.go:558] (16) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/tlsrewritem... (200; 18.013108ms)
  I0513 18:58:41.408128 21 proxy.go:558] (16) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 18.11612ms)
  I0513 18:58:41.408391 21 proxy.go:558] (16) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:462/proxy/: tls qux (200; 18.249492ms)
  I0513 18:58:41.408437 21 proxy.go:558] (16) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">test<... (200; 18.498136ms)
  I0513 18:58:41.411075 21 proxy.go:558] (16) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname1/proxy/: foo (200; 20.88601ms)
  I0513 18:58:41.413358 21 proxy.go:558] (16) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname2/proxy/: bar (200; 23.03807ms)
  I0513 18:58:41.413354 21 proxy.go:558] (16) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname1/proxy/: foo (200; 23.244744ms)
  I0513 18:58:41.414110 21 proxy.go:558] (16) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname2/proxy/: tls qux (200; 23.824152ms)
  I0513 18:58:41.414119 21 proxy.go:558] (16) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname2/proxy/: bar (200; 24.012064ms)
  I0513 18:58:41.414170 21 proxy.go:558] (16) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname1/proxy/: tls baz (200; 23.954694ms)
  I0513 18:58:41.428221 21 proxy.go:558] (17) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:460/proxy/: tls baz (200; 14.010502ms)
  I0513 18:58:41.429457 21 proxy.go:558] (17) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 15.059066ms)
  I0513 18:58:41.432194 21 proxy.go:558] (17) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 17.349369ms)
  I0513 18:58:41.432419 21 proxy.go:558] (17) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 17.797936ms)
  I0513 18:58:41.433934 21 proxy.go:558] (17) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/rewriteme">test</a> (200; 19.555441ms)
  I0513 18:58:41.434004 21 proxy.go:558] (17) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/tlsrewritem... (200; 19.315238ms)
  I0513 18:58:41.434427 21 proxy.go:558] (17) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 19.949947ms)
  I0513 18:58:41.434700 21 proxy.go:558] (17) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">... (200; 20.115619ms)
  I0513 18:58:41.438071 21 proxy.go:558] (17) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">test<... (200; 23.521958ms)
  I0513 18:58:41.438072 21 proxy.go:558] (17) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname2/proxy/: bar (200; 23.269974ms)
  I0513 18:58:41.438695 21 proxy.go:558] (17) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:462/proxy/: tls qux (200; 24.179837ms)
  I0513 18:58:41.439119 21 proxy.go:558] (17) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname2/proxy/: tls qux (200; 24.166337ms)
  I0513 18:58:41.439539 21 proxy.go:558] (17) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname2/proxy/: bar (200; 24.659694ms)
  I0513 18:58:41.439562 21 proxy.go:558] (17) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname1/proxy/: foo (200; 24.832577ms)
  I0513 18:58:41.439824 21 proxy.go:558] (17) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname1/proxy/: foo (200; 25.05354ms)
  I0513 18:58:41.439930 21 proxy.go:558] (17) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname1/proxy/: tls baz (200; 25.013519ms)
  I0513 18:58:41.452476 21 proxy.go:558] (18) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 12.213945ms)
  I0513 18:58:41.454305 21 proxy.go:558] (18) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">... (200; 13.085058ms)
  I0513 18:58:41.454317 21 proxy.go:558] (18) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 12.890355ms)
  I0513 18:58:41.454853 21 proxy.go:558] (18) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">test<... (200; 13.980521ms)
  I0513 18:58:41.455381 21 proxy.go:558] (18) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 14.414157ms)
  I0513 18:58:41.455440 21 proxy.go:558] (18) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/rewriteme">test</a> (200; 14.65039ms)
  I0513 18:58:41.455509 21 proxy.go:558] (18) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname2/proxy/: tls qux (200; 14.744342ms)
  I0513 18:58:41.455601 21 proxy.go:558] (18) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 14.471148ms)
  I0513 18:58:41.455727 21 proxy.go:558] (18) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:462/proxy/: tls qux (200; 14.677401ms)
  I0513 18:58:41.455867 21 proxy.go:558] (18) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/tlsrewritem... (200; 14.561579ms)
  I0513 18:58:41.458488 21 proxy.go:558] (18) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:460/proxy/: tls baz (200; 16.890842ms)
  I0513 18:58:41.459062 21 proxy.go:558] (18) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname2/proxy/: bar (200; 18.481236ms)
  I0513 18:58:41.459435 21 proxy.go:558] (18) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname1/proxy/: foo (200; 17.931328ms)
  I0513 18:58:41.459755 21 proxy.go:558] (18) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname2/proxy/: bar (200; 18.213571ms)
  I0513 18:58:41.459779 21 proxy.go:558] (18) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname1/proxy/: foo (200; 19.393429ms)
  I0513 18:58:41.459921 21 proxy.go:558] (18) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname1/proxy/: tls baz (200; 19.440409ms)
  I0513 18:58:41.468294 21 proxy.go:558] (19) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:462/proxy/: tls qux (200; 7.958064ms)
  I0513 18:58:41.470330 21 proxy.go:558] (19) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 9.880292ms)
  I0513 18:58:41.470511 21 proxy.go:558] (19) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">test<... (200; 10.012684ms)
  I0513 18:58:41.470984 21 proxy.go:558] (19) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 10.38687ms)
  I0513 18:58:41.471017 21 proxy.go:558] (19) /api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/http:proxy-service-4tflk-wx4kq:1080/proxy/rewriteme">... (200; 10.46011ms)
  I0513 18:58:41.471039 21 proxy.go:558] (19) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:160/proxy/: foo (200; 10.048724ms)
  I0513 18:58:41.471548 21 proxy.go:558] (19) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:460/proxy/: tls baz (200; 10.875356ms)
  I0513 18:58:41.471864 21 proxy.go:558] (19) /api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/https:proxy-service-4tflk-wx4kq:443/proxy/tlsrewritem... (200; 11.225941ms)
  I0513 18:58:41.473878 21 proxy.go:558] (19) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/: <a href="/api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq/proxy/rewriteme">test</a> (200; 12.846854ms)
  I0513 18:58:41.474214 21 proxy.go:558] (19) /api/v1/namespaces/proxy-3249/pods/proxy-service-4tflk-wx4kq:162/proxy/: bar (200; 13.149709ms)
  I0513 18:58:41.477022 21 proxy.go:558] (19) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname2/proxy/: bar (200; 16.06814ms)
  I0513 18:58:41.478142 21 proxy.go:558] (19) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname1/proxy/: foo (200; 17.43225ms)
  I0513 18:58:41.478770 21 proxy.go:558] (19) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname1/proxy/: tls baz (200; 17.855167ms)
  I0513 18:58:41.478853 21 proxy.go:558] (19) /api/v1/namespaces/proxy-3249/services/proxy-service-4tflk:portname2/proxy/: bar (200; 18.10911ms)
  I0513 18:58:41.479172 21 proxy.go:558] (19) /api/v1/namespaces/proxy-3249/services/http:proxy-service-4tflk:portname1/proxy/: foo (200; 18.295023ms)
  I0513 18:58:41.479691 21 proxy.go:558] (19) /api/v1/namespaces/proxy-3249/services/https:proxy-service-4tflk:tlsportname2/proxy/: tls qux (200; 18.854361ms)
  STEP: deleting ReplicationController proxy-service-4tflk in namespace proxy-3249, will wait for the garbage collector to delete the pods @ 05/13/24 18:58:41.48
  I0513 18:58:41.566121 21 resources.go:139] Deleting ReplicationController proxy-service-4tflk took: 25.450185ms
  I0513 18:58:41.666975 21 resources.go:163] Terminating ReplicationController proxy-service-4tflk pods took: 100.852029ms
  I0513 18:58:44.167863 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-3249" for this suite. @ 05/13/24 18:58:44.173
• [6.378 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 05/13/24 18:58:44.186
  I0513 18:58:44.186236 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename dns @ 05/13/24 18:58:44.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:58:44.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:58:44.858
  STEP: Creating a test headless service @ 05/13/24 18:58:44.862
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3915 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-3915;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3915 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-3915;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3915.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-3915.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3915.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-3915.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3915.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-3915.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3915.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-3915.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3915.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-3915.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3915.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-3915.svc;check="$$(dig +notcp +noall +answer +search 238.131.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.131.238_udp@PTR;check="$$(dig +tcp +noall +answer +search 238.131.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.131.238_tcp@PTR;sleep 1; done
   @ 05/13/24 18:58:44.927
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3915 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3915;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3915 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3915;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3915.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3915.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3915.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3915.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3915.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-3915.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3915.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-3915.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3915.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-3915.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3915.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-3915.svc;check="$$(dig +notcp +noall +answer +search 238.131.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.131.238_udp@PTR;check="$$(dig +tcp +noall +answer +search 238.131.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.131.238_tcp@PTR;sleep 1; done
   @ 05/13/24 18:58:44.928
  STEP: creating a pod to probe DNS @ 05/13/24 18:58:44.928
  STEP: submitting the pod to kubernetes @ 05/13/24 18:58:44.929
  STEP: retrieving the pod @ 05/13/24 18:58:49.003
  STEP: looking for the results for each expected name from probers @ 05/13/24 18:58:49.007
  I0513 18:58:49.015790 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:49.022165 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:49.027956 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-3915 from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:49.032598 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-3915 from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:49.037792 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:49.043240 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:49.047594 21 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:49.052824 21 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:49.076627 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:49.081849 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:49.086675 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-3915 from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:49.091539 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-3915 from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:49.100534 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:49.108207 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:49.117880 21 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:49.125202 21 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:49.150642 21 dns_common.go:489] Lookups using dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-3915 wheezy_tcp@dns-test-service.dns-3915 wheezy_udp@dns-test-service.dns-3915.svc wheezy_tcp@dns-test-service.dns-3915.svc wheezy_udp@_http._tcp.dns-test-service.dns-3915.svc wheezy_tcp@_http._tcp.dns-test-service.dns-3915.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3915 jessie_tcp@dns-test-service.dns-3915 jessie_udp@dns-test-service.dns-3915.svc jessie_tcp@dns-test-service.dns-3915.svc jessie_udp@_http._tcp.dns-test-service.dns-3915.svc jessie_tcp@_http._tcp.dns-test-service.dns-3915.svc]

  I0513 18:58:49.160310 21 dns_common.go:495] Pod client logs for webserver: 
  I0513 18:58:49.170004 21 dns_common.go:495] Pod client logs for querier: 
  I0513 18:58:49.180035 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0513 18:58:54.013840 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:54.018615 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:54.024491 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-3915 from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:54.029788 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-3915 from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:54.036180 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:54.042608 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:54.047674 21 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:54.055650 21 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:54.086685 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:54.090400 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:54.093800 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-3915 from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:54.099807 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-3915 from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:54.108660 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:54.115410 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:54.124530 21 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:54.129837 21 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:54.147080 21 dns_common.go:489] Lookups using dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-3915 wheezy_tcp@dns-test-service.dns-3915 wheezy_udp@dns-test-service.dns-3915.svc wheezy_tcp@dns-test-service.dns-3915.svc wheezy_udp@_http._tcp.dns-test-service.dns-3915.svc wheezy_tcp@_http._tcp.dns-test-service.dns-3915.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3915 jessie_tcp@dns-test-service.dns-3915 jessie_udp@dns-test-service.dns-3915.svc jessie_tcp@dns-test-service.dns-3915.svc jessie_udp@_http._tcp.dns-test-service.dns-3915.svc jessie_tcp@_http._tcp.dns-test-service.dns-3915.svc]

  I0513 18:58:54.160540 21 dns_common.go:495] Pod client logs for webserver: 
  I0513 18:58:54.170024 21 dns_common.go:495] Pod client logs for querier: 
  I0513 18:58:54.177894 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0513 18:58:59.013373 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:59.018078 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:59.023313 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-3915 from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:59.027864 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-3915 from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:59.032717 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:59.038663 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:59.043584 21 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:59.048670 21 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:59.072016 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:59.076558 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:59.081030 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-3915 from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:59.085817 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-3915 from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:59.091378 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:59.097785 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:59.103125 21 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:59.109854 21 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:58:59.132023 21 dns_common.go:489] Lookups using dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-3915 wheezy_tcp@dns-test-service.dns-3915 wheezy_udp@dns-test-service.dns-3915.svc wheezy_tcp@dns-test-service.dns-3915.svc wheezy_udp@_http._tcp.dns-test-service.dns-3915.svc wheezy_tcp@_http._tcp.dns-test-service.dns-3915.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3915 jessie_tcp@dns-test-service.dns-3915 jessie_udp@dns-test-service.dns-3915.svc jessie_tcp@dns-test-service.dns-3915.svc jessie_udp@_http._tcp.dns-test-service.dns-3915.svc jessie_tcp@_http._tcp.dns-test-service.dns-3915.svc]

  I0513 18:58:59.140077 21 dns_common.go:495] Pod client logs for webserver: 
  I0513 18:58:59.147946 21 dns_common.go:495] Pod client logs for querier: 
  I0513 18:58:59.155754 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0513 18:59:04.015103 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:04.021908 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:04.029455 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-3915 from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:04.049162 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-3915 from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:04.057073 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:04.061826 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:04.067270 21 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:04.071662 21 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:04.093036 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:04.098264 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:04.102954 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-3915 from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:04.107907 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-3915 from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:04.114063 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:04.120372 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:04.125850 21 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:04.131935 21 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:04.150696 21 dns_common.go:489] Lookups using dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-3915 wheezy_tcp@dns-test-service.dns-3915 wheezy_udp@dns-test-service.dns-3915.svc wheezy_tcp@dns-test-service.dns-3915.svc wheezy_udp@_http._tcp.dns-test-service.dns-3915.svc wheezy_tcp@_http._tcp.dns-test-service.dns-3915.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3915 jessie_tcp@dns-test-service.dns-3915 jessie_udp@dns-test-service.dns-3915.svc jessie_tcp@dns-test-service.dns-3915.svc jessie_udp@_http._tcp.dns-test-service.dns-3915.svc jessie_tcp@_http._tcp.dns-test-service.dns-3915.svc]

  I0513 18:59:04.159766 21 dns_common.go:495] Pod client logs for webserver: 
  I0513 18:59:04.172919 21 dns_common.go:495] Pod client logs for querier: 
  I0513 18:59:04.186772 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0513 18:59:09.019903 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:09.030711 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:09.040902 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-3915 from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:09.051638 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-3915 from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:09.068692 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:09.081103 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:09.086711 21 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:09.091899 21 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:09.118277 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:09.123571 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:09.128139 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-3915 from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:09.133675 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-3915 from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:09.142322 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:09.147699 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:09.152912 21 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:09.157982 21 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:09.177731 21 dns_common.go:489] Lookups using dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-3915 wheezy_tcp@dns-test-service.dns-3915 wheezy_udp@dns-test-service.dns-3915.svc wheezy_tcp@dns-test-service.dns-3915.svc wheezy_udp@_http._tcp.dns-test-service.dns-3915.svc wheezy_tcp@_http._tcp.dns-test-service.dns-3915.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3915 jessie_tcp@dns-test-service.dns-3915 jessie_udp@dns-test-service.dns-3915.svc jessie_tcp@dns-test-service.dns-3915.svc jessie_udp@_http._tcp.dns-test-service.dns-3915.svc jessie_tcp@_http._tcp.dns-test-service.dns-3915.svc]

  I0513 18:59:09.186670 21 dns_common.go:495] Pod client logs for webserver: 
  I0513 18:59:09.199749 21 dns_common.go:495] Pod client logs for querier: 
  I0513 18:59:09.208808 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0513 18:59:14.012684 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:14.019277 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:14.027128 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-3915 from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:14.031768 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-3915 from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:14.036586 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:14.042353 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:14.046975 21 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:14.054910 21 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:14.080328 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:14.084825 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:14.089513 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-3915 from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:14.094557 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-3915 from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:14.098754 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:14.103951 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:14.110039 21 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:14.114397 21 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3915.svc from pod dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9: the server could not find the requested resource (get pods dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9)
  I0513 18:59:14.135046 21 dns_common.go:489] Lookups using dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-3915 wheezy_tcp@dns-test-service.dns-3915 wheezy_udp@dns-test-service.dns-3915.svc wheezy_tcp@dns-test-service.dns-3915.svc wheezy_udp@_http._tcp.dns-test-service.dns-3915.svc wheezy_tcp@_http._tcp.dns-test-service.dns-3915.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3915 jessie_tcp@dns-test-service.dns-3915 jessie_udp@dns-test-service.dns-3915.svc jessie_tcp@dns-test-service.dns-3915.svc jessie_udp@_http._tcp.dns-test-service.dns-3915.svc jessie_tcp@_http._tcp.dns-test-service.dns-3915.svc]

  I0513 18:59:14.144022 21 dns_common.go:495] Pod client logs for webserver: 
  I0513 18:59:14.154818 21 dns_common.go:495] Pod client logs for querier: 
  I0513 18:59:14.162215 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0513 18:59:19.106483 21 dns_common.go:527] DNS probes using dns-3915/dns-test-a16b9806-89eb-4234-94f9-d78b49e2dfe9 succeeded

  STEP: deleting the pod @ 05/13/24 18:59:19.106
  STEP: deleting the test service @ 05/13/24 18:59:19.165
  STEP: deleting the test headless service @ 05/13/24 18:59:19.248
  I0513 18:59:19.283761 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3915" for this suite. @ 05/13/24 18:59:19.295
• [35.128 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 05/13/24 18:59:19.32
  I0513 18:59:19.320917 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename pv @ 05/13/24 18:59:19.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:59:19.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:59:19.352
  STEP: Creating initial PV and PVC @ 05/13/24 18:59:19.356
  I0513 18:59:19.356692 21 pv.go:390] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-6340" @ 05/13/24 18:59:19.401
  STEP: Listing PVCs in namespace "pv-6340" @ 05/13/24 18:59:19.407
  STEP: Patching the PV "pv-6340-8wcs5" @ 05/13/24 18:59:19.421
  STEP: Patching the PVC "pvc-9k88c" @ 05/13/24 18:59:19.439
  STEP: Getting PV "pv-6340-8wcs5" @ 05/13/24 18:59:19.463
  STEP: Getting PVC "pvc-9k88c" @ 05/13/24 18:59:19.469
  STEP: Deleting PVC "pvc-9k88c" @ 05/13/24 18:59:19.472
  STEP: Confirm deletion of PVC "pvc-9k88c" @ 05/13/24 18:59:19.487
  STEP: Deleting PV "pv-6340-8wcs5" @ 05/13/24 18:59:21.598
  STEP: Confirm deletion of PV "pv-6340-8wcs5" @ 05/13/24 18:59:21.612
  STEP: Recreating another PV & PVC @ 05/13/24 18:59:23.959
  I0513 18:59:23.959664 21 pv.go:390] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-6340-2kfrx" @ 05/13/24 18:59:23.986
  STEP: Updating the PVC "pvc-smllf" @ 05/13/24 18:59:24.064
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-smllf=updated" @ 05/13/24 18:59:24.083
  STEP: Deleting PVC "pvc-smllf" via DeleteCollection @ 05/13/24 18:59:24.088
  STEP: Confirm deletion of PVC "pvc-smllf" @ 05/13/24 18:59:24.101
  STEP: Deleting PV "pv-6340-2kfrx" via DeleteCollection @ 05/13/24 18:59:26.116
  STEP: Confirm deletion of PV "pv-6340-2kfrx" @ 05/13/24 18:59:26.142
  I0513 18:59:28.157920 21 persistent_volumes.go:407] AfterEach: deleting 1 PVCs and 1 PVs...
  I0513 18:59:28.157990 21 pv.go:201] Deleting PersistentVolumeClaim "pvc-smllf"
  I0513 18:59:28.161891 21 pv.go:189] Deleting PersistentVolume "pv-6340-2kfrx"
  I0513 18:59:28.166795 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-6340" for this suite. @ 05/13/24 18:59:28.173
• [8.870 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 05/13/24 18:59:28.189
  I0513 18:59:28.189444 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename projected @ 05/13/24 18:59:28.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:59:28.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:59:28.228
  STEP: Creating configMap with name projected-configmap-test-volume-637a17ba-83d0-4c52-a951-8d6564ed7d26 @ 05/13/24 18:59:28.233
  STEP: Creating a pod to test consume configMaps @ 05/13/24 18:59:28.242
  STEP: Saw pod success @ 05/13/24 18:59:32.302
  I0513 18:59:32.306115 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-projected-configmaps-d91a520f-ce61-47f6-a0ed-9210dd2e4520 container agnhost-container: <nil>
  STEP: delete the pod @ 05/13/24 18:59:32.314
  I0513 18:59:32.334035 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6712" for this suite. @ 05/13/24 18:59:32.34
• [4.163 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 05/13/24 18:59:32.353
  I0513 18:59:32.353513 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/13/24 18:59:32.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:59:32.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:59:32.381
  I0513 18:59:32.389249 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 18:59:33.435119 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3608" for this suite. @ 05/13/24 18:59:33.442
• [1.560 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 05/13/24 18:59:33.914
  I0513 18:59:33.914079 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename pod-network-test @ 05/13/24 18:59:33.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:59:33.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:59:33.954
  STEP: Performing setup for networking test in namespace pod-network-test-4567 @ 05/13/24 18:59:33.966
  STEP: creating a selector @ 05/13/24 18:59:33.966
  STEP: Creating the service pods in kubernetes @ 05/13/24 18:59:33.966
  I0513 18:59:33.966924 21 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 05/13/24 18:59:56.385
  I0513 18:59:58.412542 21 utils.go:779] Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  I0513 18:59:58.412592 21 networking.go:42] Breadth first check of 10.42.1.8 on host 172.31.13.166...
  I0513 18:59:58.417257 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.4.69:9080/dial?request=hostname&protocol=udp&host=10.42.1.8&port=8081&tries=1'] Namespace:pod-network-test-4567 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 18:59:58.417309 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 18:59:58.418038 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 18:59:58.418163 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4567/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.4.69%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.1.8%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0513 18:59:58.548045 21 utils.go:331] Waiting for responses: map[]
  I0513 18:59:58.548216 21 utils.go:335] reached 10.42.1.8 after 0/1 tries
  I0513 18:59:58.548240 21 networking.go:42] Breadth first check of 10.42.3.10 on host 172.31.14.71...
  I0513 18:59:58.552910 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.4.69:9080/dial?request=hostname&protocol=udp&host=10.42.3.10&port=8081&tries=1'] Namespace:pod-network-test-4567 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 18:59:58.552967 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 18:59:58.554030 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 18:59:58.554832 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4567/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.4.69%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.3.10%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0513 18:59:58.661831 21 utils.go:331] Waiting for responses: map[]
  I0513 18:59:58.662070 21 utils.go:335] reached 10.42.3.10 after 0/1 tries
  I0513 18:59:58.662101 21 networking.go:42] Breadth first check of 10.42.0.19 on host 172.31.3.239...
  I0513 18:59:58.668083 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.4.69:9080/dial?request=hostname&protocol=udp&host=10.42.0.19&port=8081&tries=1'] Namespace:pod-network-test-4567 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 18:59:58.668168 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 18:59:58.669047 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 18:59:58.669165 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4567/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.4.69%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.0.19%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0513 18:59:58.773282 21 utils.go:331] Waiting for responses: map[]
  I0513 18:59:58.773357 21 utils.go:335] reached 10.42.0.19 after 0/1 tries
  I0513 18:59:58.773398 21 networking.go:42] Breadth first check of 10.42.4.68 on host 172.31.7.107...
  I0513 18:59:58.778885 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.4.69:9080/dial?request=hostname&protocol=udp&host=10.42.4.68&port=8081&tries=1'] Namespace:pod-network-test-4567 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 18:59:58.778929 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 18:59:58.779686 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 18:59:58.779987 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4567/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.4.69%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.4.68%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0513 18:59:58.879115 21 utils.go:331] Waiting for responses: map[]
  I0513 18:59:58.879260 21 utils.go:335] reached 10.42.4.68 after 0/1 tries
  I0513 18:59:58.879282 21 networking.go:53] Going to retry 0 out of 4 pods....
  I0513 18:59:58.879462 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4567" for this suite. @ 05/13/24 18:59:58.886
• [24.988 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 05/13/24 18:59:58.902
  I0513 18:59:58.902655 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename webhook @ 05/13/24 18:59:58.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:59:58.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:59:58.932
  STEP: Setting up server cert @ 05/13/24 18:59:58.979
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 18:59:59.861
  STEP: Deploying the webhook pod @ 05/13/24 19:00:00.039
  STEP: Wait for the deployment to be ready @ 05/13/24 19:00:00.071
  I0513 19:00:00.121870 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0513 19:00:02.145293 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 19, 0, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 0, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 0, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 0, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 05/13/24 19:00:04.154
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 19:00:04.182
  I0513 19:00:05.182940 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0513 19:00:05.210768 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2496-crds.webhook.example.com via the AdmissionRegistration API @ 05/13/24 19:00:05.747
  STEP: Creating a custom resource that should be mutated by the webhook @ 05/13/24 19:00:06.197
  I0513 19:00:09.215764 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1788" for this suite. @ 05/13/24 19:00:09.222
  STEP: Destroying namespace "webhook-markers-4379" for this suite. @ 05/13/24 19:00:09.235
• [10.347 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 05/13/24 19:00:09.25
  I0513 19:00:09.250315 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename security-context @ 05/13/24 19:00:09.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:00:09.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:00:09.305
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 05/13/24 19:00:09.308
  STEP: Saw pod success @ 05/13/24 19:00:13.361
  I0513 19:00:13.365729 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod security-context-ba7e96d2-8fc2-4a6d-9a48-61e70c58703e container test-container: <nil>
  STEP: delete the pod @ 05/13/24 19:00:13.374
  I0513 19:00:13.426356 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-7112" for this suite. @ 05/13/24 19:00:13.432
• [4.195 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:348
  STEP: Creating a kubernetes client @ 05/13/24 19:00:13.446
  I0513 19:00:13.446077 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename disruption @ 05/13/24 19:00:13.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:00:13.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:00:13.486
  STEP: Creating a pdb that targets all three pods in a test replica set @ 05/13/24 19:00:13.493
  STEP: Waiting for the pdb to be processed @ 05/13/24 19:00:13.517
  STEP: First trying to evict a pod which shouldn't be evictable @ 05/13/24 19:00:15.535
  STEP: Waiting for all pods to be running @ 05/13/24 19:00:15.535
  I0513 19:00:15.544609 21 disruption.go:567] pods: 0 < 3
  I0513 19:00:17.634887 21 disruption.go:578] running pods: 0 < 3
  I0513 19:00:19.541489 21 disruption.go:578] running pods: 2 < 3
  STEP: locating a running pod @ 05/13/24 19:00:21.948
  STEP: Updating the pdb to allow a pod to be evicted @ 05/13/24 19:00:21.965
  STEP: Waiting for the pdb to be processed @ 05/13/24 19:00:21.981
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 05/13/24 19:00:21.998
  STEP: Waiting for all pods to be running @ 05/13/24 19:00:21.998
  STEP: Waiting for the pdb to observed all healthy pods @ 05/13/24 19:00:22.005
  STEP: Patching the pdb to disallow a pod to be evicted @ 05/13/24 19:00:22.076
  STEP: Waiting for the pdb to be processed @ 05/13/24 19:00:22.393
  STEP: Waiting for all pods to be running @ 05/13/24 19:00:22.397
  I0513 19:00:22.401733 21 disruption.go:578] running pods: 2 < 3
  I0513 19:00:24.401826 21 disruption.go:578] running pods: 2 < 3
  STEP: locating a running pod @ 05/13/24 19:00:26.658
  STEP: Deleting the pdb to allow a pod to be evicted @ 05/13/24 19:00:26.669
  STEP: Waiting for the pdb to be deleted @ 05/13/24 19:00:26.677
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 05/13/24 19:00:26.685
  STEP: Waiting for all pods to be running @ 05/13/24 19:00:26.685
  I0513 19:00:26.712234 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2888" for this suite. @ 05/13/24 19:00:26.718
• [13.291 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 05/13/24 19:00:26.737
  I0513 19:00:26.737751 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename pods @ 05/13/24 19:00:26.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:00:26.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:00:26.777
  STEP: creating the pod @ 05/13/24 19:00:26.78
  STEP: submitting the pod to kubernetes @ 05/13/24 19:00:26.78
  STEP: verifying the pod is in kubernetes @ 05/13/24 19:00:28.829
  STEP: updating the pod @ 05/13/24 19:00:28.836
  I0513 19:00:29.350235 21 pod_client.go:141] Successfully updated pod "pod-update-4f1c8c75-bfaa-47f3-b843-3b66dea1c678"
  STEP: verifying the updated pod is in kubernetes @ 05/13/24 19:00:29.354
  I0513 19:00:29.358249 21 pods.go:391] Pod update OK
  I0513 19:00:29.358408 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2010" for this suite. @ 05/13/24 19:00:29.367
• [2.638 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 05/13/24 19:00:29.376
  I0513 19:00:29.376257 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/13/24 19:00:29.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:00:29.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:00:29.412
  I0513 19:00:29.416952 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/13/24 19:00:32.305
  I0513 19:00:32.305723 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=crd-publish-openapi-4972 --namespace=crd-publish-openapi-4972 create -f -'
  I0513 19:00:32.533716 21 builder.go:146] stderr: ""
  I0513 19:00:32.533993 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7996-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0513 19:00:32.534098 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=crd-publish-openapi-4972 --namespace=crd-publish-openapi-4972 delete e2e-test-crd-publish-openapi-7996-crds test-cr'
  I0513 19:00:32.691735 21 builder.go:146] stderr: ""
  I0513 19:00:32.691817 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7996-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0513 19:00:32.691896 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=crd-publish-openapi-4972 --namespace=crd-publish-openapi-4972 apply -f -'
  I0513 19:00:32.829855 21 builder.go:146] stderr: ""
  I0513 19:00:32.829921 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7996-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0513 19:00:32.830011 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=crd-publish-openapi-4972 --namespace=crd-publish-openapi-4972 delete e2e-test-crd-publish-openapi-7996-crds test-cr'
  I0513 19:00:32.950167 21 builder.go:146] stderr: ""
  I0513 19:00:32.950257 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7996-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 05/13/24 19:00:32.95
  I0513 19:00:32.950357 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=crd-publish-openapi-4972 explain e2e-test-crd-publish-openapi-7996-crds'
  I0513 19:00:33.052711 21 builder.go:146] stderr: ""
  I0513 19:00:33.052846 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-7996-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0513 19:00:35.297987 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4972" for this suite. @ 05/13/24 19:00:35.305
• [5.945 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 05/13/24 19:00:35.338
  I0513 19:00:35.338186 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:00:35.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:00:35.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:00:35.385
  STEP: Creating projection with secret that has name projected-secret-test-1e830a6c-b23a-409b-a4ef-a1c2bee76b15 @ 05/13/24 19:00:35.388
  STEP: Creating a pod to test consume secrets @ 05/13/24 19:00:35.406
  STEP: Saw pod success @ 05/13/24 19:00:39.449
  I0513 19:00:39.453672 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-projected-secrets-ee0c3e45-4de3-46a8-9a7a-42a8b8b2e9b3 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/13/24 19:00:39.462
  I0513 19:00:39.635875 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6131" for this suite. @ 05/13/24 19:00:39.641
• [4.316 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 05/13/24 19:00:39.654
  I0513 19:00:39.655276 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename secrets @ 05/13/24 19:00:39.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:00:39.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:00:39.745
  STEP: Creating secret with name secret-test-78f6fd5c-7a1b-42a6-8940-6666d5d1ebd5 @ 05/13/24 19:00:39.751
  STEP: Creating a pod to test consume secrets @ 05/13/24 19:00:39.773
  STEP: Saw pod success @ 05/13/24 19:00:43.855
  I0513 19:00:43.863693 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-secrets-d0cb4b55-390c-44bf-a0b8-e67386c730d4 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/13/24 19:00:44.563
  I0513 19:00:44.581570 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4382" for this suite. @ 05/13/24 19:00:44.586
• [5.460 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 05/13/24 19:00:45.115
  I0513 19:00:45.115696 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename subpath @ 05/13/24 19:00:45.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:00:45.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:00:45.155
  STEP: Setting up data @ 05/13/24 19:00:45.159
  STEP: Creating pod pod-subpath-test-configmap-b8lt @ 05/13/24 19:00:45.178
  STEP: Creating a pod to test atomic-volume-subpath @ 05/13/24 19:00:45.178
  STEP: Saw pod success @ 05/13/24 19:01:09.268
  I0513 19:01:09.274641 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-subpath-test-configmap-b8lt container test-container-subpath-configmap-b8lt: <nil>
  STEP: delete the pod @ 05/13/24 19:01:09.285
  STEP: Deleting pod pod-subpath-test-configmap-b8lt @ 05/13/24 19:01:09.312
  I0513 19:01:09.312990 21 delete.go:62] Deleting pod "pod-subpath-test-configmap-b8lt" in namespace "subpath-4272"
  I0513 19:01:09.318947 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4272" for this suite. @ 05/13/24 19:01:09.324
• [24.222 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 05/13/24 19:01:09.343
  I0513 19:01:09.343376 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename sched-preemption @ 05/13/24 19:01:09.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:01:09.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:01:09.401
  I0513 19:01:09.461235 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0513 19:02:09.468479 21 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 05/13/24 19:02:09.474
  I0513 19:02:09.474858 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename sched-preemption-path @ 05/13/24 19:02:09.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:02:09.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:02:09.519
  I0513 19:02:09.564777 21 preemption.go:818] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0513 19:02:09.577643 21 preemption.go:824] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  I0513 19:02:09.721749 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-9008" for this suite. @ 05/13/24 19:02:09.726
  I0513 19:02:09.744497 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9088" for this suite. @ 05/13/24 19:02:09.759
• [60.430 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 05/13/24 19:02:09.773
  I0513 19:02:09.773408 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename svcaccounts @ 05/13/24 19:02:09.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:02:10.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:02:10.321
  STEP: Creating ServiceAccount "e2e-sa-9468b"  @ 05/13/24 19:02:10.325
  I0513 19:02:10.341183 21 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-9468b"  @ 05/13/24 19:02:10.341
  I0513 19:02:10.354501 21 service_accounts.go:839] AutomountServiceAccountToken: true
  I0513 19:02:10.355056 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4762" for this suite. @ 05/13/24 19:02:10.36
• [0.601 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 05/13/24 19:02:10.375
  I0513 19:02:10.375971 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename csiinlinevolumes @ 05/13/24 19:02:10.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:02:10.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:02:10.411
  STEP: Creating two CSIDrivers @ 05/13/24 19:02:10.416
  STEP: Getting "inline-driver-c09ee02c-b4c1-4c7f-9590-1c13baf64159" & "inline-driver-10b2ccf6-e0e8-4964-9bc1-82a5f89ffa1f" @ 05/13/24 19:02:10.451
  STEP: Patching the CSIDriver "inline-driver-10b2ccf6-e0e8-4964-9bc1-82a5f89ffa1f" @ 05/13/24 19:02:10.458
  STEP: Updating the CSIDriver "inline-driver-10b2ccf6-e0e8-4964-9bc1-82a5f89ffa1f" @ 05/13/24 19:02:10.471
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-4657" @ 05/13/24 19:02:10.485
  STEP: Deleting CSIDriver "inline-driver-c09ee02c-b4c1-4c7f-9590-1c13baf64159" @ 05/13/24 19:02:10.489
  STEP: Confirm deletion of CSIDriver "inline-driver-c09ee02c-b4c1-4c7f-9590-1c13baf64159" @ 05/13/24 19:02:10.501
  STEP: Deleting CSIDriver "inline-driver-10b2ccf6-e0e8-4964-9bc1-82a5f89ffa1f" via DeleteCollection @ 05/13/24 19:02:10.506
  STEP: Confirm deletion of CSIDriver "inline-driver-10b2ccf6-e0e8-4964-9bc1-82a5f89ffa1f" @ 05/13/24 19:02:10.519
  I0513 19:02:10.522875 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-4657" for this suite. @ 05/13/24 19:02:10.527
• [0.169 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 05/13/24 19:02:10.547
  I0513 19:02:10.547811 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename deployment @ 05/13/24 19:02:10.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:02:10.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:02:10.585
  I0513 19:02:10.619784 21 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  I0513 19:02:15.625474 21 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/13/24 19:02:15.625
  I0513 19:02:15.626073 21 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I0513 19:02:17.630402 21 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0513 19:02:17.647012 21 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  I0513 19:02:19.668571 21 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0513 19:02:19.676590 21 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0513 19:02:19.687754 21 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0513 19:02:19.702161 21 deployment.go:313] Updating deployment test-rollover-deployment
  I0513 19:02:19.702236 21 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I0513 19:02:21.724918 21 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0513 19:02:21.731678 21 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0513 19:02:21.738937 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0513 19:02:21.739311 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 2, 17, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 2, 17, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 2, 19, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 2, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 19:02:23.927094 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0513 19:02:23.927356 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 2, 17, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 2, 17, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 2, 21, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 2, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 19:02:25.749457 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0513 19:02:25.749551 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 2, 17, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 2, 17, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 2, 21, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 2, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 19:02:27.749094 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0513 19:02:27.750036 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 2, 17, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 2, 17, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 2, 21, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 2, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 19:02:29.748485 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0513 19:02:29.748738 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 2, 17, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 2, 17, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 2, 21, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 2, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 19:02:31.749433 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0513 19:02:31.749539 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 2, 17, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 2, 17, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 2, 21, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 2, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 19:02:33.747744 21 deployment.go:94] 
  I0513 19:02:33.747812 21 deployment.go:974] Ensure that both old replica sets have no replicas
  I0513 19:02:33.758226 21 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7061",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "34cbfc5e-a074-4aeb-b5f3-31e73e00682c",
      ResourceVersion: (string) (len=5) "45303",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851223737,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851223739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851223751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851223737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851223737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851223751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851223737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-679c966bdf\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0513 19:02:33.764558 21 deployment.go:39] New ReplicaSet "test-rollover-deployment-679c966bdf" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-679c966bdf",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7061",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "94306e12-c97b-4953-8a07-00c8624174c2",
      ResourceVersion: (string) (len=5) "45293",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851223739,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "34cbfc5e-a074-4aeb-b5f3-31e73e00682c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851223739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 34 63 62 66 63  35 65 2d 61 30 37 34 2d  |\"34cbfc5e-a074-|
              00000120  34 61 65 62 2d 62 35 66  33 2d 33 31 65 37 33 65  |4aeb-b5f3-31e73e|
              00000130  30 30 36 38 32 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |00682c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851223751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0513 19:02:33.766015 21 deployment.go:44] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0513 19:02:33.770234 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7061",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1b2ce144-f82d-4e5f-a60c-f8d2d46507ae",
      ResourceVersion: (string) (len=5) "45302",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851223730,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "34cbfc5e-a074-4aeb-b5f3-31e73e00682c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851223730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851223751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  33 34 63 62 66 63 35 65  2d 61 30 37 34 2d 34 61  |34cbfc5e-a074-4a|
              000000c0  65 62 2d 62 35 66 33 2d  33 31 65 37 33 65 30 30  |eb-b5f3-31e73e00|
              000000d0  36 38 32 63 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |682c\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851223751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0513 19:02:33.772048 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-65bd487b4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7061",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "620476d7-431e-425f-b90d-039f5b1adee4",
      ResourceVersion: (string) (len=5) "45236",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851223737,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "34cbfc5e-a074-4aeb-b5f3-31e73e00682c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851223739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 34 63 62 66 63  35 65 2d 61 30 37 34 2d  |\"34cbfc5e-a074-|
              00000120  34 61 65 62 2d 62 35 66  33 2d 33 31 65 37 33 65  |4aeb-b5f3-31e73e|
              00000130  30 30 36 38 32 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |00682c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851223739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0513 19:02:33.779373 21 deployment.go:67] Pod "test-rollover-deployment-679c966bdf-q585f" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-679c966bdf-q585f",
      GenerateName: (string) (len=36) "test-rollover-deployment-679c966bdf-",
      Namespace: (string) (len=15) "deployment-7061",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c86a5c17-1268-4354-85db-b24e19e469e5",
      ResourceVersion: (string) (len=5) "45251",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851223739,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "52fc2fc4b932529e9e64f4bb8b0bc6d6e17b9578c58b4e0b05240371c4dd5cca",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.4.79/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.4.79/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-679c966bdf",
          UID: (types.UID) (len=36) "94306e12-c97b-4953-8a07-00c8624174c2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851223739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 34  33 30 36 65 31 32 2d 63  |d\":\"94306e12-c|
              00000090  39 37 62 2d 34 39 35 33  2d 38 61 30 37 2d 30 30  |97b-4953-8a07-00|
              000000a0  63 38 36 32 34 31 37 34  63 32 5c 22 7d 22 3a 7b  |c8624174c2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851223740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851223741,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 34 2e 37 39  5c 22 7d 22 3a 7b 22 2e  |.42.4.79\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nj4lt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nj4lt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-7-107.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851223741,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851223739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851223741,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851223741,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851223739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.7.107",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.7.107"
        }
      },
      PodIP: (string) (len=10) "10.42.4.79",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.4.79"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851223739,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851223741,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://b9b4d9c4bfe7afd1649c372d11aec950995e2415a84d19e241c59971bb356ae2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:02:33.785067 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7061" for this suite. @ 05/13/24 19:02:33.79
• [23.255 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 05/13/24 19:02:33.803
  I0513 19:02:33.803434 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename var-expansion @ 05/13/24 19:02:33.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:02:33.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:02:33.847
  STEP: Creating a pod to test substitution in container's args @ 05/13/24 19:02:33.85
  STEP: Saw pod success @ 05/13/24 19:02:37.879
  I0513 19:02:37.883789 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod var-expansion-b79c0dd1-7df9-407b-b542-03ee94d619bc container dapi-container: <nil>
  STEP: delete the pod @ 05/13/24 19:02:38.052
  I0513 19:02:38.662245 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5278" for this suite. @ 05/13/24 19:02:38.666
• [4.874 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 05/13/24 19:02:38.677
  I0513 19:02:38.677596 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename apf @ 05/13/24 19:02:38.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:02:38.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:02:38.72
  STEP: getting /apis @ 05/13/24 19:02:38.724
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 05/13/24 19:02:38.73
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 05/13/24 19:02:38.732
  STEP: creating @ 05/13/24 19:02:38.733
  STEP: getting @ 05/13/24 19:02:38.796
  STEP: listing @ 05/13/24 19:02:38.819
  STEP: watching @ 05/13/24 19:02:38.832
  I0513 19:02:38.832746 21 flowcontrol.go:394] starting watch
  STEP: patching @ 05/13/24 19:02:38.836
  STEP: updating @ 05/13/24 19:02:38.849
  I0513 19:02:38.864187 21 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 05/13/24 19:02:38.864
  STEP: patching /status @ 05/13/24 19:02:38.869
  STEP: updating /status @ 05/13/24 19:02:38.886
  STEP: deleting @ 05/13/24 19:02:38.917
  STEP: deleting a collection @ 05/13/24 19:02:38.956
  I0513 19:02:39.795190 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-1914" for this suite. @ 05/13/24 19:02:39.801
• [1.134 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 05/13/24 19:02:39.811
  I0513 19:02:39.811710 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename replication-controller @ 05/13/24 19:02:39.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:02:39.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:02:39.862
  STEP: Creating replication controller my-hostname-basic-562c67bc-aec2-42ad-9f6e-08f7f26c7691 @ 05/13/24 19:02:39.865
  I0513 19:02:39.891055 21 resource.go:87] Pod name my-hostname-basic-562c67bc-aec2-42ad-9f6e-08f7f26c7691: Found 0 pods out of 1
  I0513 19:02:44.898291 21 resource.go:87] Pod name my-hostname-basic-562c67bc-aec2-42ad-9f6e-08f7f26c7691: Found 1 pods out of 1
  I0513 19:02:44.898346 21 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-562c67bc-aec2-42ad-9f6e-08f7f26c7691" are running
  I0513 19:02:44.904696 21 rc.go:523] Pod "my-hostname-basic-562c67bc-aec2-42ad-9f6e-08f7f26c7691-7tsns" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-13 19:02:41 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-13 19:02:39 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-13 19:02:41 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-13 19:02:41 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-13 19:02:39 +0000 UTC Reason: Message:}])
  I0513 19:02:44.904749 21 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 05/13/24 19:02:44.904
  I0513 19:02:44.931771 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8647" for this suite. @ 05/13/24 19:02:44.946
• [5.152 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 05/13/24 19:02:44.964
  I0513 19:02:44.964074 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename runtimeclass @ 05/13/24 19:02:44.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:02:45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:02:45.007
  STEP: Deleting RuntimeClass runtimeclass-3733-delete-me @ 05/13/24 19:02:45.033
  STEP: Waiting for the RuntimeClass to disappear @ 05/13/24 19:02:45.04
  I0513 19:02:45.056241 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3733" for this suite. @ 05/13/24 19:02:45.062
• [0.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 05/13/24 19:02:45.071
  I0513 19:02:45.071303 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename dns @ 05/13/24 19:02:45.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:02:45.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:02:45.101
  STEP: Creating a test headless service @ 05/13/24 19:02:45.107
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5302.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-5302.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5302.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-5302.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5302.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5302.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5302.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-5302.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5302.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-5302.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 92.194.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.194.92_udp@PTR;check="$$(dig +tcp +noall +answer +search 92.194.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.194.92_tcp@PTR;sleep 1; done
   @ 05/13/24 19:02:45.151
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5302.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5302.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5302.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5302.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5302.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5302.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5302.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-5302.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5302.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-5302.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 92.194.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.194.92_udp@PTR;check="$$(dig +tcp +noall +answer +search 92.194.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.194.92_tcp@PTR;sleep 1; done
   @ 05/13/24 19:02:45.152
  STEP: creating a pod to probe DNS @ 05/13/24 19:02:45.152
  STEP: submitting the pod to kubernetes @ 05/13/24 19:02:45.153
  STEP: retrieving the pod @ 05/13/24 19:02:49.211
  STEP: looking for the results for each expected name from probers @ 05/13/24 19:02:49.215
  I0513 19:02:49.228001 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:02:49.239992 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:02:49.245574 21 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:02:49.253417 21 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:02:49.274786 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:02:49.279689 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:02:49.283841 21 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:02:49.287629 21 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:02:49.304729 21 dns_common.go:489] Lookups using dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd failed for: [wheezy_udp@dns-test-service.dns-5302.svc.cluster.local wheezy_tcp@dns-test-service.dns-5302.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local jessie_udp@dns-test-service.dns-5302.svc.cluster.local jessie_tcp@dns-test-service.dns-5302.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local]

  I0513 19:02:49.313219 21 dns_common.go:495] Pod client logs for webserver: 
  I0513 19:02:49.320236 21 dns_common.go:495] Pod client logs for querier: 
  I0513 19:02:49.328219 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0513 19:02:54.227942 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:02:54.241420 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:02:54.245835 21 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:02:54.251408 21 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:02:54.282079 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:02:54.286811 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:02:54.291379 21 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:02:54.296288 21 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:02:54.316088 21 dns_common.go:489] Lookups using dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd failed for: [wheezy_udp@dns-test-service.dns-5302.svc.cluster.local wheezy_tcp@dns-test-service.dns-5302.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local jessie_udp@dns-test-service.dns-5302.svc.cluster.local jessie_tcp@dns-test-service.dns-5302.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local]

  I0513 19:02:54.323776 21 dns_common.go:495] Pod client logs for webserver: 
  I0513 19:02:54.332374 21 dns_common.go:495] Pod client logs for querier: 
  I0513 19:02:54.340762 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0513 19:02:59.224425 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:02:59.229271 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:02:59.233481 21 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:02:59.238332 21 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:02:59.268339 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:02:59.273863 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:02:59.281457 21 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:02:59.287310 21 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:02:59.321723 21 dns_common.go:489] Lookups using dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd failed for: [wheezy_udp@dns-test-service.dns-5302.svc.cluster.local wheezy_tcp@dns-test-service.dns-5302.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local jessie_udp@dns-test-service.dns-5302.svc.cluster.local jessie_tcp@dns-test-service.dns-5302.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local]

  I0513 19:02:59.330433 21 dns_common.go:495] Pod client logs for webserver: 
  I0513 19:02:59.338955 21 dns_common.go:495] Pod client logs for querier: 
  I0513 19:02:59.347816 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0513 19:03:04.225171 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:03:04.235872 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:03:04.242527 21 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:03:04.250059 21 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:03:04.282939 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:03:04.290375 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:03:04.303694 21 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:03:04.309669 21 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:03:04.334215 21 dns_common.go:489] Lookups using dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd failed for: [wheezy_udp@dns-test-service.dns-5302.svc.cluster.local wheezy_tcp@dns-test-service.dns-5302.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local jessie_udp@dns-test-service.dns-5302.svc.cluster.local jessie_tcp@dns-test-service.dns-5302.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local]

  I0513 19:03:04.342270 21 dns_common.go:495] Pod client logs for webserver: 
  I0513 19:03:04.352800 21 dns_common.go:495] Pod client logs for querier: 
  I0513 19:03:04.360198 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0513 19:03:09.228478 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:03:09.234377 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:03:09.245111 21 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:03:09.255793 21 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:03:09.287906 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:03:09.294801 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:03:09.299779 21 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:03:09.315970 21 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:03:09.341179 21 dns_common.go:489] Lookups using dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd failed for: [wheezy_udp@dns-test-service.dns-5302.svc.cluster.local wheezy_tcp@dns-test-service.dns-5302.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local jessie_udp@dns-test-service.dns-5302.svc.cluster.local jessie_tcp@dns-test-service.dns-5302.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local]

  I0513 19:03:09.351584 21 dns_common.go:495] Pod client logs for webserver: 
  I0513 19:03:09.363937 21 dns_common.go:495] Pod client logs for querier: 
  I0513 19:03:09.372906 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0513 19:03:14.222614 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:03:14.227121 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:03:14.232012 21 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:03:14.236918 21 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:03:14.260709 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:03:14.265909 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:03:14.274147 21 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:03:14.279138 21 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local from pod dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd: the server could not find the requested resource (get pods dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd)
  I0513 19:03:14.311886 21 dns_common.go:489] Lookups using dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd failed for: [wheezy_udp@dns-test-service.dns-5302.svc.cluster.local wheezy_tcp@dns-test-service.dns-5302.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local jessie_udp@dns-test-service.dns-5302.svc.cluster.local jessie_tcp@dns-test-service.dns-5302.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-5302.svc.cluster.local]

  I0513 19:03:14.322960 21 dns_common.go:495] Pod client logs for webserver: 
  I0513 19:03:14.331913 21 dns_common.go:495] Pod client logs for querier: 
  I0513 19:03:14.341007 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0513 19:03:19.316359 21 dns_common.go:527] DNS probes using dns-5302/dns-test-302b1dfa-3de2-4b91-9529-ac3dbd55d4dd succeeded

  STEP: deleting the pod @ 05/13/24 19:03:19.316
  STEP: deleting the test service @ 05/13/24 19:03:19.383
  STEP: deleting the test headless service @ 05/13/24 19:03:19.464
  I0513 19:03:19.497162 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5302" for this suite. @ 05/13/24 19:03:19.506
• [35.174 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 05/13/24 19:03:20.245
  I0513 19:03:20.245988 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:03:20.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:03:20.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:03:20.302
  STEP: Creating projection with secret that has name projected-secret-test-map-b0a2abb7-16c9-4134-9e81-ba97cff899c8 @ 05/13/24 19:03:20.307
  STEP: Creating a pod to test consume secrets @ 05/13/24 19:03:20.328
  STEP: Saw pod success @ 05/13/24 19:03:24.368
  I0513 19:03:24.373113 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-projected-secrets-38c698eb-f858-41dc-ab19-d396b50b2e62 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/13/24 19:03:24.383
  I0513 19:03:24.425418 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7679" for this suite. @ 05/13/24 19:03:24.437
• [4.207 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 05/13/24 19:03:24.453
  I0513 19:03:24.453444 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename kubelet-test @ 05/13/24 19:03:24.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:03:24.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:03:24.545
  I0513 19:03:26.598534 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9600" for this suite. @ 05/13/24 19:03:26.605
• [2.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 05/13/24 19:03:26.619
  I0513 19:03:26.619817 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename runtimeclass @ 05/13/24 19:03:26.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:03:26.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:03:26.652
  I0513 19:03:26.716934 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1960" for this suite. @ 05/13/24 19:03:26.738
• [0.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 05/13/24 19:03:26.758
  I0513 19:03:26.758770 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename configmap @ 05/13/24 19:03:26.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:03:27.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:03:27.282
  STEP: Creating configMap with name configmap-test-volume-45be0812-8ace-4af9-8bca-3b9b2b79e690 @ 05/13/24 19:03:27.288
  STEP: Creating a pod to test consume configMaps @ 05/13/24 19:03:27.299
  STEP: Saw pod success @ 05/13/24 19:03:31.326
  I0513 19:03:31.331721 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-configmaps-4a324813-e167-4918-b7a2-07e3e3200152 container configmap-volume-test: <nil>
  STEP: delete the pod @ 05/13/24 19:03:31.34
  I0513 19:03:31.363254 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3812" for this suite. @ 05/13/24 19:03:31.368
• [4.617 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 05/13/24 19:03:31.376
  I0513 19:03:31.376327 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename cronjob @ 05/13/24 19:03:31.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:03:31.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:03:31.412
  STEP: Creating a ReplaceConcurrent cronjob @ 05/13/24 19:03:31.416
  STEP: Ensuring a job is scheduled @ 05/13/24 19:03:31.434
  STEP: Ensuring exactly one is scheduled @ 05/13/24 19:04:01.439
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 05/13/24 19:04:01.444
  STEP: Ensuring the job is replaced with a new one @ 05/13/24 19:04:01.447
  STEP: Removing cronjob @ 05/13/24 19:05:01.512
  I0513 19:05:01.524662 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-431" for this suite. @ 05/13/24 19:05:01.53
• [90.189 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 05/13/24 19:05:01.569
  I0513 19:05:01.570028 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename resourcequota @ 05/13/24 19:05:01.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:05:01.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:05:01.634
  STEP: Discovering how many secrets are in namespace by default @ 05/13/24 19:05:01.638
  STEP: Counting existing ResourceQuota @ 05/13/24 19:05:06.643
  STEP: Creating a ResourceQuota @ 05/13/24 19:05:11.65
  STEP: Ensuring resource quota status is calculated @ 05/13/24 19:05:11.664
  STEP: Creating a Secret @ 05/13/24 19:05:13.676
  STEP: Ensuring resource quota status captures secret creation @ 05/13/24 19:05:13.703
  STEP: Deleting a secret @ 05/13/24 19:05:15.71
  STEP: Ensuring resource quota status released usage @ 05/13/24 19:05:15.725
  I0513 19:05:17.729854 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3414" for this suite. @ 05/13/24 19:05:17.735
• [16.177 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 05/13/24 19:05:17.747
  I0513 19:05:17.747723 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename replication-controller @ 05/13/24 19:05:17.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:05:17.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:05:17.788
  STEP: Given a ReplicationController is created @ 05/13/24 19:05:17.794
  STEP: When the matched label of one of its pods change @ 05/13/24 19:05:17.81
  I0513 19:05:17.815373 21 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  I0513 19:05:22.822429 21 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 05/13/24 19:05:23.046
  I0513 19:05:23.053385 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1667" for this suite. @ 05/13/24 19:05:23.069
• [5.335 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2218
  STEP: Creating a kubernetes client @ 05/13/24 19:05:23.083
  I0513 19:05:23.083514 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename services @ 05/13/24 19:05:23.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:05:23.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:05:23.135
  STEP: creating service in namespace services-1371 @ 05/13/24 19:05:23.142
  STEP: creating service affinity-nodeport in namespace services-1371 @ 05/13/24 19:05:23.142
  STEP: creating replication controller affinity-nodeport in namespace services-1371 @ 05/13/24 19:05:23.189
  I0513 19:05:23.209218      21 runners.go:198] Created replication controller with name: affinity-nodeport, namespace: services-1371, replica count: 3
  I0513 19:05:26.260811      21 runners.go:198] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0513 19:05:26.272931 21 resource.go:361] Creating new exec pod
  I0513 19:05:31.344540 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-1371 exec execpod-affinityq794d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0513 19:05:31.632364 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I0513 19:05:31.632433 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 19:05:31.632561 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-1371 exec execpod-affinityq794d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.125.108 80'
  I0513 19:05:31.814879 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.125.108 80\nConnection to 10.43.125.108 80 port [tcp/http] succeeded!\n"
  I0513 19:05:31.815034 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 19:05:31.815432 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-1371 exec execpod-affinityq794d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.3.239 31529'
  I0513 19:05:32.008739 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.3.239 31529\nConnection to 172.31.3.239 31529 port [tcp/*] succeeded!\n"
  I0513 19:05:32.008824 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 19:05:32.008925 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-1371 exec execpod-affinityq794d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.13.166 31529'
  I0513 19:05:32.455872 21 builder.go:146] stderr: "+ + echonc -v -t hostName -w\n 2 172.31.13.166 31529\nConnection to 172.31.13.166 31529 port [tcp/*] succeeded!\n"
  I0513 19:05:32.455950 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 19:05:32.456051 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-1371 exec execpod-affinityq794d -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.13.166:31529/ ; done'
  I0513 19:05:32.830627 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31529/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31529/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31529/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31529/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31529/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31529/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31529/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31529/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31529/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31529/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31529/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31529/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31529/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31529/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31529/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31529/\n"
  I0513 19:05:32.830700 21 builder.go:147] stdout: "\naffinity-nodeport-5lldb\naffinity-nodeport-5lldb\naffinity-nodeport-5lldb\naffinity-nodeport-5lldb\naffinity-nodeport-5lldb\naffinity-nodeport-5lldb\naffinity-nodeport-5lldb\naffinity-nodeport-5lldb\naffinity-nodeport-5lldb\naffinity-nodeport-5lldb\naffinity-nodeport-5lldb\naffinity-nodeport-5lldb\naffinity-nodeport-5lldb\naffinity-nodeport-5lldb\naffinity-nodeport-5lldb\naffinity-nodeport-5lldb"
  I0513 19:05:32.830726 21 service.go:242] Received response from host: affinity-nodeport-5lldb
  I0513 19:05:32.830743 21 service.go:242] Received response from host: affinity-nodeport-5lldb
  I0513 19:05:32.830761 21 service.go:242] Received response from host: affinity-nodeport-5lldb
  I0513 19:05:32.830776 21 service.go:242] Received response from host: affinity-nodeport-5lldb
  I0513 19:05:32.830792 21 service.go:242] Received response from host: affinity-nodeport-5lldb
  I0513 19:05:32.830805 21 service.go:242] Received response from host: affinity-nodeport-5lldb
  I0513 19:05:32.830820 21 service.go:242] Received response from host: affinity-nodeport-5lldb
  I0513 19:05:32.830834 21 service.go:242] Received response from host: affinity-nodeport-5lldb
  I0513 19:05:32.830849 21 service.go:242] Received response from host: affinity-nodeport-5lldb
  I0513 19:05:32.830862 21 service.go:242] Received response from host: affinity-nodeport-5lldb
  I0513 19:05:32.830875 21 service.go:242] Received response from host: affinity-nodeport-5lldb
  I0513 19:05:32.830888 21 service.go:242] Received response from host: affinity-nodeport-5lldb
  I0513 19:05:32.830918 21 service.go:242] Received response from host: affinity-nodeport-5lldb
  I0513 19:05:32.830954 21 service.go:242] Received response from host: affinity-nodeport-5lldb
  I0513 19:05:32.830968 21 service.go:242] Received response from host: affinity-nodeport-5lldb
  I0513 19:05:32.830978 21 service.go:242] Received response from host: affinity-nodeport-5lldb
  I0513 19:05:32.831102 21 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-1371, will wait for the garbage collector to delete the pods @ 05/13/24 19:05:32.873
  I0513 19:05:33.343303 21 resources.go:139] Deleting ReplicationController affinity-nodeport took: 409.928216ms
  I0513 19:05:33.447578 21 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 104.272111ms
  I0513 19:05:37.111637 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1371" for this suite. @ 05/13/24 19:05:37.116
• [14.046 seconds]
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 05/13/24 19:05:37.129
  I0513 19:05:37.129676 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename downward-api @ 05/13/24 19:05:37.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:05:37.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:05:37.17
  STEP: Creating a pod to test downward api env vars @ 05/13/24 19:05:37.176
  STEP: Saw pod success @ 05/13/24 19:05:41.228
  I0513 19:05:41.231627 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod downward-api-e342394a-ea37-4c4e-8a5d-304e402f7713 container dapi-container: <nil>
  STEP: delete the pod @ 05/13/24 19:05:41.247
  I0513 19:05:41.274032 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-256" for this suite. @ 05/13/24 19:05:41.278
• [4.156 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:397
  STEP: Creating a kubernetes client @ 05/13/24 19:05:41.286
  I0513 19:05:41.286689 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename kubectl @ 05/13/24 19:05:41.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:05:41.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:05:41.323
  STEP: creating all guestbook components @ 05/13/24 19:05:41.327
  I0513 19:05:41.327170 21 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0513 19:05:41.327777 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8150 create -f -'
  I0513 19:05:41.522947 21 builder.go:146] stderr: ""
  I0513 19:05:41.522996 21 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0513 19:05:41.523061 21 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0513 19:05:41.523209 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8150 create -f -'
  I0513 19:05:41.691249 21 builder.go:146] stderr: ""
  I0513 19:05:41.691310 21 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0513 19:05:41.691648 21 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0513 19:05:41.691805 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8150 create -f -'
  I0513 19:05:41.885762 21 builder.go:146] stderr: ""
  I0513 19:05:41.885811 21 builder.go:147] stdout: "service/frontend created\n"
  I0513 19:05:41.885972 21 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0513 19:05:41.886177 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8150 create -f -'
  I0513 19:05:42.033107 21 builder.go:146] stderr: ""
  I0513 19:05:42.033318 21 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0513 19:05:42.033414 21 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0513 19:05:42.033585 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8150 create -f -'
  I0513 19:05:42.185473 21 builder.go:146] stderr: ""
  I0513 19:05:42.185516 21 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0513 19:05:42.185684 21 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0513 19:05:42.185962 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8150 create -f -'
  I0513 19:05:42.367529 21 builder.go:146] stderr: ""
  I0513 19:05:42.367663 21 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 05/13/24 19:05:42.367
  I0513 19:05:42.367893 21 kubectl.go:2271] Waiting for all frontend pods to be Running.
  I0513 19:05:52.425235 21 kubectl.go:2275] Waiting for frontend to serve content.
  I0513 19:05:52.446353 21 kubectl.go:2280] Trying to add a new entry to the guestbook.
  I0513 19:05:52.468579 21 kubectl.go:2285] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 05/13/24 19:05:52.49
  I0513 19:05:52.491427 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8150 delete --grace-period=0 --force -f -'
  I0513 19:05:52.658865 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0513 19:05:52.658912 21 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 05/13/24 19:05:52.659
  I0513 19:05:52.659413 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8150 delete --grace-period=0 --force -f -'
  I0513 19:05:52.792093 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0513 19:05:52.792159 21 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 05/13/24 19:05:52.792
  I0513 19:05:52.792441 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8150 delete --grace-period=0 --force -f -'
  I0513 19:05:52.928884 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0513 19:05:52.928944 21 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 05/13/24 19:05:52.929
  I0513 19:05:52.929212 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8150 delete --grace-period=0 --force -f -'
  I0513 19:05:53.028334 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0513 19:05:53.028394 21 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 05/13/24 19:05:53.028
  I0513 19:05:53.028640 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8150 delete --grace-period=0 --force -f -'
  I0513 19:05:53.140983 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0513 19:05:53.141037 21 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 05/13/24 19:05:53.141
  I0513 19:05:53.141197 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8150 delete --grace-period=0 --force -f -'
  I0513 19:05:54.336015 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0513 19:05:54.336070 21 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0513 19:05:54.336178 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8150" for this suite. @ 05/13/24 19:05:54.351
• [13.131 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 05/13/24 19:05:54.418
  I0513 19:05:54.418143 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename apf @ 05/13/24 19:05:54.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:05:54.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:05:54.748
  STEP: getting /apis @ 05/13/24 19:05:54.752
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 05/13/24 19:05:54.759
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 05/13/24 19:05:54.761
  STEP: creating @ 05/13/24 19:05:54.762
  STEP: getting @ 05/13/24 19:05:54.825
  STEP: listing @ 05/13/24 19:05:54.843
  STEP: watching @ 05/13/24 19:05:54.855
  I0513 19:05:54.855109 21 flowcontrol.go:620] starting watch
  STEP: patching @ 05/13/24 19:05:54.865
  STEP: updating @ 05/13/24 19:05:54.88
  I0513 19:05:54.912418 21 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 05/13/24 19:05:54.912
  STEP: patching /status @ 05/13/24 19:05:54.926
  STEP: updating /status @ 05/13/24 19:05:54.95
  STEP: deleting @ 05/13/24 19:05:55.617
  STEP: deleting a collection @ 05/13/24 19:05:55.671
  I0513 19:05:55.756903 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-7491" for this suite. @ 05/13/24 19:05:55.763
• [1.358 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 05/13/24 19:05:55.776
  I0513 19:05:55.776746 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename crd-webhook @ 05/13/24 19:05:55.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:05:55.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:05:55.821
  STEP: Setting up server cert @ 05/13/24 19:05:55.825
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/13/24 19:05:56.455
  STEP: Deploying the custom resource conversion webhook pod @ 05/13/24 19:05:56.467
  STEP: Wait for the deployment to be ready @ 05/13/24 19:05:56.498
  I0513 19:05:56.530564 21 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/13/24 19:05:58.562
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 19:05:58.59
  I0513 19:05:59.591124 21 util.go:427] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0513 19:05:59.612636 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Creating a v1 custom resource @ 05/13/24 19:06:02.219
  STEP: Create a v2 custom resource @ 05/13/24 19:06:02.268
  STEP: List CRs in v1 @ 05/13/24 19:06:02.309
  STEP: List CRs in v2 @ 05/13/24 19:06:02.32
  I0513 19:06:02.984728 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-6073" for this suite. @ 05/13/24 19:06:03.012
• [7.272 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 05/13/24 19:06:03.05
  I0513 19:06:03.050507 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename podtemplate @ 05/13/24 19:06:03.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:06:03.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:06:03.101
  STEP: Create set of pod templates @ 05/13/24 19:06:03.106
  I0513 19:06:03.123363 21 podtemplates.go:143] created test-podtemplate-1
  I0513 19:06:03.139834 21 podtemplates.go:143] created test-podtemplate-2
  I0513 19:06:03.151693 21 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 05/13/24 19:06:03.151
  STEP: delete collection of pod templates @ 05/13/24 19:06:03.155
  I0513 19:06:03.155330 21 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 05/13/24 19:06:03.199
  I0513 19:06:03.199312 21 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0513 19:06:03.204385 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4030" for this suite. @ 05/13/24 19:06:03.208
• [0.182 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 05/13/24 19:06:03.233
  I0513 19:06:03.234070 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename downward-api @ 05/13/24 19:06:03.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:06:03.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:06:03.273
  STEP: Creating a pod to test downward API volume plugin @ 05/13/24 19:06:03.276
  STEP: Saw pod success @ 05/13/24 19:06:07.323
  I0513 19:06:07.327755 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod downwardapi-volume-bfdcb485-3299-4511-9780-9e0d41a9ce15 container client-container: <nil>
  STEP: delete the pod @ 05/13/24 19:06:07.335
  I0513 19:06:07.358609 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7386" for this suite. @ 05/13/24 19:06:07.365
• [4.146 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 05/13/24 19:06:07.381
  I0513 19:06:07.381399 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename webhook @ 05/13/24 19:06:07.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:06:07.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:06:07.413
  STEP: Setting up server cert @ 05/13/24 19:06:07.455
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 19:06:07.67
  STEP: Deploying the webhook pod @ 05/13/24 19:06:07.678
  STEP: Wait for the deployment to be ready @ 05/13/24 19:06:07.709
  I0513 19:06:07.720685 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/13/24 19:06:09.736
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 19:06:09.765
  I0513 19:06:10.765618 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 05/13/24 19:06:10.778
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 05/13/24 19:06:10.814
  STEP: Creating a dummy validating-webhook-configuration object @ 05/13/24 19:06:10.842
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 05/13/24 19:06:10.861
  STEP: Creating a dummy mutating-webhook-configuration object @ 05/13/24 19:06:10.872
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 05/13/24 19:06:10.887
  I0513 19:06:11.116416 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1445" for this suite. @ 05/13/24 19:06:11.122
  STEP: Destroying namespace "webhook-markers-7440" for this suite. @ 05/13/24 19:06:11.145
• [3.793 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 05/13/24 19:06:11.177
  I0513 19:06:11.177218 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename tables @ 05/13/24 19:06:11.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:06:11.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:06:11.223
  I0513 19:06:11.230447 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-95" for this suite. @ 05/13/24 19:06:11.235
• [0.071 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1759
  STEP: Creating a kubernetes client @ 05/13/24 19:06:11.248
  I0513 19:06:11.248772 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename kubectl @ 05/13/24 19:06:11.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:06:11.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:06:11.286
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/13/24 19:06:11.29
  I0513 19:06:11.290571 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-7430 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0513 19:06:11.383422 21 builder.go:146] stderr: ""
  I0513 19:06:11.383537 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 05/13/24 19:06:11.383
  I0513 19:06:11.387775 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-7430 delete pods e2e-test-httpd-pod'
  I0513 19:06:12.602940 21 builder.go:146] stderr: ""
  I0513 19:06:12.603098 21 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0513 19:06:12.603215 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7430" for this suite. @ 05/13/24 19:06:12.611
• [1.382 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 05/13/24 19:06:12.63
  I0513 19:06:12.630901 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename emptydir @ 05/13/24 19:06:12.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:06:12.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:06:12.669
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 05/13/24 19:06:12.672
  STEP: Saw pod success @ 05/13/24 19:06:16.711
  I0513 19:06:16.718329 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-8243c3ba-3f8e-40ea-b2c4-cb47acd20bdb container test-container: <nil>
  STEP: delete the pod @ 05/13/24 19:06:16.734
  I0513 19:06:16.770023 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4089" for this suite. @ 05/13/24 19:06:16.775
• [4.158 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 05/13/24 19:06:16.789
  I0513 19:06:16.789660 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 05/13/24 19:06:16.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:06:16.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:06:16.832
  STEP: creating a target pod @ 05/13/24 19:06:16.836
  STEP: adding an ephemeral container @ 05/13/24 19:06:18.886
  STEP: checking pod container endpoints @ 05/13/24 19:06:23.284
  I0513 19:06:23.284587 21 exec_util.go:55] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-8578 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 19:06:23.284616 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 19:06:23.285399 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 19:06:23.285505 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-8578/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0513 19:06:23.377911 21 exec_util.go:106] Exec stderr: ""
  I0513 19:06:23.388433 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-8578" for this suite. @ 05/13/24 19:06:23.395
• [6.618 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 05/13/24 19:06:23.409
  I0513 19:06:23.409635 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename webhook @ 05/13/24 19:06:23.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:06:23.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:06:23.461
  STEP: Setting up server cert @ 05/13/24 19:06:23.538
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 19:06:24.069
  STEP: Deploying the webhook pod @ 05/13/24 19:06:24.277
  STEP: Wait for the deployment to be ready @ 05/13/24 19:06:24.463
  I0513 19:06:24.480794 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0513 19:06:26.498304 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 19, 6, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 6, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 6, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 6, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 05/13/24 19:06:28.503
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 19:06:28.524
  I0513 19:06:29.524883 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 05/13/24 19:06:29.532
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 05/13/24 19:06:29.56
  STEP: Creating a configMap that should not be mutated @ 05/13/24 19:06:29.569
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 05/13/24 19:06:29.585
  STEP: Creating a configMap that should be mutated @ 05/13/24 19:06:29.594
  I0513 19:06:29.730227 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9180" for this suite. @ 05/13/24 19:06:29.775
  STEP: Destroying namespace "webhook-markers-6076" for this suite. @ 05/13/24 19:06:29.792
• [6.392 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 05/13/24 19:06:29.807
  I0513 19:06:29.807843 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename field-validation @ 05/13/24 19:06:29.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:06:29.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:06:29.843
  I0513 19:06:29.849185 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 19:06:33.110768 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-918" for this suite. @ 05/13/24 19:06:33.116
• [3.326 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 05/13/24 19:06:33.133
  I0513 19:06:33.133977 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename replicaset @ 05/13/24 19:06:33.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:06:33.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:06:33.176
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 05/13/24 19:06:33.181
  STEP: When a replicaset with a matching selector is created @ 05/13/24 19:06:35.236
  STEP: Then the orphan pod is adopted @ 05/13/24 19:06:35.257
  STEP: When the matched label of one of its pods change @ 05/13/24 19:06:36.269
  I0513 19:06:36.273058 21 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 05/13/24 19:06:36.296
  I0513 19:06:37.318410 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7813" for this suite. @ 05/13/24 19:06:37.325
• [4.211 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 05/13/24 19:06:37.345
  I0513 19:06:37.345360 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename emptydir-wrapper @ 05/13/24 19:06:37.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:06:37.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:06:37.391
  STEP: Creating 50 configmaps @ 05/13/24 19:06:37.732
  STEP: Creating RC which spawns configmap-volume pods @ 05/13/24 19:06:39.576
  I0513 19:06:39.607455 21 resource.go:87] Pod name wrapped-volume-race-9d8ce856-6a32-4aae-ab2b-ceab096302ae: Found 0 pods out of 5
  I0513 19:06:44.621069 21 resource.go:87] Pod name wrapped-volume-race-9d8ce856-6a32-4aae-ab2b-ceab096302ae: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/13/24 19:06:44.621
  STEP: Creating RC which spawns configmap-volume pods @ 05/13/24 19:06:44.655
  I0513 19:06:44.682137 21 resource.go:87] Pod name wrapped-volume-race-bd71eb54-3694-4b11-813a-23b61a0b630c: Found 0 pods out of 5
  I0513 19:06:49.694362 21 resource.go:87] Pod name wrapped-volume-race-bd71eb54-3694-4b11-813a-23b61a0b630c: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/13/24 19:06:49.694
  STEP: Creating RC which spawns configmap-volume pods @ 05/13/24 19:06:51.733
  I0513 19:06:51.762257 21 resource.go:87] Pod name wrapped-volume-race-d4eefe43-8be7-48d0-ade6-00799ea84f89: Found 0 pods out of 5
  I0513 19:06:56.772151 21 resource.go:87] Pod name wrapped-volume-race-d4eefe43-8be7-48d0-ade6-00799ea84f89: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/13/24 19:06:56.772
  STEP: deleting ReplicationController wrapped-volume-race-d4eefe43-8be7-48d0-ade6-00799ea84f89 in namespace emptydir-wrapper-9543, will wait for the garbage collector to delete the pods @ 05/13/24 19:06:56.798
  I0513 19:06:56.874221 21 resources.go:139] Deleting ReplicationController wrapped-volume-race-d4eefe43-8be7-48d0-ade6-00799ea84f89 took: 19.029298ms
  I0513 19:06:57.474933 21 resources.go:163] Terminating ReplicationController wrapped-volume-race-d4eefe43-8be7-48d0-ade6-00799ea84f89 pods took: 600.710393ms
  STEP: deleting ReplicationController wrapped-volume-race-bd71eb54-3694-4b11-813a-23b61a0b630c in namespace emptydir-wrapper-9543, will wait for the garbage collector to delete the pods @ 05/13/24 19:07:02.875
  I0513 19:07:02.941546 21 resources.go:139] Deleting ReplicationController wrapped-volume-race-bd71eb54-3694-4b11-813a-23b61a0b630c took: 10.792561ms
  I0513 19:07:03.042463 21 resources.go:163] Terminating ReplicationController wrapped-volume-race-bd71eb54-3694-4b11-813a-23b61a0b630c pods took: 100.9141ms
  STEP: deleting ReplicationController wrapped-volume-race-9d8ce856-6a32-4aae-ab2b-ceab096302ae in namespace emptydir-wrapper-9543, will wait for the garbage collector to delete the pods @ 05/13/24 19:07:07.343
  I0513 19:07:07.423737 21 resources.go:139] Deleting ReplicationController wrapped-volume-race-9d8ce856-6a32-4aae-ab2b-ceab096302ae took: 20.155003ms
  I0513 19:07:07.524883 21 resources.go:163] Terminating ReplicationController wrapped-volume-race-9d8ce856-6a32-4aae-ab2b-ceab096302ae pods took: 101.116763ms
  STEP: Cleaning up the configMaps @ 05/13/24 19:07:11.626
  I0513 19:07:12.337628 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-9543" for this suite. @ 05/13/24 19:07:12.344
• [35.012 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:817
  STEP: Creating a kubernetes client @ 05/13/24 19:07:12.359
  I0513 19:07:12.359292 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename webhook @ 05/13/24 19:07:12.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:07:12.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:07:12.41
  STEP: Setting up server cert @ 05/13/24 19:07:12.473
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 19:07:13.232
  STEP: Deploying the webhook pod @ 05/13/24 19:07:13.254
  STEP: Wait for the deployment to be ready @ 05/13/24 19:07:13.801
  I0513 19:07:13.808994 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  I0513 19:07:15.970242 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 19, 7, 13, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 7, 13, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 7, 13, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 7, 13, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 05/13/24 19:07:17.978
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 19:07:18.775
  I0513 19:07:19.775798 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 05/13/24 19:07:19.786
  I0513 19:07:19.868576 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8360" for this suite. @ 05/13/24 19:07:19.932
  STEP: Destroying namespace "webhook-markers-889" for this suite. @ 05/13/24 19:07:19.941
• [7.593 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:601
  STEP: Creating a kubernetes client @ 05/13/24 19:07:19.955
  I0513 19:07:19.955654 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename job @ 05/13/24 19:07:19.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:07:19.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:07:19.981
  STEP: Creating a job @ 05/13/24 19:07:19.993
  STEP: Ensuring job reaches completions @ 05/13/24 19:07:20.001
  I0513 19:07:34.007226 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5318" for this suite. @ 05/13/24 19:07:34.012
• [14.069 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 05/13/24 19:07:34.024
  I0513 19:07:34.024871 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename downward-api @ 05/13/24 19:07:34.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:07:34.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:07:34.068
  STEP: Creating a pod to test downward API volume plugin @ 05/13/24 19:07:34.073
  STEP: Saw pod success @ 05/13/24 19:07:38.125
  I0513 19:07:38.129735 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod downwardapi-volume-d77148e3-e65d-4ea8-a14d-72d18e24c2c6 container client-container: <nil>
  STEP: delete the pod @ 05/13/24 19:07:38.15
  I0513 19:07:38.200091 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8003" for this suite. @ 05/13/24 19:07:38.209
• [4.201 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 05/13/24 19:07:38.226
  I0513 19:07:38.226266 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename container-runtime @ 05/13/24 19:07:38.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:07:38.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:07:38.27
  STEP: create the container @ 05/13/24 19:07:38.275
  W0513 19:07:38.312526      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 05/13/24 19:07:38.314
  STEP: get the container status @ 05/13/24 19:07:41.476
  STEP: the container should be terminated @ 05/13/24 19:07:41.479
  STEP: the termination message should be set @ 05/13/24 19:07:41.479
  I0513 19:07:41.479338 21 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 05/13/24 19:07:41.479
  I0513 19:07:41.505191 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3982" for this suite. @ 05/13/24 19:07:41.511
• [3.300 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 05/13/24 19:07:41.527
  I0513 19:07:41.527538 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename namespaces @ 05/13/24 19:07:41.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:07:41.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:07:41.606
  STEP: Creating a test namespace @ 05/13/24 19:07:41.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:07:41.63
  STEP: Creating a service in the namespace @ 05/13/24 19:07:41.633
  STEP: Deleting the namespace @ 05/13/24 19:07:41.644
  STEP: Waiting for the namespace to be removed. @ 05/13/24 19:07:41.666
  STEP: Recreating the namespace @ 05/13/24 19:07:47.671
  STEP: Verifying there is no service in the namespace @ 05/13/24 19:07:47.89
  I0513 19:07:47.898082 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6538" for this suite. @ 05/13/24 19:07:47.903
  STEP: Destroying namespace "nsdeletetest-3197" for this suite. @ 05/13/24 19:07:47.911
  I0513 19:07:47.915824 21 framework.go:370] Namespace nsdeletetest-3197 was already deleted
  STEP: Destroying namespace "nsdeletetest-8714" for this suite. @ 05/13/24 19:07:47.915
• [6.401 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2203
  STEP: Creating a kubernetes client @ 05/13/24 19:07:47.928
  I0513 19:07:47.928706 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename services @ 05/13/24 19:07:47.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:07:47.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:07:47.964
  STEP: creating service in namespace services-1274 @ 05/13/24 19:07:47.968
  STEP: creating service affinity-clusterip-transition in namespace services-1274 @ 05/13/24 19:07:47.968
  STEP: creating replication controller affinity-clusterip-transition in namespace services-1274 @ 05/13/24 19:07:47.985
  I0513 19:07:47.995847      21 runners.go:198] Created replication controller with name: affinity-clusterip-transition, namespace: services-1274, replica count: 3
  I0513 19:07:51.047552      21 runners.go:198] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0513 19:07:51.065428 21 resource.go:361] Creating new exec pod
  I0513 19:07:54.092468 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-1274 exec execpod-affinitylvpvs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0513 19:07:54.312074 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I0513 19:07:54.312137 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 19:07:54.312419 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-1274 exec execpod-affinitylvpvs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.6.132 80'
  I0513 19:07:54.505711 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.6.132 80\nConnection to 10.43.6.132 80 port [tcp/http] succeeded!\n"
  I0513 19:07:54.505766 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 19:07:54.524228 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-1274 exec execpod-affinitylvpvs -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.6.132:80/ ; done'
  I0513 19:07:54.861916 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.6.132:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.6.132:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.6.132:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.6.132:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.6.132:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.6.132:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.6.132:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.6.132:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.6.132:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.6.132:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.6.132:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.6.132:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.6.132:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.6.132:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.6.132:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.6.132:80/\n"
  I0513 19:07:54.861989 21 builder.go:147] stdout: "\naffinity-clusterip-transition-kjh5t\naffinity-clusterip-transition-7zrfz\naffinity-clusterip-transition-7zrfz\naffinity-clusterip-transition-kjh5t\naffinity-clusterip-transition-7zrfz\naffinity-clusterip-transition-7zrfz\naffinity-clusterip-transition-sbkm6\naffinity-clusterip-transition-kjh5t\naffinity-clusterip-transition-kjh5t\naffinity-clusterip-transition-kjh5t\naffinity-clusterip-transition-sbkm6\naffinity-clusterip-transition-7zrfz\naffinity-clusterip-transition-sbkm6\naffinity-clusterip-transition-sbkm6\naffinity-clusterip-transition-sbkm6\naffinity-clusterip-transition-kjh5t"
  I0513 19:07:54.862014 21 service.go:242] Received response from host: affinity-clusterip-transition-kjh5t
  I0513 19:07:54.862031 21 service.go:242] Received response from host: affinity-clusterip-transition-7zrfz
  I0513 19:07:54.862046 21 service.go:242] Received response from host: affinity-clusterip-transition-7zrfz
  I0513 19:07:54.862062 21 service.go:242] Received response from host: affinity-clusterip-transition-kjh5t
  I0513 19:07:54.862080 21 service.go:242] Received response from host: affinity-clusterip-transition-7zrfz
  I0513 19:07:54.862094 21 service.go:242] Received response from host: affinity-clusterip-transition-7zrfz
  I0513 19:07:54.862107 21 service.go:242] Received response from host: affinity-clusterip-transition-sbkm6
  I0513 19:07:54.862135 21 service.go:242] Received response from host: affinity-clusterip-transition-kjh5t
  I0513 19:07:54.862150 21 service.go:242] Received response from host: affinity-clusterip-transition-kjh5t
  I0513 19:07:54.862165 21 service.go:242] Received response from host: affinity-clusterip-transition-kjh5t
  I0513 19:07:54.862179 21 service.go:242] Received response from host: affinity-clusterip-transition-sbkm6
  I0513 19:07:54.862203 21 service.go:242] Received response from host: affinity-clusterip-transition-7zrfz
  I0513 19:07:54.862224 21 service.go:242] Received response from host: affinity-clusterip-transition-sbkm6
  I0513 19:07:54.862238 21 service.go:242] Received response from host: affinity-clusterip-transition-sbkm6
  I0513 19:07:54.862252 21 service.go:242] Received response from host: affinity-clusterip-transition-sbkm6
  I0513 19:07:54.862262 21 service.go:242] Received response from host: affinity-clusterip-transition-kjh5t
  I0513 19:07:54.906549 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-1274 exec execpod-affinitylvpvs -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.6.132:80/ ; done'
  I0513 19:07:55.227782 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.6.132:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.6.132:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.6.132:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.6.132:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.6.132:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.6.132:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.6.132:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.6.132:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.6.132:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.6.132:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.6.132:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.6.132:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.6.132:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.6.132:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.6.132:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.6.132:80/\n"
  I0513 19:07:55.227853 21 builder.go:147] stdout: "\naffinity-clusterip-transition-kjh5t\naffinity-clusterip-transition-kjh5t\naffinity-clusterip-transition-kjh5t\naffinity-clusterip-transition-kjh5t\naffinity-clusterip-transition-kjh5t\naffinity-clusterip-transition-kjh5t\naffinity-clusterip-transition-kjh5t\naffinity-clusterip-transition-kjh5t\naffinity-clusterip-transition-kjh5t\naffinity-clusterip-transition-kjh5t\naffinity-clusterip-transition-kjh5t\naffinity-clusterip-transition-kjh5t\naffinity-clusterip-transition-kjh5t\naffinity-clusterip-transition-kjh5t\naffinity-clusterip-transition-kjh5t\naffinity-clusterip-transition-kjh5t"
  I0513 19:07:55.227882 21 service.go:242] Received response from host: affinity-clusterip-transition-kjh5t
  I0513 19:07:55.227900 21 service.go:242] Received response from host: affinity-clusterip-transition-kjh5t
  I0513 19:07:55.227916 21 service.go:242] Received response from host: affinity-clusterip-transition-kjh5t
  I0513 19:07:55.227930 21 service.go:242] Received response from host: affinity-clusterip-transition-kjh5t
  I0513 19:07:55.227945 21 service.go:242] Received response from host: affinity-clusterip-transition-kjh5t
  I0513 19:07:55.227959 21 service.go:242] Received response from host: affinity-clusterip-transition-kjh5t
  I0513 19:07:55.227973 21 service.go:242] Received response from host: affinity-clusterip-transition-kjh5t
  I0513 19:07:55.227988 21 service.go:242] Received response from host: affinity-clusterip-transition-kjh5t
  I0513 19:07:55.228002 21 service.go:242] Received response from host: affinity-clusterip-transition-kjh5t
  I0513 19:07:55.228014 21 service.go:242] Received response from host: affinity-clusterip-transition-kjh5t
  I0513 19:07:55.228027 21 service.go:242] Received response from host: affinity-clusterip-transition-kjh5t
  I0513 19:07:55.228039 21 service.go:242] Received response from host: affinity-clusterip-transition-kjh5t
  I0513 19:07:55.228053 21 service.go:242] Received response from host: affinity-clusterip-transition-kjh5t
  I0513 19:07:55.228067 21 service.go:242] Received response from host: affinity-clusterip-transition-kjh5t
  I0513 19:07:55.228081 21 service.go:242] Received response from host: affinity-clusterip-transition-kjh5t
  I0513 19:07:55.228097 21 service.go:242] Received response from host: affinity-clusterip-transition-kjh5t
  I0513 19:07:55.228164 21 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-1274, will wait for the garbage collector to delete the pods @ 05/13/24 19:07:55.275
  I0513 19:07:55.355257 21 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 12.779877ms
  I0513 19:07:55.455810 21 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 100.544114ms
  I0513 19:07:58.814580 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1274" for this suite. @ 05/13/24 19:07:58.82
• [10.905 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 05/13/24 19:07:58.835
  I0513 19:07:58.835613 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename statefulset @ 05/13/24 19:07:58.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:07:58.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:07:58.88
  STEP: Creating service test in namespace statefulset-2609 @ 05/13/24 19:07:58.883
  STEP: Creating stateful set ss in namespace statefulset-2609 @ 05/13/24 19:07:58.894
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-2609 @ 05/13/24 19:07:58.916
  I0513 19:07:58.920789 21 wait.go:40] Found 0 stateful pods, waiting for 1
  I0513 19:08:08.922928 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 05/13/24 19:08:08.923
  I0513 19:08:08.927922 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=statefulset-2609 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0513 19:08:09.259117 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0513 19:08:09.259172 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0513 19:08:09.259196 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0513 19:08:09.263891 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0513 19:08:19.266182 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0513 19:08:19.266237 21 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0513 19:08:19.293966 21 resource.go:168] POD   NODE                                        PHASE    GRACE  CONDITIONS
  I0513 19:08:19.294324 21 resource.go:175] ss-0  ip-172-31-7-107.us-east-2.compute.internal  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:08:01 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:07:58 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:08:09 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:08:09 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:07:58 +0000 UTC  }]
  I0513 19:08:19.294351 21 resource.go:178] 
  I0513 19:08:19.294367 21 statefulset.go:2147] StatefulSet ss has not reached scale 3, at 1
  I0513 19:08:20.528434 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 8.988253729s
  I0513 19:08:21.534623 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 7.755006936s
  I0513 19:08:22.542762 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 6.748785535s
  I0513 19:08:23.549691 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 5.740690302s
  I0513 19:08:24.557563 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 4.733729256s
  I0513 19:08:25.562400 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 3.725772945s
  I0513 19:08:26.567744 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 2.721003476s
  I0513 19:08:27.574210 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 1.715321796s
  I0513 19:08:28.867657 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 709.207802ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-2609 @ 05/13/24 19:08:29.868
  I0513 19:08:29.873503 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=statefulset-2609 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0513 19:08:30.103270 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0513 19:08:30.103329 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0513 19:08:30.103348 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0513 19:08:30.104085 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=statefulset-2609 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0513 19:08:30.857810 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0513 19:08:30.857881 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0513 19:08:30.857923 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0513 19:08:30.857991 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=statefulset-2609 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0513 19:08:31.592491 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0513 19:08:31.592541 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0513 19:08:31.592565 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0513 19:08:31.597410 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0513 19:08:31.597481 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0513 19:08:31.597507 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 05/13/24 19:08:31.597
  I0513 19:08:31.602120 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=statefulset-2609 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0513 19:08:31.788010 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0513 19:08:31.788072 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0513 19:08:31.788095 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0513 19:08:31.788155 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=statefulset-2609 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0513 19:08:32.429849 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0513 19:08:32.429908 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0513 19:08:32.429926 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0513 19:08:32.429990 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=statefulset-2609 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0513 19:08:32.621276 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0513 19:08:32.621337 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0513 19:08:32.621632 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0513 19:08:32.621722 21 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0513 19:08:32.626008 21 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 2
  I0513 19:08:42.632746 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0513 19:08:42.632838 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0513 19:08:42.632857 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0513 19:08:42.651805 21 resource.go:168] POD   NODE                                         PHASE    GRACE  CONDITIONS
  I0513 19:08:42.651887 21 resource.go:175] ss-0  ip-172-31-7-107.us-east-2.compute.internal   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:08:01 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:07:58 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:08:31 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:08:31 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:07:58 +0000 UTC  }]
  I0513 19:08:42.652188 21 resource.go:175] ss-1  ip-172-31-13-166.us-east-2.compute.internal  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:08:21 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:08:19 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:08:32 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:08:32 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:08:19 +0000 UTC  }]
  I0513 19:08:42.652275 21 resource.go:175] ss-2  ip-172-31-14-71.us-east-2.compute.internal   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:08:21 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:08:19 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:08:32 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:08:32 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:08:19 +0000 UTC  }]
  I0513 19:08:42.652292 21 resource.go:178] 
  I0513 19:08:42.652306 21 statefulset.go:2147] StatefulSet ss has not reached scale 0, at 3
  I0513 19:08:43.797181 21 resource.go:168] POD   NODE                                        PHASE    GRACE  CONDITIONS
  I0513 19:08:43.797470 21 resource.go:175] ss-0  ip-172-31-7-107.us-east-2.compute.internal  Running  30s    [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:08:01 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:07:58 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:08:31 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:08:31 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:07:58 +0000 UTC  }]
  I0513 19:08:43.797596 21 resource.go:175] ss-2  ip-172-31-14-71.us-east-2.compute.internal  Running  30s    [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:08:21 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:08:19 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:08:32 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:08:32 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:08:19 +0000 UTC  }]
  I0513 19:08:43.797686 21 resource.go:178] 
  I0513 19:08:43.797776 21 statefulset.go:2147] StatefulSet ss has not reached scale 0, at 2
  I0513 19:08:44.803940 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 7.848586573s
  I0513 19:08:45.810830 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 6.842473188s
  I0513 19:08:46.814922 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 5.835588232s
  I0513 19:08:47.824052 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 4.831545202s
  I0513 19:08:48.963512 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 3.822384797s
  I0513 19:08:49.968421 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 2.682890912s
  I0513 19:08:50.972504 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 1.678017152s
  I0513 19:08:51.977437 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 673.773333ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-2609 @ 05/13/24 19:08:52.978
  I0513 19:08:52.982686 21 rest.go:150] Scaling statefulset ss to 0
  I0513 19:08:52.995174 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0513 19:08:52.998172 21 statefulset.go:135] Deleting all statefulset in ns statefulset-2609
  I0513 19:08:53.001162 21 rest.go:150] Scaling statefulset ss to 0
  I0513 19:08:53.013525 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0513 19:08:53.016731 21 rest.go:88] Deleting statefulset ss
  I0513 19:08:53.053604 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2609" for this suite. @ 05/13/24 19:08:53.061
• [54.239 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 05/13/24 19:08:53.075
  I0513 19:08:53.075173 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename configmap @ 05/13/24 19:08:53.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:08:53.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:08:53.116
  STEP: Creating configMap that has name configmap-test-emptyKey-841b0683-0ec2-4675-8eec-dcfc7aeabee2 @ 05/13/24 19:08:53.122
  I0513 19:08:53.124893 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9914" for this suite. @ 05/13/24 19:08:53.131
• [0.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 05/13/24 19:08:53.149
  I0513 19:08:53.149221 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename secrets @ 05/13/24 19:08:53.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:08:53.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:08:53.201
  STEP: Creating secret with name secret-test-map-ea0fb129-883f-4294-bb9b-0f02870d8dc3 @ 05/13/24 19:08:53.206
  STEP: Creating a pod to test consume secrets @ 05/13/24 19:08:53.225
  STEP: Saw pod success @ 05/13/24 19:08:57.553
  I0513 19:08:57.559587 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-secrets-a275d33d-5f1e-43a8-9ccc-59c4e4434a2b container secret-volume-test: <nil>
  STEP: delete the pod @ 05/13/24 19:08:57.581
  I0513 19:08:58.086597 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1329" for this suite. @ 05/13/24 19:08:58.096
• [4.958 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1394
  STEP: Creating a kubernetes client @ 05/13/24 19:08:58.11
  I0513 19:08:58.110299 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename kubectl @ 05/13/24 19:08:58.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:08:58.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:08:58.144
  I0513 19:08:58.148777 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-1882 create -f -'
  I0513 19:08:58.316245 21 builder.go:146] stderr: ""
  I0513 19:08:58.316309 21 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0513 19:08:58.316372 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-1882 create -f -'
  I0513 19:08:58.495446 21 builder.go:146] stderr: ""
  I0513 19:08:58.495512 21 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/13/24 19:08:58.495
  I0513 19:08:59.503600 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0513 19:08:59.503646 21 framework.go:733] Found 0 / 1
  I0513 19:09:00.502321 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0513 19:09:00.502367 21 framework.go:733] Found 1 / 1
  I0513 19:09:00.502395 21 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0513 19:09:00.506947 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0513 19:09:00.507000 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0513 19:09:00.507069 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-1882 describe pod agnhost-primary-tzsqn'
  I0513 19:09:00.601760 21 builder.go:146] stderr: ""
  I0513 19:09:00.601863 21 builder.go:147] stdout: "Name:             agnhost-primary-tzsqn\nNamespace:        kubectl-1882\nPriority:         0\nService Account:  default\nNode:             ip-172-31-7-107.us-east-2.compute.internal/172.31.7.107\nStart Time:       Mon, 13 May 2024 19:08:58 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: 3fe66414488b7e8ff8ff5bb48662b501276eb2ba5694bab0a69d87e6b1caf45f\n                  cni.projectcalico.org/podIP: 10.42.4.119/32\n                  cni.projectcalico.org/podIPs: 10.42.4.119/32\nStatus:           Running\nIP:               10.42.4.119\nIPs:\n  IP:           10.42.4.119\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://67c7c643b87c04cae1c3bca225e439ce0a7df8a8e66abad1877404ee52665177\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Mon, 13 May 2024 19:08:59 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-vrmck (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-vrmck:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-1882/agnhost-primary-tzsqn to ip-172-31-7-107.us-east-2.compute.internal\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I0513 19:09:00.602259 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-1882 describe rc agnhost-primary'
  I0513 19:09:00.697263 21 builder.go:146] stderr: ""
  I0513 19:09:00.697337 21 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-1882\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-tzsqn\n"
  I0513 19:09:00.697410 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-1882 describe service agnhost-primary'
  I0513 19:09:00.790844 21 builder.go:146] stderr: ""
  I0513 19:09:00.791058 21 builder.go:147] stdout: "Name:              agnhost-primary\nNamespace:         kubectl-1882\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.43.90.9\nIPs:               10.43.90.9\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.42.4.119:6379\nSession Affinity:  None\nEvents:            <none>\n"
  I0513 19:09:00.799843 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-1882 describe node ip-172-31-13-166.us-east-2.compute.internal'
  I0513 19:09:00.929625 21 builder.go:146] stderr: ""
  I0513 19:09:00.929810 21 builder.go:147] stdout: "Name:               ip-172-31-13-166.us-east-2.compute.internal\nRoles:              control-plane,etcd,master\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/instance-type=rke2\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-13-166.us-east-2.compute.internal\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=true\n                    node-role.kubernetes.io/etcd=true\n                    node-role.kubernetes.io/master=true\n                    node.kubernetes.io/instance-type=rke2\n                    role-control-plane=true\n                    role-etcd=true\n                    role-worker=true\nAnnotations:        alpha.kubernetes.io/provided-node-ip: 172.31.13.166\n                    etcd.rke2.cattle.io/local-snapshots-timestamp: 2024-05-13T16:11:30Z\n                    etcd.rke2.cattle.io/node-address: 172.31.13.166\n                    etcd.rke2.cattle.io/node-name: ip-172-31-13-166.us-east-2.compute.internal-fc1cbd4e\n                    flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"36:02:b1:85:7c:1b\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 172.31.13.166\n                    node.alpha.kubernetes.io/ttl: 0\n                    rke2.io/encryption-config-hash: start-915e82d11c59f2c8a8dee1466ef5cb27e26e20811b86c00b7c02c3ea49fe47ee\n                    rke2.io/external-ip: 3.144.227.199\n                    rke2.io/hostname: ip-172-31-13-166\n                    rke2.io/internal-ip: 172.31.13.166\n                    rke2.io/node-args:\n                      [\"server\",\"--write-kubeconfig-mode\",\"0644\",\"--tls-san\",\"3.14.250.222\",\"--server\",\"https://3.14.250.222:9345\",\"--token\",\"********\",\"--node-...\n                    rke2.io/node-config-hash: MT2KMGVZTMB22WCDJQAIPYGR3QASFVEAJRDDFNDEY65FYYOGUF4A====\n                    rke2.io/node-env: {}\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Mon, 13 May 2024 16:11:22 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-13-166.us-east-2.compute.internal\n  AcquireTime:     <unset>\n  RenewTime:       Mon, 13 May 2024 19:08:58 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Mon, 13 May 2024 16:12:26 +0000   Mon, 13 May 2024 16:12:26 +0000   FlannelIsUp                  Flannel is running on this node\n  EtcdIsVoter          True    Mon, 13 May 2024 19:06:39 +0000   Mon, 13 May 2024 16:11:39 +0000   MemberNotLearner             Node is a voting member of the etcd cluster\n  MemoryPressure       False   Mon, 13 May 2024 19:05:37 +0000   Mon, 13 May 2024 16:11:20 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Mon, 13 May 2024 19:05:37 +0000   Mon, 13 May 2024 16:11:20 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Mon, 13 May 2024 19:05:37 +0000   Mon, 13 May 2024 16:11:20 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Mon, 13 May 2024 19:05:37 +0000   Mon, 13 May 2024 16:12:12 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.31.13.166\n  ExternalIP:  3.144.227.199\n  Hostname:    ip-172-31-13-166\nCapacity:\n  cpu:                2\n  ephemeral-storage:  20937708Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3937656Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  20368202327\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3937656Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ec2cf8ea0ef567572d13f678eced3acc\n  System UUID:                ec2cf8ea-0ef5-6757-2d13-f678eced3acc\n  Boot ID:                    14ccfc43-e06a-4a9a-a36c-fd9bb8bbc97b\n  Kernel Version:             5.14.21-150500.55.44-default\n  OS Image:                   SUSE Linux Enterprise Server 15 SP5\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.7.11-k3s2\n  Kubelet Version:            v1.30.0+rke2r1\n  Kube-Proxy Version:         v1.30.0+rke2r1\nPodCIDR:                      10.42.1.0/24\nPodCIDRs:                     10.42.1.0/24\nProviderID:                   rke2://ip-172-31-13-166.us-east-2.compute.internal\nNon-terminated Pods:          (10 in total)\n  Namespace                   Name                                                                    CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                                    ------------  ----------  ---------------  -------------  ---\n  kube-system                 cloud-controller-manager-ip-172-31-13-166.us-east-2.compute.internal    100m (5%)     0 (0%)      128Mi (3%)       0 (0%)         176m\n  kube-system                 etcd-ip-172-31-13-166.us-east-2.compute.internal                        200m (10%)    0 (0%)      512Mi (13%)      0 (0%)         177m\n  kube-system                 kube-apiserver-ip-172-31-13-166.us-east-2.compute.internal              250m (12%)    0 (0%)      1Gi (26%)        0 (0%)         176m\n  kube-system                 kube-controller-manager-ip-172-31-13-166.us-east-2.compute.internal     200m (10%)    0 (0%)      256Mi (6%)       0 (0%)         176m\n  kube-system                 kube-proxy-ip-172-31-13-166.us-east-2.compute.internal                  250m (12%)    0 (0%)      128Mi (3%)       0 (0%)         177m\n  kube-system                 kube-scheduler-ip-172-31-13-166.us-east-2.compute.internal              100m (5%)     0 (0%)      128Mi (3%)       0 (0%)         176m\n  kube-system                 rke2-canal-lxqsl                                                        250m (12%)    0 (0%)      0 (0%)           0 (0%)         177m\n  kube-system                 rke2-coredns-rke2-coredns-64dcf4f58b-jgwvr                              100m (5%)     100m (5%)   128Mi (3%)       128Mi (3%)     177m\n  kube-system                 rke2-ingress-nginx-controller-m6v56                                     100m (5%)     0 (0%)      90Mi (2%)        0 (0%)         176m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-8692a35f669b4296-w77rh                 0 (0%)        0 (0%)      0 (0%)           0 (0%)         14m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests      Limits\n  --------           --------      ------\n  cpu                1550m (77%)   100m (5%)\n  memory             2394Mi (62%)  128Mi (3%)\n  ephemeral-storage  0 (0%)        0 (0%)\n  hugepages-1Gi      0 (0%)        0 (0%)\n  hugepages-2Mi      0 (0%)        0 (0%)\nEvents:              <none>\n"
  I0513 19:09:00.930083 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-1882 describe namespace kubectl-1882'
  I0513 19:09:01.081972 21 builder.go:146] stderr: ""
  I0513 19:09:01.082040 21 builder.go:147] stdout: "Name:         kubectl-1882\nLabels:       e2e-framework=kubectl\n              e2e-run=588a36b1-2f9c-463c-bdb4-1c9b60588518\n              kubernetes.io/metadata.name=kubectl-1882\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0513 19:09:01.082388 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1882" for this suite. @ 05/13/24 19:09:01.29
• [3.206 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3345
  STEP: Creating a kubernetes client @ 05/13/24 19:09:01.318
  I0513 19:09:01.318215 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename services @ 05/13/24 19:09:01.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:09:01.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:09:01.368
  STEP: creating a Service @ 05/13/24 19:09:01.381
  STEP: watching for the Service to be added @ 05/13/24 19:09:01.427
  I0513 19:09:01.436946 21 service.go:3397] Found Service test-service-p6nbn in namespace services-6022 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31867}]
  I0513 19:09:01.437004 21 service.go:3404] Service test-service-p6nbn created
  STEP: Getting /status @ 05/13/24 19:09:01.437
  I0513 19:09:01.446612 21 service.go:3415] Service test-service-p6nbn has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 05/13/24 19:09:01.447
  STEP: watching for the Service to be patched @ 05/13/24 19:09:02.189
  I0513 19:09:02.192074 21 service.go:3438] observed Service test-service-p6nbn in namespace services-6022 with annotations: map[] & LoadBalancer: {[]}
  I0513 19:09:02.192122 21 service.go:3441] Found Service test-service-p6nbn in namespace services-6022 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc000e282a0 []}]}
  I0513 19:09:02.192137 21 service.go:3448] Service test-service-p6nbn has service status patched
  STEP: updating the ServiceStatus @ 05/13/24 19:09:02.192
  I0513 19:09:02.657652 21 service.go:3468] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 05/13/24 19:09:02.657
  I0513 19:09:02.659774 21 service.go:3479] Observed Service test-service-p6nbn in namespace services-6022 with annotations: map[] & Conditions: {[]}
  I0513 19:09:02.660087 21 service.go:3494] Observed event: &Service{ObjectMeta:{test-service-p6nbn  services-6022  7166b816-c2f0-4d13-8956-4a3e6cc227b4 49144 0 2024-05-13 19:09:01 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-05-13 19:09:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-05-13 19:09:01 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:31867,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.43.167.80,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.43.167.80],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,TrafficDistribution:nil,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:*VIP,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  I0513 19:09:02.660130 21 service.go:3486] Found Service test-service-p6nbn in namespace services-6022 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0513 19:09:02.660150 21 service.go:3498] Service test-service-p6nbn has service status updated
  STEP: patching the service @ 05/13/24 19:09:02.66
  STEP: watching for the Service to be patched @ 05/13/24 19:09:02.718
  I0513 19:09:02.721472 21 service.go:3521] observed Service test-service-p6nbn in namespace services-6022 with labels: map[test-service-static:true]
  I0513 19:09:02.722094 21 service.go:3521] observed Service test-service-p6nbn in namespace services-6022 with labels: map[test-service-static:true]
  I0513 19:09:02.722485 21 service.go:3521] observed Service test-service-p6nbn in namespace services-6022 with labels: map[test-service-static:true]
  I0513 19:09:02.723004 21 service.go:3524] Found Service test-service-p6nbn in namespace services-6022 with labels: map[test-service:patched test-service-static:true]
  I0513 19:09:02.723198 21 service.go:3531] Service test-service-p6nbn patched
  STEP: deleting the service @ 05/13/24 19:09:02.723
  STEP: watching for the Service to be deleted @ 05/13/24 19:09:02.807
  I0513 19:09:02.810147 21 service.go:3555] Observed event: ADDED
  I0513 19:09:02.810929 21 service.go:3555] Observed event: MODIFIED
  I0513 19:09:02.811234 21 service.go:3555] Observed event: MODIFIED
  I0513 19:09:02.811258 21 service.go:3555] Observed event: MODIFIED
  I0513 19:09:02.811620 21 service.go:3551] Found Service test-service-p6nbn in namespace services-6022 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0513 19:09:02.811991 21 service.go:3560] Service test-service-p6nbn deleted
  I0513 19:09:02.812601 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6022" for this suite. @ 05/13/24 19:09:02.83
• [1.535 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 05/13/24 19:09:02.853
  I0513 19:09:02.853472 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename replicaset @ 05/13/24 19:09:02.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:09:02.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:09:02.921
  STEP: Create a ReplicaSet @ 05/13/24 19:09:02.926
  STEP: Verify that the required pods have come up @ 05/13/24 19:09:02.952
  I0513 19:09:02.968117 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 3
  I0513 19:09:07.973230 21 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 05/13/24 19:09:07.973
  I0513 19:09:07.977050 21 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 05/13/24 19:09:07.977
  STEP: DeleteCollection of the ReplicaSets @ 05/13/24 19:09:07.981
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 05/13/24 19:09:08.01
  I0513 19:09:08.702476 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7879" for this suite. @ 05/13/24 19:09:08.719
• [5.886 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 05/13/24 19:09:08.738
  I0513 19:09:08.738803 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename configmap @ 05/13/24 19:09:08.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:09:08.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:09:08.797
  STEP: Creating configMap configmap-214/configmap-test-180549fe-2b5b-4829-85a1-11e04688fcf4 @ 05/13/24 19:09:08.802
  STEP: Creating a pod to test consume configMaps @ 05/13/24 19:09:08.818
  STEP: Saw pod success @ 05/13/24 19:09:15.12
  I0513 19:09:15.124753 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-configmaps-4f5e7e82-dfa2-4fc1-8ea8-73a722f2b18c container env-test: <nil>
  STEP: delete the pod @ 05/13/24 19:09:15.143
  I0513 19:09:15.183636 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-214" for this suite. @ 05/13/24 19:09:15.194
• [6.492 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 05/13/24 19:09:15.232
  I0513 19:09:15.232160 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename gc @ 05/13/24 19:09:15.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:09:15.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:09:15.288
  STEP: create the rc @ 05/13/24 19:09:15.297
  W0513 19:09:15.313580      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 05/13/24 19:09:20.127
  STEP: wait for the rc to be deleted @ 05/13/24 19:09:20.185
  I0513 19:09:21.267878 21 garbage_collector.go:670] 80 pods remaining
  I0513 19:09:21.267935 21 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0513 19:09:21.267983 21 garbage_collector.go:678] 
  I0513 19:09:22.215297 21 garbage_collector.go:670] 71 pods remaining
  I0513 19:09:22.217605 21 garbage_collector.go:677] 71 pods has nil DeletionTimestamp
  I0513 19:09:22.217749 21 garbage_collector.go:678] 
  I0513 19:09:23.239199 21 garbage_collector.go:670] 59 pods remaining
  I0513 19:09:23.239441 21 garbage_collector.go:677] 59 pods has nil DeletionTimestamp
  I0513 19:09:23.239599 21 garbage_collector.go:678] 
  I0513 19:09:24.268419 21 garbage_collector.go:670] 40 pods remaining
  I0513 19:09:24.268662 21 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I0513 19:09:24.268850 21 garbage_collector.go:678] 
  I0513 19:09:25.239216 21 garbage_collector.go:670] 31 pods remaining
  I0513 19:09:25.243623 21 garbage_collector.go:677] 30 pods has nil DeletionTimestamp
  I0513 19:09:25.243738 21 garbage_collector.go:678] 
  I0513 19:09:26.236902 21 garbage_collector.go:670] 19 pods remaining
  I0513 19:09:26.237083 21 garbage_collector.go:677] 19 pods has nil DeletionTimestamp
  I0513 19:09:26.237199 21 garbage_collector.go:678] 
  STEP: Gathering metrics @ 05/13/24 19:09:27.202
  I0513 19:09:29.670452 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0513 19:09:29.672966 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8126" for this suite. @ 05/13/24 19:09:29.704
• [14.504 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 05/13/24 19:09:29.737
  I0513 19:09:29.737134 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename downward-api @ 05/13/24 19:09:29.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:09:29.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:09:29.789
  STEP: Creating a pod to test downward api env vars @ 05/13/24 19:09:29.792
  STEP: Saw pod success @ 05/13/24 19:09:44.221
  I0513 19:09:44.233213 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod downward-api-16538440-060a-40e8-acc0-06f80c5e8bc1 container dapi-container: <nil>
  STEP: delete the pod @ 05/13/24 19:09:44.242
  I0513 19:09:44.278217 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9521" for this suite. @ 05/13/24 19:09:44.283
• [14.561 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 05/13/24 19:09:44.3
  I0513 19:09:44.300927 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename svcaccounts @ 05/13/24 19:09:44.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:09:44.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:09:44.336
  STEP: reading a file in the container @ 05/13/24 19:09:46.393
  I0513 19:09:46.393369 21 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6275 pod-service-account-f37a0caf-de2f-4e2d-bf9f-9070d714aec7 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 05/13/24 19:09:46.577
  I0513 19:09:46.577777 21 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6275 pod-service-account-f37a0caf-de2f-4e2d-bf9f-9070d714aec7 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 05/13/24 19:09:46.765
  I0513 19:09:46.765269 21 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6275 pod-service-account-f37a0caf-de2f-4e2d-bf9f-9070d714aec7 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0513 19:09:47.002702 21 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-6275"
  I0513 19:09:47.004804 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6275" for this suite. @ 05/13/24 19:09:47.009
• [2.720 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 05/13/24 19:09:47.021
  I0513 19:09:47.021695 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename gc @ 05/13/24 19:09:47.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:09:47.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:09:47.055
  STEP: create the rc @ 05/13/24 19:09:47.067
  W0513 19:09:47.082991      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 05/13/24 19:09:51.221
  STEP: wait for the rc to be deleted @ 05/13/24 19:09:51.298
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 05/13/24 19:09:56.317
  STEP: Gathering metrics @ 05/13/24 19:10:26.334
  I0513 19:10:26.466665 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0513 19:10:26.467007 21 delete.go:95] Deleting pod "simpletest.rc-2xj5z" in namespace "gc-3783"
  I0513 19:10:26.490252 21 delete.go:95] Deleting pod "simpletest.rc-47q8z" in namespace "gc-3783"
  I0513 19:10:26.538278 21 delete.go:95] Deleting pod "simpletest.rc-4g7rq" in namespace "gc-3783"
  I0513 19:10:26.596009 21 delete.go:95] Deleting pod "simpletest.rc-4jhxb" in namespace "gc-3783"
  I0513 19:10:26.638819 21 delete.go:95] Deleting pod "simpletest.rc-4mnd9" in namespace "gc-3783"
  I0513 19:10:26.684534 21 delete.go:95] Deleting pod "simpletest.rc-4ntgz" in namespace "gc-3783"
  I0513 19:10:26.718486 21 delete.go:95] Deleting pod "simpletest.rc-4pkzm" in namespace "gc-3783"
  I0513 19:10:26.765956 21 delete.go:95] Deleting pod "simpletest.rc-4s8wv" in namespace "gc-3783"
  I0513 19:10:26.805900 21 delete.go:95] Deleting pod "simpletest.rc-4ztc4" in namespace "gc-3783"
  I0513 19:10:26.843922 21 delete.go:95] Deleting pod "simpletest.rc-5st7s" in namespace "gc-3783"
  I0513 19:10:26.895406 21 delete.go:95] Deleting pod "simpletest.rc-5w8fq" in namespace "gc-3783"
  I0513 19:10:26.933619 21 delete.go:95] Deleting pod "simpletest.rc-7cwtw" in namespace "gc-3783"
  I0513 19:10:26.968328 21 delete.go:95] Deleting pod "simpletest.rc-7p6np" in namespace "gc-3783"
  I0513 19:10:27.038045 21 delete.go:95] Deleting pod "simpletest.rc-82pzl" in namespace "gc-3783"
  I0513 19:10:27.126874 21 delete.go:95] Deleting pod "simpletest.rc-86mqb" in namespace "gc-3783"
  I0513 19:10:27.224738 21 delete.go:95] Deleting pod "simpletest.rc-8hdqb" in namespace "gc-3783"
  I0513 19:10:27.301806 21 delete.go:95] Deleting pod "simpletest.rc-8p865" in namespace "gc-3783"
  I0513 19:10:27.411671 21 delete.go:95] Deleting pod "simpletest.rc-8r6wv" in namespace "gc-3783"
  I0513 19:10:27.456718 21 delete.go:95] Deleting pod "simpletest.rc-9vz4w" in namespace "gc-3783"
  I0513 19:10:27.519118 21 delete.go:95] Deleting pod "simpletest.rc-bdntn" in namespace "gc-3783"
  I0513 19:10:27.587282 21 delete.go:95] Deleting pod "simpletest.rc-bf58f" in namespace "gc-3783"
  I0513 19:10:27.644954 21 delete.go:95] Deleting pod "simpletest.rc-bnkh5" in namespace "gc-3783"
  I0513 19:10:27.763986 21 delete.go:95] Deleting pod "simpletest.rc-bp8s7" in namespace "gc-3783"
  I0513 19:10:27.804592 21 delete.go:95] Deleting pod "simpletest.rc-bxt7q" in namespace "gc-3783"
  I0513 19:10:27.837964 21 delete.go:95] Deleting pod "simpletest.rc-c4sr9" in namespace "gc-3783"
  I0513 19:10:27.887204 21 delete.go:95] Deleting pod "simpletest.rc-c8ccz" in namespace "gc-3783"
  I0513 19:10:27.949544 21 delete.go:95] Deleting pod "simpletest.rc-czlnf" in namespace "gc-3783"
  I0513 19:10:28.033334 21 delete.go:95] Deleting pod "simpletest.rc-d4dbj" in namespace "gc-3783"
  I0513 19:10:28.087704 21 delete.go:95] Deleting pod "simpletest.rc-d4qsf" in namespace "gc-3783"
  I0513 19:10:28.144338 21 delete.go:95] Deleting pod "simpletest.rc-d842d" in namespace "gc-3783"
  I0513 19:10:28.211383 21 delete.go:95] Deleting pod "simpletest.rc-dbm9x" in namespace "gc-3783"
  I0513 19:10:28.256866 21 delete.go:95] Deleting pod "simpletest.rc-dhrtv" in namespace "gc-3783"
  I0513 19:10:28.827704 21 delete.go:95] Deleting pod "simpletest.rc-dkh2c" in namespace "gc-3783"
  I0513 19:10:28.940049 21 delete.go:95] Deleting pod "simpletest.rc-dwtwv" in namespace "gc-3783"
  I0513 19:10:29.034253 21 delete.go:95] Deleting pod "simpletest.rc-f7x6d" in namespace "gc-3783"
  I0513 19:10:29.095695 21 delete.go:95] Deleting pod "simpletest.rc-fmfz8" in namespace "gc-3783"
  I0513 19:10:29.142476 21 delete.go:95] Deleting pod "simpletest.rc-fw58s" in namespace "gc-3783"
  I0513 19:10:29.185742 21 delete.go:95] Deleting pod "simpletest.rc-fw99r" in namespace "gc-3783"
  I0513 19:10:29.529843 21 delete.go:95] Deleting pod "simpletest.rc-g2554" in namespace "gc-3783"
  I0513 19:10:30.204742 21 delete.go:95] Deleting pod "simpletest.rc-g2fxz" in namespace "gc-3783"
  I0513 19:10:30.241924 21 delete.go:95] Deleting pod "simpletest.rc-gdpl8" in namespace "gc-3783"
  I0513 19:10:30.276451 21 delete.go:95] Deleting pod "simpletest.rc-gpkr6" in namespace "gc-3783"
  I0513 19:10:30.320863 21 delete.go:95] Deleting pod "simpletest.rc-h6k8x" in namespace "gc-3783"
  I0513 19:10:30.350571 21 delete.go:95] Deleting pod "simpletest.rc-hd29m" in namespace "gc-3783"
  I0513 19:10:30.392011 21 delete.go:95] Deleting pod "simpletest.rc-hgccd" in namespace "gc-3783"
  I0513 19:10:30.456050 21 delete.go:95] Deleting pod "simpletest.rc-hj8g8" in namespace "gc-3783"
  I0513 19:10:30.501834 21 delete.go:95] Deleting pod "simpletest.rc-hmbtk" in namespace "gc-3783"
  I0513 19:10:30.531425 21 delete.go:95] Deleting pod "simpletest.rc-hnn5h" in namespace "gc-3783"
  I0513 19:10:30.558198 21 delete.go:95] Deleting pod "simpletest.rc-jqclj" in namespace "gc-3783"
  I0513 19:10:30.587194 21 delete.go:95] Deleting pod "simpletest.rc-k2qpp" in namespace "gc-3783"
  I0513 19:10:30.634267 21 delete.go:95] Deleting pod "simpletest.rc-k2w68" in namespace "gc-3783"
  I0513 19:10:30.687074 21 delete.go:95] Deleting pod "simpletest.rc-kt45c" in namespace "gc-3783"
  I0513 19:10:31.334984 21 delete.go:95] Deleting pod "simpletest.rc-kvbvm" in namespace "gc-3783"
  I0513 19:10:31.372673 21 delete.go:95] Deleting pod "simpletest.rc-l5bn8" in namespace "gc-3783"
  I0513 19:10:31.414327 21 delete.go:95] Deleting pod "simpletest.rc-lqjxv" in namespace "gc-3783"
  I0513 19:10:31.451355 21 delete.go:95] Deleting pod "simpletest.rc-lzcqj" in namespace "gc-3783"
  I0513 19:10:31.486503 21 delete.go:95] Deleting pod "simpletest.rc-m27km" in namespace "gc-3783"
  I0513 19:10:31.530188 21 delete.go:95] Deleting pod "simpletest.rc-m5s8b" in namespace "gc-3783"
  I0513 19:10:31.583756 21 delete.go:95] Deleting pod "simpletest.rc-m6n4g" in namespace "gc-3783"
  I0513 19:10:31.615157 21 delete.go:95] Deleting pod "simpletest.rc-mbr2t" in namespace "gc-3783"
  I0513 19:10:31.651813 21 delete.go:95] Deleting pod "simpletest.rc-mxllk" in namespace "gc-3783"
  I0513 19:10:31.718652 21 delete.go:95] Deleting pod "simpletest.rc-n4fwm" in namespace "gc-3783"
  I0513 19:10:31.779951 21 delete.go:95] Deleting pod "simpletest.rc-n4mbc" in namespace "gc-3783"
  I0513 19:10:31.855766 21 delete.go:95] Deleting pod "simpletest.rc-n4qq6" in namespace "gc-3783"
  I0513 19:10:31.892270 21 delete.go:95] Deleting pod "simpletest.rc-nlr56" in namespace "gc-3783"
  I0513 19:10:31.937959 21 delete.go:95] Deleting pod "simpletest.rc-nrcsm" in namespace "gc-3783"
  I0513 19:10:31.992022 21 delete.go:95] Deleting pod "simpletest.rc-nzz72" in namespace "gc-3783"
  I0513 19:10:32.035920 21 delete.go:95] Deleting pod "simpletest.rc-p8jpx" in namespace "gc-3783"
  I0513 19:10:32.123887 21 delete.go:95] Deleting pod "simpletest.rc-pjr4z" in namespace "gc-3783"
  I0513 19:10:32.184146 21 delete.go:95] Deleting pod "simpletest.rc-pkd4f" in namespace "gc-3783"
  I0513 19:10:32.227182 21 delete.go:95] Deleting pod "simpletest.rc-pmdgl" in namespace "gc-3783"
  I0513 19:10:32.290843 21 delete.go:95] Deleting pod "simpletest.rc-pvfzl" in namespace "gc-3783"
  I0513 19:10:32.360357 21 delete.go:95] Deleting pod "simpletest.rc-q986r" in namespace "gc-3783"
  I0513 19:10:32.410112 21 delete.go:95] Deleting pod "simpletest.rc-q9xwj" in namespace "gc-3783"
  I0513 19:10:32.487777 21 delete.go:95] Deleting pod "simpletest.rc-qgp9d" in namespace "gc-3783"
  I0513 19:10:32.557599 21 delete.go:95] Deleting pod "simpletest.rc-qp9nc" in namespace "gc-3783"
  I0513 19:10:32.605501 21 delete.go:95] Deleting pod "simpletest.rc-qsg72" in namespace "gc-3783"
  I0513 19:10:32.646823 21 delete.go:95] Deleting pod "simpletest.rc-rdtdj" in namespace "gc-3783"
  I0513 19:10:32.707764 21 delete.go:95] Deleting pod "simpletest.rc-rqnsd" in namespace "gc-3783"
  I0513 19:10:32.763772 21 delete.go:95] Deleting pod "simpletest.rc-rx6mg" in namespace "gc-3783"
  I0513 19:10:32.810736 21 delete.go:95] Deleting pod "simpletest.rc-sdmdl" in namespace "gc-3783"
  I0513 19:10:32.848728 21 delete.go:95] Deleting pod "simpletest.rc-shb67" in namespace "gc-3783"
  I0513 19:10:32.909906 21 delete.go:95] Deleting pod "simpletest.rc-sqpmc" in namespace "gc-3783"
  I0513 19:10:32.990061 21 delete.go:95] Deleting pod "simpletest.rc-ssg29" in namespace "gc-3783"
  I0513 19:10:33.461346 21 delete.go:95] Deleting pod "simpletest.rc-t7snf" in namespace "gc-3783"
  I0513 19:10:33.493814 21 delete.go:95] Deleting pod "simpletest.rc-tbc6b" in namespace "gc-3783"
  I0513 19:10:33.525184 21 delete.go:95] Deleting pod "simpletest.rc-tn8vj" in namespace "gc-3783"
  I0513 19:10:33.579239 21 delete.go:95] Deleting pod "simpletest.rc-tnpr4" in namespace "gc-3783"
  I0513 19:10:33.620319 21 delete.go:95] Deleting pod "simpletest.rc-vbhzh" in namespace "gc-3783"
  I0513 19:10:33.679752 21 delete.go:95] Deleting pod "simpletest.rc-vbq22" in namespace "gc-3783"
  I0513 19:10:33.721847 21 delete.go:95] Deleting pod "simpletest.rc-vjlp7" in namespace "gc-3783"
  I0513 19:10:33.801308 21 delete.go:95] Deleting pod "simpletest.rc-vm6dg" in namespace "gc-3783"
  I0513 19:10:33.828248 21 delete.go:95] Deleting pod "simpletest.rc-vsnhk" in namespace "gc-3783"
  I0513 19:10:33.853474 21 delete.go:95] Deleting pod "simpletest.rc-vtfkq" in namespace "gc-3783"
  I0513 19:10:33.917322 21 delete.go:95] Deleting pod "simpletest.rc-vtl89" in namespace "gc-3783"
  I0513 19:10:33.969223 21 delete.go:95] Deleting pod "simpletest.rc-vxm5k" in namespace "gc-3783"
  I0513 19:10:34.027894 21 delete.go:95] Deleting pod "simpletest.rc-wcdz9" in namespace "gc-3783"
  I0513 19:10:34.056320 21 delete.go:95] Deleting pod "simpletest.rc-xbwst" in namespace "gc-3783"
  I0513 19:10:34.097170 21 delete.go:95] Deleting pod "simpletest.rc-zhh25" in namespace "gc-3783"
  I0513 19:10:34.144922 21 delete.go:95] Deleting pod "simpletest.rc-zxr5c" in namespace "gc-3783"
  I0513 19:10:34.206252 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3783" for this suite. @ 05/13/24 19:10:34.211
• [47.205 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2240
  STEP: Creating a kubernetes client @ 05/13/24 19:10:34.227
  I0513 19:10:34.227903 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename services @ 05/13/24 19:10:34.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:10:34.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:10:34.271
  STEP: creating service in namespace services-3240 @ 05/13/24 19:10:34.278
  STEP: creating service affinity-nodeport-transition in namespace services-3240 @ 05/13/24 19:10:34.278
  STEP: creating replication controller affinity-nodeport-transition in namespace services-3240 @ 05/13/24 19:10:34.323
  I0513 19:10:34.336081      21 runners.go:198] Created replication controller with name: affinity-nodeport-transition, namespace: services-3240, replica count: 3
  I0513 19:10:37.387627      21 runners.go:198] affinity-nodeport-transition Pods: 3 out of 3 created, 0 running, 3 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0513 19:10:40.388170      21 runners.go:198] affinity-nodeport-transition Pods: 3 out of 3 created, 0 running, 3 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0513 19:10:43.390053      21 runners.go:198] affinity-nodeport-transition Pods: 3 out of 3 created, 1 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0513 19:10:46.391298      21 runners.go:198] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0513 19:10:46.403325 21 resource.go:361] Creating new exec pod
  I0513 19:10:49.450855 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-3240 exec execpod-affinityp5565 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0513 19:10:49.671432 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I0513 19:10:49.671524 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 19:10:49.671614 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-3240 exec execpod-affinityp5565 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.251.102 80'
  I0513 19:10:49.852487 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.251.102 80\nConnection to 10.43.251.102 80 port [tcp/http] succeeded!\n"
  I0513 19:10:49.852553 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 19:10:49.852989 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-3240 exec execpod-affinityp5565 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.13.166 31431'
  I0513 19:10:50.094047 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.13.166 31431\nConnection to 172.31.13.166 31431 port [tcp/*] succeeded!\n"
  I0513 19:10:50.094110 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 19:10:50.094202 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-3240 exec execpod-affinityp5565 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.7.107 31431'
  I0513 19:10:50.276729 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.7.107 31431\nConnection to 172.31.7.107 31431 port [tcp/*] succeeded!\n"
  I0513 19:10:50.276929 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 19:10:50.309328 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-3240 exec execpod-affinityp5565 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.13.166:31431/ ; done'
  I0513 19:10:50.666134 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31431/\n"
  I0513 19:10:50.666211 21 builder.go:147] stdout: "\naffinity-nodeport-transition-qz52v\naffinity-nodeport-transition-qz52v\naffinity-nodeport-transition-qz52v\naffinity-nodeport-transition-h55cx\naffinity-nodeport-transition-h55cx\naffinity-nodeport-transition-kckh7\naffinity-nodeport-transition-kckh7\naffinity-nodeport-transition-qz52v\naffinity-nodeport-transition-qz52v\naffinity-nodeport-transition-h55cx\naffinity-nodeport-transition-kckh7\naffinity-nodeport-transition-qz52v\naffinity-nodeport-transition-h55cx\naffinity-nodeport-transition-h55cx\naffinity-nodeport-transition-kckh7\naffinity-nodeport-transition-h55cx"
  I0513 19:10:50.666237 21 service.go:242] Received response from host: affinity-nodeport-transition-qz52v
  I0513 19:10:50.666257 21 service.go:242] Received response from host: affinity-nodeport-transition-qz52v
  I0513 19:10:50.666273 21 service.go:242] Received response from host: affinity-nodeport-transition-qz52v
  I0513 19:10:50.666288 21 service.go:242] Received response from host: affinity-nodeport-transition-h55cx
  I0513 19:10:50.666303 21 service.go:242] Received response from host: affinity-nodeport-transition-h55cx
  I0513 19:10:50.666315 21 service.go:242] Received response from host: affinity-nodeport-transition-kckh7
  I0513 19:10:50.666333 21 service.go:242] Received response from host: affinity-nodeport-transition-kckh7
  I0513 19:10:50.666758 21 service.go:242] Received response from host: affinity-nodeport-transition-qz52v
  I0513 19:10:50.666888 21 service.go:242] Received response from host: affinity-nodeport-transition-qz52v
  I0513 19:10:50.667047 21 service.go:242] Received response from host: affinity-nodeport-transition-h55cx
  I0513 19:10:50.667071 21 service.go:242] Received response from host: affinity-nodeport-transition-kckh7
  I0513 19:10:50.667236 21 service.go:242] Received response from host: affinity-nodeport-transition-qz52v
  I0513 19:10:50.667257 21 service.go:242] Received response from host: affinity-nodeport-transition-h55cx
  I0513 19:10:50.667271 21 service.go:242] Received response from host: affinity-nodeport-transition-h55cx
  I0513 19:10:50.667437 21 service.go:242] Received response from host: affinity-nodeport-transition-kckh7
  I0513 19:10:50.667456 21 service.go:242] Received response from host: affinity-nodeport-transition-h55cx
  I0513 19:10:50.686580 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-3240 exec execpod-affinityp5565 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.13.166:31431/ ; done'
  I0513 19:10:50.990731 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31431/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.13.166:31431/\n"
  I0513 19:10:50.990812 21 builder.go:147] stdout: "\naffinity-nodeport-transition-qz52v\naffinity-nodeport-transition-qz52v\naffinity-nodeport-transition-qz52v\naffinity-nodeport-transition-qz52v\naffinity-nodeport-transition-qz52v\naffinity-nodeport-transition-qz52v\naffinity-nodeport-transition-qz52v\naffinity-nodeport-transition-qz52v\naffinity-nodeport-transition-qz52v\naffinity-nodeport-transition-qz52v\naffinity-nodeport-transition-qz52v\naffinity-nodeport-transition-qz52v\naffinity-nodeport-transition-qz52v\naffinity-nodeport-transition-qz52v\naffinity-nodeport-transition-qz52v\naffinity-nodeport-transition-qz52v"
  I0513 19:10:50.990837 21 service.go:242] Received response from host: affinity-nodeport-transition-qz52v
  I0513 19:10:50.990856 21 service.go:242] Received response from host: affinity-nodeport-transition-qz52v
  I0513 19:10:50.990872 21 service.go:242] Received response from host: affinity-nodeport-transition-qz52v
  I0513 19:10:50.990887 21 service.go:242] Received response from host: affinity-nodeport-transition-qz52v
  I0513 19:10:50.990901 21 service.go:242] Received response from host: affinity-nodeport-transition-qz52v
  I0513 19:10:50.990915 21 service.go:242] Received response from host: affinity-nodeport-transition-qz52v
  I0513 19:10:50.990929 21 service.go:242] Received response from host: affinity-nodeport-transition-qz52v
  I0513 19:10:50.990943 21 service.go:242] Received response from host: affinity-nodeport-transition-qz52v
  I0513 19:10:50.990957 21 service.go:242] Received response from host: affinity-nodeport-transition-qz52v
  I0513 19:10:50.990971 21 service.go:242] Received response from host: affinity-nodeport-transition-qz52v
  I0513 19:10:50.990985 21 service.go:242] Received response from host: affinity-nodeport-transition-qz52v
  I0513 19:10:50.990999 21 service.go:242] Received response from host: affinity-nodeport-transition-qz52v
  I0513 19:10:50.991013 21 service.go:242] Received response from host: affinity-nodeport-transition-qz52v
  I0513 19:10:50.991027 21 service.go:242] Received response from host: affinity-nodeport-transition-qz52v
  I0513 19:10:50.991042 21 service.go:242] Received response from host: affinity-nodeport-transition-qz52v
  I0513 19:10:50.991056 21 service.go:242] Received response from host: affinity-nodeport-transition-qz52v
  I0513 19:10:50.991160 21 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-3240, will wait for the garbage collector to delete the pods @ 05/13/24 19:10:51.031
  I0513 19:10:51.101804 21 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 12.807959ms
  I0513 19:10:51.602186 21 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 500.381302ms
  I0513 19:10:55.542801 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3240" for this suite. @ 05/13/24 19:10:55.547
• [21.331 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 05/13/24 19:10:55.561
  I0513 19:10:55.562066 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/13/24 19:10:55.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:10:55.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:10:55.618
  STEP: creating a policy with variables @ 05/13/24 19:10:55.627
  STEP: waiting until the marker is denied @ 05/13/24 19:10:55.733
  STEP: testing a replicated Deployment to be allowed @ 05/13/24 19:10:56.927
  STEP: testing a non-replicated ReplicaSet not to be denied @ 05/13/24 19:10:56.95
  I0513 19:10:57.407423 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-791" for this suite. @ 05/13/24 19:10:57.412
• [1.868 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 05/13/24 19:10:57.439
  I0513 19:10:57.439925 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:10:57.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:10:57.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:10:57.47
  STEP: Creating the pod @ 05/13/24 19:10:57.472
  I0513 19:11:00.284845 21 pod_client.go:141] Successfully updated pod "labelsupdate8d5320a6-8a7f-4afa-9089-64c75ea29c84"
  I0513 19:11:04.625922 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7884" for this suite. @ 05/13/24 19:11:04.631
• [7.201 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 05/13/24 19:11:04.642
  I0513 19:11:04.642481 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/13/24 19:11:04.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:11:04.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:11:04.686
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 05/13/24 19:11:04.689
  I0513 19:11:04.690085 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 05/13/24 19:11:11.779
  I0513 19:11:11.780016 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 19:11:14.069066 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 19:11:22.092678 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7495" for this suite. @ 05/13/24 19:11:22.104
• [17.474 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 05/13/24 19:11:22.118
  I0513 19:11:22.118730 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename secrets @ 05/13/24 19:11:22.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:11:22.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:11:22.164
  STEP: Creating secret with name secret-test-742816c4-18d0-4e7f-a322-2b8e0f6b8b83 @ 05/13/24 19:11:22.221
  STEP: Creating a pod to test consume secrets @ 05/13/24 19:11:22.229
  STEP: Saw pod success @ 05/13/24 19:11:26.262
  I0513 19:11:26.265594 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-secrets-bf112975-ee60-4331-88d1-c7788a15df03 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/13/24 19:11:26.303
  I0513 19:11:26.337756 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7187" for this suite. @ 05/13/24 19:11:26.343
  STEP: Destroying namespace "secret-namespace-7121" for this suite. @ 05/13/24 19:11:26.355
• [4.249 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 05/13/24 19:11:26.367
  I0513 19:11:26.368063 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename server-version @ 05/13/24 19:11:26.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:11:26.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:11:26.399
  STEP: Request ServerVersion @ 05/13/24 19:11:26.405
  STEP: Confirm major version @ 05/13/24 19:11:26.406
  I0513 19:11:26.406735 21 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 05/13/24 19:11:26.406
  I0513 19:11:26.406913 21 server_version.go:58] cleanMinorVersion: 30
  I0513 19:11:26.406951 21 server_version.go:62] Minor version: 30
  I0513 19:11:26.407074 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-8127" for this suite. @ 05/13/24 19:11:26.412
• [0.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 05/13/24 19:11:26.43
  I0513 19:11:26.430105 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename resourcequota @ 05/13/24 19:11:26.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:11:26.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:11:26.473
  STEP: Counting existing ResourceQuota @ 05/13/24 19:11:26.477
  STEP: Creating a ResourceQuota @ 05/13/24 19:11:31.482
  STEP: Ensuring resource quota status is calculated @ 05/13/24 19:11:31.492
  I0513 19:11:33.498785 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9090" for this suite. @ 05/13/24 19:11:33.509
• [7.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 05/13/24 19:11:33.523
  I0513 19:11:33.523536 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:11:33.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:11:33.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:11:33.556
  STEP: Creating a pod to test downward API volume plugin @ 05/13/24 19:11:33.561
  STEP: Saw pod success @ 05/13/24 19:11:37.641
  I0513 19:11:37.645829 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod downwardapi-volume-c95e4f5d-3061-4054-8ef3-14f911524e1e container client-container: <nil>
  STEP: delete the pod @ 05/13/24 19:11:37.654
  I0513 19:11:37.671764 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-856" for this suite. @ 05/13/24 19:11:37.676
• [4.162 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 05/13/24 19:11:37.686
  I0513 19:11:37.686859 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename runtimeclass @ 05/13/24 19:11:37.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:11:37.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:11:37.716
  I0513 19:11:39.751714 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5264" for this suite. @ 05/13/24 19:11:39.76
• [2.083 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 05/13/24 19:11:39.77
  I0513 19:11:39.770684 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename statefulset @ 05/13/24 19:11:39.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:11:39.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:11:39.797
  STEP: Creating service test in namespace statefulset-4227 @ 05/13/24 19:11:39.801
  STEP: Creating statefulset ss in namespace statefulset-4227 @ 05/13/24 19:11:39.825
  I0513 19:11:39.840113 21 wait.go:40] Found 0 stateful pods, waiting for 1
  I0513 19:11:49.837346 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 05/13/24 19:11:49.843
  STEP: Getting /status @ 05/13/24 19:11:49.863
  I0513 19:11:49.869270 21 statefulset.go:1067] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 05/13/24 19:11:49.869
  I0513 19:11:49.883161 21 statefulset.go:1087] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 05/13/24 19:11:49.883
  I0513 19:11:49.887350 21 statefulset.go:1115] Observed &StatefulSet event: ADDED
  I0513 19:11:49.887427 21 statefulset.go:1108] Found Statefulset ss in namespace statefulset-4227 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0513 19:11:49.887447 21 statefulset.go:1119] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 05/13/24 19:11:49.887
  I0513 19:11:49.887739 21 statefulset.go:1123] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0513 19:11:49.911643 21 statefulset.go:1127] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 05/13/24 19:11:49.911
  I0513 19:11:49.915326 21 statefulset.go:1152] Observed &StatefulSet event: ADDED
  I0513 19:11:49.915399 21 statefulset.go:1148] Observed Statefulset ss in namespace statefulset-4227 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0513 19:11:49.915743 21 statefulset.go:1152] Observed &StatefulSet event: MODIFIED
  I0513 19:11:49.915907 21 statefulset.go:135] Deleting all statefulset in ns statefulset-4227
  I0513 19:11:49.920308 21 rest.go:150] Scaling statefulset ss to 0
  I0513 19:11:59.953059 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0513 19:11:59.956058 21 rest.go:88] Deleting statefulset ss
  I0513 19:11:59.976618 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4227" for this suite. @ 05/13/24 19:11:59.993
• [20.238 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 05/13/24 19:12:00.009
  I0513 19:12:00.009838 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename downward-api @ 05/13/24 19:12:00.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:12:00.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:12:00.051
  STEP: Creating a pod to test downward API volume plugin @ 05/13/24 19:12:00.056
  STEP: Saw pod success @ 05/13/24 19:12:04.1
  I0513 19:12:04.109558 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod downwardapi-volume-2adb7366-d6e7-4317-87ff-6cd21983b48b container client-container: <nil>
  STEP: delete the pod @ 05/13/24 19:12:04.117
  I0513 19:12:04.150472 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9188" for this suite. @ 05/13/24 19:12:04.155
• [4.179 seconds]
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 05/13/24 19:12:04.189
  I0513 19:12:04.189413 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename controllerrevisions @ 05/13/24 19:12:04.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:12:04.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:12:04.224
  STEP: Creating DaemonSet "e2e-7f4pt-daemon-set" @ 05/13/24 19:12:04.294
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/13/24 19:12:04.305
  I0513 19:12:04.320127 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-7f4pt-daemon-set: 0
  I0513 19:12:04.320193 21 fixtures.go:130] Node ip-172-31-13-166.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 19:12:05.319983 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-7f4pt-daemon-set: 0
  I0513 19:12:05.320048 21 fixtures.go:130] Node ip-172-31-13-166.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 19:12:06.313854 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-7f4pt-daemon-set: 1
  I0513 19:12:06.313907 21 fixtures.go:130] Node ip-172-31-13-166.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 19:12:07.316295 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-7f4pt-daemon-set: 4
  I0513 19:12:07.316350 21 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset e2e-7f4pt-daemon-set
  STEP: Confirm DaemonSet "e2e-7f4pt-daemon-set" successfully created with "daemonset-name=e2e-7f4pt-daemon-set" label @ 05/13/24 19:12:07.319
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-7f4pt-daemon-set" @ 05/13/24 19:12:07.327
  I0513 19:12:07.332079 21 controller_revision.go:162] Located ControllerRevision: "e2e-7f4pt-daemon-set-6d845b6fdd"
  STEP: Patching ControllerRevision "e2e-7f4pt-daemon-set-6d845b6fdd" @ 05/13/24 19:12:07.335
  I0513 19:12:07.346895 21 controller_revision.go:173] e2e-7f4pt-daemon-set-6d845b6fdd has been patched
  STEP: Create a new ControllerRevision @ 05/13/24 19:12:07.347
  I0513 19:12:07.372843 21 controller_revision.go:191] Created ControllerRevision: e2e-7f4pt-daemon-set-5b67697b48
  STEP: Confirm that there are two ControllerRevisions @ 05/13/24 19:12:07.373
  I0513 19:12:07.373234 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0513 19:12:07.377226 21 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-7f4pt-daemon-set-6d845b6fdd" @ 05/13/24 19:12:07.377
  STEP: Confirm that there is only one ControllerRevision @ 05/13/24 19:12:07.388
  I0513 19:12:07.388755 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0513 19:12:07.392304 21 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-7f4pt-daemon-set-5b67697b48" @ 05/13/24 19:12:07.399
  I0513 19:12:07.413743 21 controller_revision.go:220] e2e-7f4pt-daemon-set-5b67697b48 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 05/13/24 19:12:07.414
  W0513 19:12:07.435374      21 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 05/13/24 19:12:07.435
  I0513 19:12:07.435539 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0513 19:12:08.436301 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0513 19:12:08.441066 21 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-7f4pt-daemon-set-5b67697b48=updated" @ 05/13/24 19:12:08.441
  STEP: Confirm that there is only one ControllerRevision @ 05/13/24 19:12:08.464
  I0513 19:12:08.465015 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0513 19:12:08.467954 21 controller_revision.go:265] Found 1 ControllerRevisions
  I0513 19:12:08.471415 21 controller_revision.go:246] ControllerRevision "e2e-7f4pt-daemon-set-6694b59745" has revision 3
  STEP: Deleting DaemonSet "e2e-7f4pt-daemon-set" @ 05/13/24 19:12:08.475
  STEP: deleting DaemonSet.extensions e2e-7f4pt-daemon-set in namespace controllerrevisions-6467, will wait for the garbage collector to delete the pods @ 05/13/24 19:12:08.475
  I0513 19:12:08.541028 21 resources.go:139] Deleting DaemonSet.extensions e2e-7f4pt-daemon-set took: 11.694365ms
  I0513 19:12:08.641856 21 resources.go:163] Terminating DaemonSet.extensions e2e-7f4pt-daemon-set pods took: 100.825552ms
  I0513 19:12:10.746445 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-7f4pt-daemon-set: 0
  I0513 19:12:10.746503 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-7f4pt-daemon-set
  I0513 19:12:10.749376 21 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"53623"},"items":null}

  I0513 19:12:10.752389 21 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"53623"},"items":null}

  I0513 19:12:10.777250 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-6467" for this suite. @ 05/13/24 19:12:10.784
• [6.601 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 05/13/24 19:12:10.79
  I0513 19:12:10.790606 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename certificates @ 05/13/24 19:12:10.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:12:10.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:12:10.815
  STEP: getting /apis @ 05/13/24 19:12:11.468
  STEP: getting /apis/certificates.k8s.io @ 05/13/24 19:12:11.478
  STEP: getting /apis/certificates.k8s.io/v1 @ 05/13/24 19:12:11.48
  STEP: creating @ 05/13/24 19:12:11.482
  STEP: getting @ 05/13/24 19:12:11.512
  STEP: listing @ 05/13/24 19:12:11.515
  STEP: watching @ 05/13/24 19:12:11.519
  I0513 19:12:11.519209 21 certificates.go:316] starting watch
  STEP: patching @ 05/13/24 19:12:11.52
  STEP: updating @ 05/13/24 19:12:11.531
  I0513 19:12:11.546041 21 certificates.go:332] waiting for watch events with expected annotations
  I0513 19:12:11.546210 21 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 05/13/24 19:12:11.546
  STEP: patching /approval @ 05/13/24 19:12:11.551
  STEP: updating /approval @ 05/13/24 19:12:11.56
  STEP: getting /status @ 05/13/24 19:12:11.569
  STEP: patching /status @ 05/13/24 19:12:11.572
  STEP: updating /status @ 05/13/24 19:12:11.582
  STEP: deleting @ 05/13/24 19:12:11.593
  STEP: deleting a collection @ 05/13/24 19:12:11.608
  I0513 19:12:11.625479 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-6828" for this suite. @ 05/13/24 19:12:11.629
• [0.847 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 05/13/24 19:12:11.638
  I0513 19:12:11.638678 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename svcaccounts @ 05/13/24 19:12:11.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:12:11.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:12:11.665
  I0513 19:12:11.697447 21 service_accounts.go:253] created pod pod-service-account-defaultsa
  I0513 19:12:11.697504 21 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I0513 19:12:11.713421 21 service_accounts.go:253] created pod pod-service-account-mountsa
  I0513 19:12:11.713479 21 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I0513 19:12:11.736906 21 service_accounts.go:253] created pod pod-service-account-nomountsa
  I0513 19:12:11.736957 21 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  I0513 19:12:11.758717 21 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I0513 19:12:11.758798 21 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0513 19:12:11.780119 21 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I0513 19:12:11.780170 21 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0513 19:12:11.803429 21 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I0513 19:12:11.803803 21 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0513 19:12:11.826342 21 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I0513 19:12:11.826746 21 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0513 19:12:11.846156 21 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I0513 19:12:11.846213 21 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0513 19:12:11.869170 21 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I0513 19:12:11.869338 21 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0513 19:12:11.869494 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2420" for this suite. @ 05/13/24 19:12:11.888
• [0.284 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1368
  STEP: Creating a kubernetes client @ 05/13/24 19:12:11.925
  I0513 19:12:11.925716 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename kubectl @ 05/13/24 19:12:11.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:12:11.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:12:11.979
  STEP: validating cluster-info @ 05/13/24 19:12:11.983
  I0513 19:12:11.983329 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-6034 cluster-info'
  I0513 19:12:12.232818 21 builder.go:146] stderr: ""
  I0513 19:12:12.232895 21 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.43.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0513 19:12:12.232992 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6034" for this suite. @ 05/13/24 19:12:12.239
• [0.334 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 05/13/24 19:12:12.259
  I0513 19:12:12.259365 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename downward-api @ 05/13/24 19:12:12.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:12:12.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:12:12.307
  STEP: Creating a pod to test downward API volume plugin @ 05/13/24 19:12:12.317
  STEP: Saw pod success @ 05/13/24 19:12:20.396
  I0513 19:12:20.400449 21 output.go:196] Trying to get logs from node ip-172-31-14-71.us-east-2.compute.internal pod downwardapi-volume-8f095bfc-7383-41df-a9f5-520f44afd133 container client-container: <nil>
  STEP: delete the pod @ 05/13/24 19:12:20.42
  I0513 19:12:20.452044 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8771" for this suite. @ 05/13/24 19:12:20.457
• [8.210 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 05/13/24 19:12:20.473
  I0513 19:12:20.473973 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/13/24 19:12:20.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:12:20.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:12:20.517
  STEP: getting /apis @ 05/13/24 19:12:20.53
  STEP: getting /apis/admissionregistration.k8s.io @ 05/13/24 19:12:20.542
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 05/13/24 19:12:20.544
  STEP: creating @ 05/13/24 19:12:20.545
  STEP: getting @ 05/13/24 19:12:20.578
  STEP: listing @ 05/13/24 19:12:20.581
  STEP: watching @ 05/13/24 19:12:20.585
  I0513 19:12:20.585276 21 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 05/13/24 19:12:20.587
  STEP: updating @ 05/13/24 19:12:20.596
  I0513 19:12:20.611342 21 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 05/13/24 19:12:20.611
  STEP: deleting a collection @ 05/13/24 19:12:20.627
  I0513 19:12:20.668285 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3090" for this suite. @ 05/13/24 19:12:20.677
• [0.219 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 05/13/24 19:12:20.695
  I0513 19:12:20.695419 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename container-runtime @ 05/13/24 19:12:20.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:12:20.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:12:20.737
  STEP: create the container @ 05/13/24 19:12:20.746
  W0513 19:12:20.775423      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/13/24 19:12:20.775
  STEP: get the container status @ 05/13/24 19:12:23.793
  STEP: the container should be terminated @ 05/13/24 19:12:23.797
  STEP: the termination message should be set @ 05/13/24 19:12:23.797
  I0513 19:12:23.797877 21 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 05/13/24 19:12:23.798
  I0513 19:12:23.824739 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-426" for this suite. @ 05/13/24 19:12:23.828
• [3.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 05/13/24 19:12:23.84
  I0513 19:12:23.840691 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:12:23.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:12:23.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:12:23.882
  STEP: Creating projection with secret that has name projected-secret-test-map-571cd03f-4009-413b-ac4f-3caf06054eff @ 05/13/24 19:12:23.885
  STEP: Creating a pod to test consume secrets @ 05/13/24 19:12:23.895
  STEP: Saw pod success @ 05/13/24 19:12:27.952
  I0513 19:12:27.955446 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-projected-secrets-b2f0312e-458a-42c8-8326-ed66da272c49 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/13/24 19:12:27.962
  I0513 19:12:27.993049 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-934" for this suite. @ 05/13/24 19:12:27.997
• [4.174 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 05/13/24 19:12:28.015
  I0513 19:12:28.015731 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename watch @ 05/13/24 19:12:28.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:12:28.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:12:28.065
  STEP: creating a watch on configmaps with label A @ 05/13/24 19:12:28.073
  STEP: creating a watch on configmaps with label B @ 05/13/24 19:12:28.076
  STEP: creating a watch on configmaps with label A or B @ 05/13/24 19:12:28.078
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 05/13/24 19:12:28.079
  I0513 19:12:28.089707 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2600  40add6c7-b3c4-4745-b8df-ad083cd121f5 53945 0 2024-05-13 19:12:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-13 19:12:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0513 19:12:28.090267 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2600  40add6c7-b3c4-4745-b8df-ad083cd121f5 53945 0 2024-05-13 19:12:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-13 19:12:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 05/13/24 19:12:28.09
  I0513 19:12:28.105104 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2600  40add6c7-b3c4-4745-b8df-ad083cd121f5 53946 0 2024-05-13 19:12:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-13 19:12:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0513 19:12:28.105527 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2600  40add6c7-b3c4-4745-b8df-ad083cd121f5 53946 0 2024-05-13 19:12:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-13 19:12:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 05/13/24 19:12:28.105
  I0513 19:12:28.128480 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2600  40add6c7-b3c4-4745-b8df-ad083cd121f5 53947 0 2024-05-13 19:12:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-13 19:12:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0513 19:12:28.129052 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2600  40add6c7-b3c4-4745-b8df-ad083cd121f5 53947 0 2024-05-13 19:12:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-13 19:12:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 05/13/24 19:12:28.129
  I0513 19:12:28.145051 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2600  40add6c7-b3c4-4745-b8df-ad083cd121f5 53948 0 2024-05-13 19:12:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-13 19:12:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0513 19:12:28.145640 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2600  40add6c7-b3c4-4745-b8df-ad083cd121f5 53948 0 2024-05-13 19:12:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-13 19:12:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 05/13/24 19:12:28.145
  I0513 19:12:28.155981 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2600  09704533-db0b-437f-99b2-faa71eaeb441 53949 0 2024-05-13 19:12:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-13 19:12:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0513 19:12:28.156299 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2600  09704533-db0b-437f-99b2-faa71eaeb441 53949 0 2024-05-13 19:12:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-13 19:12:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 05/13/24 19:12:38.158
  I0513 19:12:38.166314 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2600  09704533-db0b-437f-99b2-faa71eaeb441 54005 0 2024-05-13 19:12:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-13 19:12:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0513 19:12:38.166609 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2600  09704533-db0b-437f-99b2-faa71eaeb441 54005 0 2024-05-13 19:12:28 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-13 19:12:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0513 19:12:48.167809 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2600" for this suite. @ 05/13/24 19:12:48.173
• [20.168 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 05/13/24 19:12:48.184
  I0513 19:12:48.184240 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/13/24 19:12:48.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:12:48.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:12:48.227
  I0513 19:12:48.236055 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/13/24 19:12:50.462
  I0513 19:12:50.463179 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=crd-publish-openapi-8056 --namespace=crd-publish-openapi-8056 create -f -'
  I0513 19:12:50.609652 21 builder.go:146] stderr: ""
  I0513 19:12:50.609847 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6052-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0513 19:12:50.609916 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=crd-publish-openapi-8056 --namespace=crd-publish-openapi-8056 delete e2e-test-crd-publish-openapi-6052-crds test-cr'
  I0513 19:12:50.699940 21 builder.go:146] stderr: ""
  I0513 19:12:50.700023 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6052-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0513 19:12:50.700102 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=crd-publish-openapi-8056 --namespace=crd-publish-openapi-8056 apply -f -'
  I0513 19:12:50.823836 21 builder.go:146] stderr: ""
  I0513 19:12:50.823893 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6052-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0513 19:12:50.824036 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=crd-publish-openapi-8056 --namespace=crd-publish-openapi-8056 delete e2e-test-crd-publish-openapi-6052-crds test-cr'
  I0513 19:12:50.939403 21 builder.go:146] stderr: ""
  I0513 19:12:50.939580 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6052-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 05/13/24 19:12:50.939
  I0513 19:12:50.939686 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=crd-publish-openapi-8056 explain e2e-test-crd-publish-openapi-6052-crds'
  I0513 19:12:51.020644 21 builder.go:146] stderr: ""
  I0513 19:12:51.020725 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-6052-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0513 19:12:53.002180 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8056" for this suite. @ 05/13/24 19:12:53.009
• [4.847 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 05/13/24 19:12:53.032
  I0513 19:12:53.032665 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename svcaccounts @ 05/13/24 19:12:53.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:12:53.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:12:53.081
  STEP: Creating a pod to test service account token:  @ 05/13/24 19:12:53.084
  STEP: Saw pod success @ 05/13/24 19:12:57.115
  I0513 19:12:57.119339 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod test-pod-67b96d04-5cef-43be-abce-a82e0be76fbc container agnhost-container: <nil>
  STEP: delete the pod @ 05/13/24 19:12:57.137
  I0513 19:12:57.170350 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9182" for this suite. @ 05/13/24 19:12:57.181
• [4.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 05/13/24 19:12:57.2
  I0513 19:12:57.200146 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename namespaces @ 05/13/24 19:12:57.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:12:57.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:12:57.229
  STEP: Creating a test namespace @ 05/13/24 19:12:57.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:12:57.264
  STEP: Creating a pod in the namespace @ 05/13/24 19:12:57.268
  STEP: Waiting for the pod to have running status @ 05/13/24 19:12:57.281
  STEP: Deleting the namespace @ 05/13/24 19:13:01.311
  STEP: Waiting for the namespace to be removed. @ 05/13/24 19:13:01.324
  STEP: Recreating the namespace @ 05/13/24 19:13:12.328
  STEP: Verifying there are no pods in the namespace @ 05/13/24 19:13:12.365
  I0513 19:13:12.373600 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2298" for this suite. @ 05/13/24 19:13:12.379
  STEP: Destroying namespace "nsdeletetest-5007" for this suite. @ 05/13/24 19:13:12.391
  I0513 19:13:12.395438 21 framework.go:370] Namespace nsdeletetest-5007 was already deleted
  STEP: Destroying namespace "nsdeletetest-3240" for this suite. @ 05/13/24 19:13:12.395
• [15.220 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 05/13/24 19:13:12.421
  I0513 19:13:12.422015 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename pods @ 05/13/24 19:13:12.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:13:12.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:13:12.463
  STEP: creating the pod @ 05/13/24 19:13:12.466
  STEP: setting up watch @ 05/13/24 19:13:12.467
  STEP: submitting the pod to kubernetes @ 05/13/24 19:13:12.571
  STEP: verifying the pod is in kubernetes @ 05/13/24 19:13:12.59
  STEP: verifying pod creation was observed @ 05/13/24 19:13:12.604
  STEP: deleting the pod gracefully @ 05/13/24 19:13:16.634
  STEP: verifying pod deletion was observed @ 05/13/24 19:13:16.658
  I0513 19:13:17.714133 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7626" for this suite. @ 05/13/24 19:13:17.72
• [5.312 seconds]
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 05/13/24 19:13:17.734
  I0513 19:13:17.734982 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename deployment @ 05/13/24 19:13:17.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:13:17.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:13:17.774
  I0513 19:13:17.782555 21 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0513 19:13:17.806324 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0513 19:13:22.813555 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/13/24 19:13:22.813
  I0513 19:13:22.813748 21 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0513 19:13:22.830097 21 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0513 19:13:22.854472 21 deployment.go:222] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I0513 19:13:24.863997 21 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0513 19:13:24.867246 21 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0513 19:13:24.878928 21 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1156",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8a805e0a-cc99-4c04-bdb4-44cabf46e41b",
      ResourceVersion: (string) (len=5) "54355",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6f4b778cd6\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0513 19:13:24.894012 21 deployment.go:39] New ReplicaSet "test-rolling-update-deployment-6f4b778cd6" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6f4b778cd6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1156",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9f70c90a-f1d5-47b0-8947-18ad9f808487",
      ResourceVersion: (string) (len=5) "54345",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "8a805e0a-cc99-4c04-bdb4-44cabf46e41b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 61 38 30 35 65  30 61 2d 63 63 39 39 2d  |\"8a805e0a-cc99-|
              00000120  34 63 30 34 2d 62 64 62  34 2d 34 34 63 61 62 66  |4c04-bdb4-44cabf|
              00000130  34 36 65 34 31 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |46e41b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0513 19:13:24.895464 21 deployment.go:44] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0513 19:13:24.896146 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1156",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7e083b07-7db0-48fb-af7a-d3154a455ce5",
      ResourceVersion: (string) (len=5) "54354",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224397,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "8a805e0a-cc99-4c04-bdb4-44cabf46e41b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224397,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 38 61 38 30 35 65 30  |"uid\":\"8a805e0|
              000000b0  61 2d 63 63 39 39 2d 34  63 30 34 2d 62 64 62 34  |a-cc99-4c04-bdb4|
              000000c0  2d 34 34 63 61 62 66 34  36 65 34 31 62 5c 22 7d  |-44cabf46e41b\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0513 19:13:24.903335 21 deployment.go:67] Pod "test-rolling-update-deployment-6f4b778cd6-6n9x6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6f4b778cd6-6n9x6",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6f4b778cd6-",
      Namespace: (string) (len=15) "deployment-1156",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a606a48b-cccf-4520-ab70-2a268580f8db",
      ResourceVersion: (string) (len=5) "54344",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "8aebd89315aa962a0746095f0f187e48871511c081c605d14f2a8b9a1aede0d3",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.4.190/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.4.190/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6f4b778cd6",
          UID: (types.UID) (len=36) "9f70c90a-f1d5-47b0-8947-18ad9f808487",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  37 30 63 39 30 61 2d 66  |d\":\"9f70c90a-f|
              00000090  31 64 35 2d 34 37 62 30  2d 38 39 34 37 2d 31 38  |1d5-47b0-8947-18|
              000000a0  61 64 39 66 38 30 38 34  38 37 5c 22 7d 22 3a 7b  |ad9f808487\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224403,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 34 2e 31 39  30 5c 22 7d 22 3a 7b 22  |.42.4.190\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4j4ms",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4j4ms",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-7-107.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224402,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.7.107",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.7.107"
        }
      },
      PodIP: (string) (len=11) "10.42.4.190",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.4.190"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224402,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851224404,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://ff66b63eea64a3ce0cc289236e1cb98cdf4eda1b7e295dab712f571058d9ba15",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:13:24.914962 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1156" for this suite. @ 05/13/24 19:13:24.92
• [7.202 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1858
  STEP: Creating a kubernetes client @ 05/13/24 19:13:24.936
  I0513 19:13:24.936821 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename kubectl @ 05/13/24 19:13:24.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:13:25.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:13:25.029
  STEP: Starting the proxy @ 05/13/24 19:13:25.032
  I0513 19:13:25.033082 21 util.go:592] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8121 proxy --unix-socket=/tmp/kubectl-proxy-unix2974284430/test'
  STEP: retrieving proxy /api/ output @ 05/13/24 19:13:25.125
  I0513 19:13:25.126527 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8121" for this suite. @ 05/13/24 19:13:25.134
• [0.214 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 05/13/24 19:13:25.151
  I0513 19:13:25.151112 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename daemonsets @ 05/13/24 19:13:25.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:13:25.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:13:25.188
  I0513 19:13:25.228621 21 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/13/24 19:13:25.242
  I0513 19:13:25.260234 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 19:13:25.260283 21 fixtures.go:130] Node ip-172-31-13-166.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 19:13:26.308416 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 19:13:26.308467 21 fixtures.go:130] Node ip-172-31-13-166.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 19:13:27.264219 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 19:13:27.264285 21 fixtures.go:130] Node ip-172-31-13-166.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 19:13:28.251940 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0513 19:13:28.251982 21 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Update daemon pods image. @ 05/13/24 19:13:28.285
  STEP: Check that daemon pods images are updated. @ 05/13/24 19:13:28.339
  I0513 19:13:28.346031 21 daemon_set.go:1178] Wrong image for pod: daemon-set-65227. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0513 19:13:28.346088 21 daemon_set.go:1178] Wrong image for pod: daemon-set-9h2wv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0513 19:13:28.346107 21 daemon_set.go:1178] Wrong image for pod: daemon-set-pdtp4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0513 19:13:29.347007 21 daemon_set.go:1178] Wrong image for pod: daemon-set-65227. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0513 19:13:29.347067 21 daemon_set.go:1178] Wrong image for pod: daemon-set-9h2wv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0513 19:13:29.347084 21 daemon_set.go:1178] Wrong image for pod: daemon-set-pdtp4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0513 19:13:30.365618 21 daemon_set.go:1178] Wrong image for pod: daemon-set-65227. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0513 19:13:30.367298 21 daemon_set.go:1178] Wrong image for pod: daemon-set-9h2wv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0513 19:13:30.367919 21 daemon_set.go:1183] Pod daemon-set-kqv2c is not available
  I0513 19:13:30.368768 21 daemon_set.go:1178] Wrong image for pod: daemon-set-pdtp4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0513 19:13:31.345303 21 daemon_set.go:1178] Wrong image for pod: daemon-set-65227. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0513 19:13:31.345553 21 daemon_set.go:1178] Wrong image for pod: daemon-set-9h2wv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0513 19:13:31.345711 21 daemon_set.go:1183] Pod daemon-set-kqv2c is not available
  I0513 19:13:31.345859 21 daemon_set.go:1178] Wrong image for pod: daemon-set-pdtp4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0513 19:13:32.360538 21 daemon_set.go:1178] Wrong image for pod: daemon-set-65227. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0513 19:13:32.360612 21 daemon_set.go:1178] Wrong image for pod: daemon-set-pdtp4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0513 19:13:33.349052 21 daemon_set.go:1178] Wrong image for pod: daemon-set-65227. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0513 19:13:33.349108 21 daemon_set.go:1178] Wrong image for pod: daemon-set-pdtp4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0513 19:13:33.349129 21 daemon_set.go:1183] Pod daemon-set-w87z8 is not available
  I0513 19:13:34.346220 21 daemon_set.go:1178] Wrong image for pod: daemon-set-65227. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0513 19:13:34.346424 21 daemon_set.go:1178] Wrong image for pod: daemon-set-pdtp4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0513 19:13:34.346659 21 daemon_set.go:1183] Pod daemon-set-w87z8 is not available
  I0513 19:13:35.344426 21 daemon_set.go:1178] Wrong image for pod: daemon-set-65227. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0513 19:13:36.344678 21 daemon_set.go:1178] Wrong image for pod: daemon-set-65227. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0513 19:13:36.344742 21 daemon_set.go:1183] Pod daemon-set-jfpxf is not available
  I0513 19:13:37.345888 21 daemon_set.go:1178] Wrong image for pod: daemon-set-65227. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0513 19:13:37.346098 21 daemon_set.go:1183] Pod daemon-set-jfpxf is not available
  I0513 19:13:39.346087 21 daemon_set.go:1183] Pod daemon-set-6nc7q is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 05/13/24 19:13:39.35
  I0513 19:13:39.361627 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0513 19:13:39.361868 21 fixtures.go:130] Node ip-172-31-13-166.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 19:13:40.370373 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0513 19:13:40.370609 21 fixtures.go:130] Node ip-172-31-13-166.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 19:13:41.363027 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0513 19:13:41.363080 21 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/13/24 19:13:41.38
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-280, will wait for the garbage collector to delete the pods @ 05/13/24 19:13:41.38
  I0513 19:13:41.444432 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 10.467538ms
  I0513 19:13:41.844758 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 400.323139ms
  I0513 19:13:44.062203 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 19:13:44.062275 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0513 19:13:44.071809 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"54626"},"items":null}

  I0513 19:13:44.076384 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"54626"},"items":null}

  I0513 19:13:44.099631 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-280" for this suite. @ 05/13/24 19:13:44.105
• [18.969 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 05/13/24 19:13:44.12
  I0513 19:13:44.120931 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename downward-api @ 05/13/24 19:13:44.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:13:44.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:13:44.179
  STEP: Creating a pod to test downward API volume plugin @ 05/13/24 19:13:44.182
  STEP: Saw pod success @ 05/13/24 19:13:48.21
  I0513 19:13:48.213815 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod downwardapi-volume-2e529241-10b5-4be0-901a-4be8c0df1c54 container client-container: <nil>
  STEP: delete the pod @ 05/13/24 19:13:48.22
  I0513 19:13:48.325703 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2003" for this suite. @ 05/13/24 19:13:48.331
• [4.221 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 05/13/24 19:13:48.343
  I0513 19:13:48.343309 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename endpointslicemirroring @ 05/13/24 19:13:48.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:13:48.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:13:48.389
  STEP: mirroring a new custom Endpoint @ 05/13/24 19:13:48.506
  I0513 19:13:48.533844 21 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 05/13/24 19:13:50.539
  STEP: mirroring deletion of a custom Endpoint @ 05/13/24 19:13:50.559
  I0513 19:13:50.589377 21 endpointslicemirroring.go:194] Waiting for 0 EndpointSlices to exist, got 1
  I0513 19:13:52.605288 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-8584" for this suite. @ 05/13/24 19:13:52.61
• [4.278 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 05/13/24 19:13:52.623
  I0513 19:13:52.623039 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename deployment @ 05/13/24 19:13:52.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:13:52.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:13:52.651
  I0513 19:13:52.668351 21 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  I0513 19:13:57.675343 21 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/13/24 19:13:57.675
  I0513 19:13:57.675488 21 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 05/13/24 19:13:57.69
  I0513 19:13:57.726286 21 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7604",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9e66a351-a466-4a47-9e09-f6d28ad6b0d8",
      ResourceVersion: (string) (len=5) "54789",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224437,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224437,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0513 19:13:57.785123 21 deployment.go:39] New ReplicaSet "test-cleanup-deployment-7c4d497584" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-7c4d497584",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7604",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "01f7b82c-4646-4377-959a-951abeb109f2",
      ResourceVersion: (string) (len=5) "54800",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224437,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7c4d497584"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "9e66a351-a466-4a47-9e09-f6d28ad6b0d8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224437,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 65 36 36 61 33  35 31 2d 61 34 36 36 2d  |\"9e66a351-a466-|
              00000120  34 61 34 37 2d 39 65 30  39 2d 66 36 64 32 38 61  |4a47-9e09-f6d28a|
              00000130  64 36 62 30 64 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d6b0d8\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224437,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7c4d497584"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7c4d497584"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0513 19:13:57.786464 21 deployment.go:44] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I0513 19:13:57.786924 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7604",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e081b3d9-203d-4531-9592-25e862634e10",
      ResourceVersion: (string) (len=5) "54790",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224432,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "9e66a351-a466-4a47-9e09-f6d28ad6b0d8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224435,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224437,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 39 65 36 36 61 33 35  |"uid\":\"9e66a35|
              00000040  31 2d 61 34 36 36 2d 34  61 34 37 2d 39 65 30 39  |1-a466-4a47-9e09|
              00000050  2d 66 36 64 32 38 61 64  36 62 30 64 38 5c 22 7d  |-f6d28ad6b0d8\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0513 19:13:57.796047 21 deployment.go:67] Pod "test-cleanup-controller-5vvg9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-5vvg9",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-7604",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2bfe5c14-0f0a-4c2f-9b89-20dced20be9d",
      ResourceVersion: (string) (len=5) "54780",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224432,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "cea19b3ea84f583c028c16dc0b8b775ba35e278efb85eed442f4d88d653dc03e",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.4.194/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.4.194/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "e081b3d9-203d-4531-9592-25e862634e10",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  65 30 38 31 62 33 64 39  |uid\":\"e081b3d9|
              00000080  2d 32 30 33 64 2d 34 35  33 31 2d 39 35 39 32 2d  |-203d-4531-9592-|
              00000090  32 35 65 38 36 32 36 33  34 65 31 30 5c 22 7d 22  |25e862634e10\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224433,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 34 2e 31 39  34 5c 22 7d 22 3a 7b 22  |.42.4.194\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7dn9r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7dn9r",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-7-107.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224433,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.7.107",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.7.107"
        }
      },
      PodIP: (string) (len=11) "10.42.4.194",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.4.194"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224433,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851224434,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://763ff7ec03b1aaa45d1127bafc6ce9cbf28a0da872a283bc33b04a25e4a49602",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:13:57.799445 21 deployment.go:67] Pod "test-cleanup-deployment-7c4d497584-rqrhs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-7c4d497584-rqrhs",
      GenerateName: (string) (len=35) "test-cleanup-deployment-7c4d497584-",
      Namespace: (string) (len=15) "deployment-7604",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2835af54-5f73-4598-8445-0a408f80d5d5",
      ResourceVersion: (string) (len=5) "54802",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224437,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7c4d497584"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-7c4d497584",
          UID: (types.UID) (len=36) "01f7b82c-4646-4377-959a-951abeb109f2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224437,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 31  66 37 62 38 32 63 2d 34  |d\":\"01f7b82c-4|
              00000090  36 34 36 2d 34 33 37 37  2d 39 35 39 61 2d 39 35  |646-4377-959a-95|
              000000a0  31 61 62 65 62 31 30 39  66 32 5c 22 7d 22 3a 7b  |1abeb109f2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224437,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qw8qg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qw8qg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-7-107.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224437,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224437,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224437,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=41) "containers with unready status: [agnhost]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224437,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=41) "containers with unready status: [agnhost]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224437,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.7.107",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.7.107"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224437,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:13:57.802080 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7604" for this suite. @ 05/13/24 19:13:57.807
• [5.196 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 05/13/24 19:13:57.819
  I0513 19:13:57.819641 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/13/24 19:13:57.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:13:57.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:13:57.864
  I0513 19:13:57.869139 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 19:14:04.829089 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7863" for this suite. @ 05/13/24 19:14:04.837
• [7.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 05/13/24 19:14:04.856
  I0513 19:14:04.856697 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename secrets @ 05/13/24 19:14:04.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:14:04.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:14:04.907
  STEP: Creating secret with name secret-test-545388e5-78c9-4377-b1bf-ff59f63bcb17 @ 05/13/24 19:14:04.919
  STEP: Creating a pod to test consume secrets @ 05/13/24 19:14:04.93
  STEP: Saw pod success @ 05/13/24 19:14:08.984
  I0513 19:14:08.988218 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-secrets-93eb26ed-71cd-4f03-9849-0c8320c6b306 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/13/24 19:14:08.996
  I0513 19:14:09.061283 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6609" for this suite. @ 05/13/24 19:14:09.067
• [4.228 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1693
  STEP: Creating a kubernetes client @ 05/13/24 19:14:09.085
  I0513 19:14:09.085496 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename kubectl @ 05/13/24 19:14:09.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:14:09.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:14:09.121
  STEP: creating Agnhost RC @ 05/13/24 19:14:09.125
  I0513 19:14:09.125417 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-1940 create -f -'
  I0513 19:14:09.296666 21 builder.go:146] stderr: ""
  I0513 19:14:09.296750 21 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/13/24 19:14:09.296
  I0513 19:14:10.314675 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0513 19:14:10.314731 21 framework.go:733] Found 0 / 1
  I0513 19:14:11.302506 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0513 19:14:11.302591 21 framework.go:733] Found 1 / 1
  I0513 19:14:11.302621 21 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 05/13/24 19:14:11.302
  I0513 19:14:11.306655 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0513 19:14:11.306865 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0513 19:14:11.307016 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-1940 patch pod agnhost-primary-zl6lc -p {"metadata":{"annotations":{"x":"y"}}}'
  I0513 19:14:11.428126 21 builder.go:146] stderr: ""
  I0513 19:14:11.428176 21 builder.go:147] stdout: "pod/agnhost-primary-zl6lc patched\n"
  STEP: checking annotations @ 05/13/24 19:14:11.428
  I0513 19:14:11.435878 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0513 19:14:11.435929 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0513 19:14:11.436178 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1940" for this suite. @ 05/13/24 19:14:11.441
• [2.366 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1627
  STEP: Creating a kubernetes client @ 05/13/24 19:14:11.452
  I0513 19:14:11.452062 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename kubectl @ 05/13/24 19:14:11.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:14:11.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:14:11.615
  STEP: creating the pod @ 05/13/24 19:14:11.619
  I0513 19:14:11.620476 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-1158 create -f -'
  I0513 19:14:12.317394 21 builder.go:146] stderr: ""
  I0513 19:14:12.317453 21 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 05/13/24 19:14:14.356
  I0513 19:14:14.356175 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-1158 label pods pause testing-label=testing-label-value'
  I0513 19:14:14.470450 21 builder.go:146] stderr: ""
  I0513 19:14:14.470516 21 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 05/13/24 19:14:14.47
  I0513 19:14:14.470859 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-1158 get pod pause -L testing-label'
  I0513 19:14:14.548921 21 builder.go:146] stderr: ""
  I0513 19:14:14.548981 21 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 05/13/24 19:14:14.549
  I0513 19:14:14.549088 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-1158 label pods pause testing-label-'
  I0513 19:14:14.671621 21 builder.go:146] stderr: ""
  I0513 19:14:14.671690 21 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 05/13/24 19:14:14.671
  I0513 19:14:14.671777 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-1158 get pod pause -L testing-label'
  I0513 19:14:14.754468 21 builder.go:146] stderr: ""
  I0513 19:14:14.754526 21 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 05/13/24 19:14:14.754
  I0513 19:14:14.754678 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-1158 delete --grace-period=0 --force -f -'
  I0513 19:14:14.873711 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0513 19:14:14.873756 21 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0513 19:14:14.873822 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-1158 get rc,svc -l name=pause --no-headers'
  I0513 19:14:14.970432 21 builder.go:146] stderr: "No resources found in kubectl-1158 namespace.\n"
  I0513 19:14:14.970480 21 builder.go:147] stdout: ""
  I0513 19:14:14.970558 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-1158 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0513 19:14:15.376340 21 builder.go:146] stderr: ""
  I0513 19:14:15.376418 21 builder.go:147] stdout: ""
  I0513 19:14:15.376524 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1158" for this suite. @ 05/13/24 19:14:15.387
• [3.953 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 05/13/24 19:14:15.405
  I0513 19:14:15.405625 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename dns @ 05/13/24 19:14:15.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:14:15.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:14:15.455
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 05/13/24 19:14:15.458
  I0513 19:14:15.481680 21 dns.go:419] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-6236  73373618-3ae2-4c5d-b770-a4dbcb4a5cc3 55025 0 2024-05-13 19:14:15 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-05-13 19:14:15 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-pvcp6,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-pvcp6,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 05/13/24 19:14:17.497
  I0513 19:14:17.497387 21 exec_util.go:55] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-6236 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 19:14:17.497506 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 19:14:17.498286 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 19:14:17.498504 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/dns-6236/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 05/13/24 19:14:17.888
  I0513 19:14:17.888929 21 exec_util.go:55] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-6236 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 19:14:17.888981 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 19:14:17.889747 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 19:14:17.889884 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/dns-6236/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0513 19:14:18.005795 21 dns.go:421] Deleting pod test-dns-nameservers...
  I0513 19:14:18.041385 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6236" for this suite. @ 05/13/24 19:14:18.052
• [2.666 seconds]
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 05/13/24 19:14:18.072
  I0513 19:14:18.072496 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename dns @ 05/13/24 19:14:18.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:14:18.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:14:18.12
  STEP: Creating a test externalName service @ 05/13/24 19:14:18.123
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-574.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-574.svc.cluster.local; sleep 1; done
   @ 05/13/24 19:14:18.136
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-574.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-574.svc.cluster.local; sleep 1; done
   @ 05/13/24 19:14:18.136
  STEP: creating a pod to probe DNS @ 05/13/24 19:14:18.137
  STEP: submitting the pod to kubernetes @ 05/13/24 19:14:18.137
  STEP: retrieving the pod @ 05/13/24 19:14:22.172
  STEP: looking for the results for each expected name from probers @ 05/13/24 19:14:22.176
  I0513 19:14:22.213281 21 dns_common.go:552] DNS probes using dns-test-8a32ca01-a681-40bb-8de1-29b74d1c30e8 succeeded

  STEP: changing the externalName to bar.example.com @ 05/13/24 19:14:22.213
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-574.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-574.svc.cluster.local; sleep 1; done
   @ 05/13/24 19:14:22.235
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-574.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-574.svc.cluster.local; sleep 1; done
   @ 05/13/24 19:14:22.236
  STEP: creating a second pod to probe DNS @ 05/13/24 19:14:22.236
  STEP: submitting the pod to kubernetes @ 05/13/24 19:14:22.237
  STEP: retrieving the pod @ 05/13/24 19:14:26.319
  STEP: looking for the results for each expected name from probers @ 05/13/24 19:14:26.323
  I0513 19:14:26.334139 21 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-574.svc.cluster.local from pod  dns-574/dns-test-45efb5c5-9374-4416-9509-693bcd5bdd87 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0513 19:14:26.339336 21 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-574.svc.cluster.local from pod  dns-574/dns-test-45efb5c5-9374-4416-9509-693bcd5bdd87 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0513 19:14:26.339401 21 dns_common.go:489] Lookups using dns-574/dns-test-45efb5c5-9374-4416-9509-693bcd5bdd87 failed for: [wheezy_udp@dns-test-service-3.dns-574.svc.cluster.local jessie_udp@dns-test-service-3.dns-574.svc.cluster.local]

  I0513 19:14:26.347437 21 dns_common.go:495] Pod client logs for webserver: 
  I0513 19:14:26.358303 21 dns_common.go:495] Pod client logs for querier: 
  I0513 19:14:26.372341 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0513 19:14:31.328337 21 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-574.svc.cluster.local from pod  dns-574/dns-test-45efb5c5-9374-4416-9509-693bcd5bdd87 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0513 19:14:31.334813 21 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-574.svc.cluster.local from pod  dns-574/dns-test-45efb5c5-9374-4416-9509-693bcd5bdd87 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0513 19:14:31.334902 21 dns_common.go:489] Lookups using dns-574/dns-test-45efb5c5-9374-4416-9509-693bcd5bdd87 failed for: [wheezy_udp@dns-test-service-3.dns-574.svc.cluster.local jessie_udp@dns-test-service-3.dns-574.svc.cluster.local]

  I0513 19:14:31.346821 21 dns_common.go:495] Pod client logs for webserver: 
  I0513 19:14:31.354110 21 dns_common.go:495] Pod client logs for querier: 
  I0513 19:14:31.361234 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0513 19:14:36.331233 21 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-574.svc.cluster.local from pod  dns-574/dns-test-45efb5c5-9374-4416-9509-693bcd5bdd87 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0513 19:14:36.336980 21 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-574.svc.cluster.local from pod  dns-574/dns-test-45efb5c5-9374-4416-9509-693bcd5bdd87 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0513 19:14:36.337040 21 dns_common.go:489] Lookups using dns-574/dns-test-45efb5c5-9374-4416-9509-693bcd5bdd87 failed for: [wheezy_udp@dns-test-service-3.dns-574.svc.cluster.local jessie_udp@dns-test-service-3.dns-574.svc.cluster.local]

  I0513 19:14:36.346652 21 dns_common.go:495] Pod client logs for webserver: 
  I0513 19:14:36.357112 21 dns_common.go:495] Pod client logs for querier: 
  I0513 19:14:36.365291 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0513 19:14:41.328878 21 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-574.svc.cluster.local from pod  dns-574/dns-test-45efb5c5-9374-4416-9509-693bcd5bdd87 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0513 19:14:41.333005 21 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-574.svc.cluster.local from pod  dns-574/dns-test-45efb5c5-9374-4416-9509-693bcd5bdd87 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0513 19:14:41.333071 21 dns_common.go:489] Lookups using dns-574/dns-test-45efb5c5-9374-4416-9509-693bcd5bdd87 failed for: [wheezy_udp@dns-test-service-3.dns-574.svc.cluster.local jessie_udp@dns-test-service-3.dns-574.svc.cluster.local]

  I0513 19:14:41.341059 21 dns_common.go:495] Pod client logs for webserver: 
  I0513 19:14:41.348842 21 dns_common.go:495] Pod client logs for querier: 
  I0513 19:14:41.357118 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0513 19:14:46.330183 21 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-574.svc.cluster.local from pod  dns-574/dns-test-45efb5c5-9374-4416-9509-693bcd5bdd87 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0513 19:14:46.334800 21 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-574.svc.cluster.local from pod  dns-574/dns-test-45efb5c5-9374-4416-9509-693bcd5bdd87 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0513 19:14:46.334853 21 dns_common.go:489] Lookups using dns-574/dns-test-45efb5c5-9374-4416-9509-693bcd5bdd87 failed for: [wheezy_udp@dns-test-service-3.dns-574.svc.cluster.local jessie_udp@dns-test-service-3.dns-574.svc.cluster.local]

  I0513 19:14:46.342309 21 dns_common.go:495] Pod client logs for webserver: 
  I0513 19:14:46.350248 21 dns_common.go:495] Pod client logs for querier: 
  I0513 19:14:46.358355 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0513 19:14:51.333142 21 dns_common.go:552] DNS probes using dns-test-45efb5c5-9374-4416-9509-693bcd5bdd87 succeeded

  STEP: changing the service to type=ClusterIP @ 05/13/24 19:14:51.333
  W0513 19:14:51.365017      21 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-574.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-574.svc.cluster.local; sleep 1; done
   @ 05/13/24 19:14:51.365
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-574.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-574.svc.cluster.local; sleep 1; done
   @ 05/13/24 19:14:51.365
  STEP: creating a third pod to probe DNS @ 05/13/24 19:14:51.365
  STEP: submitting the pod to kubernetes @ 05/13/24 19:14:51.369
  STEP: retrieving the pod @ 05/13/24 19:15:13.478
  STEP: looking for the results for each expected name from probers @ 05/13/24 19:15:13.483
  I0513 19:15:13.511976 21 dns_common.go:552] DNS probes using dns-test-0907df33-fab2-46c4-9a52-6acce7c51240 succeeded

  STEP: deleting the pod @ 05/13/24 19:15:13.512
  STEP: deleting the pod @ 05/13/24 19:15:13.565
  STEP: deleting the pod @ 05/13/24 19:15:13.653
  STEP: deleting the test externalName service @ 05/13/24 19:15:13.729
  I0513 19:15:13.766766 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-574" for this suite. @ 05/13/24 19:15:13.776
• [55.721 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 05/13/24 19:15:13.795
  I0513 19:15:13.795378 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename disruption @ 05/13/24 19:15:13.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:15:13.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:15:13.867
  STEP: Waiting for the pdb to be processed @ 05/13/24 19:15:13.884
  STEP: Waiting for all pods to be running @ 05/13/24 19:15:15.958
  I0513 19:15:15.986939 21 disruption.go:578] running pods: 0 < 3
  I0513 19:15:17.977260 21 disruption.go:578] running pods: 0 < 3
  I0513 19:15:19.962668 21 disruption.go:578] running pods: 1 < 3
  I0513 19:15:21.964239 21 disruption.go:578] running pods: 2 < 3
  I0513 19:15:23.967589 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5291" for this suite. @ 05/13/24 19:15:23.983
• [10.231 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 05/13/24 19:15:24.026
  I0513 19:15:24.026677 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/13/24 19:15:24.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:15:24.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:15:24.369
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 05/13/24 19:15:24.373
  I0513 19:15:24.375216 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 19:15:26.780946 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 19:15:34.921588 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2844" for this suite. @ 05/13/24 19:15:34.932
• [10.931 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 05/13/24 19:15:34.959
  I0513 19:15:34.960008 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename emptydir @ 05/13/24 19:15:34.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:15:34.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:15:34.997
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 05/13/24 19:15:35.001
  STEP: Saw pod success @ 05/13/24 19:15:39.039
  I0513 19:15:39.043367 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-a5c07e81-b030-4a1b-9d6f-d4da2f540b39 container test-container: <nil>
  STEP: delete the pod @ 05/13/24 19:15:39.051
  I0513 19:15:39.080946 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-652" for this suite. @ 05/13/24 19:15:39.087
• [4.144 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 05/13/24 19:15:39.104
  I0513 19:15:39.104893 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename field-validation @ 05/13/24 19:15:39.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:15:39.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:15:39.157
  I0513 19:15:39.159780 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  W0513 19:15:41.765688      21 warnings.go:70] unknown field "alpha"
  W0513 19:15:41.765739      21 warnings.go:70] unknown field "beta"
  W0513 19:15:41.765754      21 warnings.go:70] unknown field "delta"
  W0513 19:15:41.765763      21 warnings.go:70] unknown field "epsilon"
  W0513 19:15:41.765772      21 warnings.go:70] unknown field "gamma"
  I0513 19:15:42.331254 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5339" for this suite. @ 05/13/24 19:15:42.336
• [3.243 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 05/13/24 19:15:42.348
  I0513 19:15:42.348413 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename secrets @ 05/13/24 19:15:42.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:15:42.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:15:42.39
  STEP: Creating secret with name secret-test-f0eb4885-556d-4bec-8df1-41c6670db7d8 @ 05/13/24 19:15:42.393
  STEP: Creating a pod to test consume secrets @ 05/13/24 19:15:42.403
  STEP: Saw pod success @ 05/13/24 19:15:46.447
  I0513 19:15:46.451113 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-secrets-f4f4e604-9148-4e2e-8fe0-e892b9a57cb3 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/13/24 19:15:46.459
  I0513 19:15:46.490317 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4693" for this suite. @ 05/13/24 19:15:46.496
• [4.159 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 05/13/24 19:15:46.508
  I0513 19:15:46.508574 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename proxy @ 05/13/24 19:15:46.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:15:46.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:15:46.567
  I0513 19:15:46.570313 21 proxy.go:293] Creating pod...
  I0513 19:15:48.616298 21 proxy.go:317] Creating service...
  I0513 19:15:48.647081 21 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1124/pods/agnhost/proxy/some/path/with/DELETE
  I0513 19:15:48.668578 21 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0513 19:15:48.668638 21 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1124/pods/agnhost/proxy/some/path/with/GET
  I0513 19:15:48.675115 21 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0513 19:15:48.675157 21 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1124/pods/agnhost/proxy/some/path/with/HEAD
  I0513 19:15:48.680869 21 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0513 19:15:48.681223 21 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1124/pods/agnhost/proxy/some/path/with/OPTIONS
  I0513 19:15:48.686932 21 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0513 19:15:48.687007 21 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1124/pods/agnhost/proxy/some/path/with/PATCH
  I0513 19:15:48.692472 21 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0513 19:15:48.692529 21 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1124/pods/agnhost/proxy/some/path/with/POST
  I0513 19:15:48.699260 21 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0513 19:15:48.699316 21 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1124/pods/agnhost/proxy/some/path/with/PUT
  I0513 19:15:48.710337 21 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0513 19:15:48.710391 21 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1124/services/test-service/proxy/some/path/with/DELETE
  I0513 19:15:48.744150 21 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0513 19:15:48.744219 21 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1124/services/test-service/proxy/some/path/with/GET
  I0513 19:15:48.751058 21 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0513 19:15:48.751209 21 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1124/services/test-service/proxy/some/path/with/HEAD
  I0513 19:15:48.758442 21 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0513 19:15:48.758490 21 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1124/services/test-service/proxy/some/path/with/OPTIONS
  I0513 19:15:48.764660 21 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0513 19:15:48.764758 21 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1124/services/test-service/proxy/some/path/with/PATCH
  I0513 19:15:48.771335 21 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0513 19:15:48.771368 21 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1124/services/test-service/proxy/some/path/with/POST
  I0513 19:15:48.778291 21 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0513 19:15:48.778343 21 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1124/services/test-service/proxy/some/path/with/PUT
  I0513 19:15:48.785018 21 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0513 19:15:48.785324 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1124" for this suite. @ 05/13/24 19:15:48.79
• [2.306 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 05/13/24 19:15:48.815
  I0513 19:15:48.815256 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename downward-api @ 05/13/24 19:15:48.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:15:48.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:15:48.863
  STEP: Creating a pod to test downward API volume plugin @ 05/13/24 19:15:48.867
  STEP: Saw pod success @ 05/13/24 19:15:52.915
  I0513 19:15:52.919910 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod downwardapi-volume-87273ed6-1149-435d-9722-dc512b449ce3 container client-container: <nil>
  STEP: delete the pod @ 05/13/24 19:15:52.928
  I0513 19:15:52.958856 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8880" for this suite. @ 05/13/24 19:15:52.963
• [4.166 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 05/13/24 19:15:52.981
  I0513 19:15:52.981942 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename deployment @ 05/13/24 19:15:52.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:15:53.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:15:53.033
  I0513 19:15:53.037406 21 deployment.go:1196] Creating deployment "webserver-deployment"
  I0513 19:15:53.063346 21 deployment.go:1200] Waiting for observed generation 1
  I0513 19:15:55.081347 21 deployment.go:1205] Waiting for all required pods to come up
  I0513 19:15:55.088128 21 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 05/13/24 19:15:55.088
  I0513 19:15:59.135937 21 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0513 19:15:59.142671 21 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0513 19:15:59.179772 21 deployment.go:313] Updating deployment webserver-deployment
  I0513 19:15:59.179832 21 deployment.go:1224] Waiting for observed generation 2
  I0513 19:16:01.816348 21 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0513 19:16:01.850607 21 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0513 19:16:01.854690 21 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0513 19:16:01.876318 21 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0513 19:16:01.876391 21 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0513 19:16:01.879453 21 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0513 19:16:01.891968 21 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0513 19:16:01.892120 21 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0513 19:16:01.908165 21 deployment.go:313] Updating deployment webserver-deployment
  I0513 19:16:01.908229 21 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0513 19:16:01.969759 21 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0513 19:16:04.016424 21 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0513 19:16:04.073106 21 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5e810678-3f93-4e72-862b-f6aafd14a194",
      ResourceVersion: (string) (len=5) "56147",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 25,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-67c89d485c\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0513 19:16:04.086994 21 deployment.go:39] New ReplicaSet "webserver-deployment-67c89d485c" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-67c89d485c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "29a3c9c2-48d2-4a77-bdf3-b21b6c7b6cce",
      ResourceVersion: (string) (len=5) "56139",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224559,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "5e810678-3f93-4e72-862b-f6aafd14a194",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 65 38 31 30 36  37 38 2d 33 66 39 33 2d  |\"5e810678-3f93-|
              00000120  34 65 37 32 2d 38 36 32  62 2d 66 36 61 61 66 64  |4e72-862b-f6aafd|
              00000130  31 34 61 31 39 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |14a194\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0513 19:16:04.088922 21 deployment.go:44] All old ReplicaSets of Deployment "webserver-deployment":
  I0513 19:16:04.089462 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-77db57d8df",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a4fbd33c-d0d1-46b8-a3a9-d89130a16c9a",
      ResourceVersion: (string) (len=5) "56120",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "5e810678-3f93-4e72-862b-f6aafd14a194",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 65 38 31 30 36  37 38 2d 33 66 39 33 2d  |\"5e810678-3f93-|
              00000120  34 65 37 32 2d 38 36 32  62 2d 66 36 61 61 66 64  |4e72-862b-f6aafd|
              00000130  31 34 61 31 39 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |14a194\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0513 19:16:04.115525 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-744wb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-744wb",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-6119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5ba2a415-58b6-41eb-a21b-cb446a84c809",
      ResourceVersion: (string) (len=5) "56205",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224561,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "ed567176e34019f6a318c8a3a6567c62c54864d3d409808eca06be42257e4b86",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.83/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.83/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "29a3c9c2-48d2-4a77-bdf3-b21b6c7b6cce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 39  61 33 63 39 63 32 2d 34  |d\":\"29a3c9c2-4|
              00000090  38 64 32 2d 34 61 37 37  2d 62 64 66 33 2d 62 32  |8d2-4a77-bdf3-b2|
              000000a0  31 62 36 63 37 62 36 63  63 65 5c 22 7d 22 3a 7b  |1b6c7b6cce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s4x2l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s4x2l",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-14-71.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.14.71",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.14.71"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224562,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:16:04.119329 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-8nghc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-8nghc",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-6119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0fbf1771-b645-4d6b-bfe8-d8bb93893e0b",
      ResourceVersion: (string) (len=5) "56204",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224562,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "faba59aefec417970f6ea2821d2c8998bb17ee97bbd03a6de9ecbdd5cb01479f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.74/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.74/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "29a3c9c2-48d2-4a77-bdf3-b21b6c7b6cce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 39  61 33 63 39 63 32 2d 34  |d\":\"29a3c9c2-4|
              00000090  38 64 32 2d 34 61 37 37  2d 62 64 66 33 2d 62 32  |8d2-4a77-bdf3-b2|
              000000a0  31 62 36 63 37 62 36 63  63 65 5c 22 7d 22 3a 7b  |1b6c7b6cce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2v2lh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2v2lh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-13-166.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.13.166",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.13.166"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224562,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:16:04.123031 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-dbhfv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-dbhfv",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-6119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3d4ecc56-1008-4e39-9995-762611a4c354",
      ResourceVersion: (string) (len=5) "56165",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224559,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a284ef32eae1d4c17d0149a05f84a65ef8c8735a34cb2aecb05f8bd4cea47e51",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.4.212/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.4.212/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "29a3c9c2-48d2-4a77-bdf3-b21b6c7b6cce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224559,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 39  61 33 63 39 63 32 2d 34  |d\":\"29a3c9c2-4|
              00000090  38 64 32 2d 34 61 37 37  2d 62 64 66 33 2d 62 32  |8d2-4a77-bdf3-b2|
              000000a0  31 62 36 63 37 62 36 63  63 65 5c 22 7d 22 3a 7b  |1b6c7b6cce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224560,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 34 2e 32 31 32 5c 22  7d 22 3a 7b 22 2e 22 3a  |.4.212\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mxv7p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mxv7p",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-7-107.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224559,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224559,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224559,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224559,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.7.107",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.7.107"
        }
      },
      PodIP: (string) (len=11) "10.42.4.212",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.4.212"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224559,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=16) "ImagePullBackOff",
              Message: (string) (len=38) "Back-off pulling image \"webserver:404\""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:16:04.131339 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-gkkj4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-gkkj4",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-6119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e7efce09-1177-4eae-aea0-6625c05b997c",
      ResourceVersion: (string) (len=5) "56212",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224562,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "70119f526c92649be3f25799b4f4d5a8cae09f443c5c392385aefd978968ee28",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.85/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.85/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "29a3c9c2-48d2-4a77-bdf3-b21b6c7b6cce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 39  61 33 63 39 63 32 2d 34  |d\":\"29a3c9c2-4|
              00000090  38 64 32 2d 34 61 37 37  2d 62 64 66 33 2d 62 32  |8d2-4a77-bdf3-b2|
              000000a0  31 62 36 63 37 62 36 63  63 65 5c 22 7d 22 3a 7b  |1b6c7b6cce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jj6qw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jj6qw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-14-71.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.14.71",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.14.71"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224562,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:16:04.140223 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-gkwnb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-gkwnb",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-6119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "14230e57-b8f5-4141-949f-bce5848acc38",
      ResourceVersion: (string) (len=5) "56171",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224559,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f3fa78aa13bc7a68ec1f5bf732c2a30345b0c8db2d070271e341a71b29924dea",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.70/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.70/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "29a3c9c2-48d2-4a77-bdf3-b21b6c7b6cce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224559,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 39  61 33 63 39 63 32 2d 34  |d\":\"29a3c9c2-4|
              00000090  38 64 32 2d 34 61 37 37  2d 62 64 66 33 2d 62 32  |8d2-4a77-bdf3-b2|
              000000a0  31 62 36 63 37 62 36 63  63 65 5c 22 7d 22 3a 7b  |1b6c7b6cce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224560,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 31 2e 37 30 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.1.70\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bmt6h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bmt6h",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-13-166.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224559,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224559,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224559,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224559,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.13.166",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.13.166"
        }
      },
      PodIP: (string) (len=10) "10.42.1.70",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.70"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224559,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=16) "ImagePullBackOff",
              Message: (string) (len=38) "Back-off pulling image \"webserver:404\""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:16:04.147317 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-gmm5g" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-gmm5g",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-6119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e171ae2a-054a-42b8-8aad-11cc81ec21d7",
      ResourceVersion: (string) (len=5) "56188",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224559,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.80/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.80/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "848617377bb215da8d4d9a0bb1b6df6303e36a49c840f7f60ce0dad1562950a3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "29a3c9c2-48d2-4a77-bdf3-b21b6c7b6cce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224559,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 39  61 33 63 39 63 32 2d 34  |d\":\"29a3c9c2-4|
              00000090  38 64 32 2d 34 61 37 37  2d 62 64 66 33 2d 62 32  |8d2-4a77-bdf3-b2|
              000000a0  31 62 36 63 37 62 36 63  63 65 5c 22 7d 22 3a 7b  |1b6c7b6cce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224560,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 33 2e 38 30 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.3.80\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fc9h7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fc9h7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-14-71.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224559,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224559,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224559,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224559,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.14.71",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.14.71"
        }
      },
      PodIP: (string) (len=10) "10.42.3.80",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.3.80"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224559,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=16) "ImagePullBackOff",
              Message: (string) (len=38) "Back-off pulling image \"webserver:404\""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:16:04.168342 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-klmdl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-klmdl",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-6119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bc166f48-e872-49b8-bf93-80bc88d24704",
      ResourceVersion: (string) (len=5) "56208",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224562,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.69/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.69/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e3c647354918f29fa700705b6e29a814ed48bb226b8911f45afeb5bd49379813"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "29a3c9c2-48d2-4a77-bdf3-b21b6c7b6cce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 39  61 33 63 39 63 32 2d 34  |d\":\"29a3c9c2-4|
              00000090  38 64 32 2d 34 61 37 37  2d 62 64 66 33 2d 62 32  |8d2-4a77-bdf3-b2|
              000000a0  31 62 36 63 37 62 36 63  63 65 5c 22 7d 22 3a 7b  |1b6c7b6cce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f9kjh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f9kjh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-3-239.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.239",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.239"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224562,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:16:04.172540 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-mpk7s" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-mpk7s",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-6119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d9db919b-ed87-475b-ae41-52fa9deb95f8",
      ResourceVersion: (string) (len=5) "56185",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224559,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.4.211/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "72869355ca49ec417a6c973bffc7ef198f252d096325ad1f74474fe80d489796",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.4.211/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "29a3c9c2-48d2-4a77-bdf3-b21b6c7b6cce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224559,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224559,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 39  61 33 63 39 63 32 2d 34  |d\":\"29a3c9c2-4|
              00000090  38 64 32 2d 34 61 37 37  2d 62 64 66 33 2d 62 32  |8d2-4a77-bdf3-b2|
              000000a0  31 62 36 63 37 62 36 63  63 65 5c 22 7d 22 3a 7b  |1b6c7b6cce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 34 2e 32 31 31 5c 22  7d 22 3a 7b 22 2e 22 3a  |.4.211\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bk5wg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bk5wg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-7-107.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224559,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224559,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224559,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224559,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.7.107",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.7.107"
        }
      },
      PodIP: (string) (len=11) "10.42.4.211",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.4.211"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224559,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=16) "ImagePullBackOff",
              Message: (string) (len=38) "Back-off pulling image \"webserver:404\""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:16:04.176361 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-n5v7s" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-n5v7s",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-6119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "09c2aa84-65d4-46b1-a5f4-be161a1059ae",
      ResourceVersion: (string) (len=5) "56206",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224561,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "44f0c2e0b94ef216826a3e0ed68f10c526d5d0a0d59ac1ff1a9b5dbc3f70f31d",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.75/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.75/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "29a3c9c2-48d2-4a77-bdf3-b21b6c7b6cce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 39  61 33 63 39 63 32 2d 34  |d\":\"29a3c9c2-4|
              00000090  38 64 32 2d 34 61 37 37  2d 62 64 66 33 2d 62 32  |8d2-4a77-bdf3-b2|
              000000a0  31 62 36 63 37 62 36 63  63 65 5c 22 7d 22 3a 7b  |1b6c7b6cce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xrllg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xrllg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-13-166.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.13.166",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.13.166"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224562,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:16:04.181950 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-nxthx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-nxthx",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-6119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "672a8866-dc33-487e-b7b4-5671b70ff687",
      ResourceVersion: (string) (len=5) "56170",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224559,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.64/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.64/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f2a73724f23bbbca32485ad62a867341ecbb7bec5c63bdc283148b45a8831928"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "29a3c9c2-48d2-4a77-bdf3-b21b6c7b6cce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224559,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224559,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 39  61 33 63 39 63 32 2d 34  |d\":\"29a3c9c2-4|
              00000090  38 64 32 2d 34 61 37 37  2d 62 64 66 33 2d 62 32  |8d2-4a77-bdf3-b2|
              000000a0  31 62 36 63 37 62 36 63  63 65 5c 22 7d 22 3a 7b  |1b6c7b6cce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 30 2e 36 34 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.0.64\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cvlgf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cvlgf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-3-239.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224559,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224559,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224559,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224559,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.239",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.239"
        }
      },
      PodIP: (string) (len=10) "10.42.0.64",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.64"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224559,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=16) "ImagePullBackOff",
              Message: (string) (len=38) "Back-off pulling image \"webserver:404\""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:16:04.194462 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-qr4vk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-qr4vk",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-6119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "45e1ca41-a528-4d36-b9f9-a2e9bb484a05",
      ResourceVersion: (string) (len=5) "56199",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224562,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "aeeeb37256770c881522c528a517399048a68bbf1790fe967c4636a2320045b7",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.4.215/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.4.215/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "29a3c9c2-48d2-4a77-bdf3-b21b6c7b6cce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 39  61 33 63 39 63 32 2d 34  |d\":\"29a3c9c2-4|
              00000090  38 64 32 2d 34 61 37 37  2d 62 64 66 33 2d 62 32  |8d2-4a77-bdf3-b2|
              000000a0  31 62 36 63 37 62 36 63  63 65 5c 22 7d 22 3a 7b  |1b6c7b6cce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kw9ql",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kw9ql",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-7-107.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.7.107",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.7.107"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224562,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:16:04.200139 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-sx9xr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-sx9xr",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-6119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "002ec70e-1b26-42a0-803c-3b7e35626f04",
      ResourceVersion: (string) (len=5) "56215",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224562,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "b002dd325f80bf171de1fa6b4ed7ddd0cacf6860d315ccec9605b7136a43eda6",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.86/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.86/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "29a3c9c2-48d2-4a77-bdf3-b21b6c7b6cce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 39  61 33 63 39 63 32 2d 34  |d\":\"29a3c9c2-4|
              00000090  38 64 32 2d 34 61 37 37  2d 62 64 66 33 2d 62 32  |8d2-4a77-bdf3-b2|
              000000a0  31 62 36 63 37 62 36 63  63 65 5c 22 7d 22 3a 7b  |1b6c7b6cce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224564,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v8zjj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v8zjj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-14-71.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.14.71",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.14.71"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224562,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:16:04.212184 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-xcs6r" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-xcs6r",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-6119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7caba7c9-bd47-4e75-a40a-1add3762c1db",
      ResourceVersion: (string) (len=5) "56203",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224561,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a7b8771911385600becdb64eae440f816d88ff2e1f1dc6b3c5ecf328801f6924",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.67/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.67/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "29a3c9c2-48d2-4a77-bdf3-b21b6c7b6cce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 39  61 33 63 39 63 32 2d 34  |d\":\"29a3c9c2-4|
              00000090  38 64 32 2d 34 61 37 37  2d 62 64 66 33 2d 62 32  |8d2-4a77-bdf3-b2|
              000000a0  31 62 36 63 37 62 36 63  63 65 5c 22 7d 22 3a 7b  |1b6c7b6cce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zj4g8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zj4g8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-3-239.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.239",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.239"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224562,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:16:04.215444 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-2648s" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-2648s",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "501d18e3-9717-4a0e-8b75-2e13e1fa253f",
      ResourceVersion: (string) (len=5) "56194",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224561,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "41a6b65e08e2130a482f33582277c83a4fdbb0e50405c0fa852fdb24f9d9e253",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.72/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.72/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "a4fbd33c-d0d1-46b8-a3a9-d89130a16c9a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 34  66 62 64 33 33 63 2d 64  |d\":\"a4fbd33c-d|
              00000090  30 64 31 2d 34 36 62 38  2d 61 33 61 39 2d 64 38  |0d1-46b8-a3a9-d8|
              000000a0  39 31 33 30 61 31 36 63  39 61 5c 22 7d 22 3a 7b  |9130a16c9a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mqm7c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mqm7c",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-13-166.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.13.166",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.13.166"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224562,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:16:04.230575 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-27p6l" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-27p6l",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "05185b6f-9983-49e9-bd86-95bbf9fe413a",
      ResourceVersion: (string) (len=5) "56200",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224562,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.82/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.82/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "00021858887e72e2352078c027ea6207215d73d8ab2804457a0834723e6bb204"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "a4fbd33c-d0d1-46b8-a3a9-d89130a16c9a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 34  66 62 64 33 33 63 2d 64  |d\":\"a4fbd33c-d|
              00000090  30 64 31 2d 34 36 62 38  2d 61 33 61 39 2d 64 38  |0d1-46b8-a3a9-d8|
              000000a0  39 31 33 30 61 31 36 63  39 61 5c 22 7d 22 3a 7b  |9130a16c9a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ctkwj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ctkwj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-14-71.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.14.71",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.14.71"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224562,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:16:04.235431 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-2t8pj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-2t8pj",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "df4f27a1-d32d-4d5e-aff3-9f73ebd99a0d",
      ResourceVersion: (string) (len=5) "56202",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224562,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f4711e349070a11f403520081478936492de82d3fa3de0256350134e6212555b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.73/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.73/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "a4fbd33c-d0d1-46b8-a3a9-d89130a16c9a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 34  66 62 64 33 33 63 2d 64  |d\":\"a4fbd33c-d|
              00000090  30 64 31 2d 34 36 62 38  2d 61 33 61 39 2d 64 38  |0d1-46b8-a3a9-d8|
              000000a0  39 31 33 30 61 31 36 63  39 61 5c 22 7d 22 3a 7b  |9130a16c9a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gcmjw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gcmjw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-13-166.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.13.166",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.13.166"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224562,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:16:04.246047 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-4b8mr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-4b8mr",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "12acd6b2-0cdd-4a51-af6b-0ccf8639e04a",
      ResourceVersion: (string) (len=5) "56197",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224562,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.66/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.66/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "1e1d4c17570a3700e07742593f839b73f17291a82bcfd7f3eb123f3398fa2901"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "a4fbd33c-d0d1-46b8-a3a9-d89130a16c9a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 34  66 62 64 33 33 63 2d 64  |d\":\"a4fbd33c-d|
              00000090  30 64 31 2d 34 36 62 38  2d 61 33 61 39 2d 64 38  |0d1-46b8-a3a9-d8|
              000000a0  39 31 33 30 61 31 36 63  39 61 5c 22 7d 22 3a 7b  |9130a16c9a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q62f4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q62f4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-3-239.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.239",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.239"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224562,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:16:04.255578 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-4brbw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-4brbw",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c50a3051-09ba-490b-9cc0-dd64bf421858",
      ResourceVersion: (string) (len=5) "56193",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224562,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "02f4ed83be63ce31d374680fa9deb7aa2fce8ef10d039005ce6a540086b08ec4",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.4.214/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.4.214/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "a4fbd33c-d0d1-46b8-a3a9-d89130a16c9a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 34  66 62 64 33 33 63 2d 64  |d\":\"a4fbd33c-d|
              00000090  30 64 31 2d 34 36 62 38  2d 61 33 61 39 2d 64 38  |0d1-46b8-a3a9-d8|
              000000a0  39 31 33 30 61 31 36 63  39 61 5c 22 7d 22 3a 7b  |9130a16c9a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mhmd2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mhmd2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-7-107.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.7.107",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.7.107"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224562,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:16:04.259394 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-5bkvc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-5bkvc",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8ce37197-dd8d-4060-87ec-6dd1ade4726c",
      ResourceVersion: (string) (len=5) "55915",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "4bbb7c9853044020eb1312bc5f7b78c73910c178f20adaa7891e166cbeee2ba8",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.4.210/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.4.210/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "a4fbd33c-d0d1-46b8-a3a9-d89130a16c9a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 34  66 62 64 33 33 63 2d 64  |d\":\"a4fbd33c-d|
              00000090  30 64 31 2d 34 36 62 38  2d 61 33 61 39 2d 64 38  |0d1-46b8-a3a9-d8|
              000000a0  39 31 33 30 61 31 36 63  39 61 5c 22 7d 22 3a 7b  |9130a16c9a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224554,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 34 2e 32 31  30 5c 22 7d 22 3a 7b 22  |.42.4.210\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-slc4n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-slc4n",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-7-107.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.7.107",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.7.107"
        }
      },
      PodIP: (string) (len=11) "10.42.4.210",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.4.210"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851224555,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://37eb22731b8434f442d523dcf354c1377011f56b97387952e2eacdffe2e93d64",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:16:04.269652 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-5lvsc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-5lvsc",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7366c992-ee19-4808-99cc-afb85ca412fe",
      ResourceVersion: (string) (len=5) "55953",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.62/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "55d946c0fed5bc6bf25756223cf07082efe935c55fc705d3e1af19065cf20789",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.62/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "a4fbd33c-d0d1-46b8-a3a9-d89130a16c9a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 34  66 62 64 33 33 63 2d 64  |d\":\"a4fbd33c-d|
              00000090  30 64 31 2d 34 36 62 38  2d 61 33 61 39 2d 64 38  |0d1-46b8-a3a9-d8|
              000000a0  39 31 33 30 61 31 36 63  39 61 5c 22 7d 22 3a 7b  |9130a16c9a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224558,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 36 32  5c 22 7d 22 3a 7b 22 2e  |.42.0.62\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mz8ml",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mz8ml",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-3-239.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224558,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224558,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224558,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.239",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.239"
        }
      },
      PodIP: (string) (len=10) "10.42.0.62",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.62"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851224557,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://de5251995f25715fbb687553eb5518d13b41f1476f69245d003529c88f548c35",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:16:04.295734 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-7x55v" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-7x55v",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cd3899bb-1452-405e-8b11-07cc3e1cabfb",
      ResourceVersion: (string) (len=5) "56207",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224562,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "bd1866f0867386ba147c26e39dafa829395c7cdb75d9dad69183b8c75b89f957",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.68/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.68/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "a4fbd33c-d0d1-46b8-a3a9-d89130a16c9a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 34  66 62 64 33 33 63 2d 64  |d\":\"a4fbd33c-d|
              00000090  30 64 31 2d 34 36 62 38  2d 61 33 61 39 2d 64 38  |0d1-46b8-a3a9-d8|
              000000a0  39 31 33 30 61 31 36 63  39 61 5c 22 7d 22 3a 7b  |9130a16c9a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xwptz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xwptz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-3-239.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.239",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.239"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224562,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:16:04.302662 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-86gnm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-86gnm",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "13421924-23e1-414e-afec-ca4be4b6b4e3",
      ResourceVersion: (string) (len=5) "56192",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224561,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.81/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "8538f814d247578cecc9fa7ec0dd6018ed8785c809d8cae9008c722c5c59460b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.81/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "a4fbd33c-d0d1-46b8-a3a9-d89130a16c9a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 34  66 62 64 33 33 63 2d 64  |d\":\"a4fbd33c-d|
              00000090  30 64 31 2d 34 36 62 38  2d 61 33 61 39 2d 64 38  |0d1-46b8-a3a9-d8|
              000000a0  39 31 33 30 61 31 36 63  39 61 5c 22 7d 22 3a 7b  |9130a16c9a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gszj2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gszj2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-14-71.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.14.71",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.14.71"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224562,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:16:04.308140 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-9zrjr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-9zrjr",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4496738f-9dec-449e-af01-a453dc8aea7a",
      ResourceVersion: (string) (len=5) "56201",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224561,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f87affbe31ceb9196ce90a2c87ccd31a68640207e7ba098b748ba08a45dbf5ef",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.4.216/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.4.216/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "a4fbd33c-d0d1-46b8-a3a9-d89130a16c9a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 34  66 62 64 33 33 63 2d 64  |d\":\"a4fbd33c-d|
              00000090  30 64 31 2d 34 36 62 38  2d 61 33 61 39 2d 64 38  |0d1-46b8-a3a9-d8|
              000000a0  39 31 33 30 61 31 36 63  39 61 5c 22 7d 22 3a 7b  |9130a16c9a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8t2x6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8t2x6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-7-107.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.7.107",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.7.107"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224561,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:16:04.311415 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-d7pg8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-d7pg8",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5056d1f6-5d38-4747-9f44-3cf8f3da7a38",
      ResourceVersion: (string) (len=5) "55884",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "0cb7b1829cca819c8a3f796c074e6ad80cfb208b84595e708f6f7b299128df94",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.69/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.69/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "a4fbd33c-d0d1-46b8-a3a9-d89130a16c9a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 34  66 62 64 33 33 63 2d 64  |d\":\"a4fbd33c-d|
              00000090  30 64 31 2d 34 36 62 38  2d 61 33 61 39 2d 64 38  |0d1-46b8-a3a9-d8|
              000000a0  39 31 33 30 61 31 36 63  39 61 5c 22 7d 22 3a 7b  |9130a16c9a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 36 39  5c 22 7d 22 3a 7b 22 2e  |.42.1.69\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p8zbh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p8zbh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-13-166.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.13.166",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.13.166"
        }
      },
      PodIP: (string) (len=10) "10.42.1.69",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.69"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851224555,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9d5d39b4d766424935a17202164310c06c7172190bff7c19dc9349cdb3341625",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:16:04.316502 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-hbds8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-hbds8",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b0d38439-05c0-48ea-8180-bc05fd260fbc",
      ResourceVersion: (string) (len=5) "55882",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a551e536b2fb8f9d3bb30e07e7e9cf7e13c9d36a8e987b93b778b73033e75a56",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.68/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.68/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "a4fbd33c-d0d1-46b8-a3a9-d89130a16c9a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 34  66 62 64 33 33 63 2d 64  |d\":\"a4fbd33c-d|
              00000090  30 64 31 2d 34 36 62 38  2d 61 33 61 39 2d 64 38  |0d1-46b8-a3a9-d8|
              000000a0  39 31 33 30 61 31 36 63  39 61 5c 22 7d 22 3a 7b  |9130a16c9a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 36 38  5c 22 7d 22 3a 7b 22 2e  |.42.1.68\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tzckt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tzckt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-13-166.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.13.166",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.13.166"
        }
      },
      PodIP: (string) (len=10) "10.42.1.68",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.68"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851224554,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0ca7326a6657830f9db0558061bcb3ecd50b75df674a1c6f4aeb0027c0f6d597",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:16:04.329499 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-hwwb8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-hwwb8",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1df3e592-be5a-4ece-a828-0acb956deaae",
      ResourceVersion: (string) (len=5) "55920",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.4.209/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.4.209/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "fd5b05cc0978a38e2a863c1051094a9787cad21870eab9b261f49e89dee5c34b"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "a4fbd33c-d0d1-46b8-a3a9-d89130a16c9a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 34  66 62 64 33 33 63 2d 64  |d\":\"a4fbd33c-d|
              00000090  30 64 31 2d 34 36 62 38  2d 61 33 61 39 2d 64 38  |0d1-46b8-a3a9-d8|
              000000a0  39 31 33 30 61 31 36 63  39 61 5c 22 7d 22 3a 7b  |9130a16c9a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224554,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 34 2e 32 30  39 5c 22 7d 22 3a 7b 22  |.42.4.209\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6w5jp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6w5jp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-7-107.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.7.107",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.7.107"
        }
      },
      PodIP: (string) (len=11) "10.42.4.209",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.4.209"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851224555,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d5b941595a3fb145caa53d5b8e58b71aa8b3370b24266ceb257220320a88a0ee",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:16:04.368116 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-kf69f" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-kf69f",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7b2b929a-8ddc-4692-bc48-4cca76cc5dfb",
      ResourceVersion: (string) (len=5) "56195",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224561,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.65/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "4901aaa0624e4e69e24bbf2a9076888ae3bc591900eaf46b6f1cd83b9e5e654e",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.65/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "a4fbd33c-d0d1-46b8-a3a9-d89130a16c9a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 34  66 62 64 33 33 63 2d 64  |d\":\"a4fbd33c-d|
              00000090  30 64 31 2d 34 36 62 38  2d 61 33 61 39 2d 64 38  |0d1-46b8-a3a9-d8|
              000000a0  39 31 33 30 61 31 36 63  39 61 5c 22 7d 22 3a 7b  |9130a16c9a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j6bnb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j6bnb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-3-239.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.239",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.239"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224562,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:16:04.371365 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-kz668" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-kz668",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8f6661dd-defc-4274-8623-26a5aec306cb",
      ResourceVersion: (string) (len=5) "55924",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "06dbc2a4411a00af72967c6e5bfa8d31abddb1e826c16385e746c440016aff1c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.79/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.79/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "a4fbd33c-d0d1-46b8-a3a9-d89130a16c9a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 34  66 62 64 33 33 63 2d 64  |d\":\"a4fbd33c-d|
              00000090  30 64 31 2d 34 36 62 38  2d 61 33 61 39 2d 64 38  |0d1-46b8-a3a9-d8|
              000000a0  39 31 33 30 61 31 36 63  39 61 5c 22 7d 22 3a 7b  |9130a16c9a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224554,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 37 39  5c 22 7d 22 3a 7b 22 2e  |.42.3.79\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-82v2g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-82v2g",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-14-71.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.14.71",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.14.71"
        }
      },
      PodIP: (string) (len=10) "10.42.3.79",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.3.79"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851224556,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://08f350fe4542a8c731fb68603f1a1d827f5a8fa89ab342f679dd04d5e6251716",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:16:04.394064 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-q6mxf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-q6mxf",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ad9eafe1-9717-4495-ade1-abcf7294b8b2",
      ResourceVersion: (string) (len=5) "55916",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.78/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "79c963ce89e2913a483bbb9d3674f727b9f62d27a9c7ff605f3b9d369329d12e",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.78/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "a4fbd33c-d0d1-46b8-a3a9-d89130a16c9a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 34  66 62 64 33 33 63 2d 64  |d\":\"a4fbd33c-d|
              00000090  30 64 31 2d 34 36 62 38  2d 61 33 61 39 2d 64 38  |0d1-46b8-a3a9-d8|
              000000a0  39 31 33 30 61 31 36 63  39 61 5c 22 7d 22 3a 7b  |9130a16c9a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224554,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 37 38  5c 22 7d 22 3a 7b 22 2e  |.42.3.78\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-msh6w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-msh6w",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-14-71.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.14.71",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.14.71"
        }
      },
      PodIP: (string) (len=10) "10.42.3.78",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.3.78"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851224556,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://be80783f02ae93293bcf809897035ea284ab69312eb990032c920e50489f7767",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:16:04.402693 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-sms4r" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-sms4r",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5fad452d-2408-4eb1-bbc3-9a16adae32b3",
      ResourceVersion: (string) (len=5) "55956",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "442edd21e97fe7ce86a0c18c3d5b14da4ef2d33804335f30c2882959ce04def3",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.63/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.63/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "a4fbd33c-d0d1-46b8-a3a9-d89130a16c9a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 34  66 62 64 33 33 63 2d 64  |d\":\"a4fbd33c-d|
              00000090  30 64 31 2d 34 36 62 38  2d 61 33 61 39 2d 64 38  |0d1-46b8-a3a9-d8|
              000000a0  39 31 33 30 61 31 36 63  39 61 5c 22 7d 22 3a 7b  |9130a16c9a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224558,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 36 33  5c 22 7d 22 3a 7b 22 2e  |.42.0.63\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t4frr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t4frr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-3-239.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224558,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224558,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224558,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.3.239",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.3.239"
        }
      },
      PodIP: (string) (len=10) "10.42.0.63",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.63"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851224557,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2ea58afbf1340879128a80f3c0c6df42d205c793b725840ae78ea4198208db4b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:16:04.424936 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-vnf4v" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-vnf4v",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b881e645-c7f7-4e76-bfe4-1aeabae7be4b",
      ResourceVersion: (string) (len=5) "56191",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224561,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.71/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "feaf7a3ed1336047059dc2e1d3a938a3d3dd216a8feb74d7a58e6535e12171a9",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.71/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "a4fbd33c-d0d1-46b8-a3a9-d89130a16c9a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 34  66 62 64 33 33 63 2d 64  |d\":\"a4fbd33c-d|
              00000090  30 64 31 2d 34 36 62 38  2d 61 33 61 39 2d 64 38  |0d1-46b8-a3a9-d8|
              000000a0  39 31 33 30 61 31 36 63  39 61 5c 22 7d 22 3a 7b  |9130a16c9a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4ncn2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4ncn2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-13-166.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.13.166",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.13.166"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224562,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:16:04.431836 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-w8ndk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-w8ndk",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0eeb592b-6135-4036-b610-9f4b420f0217",
      ResourceVersion: (string) (len=5) "56209",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224561,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f135b5a2b065938f84774d5436fb2c3db747442fcc1db3104513437a68f0c036",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.84/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.84/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "a4fbd33c-d0d1-46b8-a3a9-d89130a16c9a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 34  66 62 64 33 33 63 2d 64  |d\":\"a4fbd33c-d|
              00000090  30 64 31 2d 34 36 62 38  2d 61 33 61 39 2d 64 38  |0d1-46b8-a3a9-d8|
              000000a0  39 31 33 30 61 31 36 63  39 61 5c 22 7d 22 3a 7b  |9130a16c9a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j99h5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j99h5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-14-71.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.14.71",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.14.71"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224561,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:16:04.435353 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-z727m" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-z727m",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6119",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b6e072ba-6f7d-4a91-91c9-782d8d4ed981",
      ResourceVersion: (string) (len=5) "56196",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224561,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.4.213/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "ecce14447138ff1c87469e31a54d6a1d6de96995b44367919b90d4e6e324f958",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.4.213/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "a4fbd33c-d0d1-46b8-a3a9-d89130a16c9a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224561,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 34  66 62 64 33 33 63 2d 64  |d\":\"a4fbd33c-d|
              00000090  30 64 31 2d 34 36 62 38  2d 61 33 61 39 2d 64 38  |0d1-46b8-a3a9-d8|
              000000a0  39 31 33 30 61 31 36 63  39 61 5c 22 7d 22 3a 7b  |9130a16c9a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nt242",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nt242",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-7-107.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851224562,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.7.107",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.7.107"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851224562,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:16:04.440502 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6119" for this suite. @ 05/13/24 19:16:04.473
• [11.537 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 05/13/24 19:16:04.527
  I0513 19:16:04.527762 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename dns @ 05/13/24 19:16:04.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:16:04.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:16:04.594
  STEP: Creating a test headless service @ 05/13/24 19:16:04.598
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2742.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-2742.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 05/13/24 19:16:04.613
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2742.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-2742.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 05/13/24 19:16:04.613
  STEP: creating a pod to probe DNS @ 05/13/24 19:16:04.613
  STEP: submitting the pod to kubernetes @ 05/13/24 19:16:04.613
  STEP: retrieving the pod @ 05/13/24 19:16:10.696
  STEP: looking for the results for each expected name from probers @ 05/13/24 19:16:10.706
  I0513 19:16:10.751150 21 dns_common.go:527] DNS probes using dns-2742/dns-test-c5cc79c7-9d19-4873-a4a6-a4e76be6b3bd succeeded

  STEP: deleting the pod @ 05/13/24 19:16:10.751
  STEP: deleting the test headless service @ 05/13/24 19:16:10.821
  I0513 19:16:10.875812 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2742" for this suite. @ 05/13/24 19:16:10.884
• [6.369 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 05/13/24 19:16:10.897
  I0513 19:16:10.897460 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename webhook @ 05/13/24 19:16:10.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:16:10.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:16:10.989
  STEP: Setting up server cert @ 05/13/24 19:16:11.073
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 19:16:11.439
  STEP: Deploying the webhook pod @ 05/13/24 19:16:11.453
  STEP: Wait for the deployment to be ready @ 05/13/24 19:16:11.486
  I0513 19:16:11.505256 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0513 19:16:14.065830 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 19, 16, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 16, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 16, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 16, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 19:16:16.071685 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 19, 16, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 16, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 16, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 16, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 19:16:18.070633 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 19, 16, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 16, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 16, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 16, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 05/13/24 19:16:20.069
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 19:16:20.094
  I0513 19:16:21.096646 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0513 19:16:21.104406 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 05/13/24 19:16:21.625
  STEP: Creating a custom resource that should be denied by the webhook @ 05/13/24 19:16:21.655
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 05/13/24 19:16:23.677
  STEP: Updating the custom resource with disallowed data should be denied @ 05/13/24 19:16:23.694
  STEP: Deleting the custom resource should be denied @ 05/13/24 19:16:23.705
  STEP: Remove the offending key and value from the custom resource data @ 05/13/24 19:16:23.714
  STEP: Deleting the updated custom resource should be successful @ 05/13/24 19:16:23.731
  I0513 19:16:24.411251 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-177" for this suite. @ 05/13/24 19:16:24.416
  STEP: Destroying namespace "webhook-markers-8827" for this suite. @ 05/13/24 19:16:24.436
• [13.565 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:342
  STEP: Creating a kubernetes client @ 05/13/24 19:16:24.462
  I0513 19:16:24.462532 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename kubectl @ 05/13/24 19:16:24.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:16:24.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:16:24.5
  STEP: creating a replication controller @ 05/13/24 19:16:24.503
  I0513 19:16:24.503761 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-4619 create -f -'
  I0513 19:16:24.669820 21 builder.go:146] stderr: ""
  I0513 19:16:24.670006 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/13/24 19:16:24.67
  I0513 19:16:24.670249 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-4619 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0513 19:16:24.787136 21 builder.go:146] stderr: ""
  I0513 19:16:24.787193 21 builder.go:147] stdout: "update-demo-nautilus-mzkvt update-demo-nautilus-q65xn "
  I0513 19:16:24.787541 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-4619 get pods update-demo-nautilus-mzkvt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0513 19:16:24.891430 21 builder.go:146] stderr: ""
  I0513 19:16:24.891511 21 builder.go:147] stdout: ""
  I0513 19:16:24.891530 21 kubectl.go:2501] update-demo-nautilus-mzkvt is created but not running
  I0513 19:16:29.892042 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-4619 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0513 19:16:30.037107 21 builder.go:146] stderr: ""
  I0513 19:16:30.037153 21 builder.go:147] stdout: "update-demo-nautilus-mzkvt update-demo-nautilus-q65xn "
  I0513 19:16:30.037220 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-4619 get pods update-demo-nautilus-mzkvt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0513 19:16:30.190934 21 builder.go:146] stderr: ""
  I0513 19:16:30.190985 21 builder.go:147] stdout: ""
  I0513 19:16:30.191003 21 kubectl.go:2501] update-demo-nautilus-mzkvt is created but not running
  I0513 19:16:35.192108 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-4619 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0513 19:16:35.290122 21 builder.go:146] stderr: ""
  I0513 19:16:35.290172 21 builder.go:147] stdout: "update-demo-nautilus-mzkvt update-demo-nautilus-q65xn "
  I0513 19:16:35.290352 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-4619 get pods update-demo-nautilus-mzkvt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0513 19:16:35.372017 21 builder.go:146] stderr: ""
  I0513 19:16:35.372069 21 builder.go:147] stdout: "true"
  I0513 19:16:35.372133 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-4619 get pods update-demo-nautilus-mzkvt -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0513 19:16:35.457623 21 builder.go:146] stderr: ""
  I0513 19:16:35.457688 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0513 19:16:35.457710 21 kubectl.go:2392] validating pod update-demo-nautilus-mzkvt
  I0513 19:16:35.468282 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0513 19:16:35.468367 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0513 19:16:35.468495 21 kubectl.go:2519] update-demo-nautilus-mzkvt is verified up and running
  I0513 19:16:35.468575 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-4619 get pods update-demo-nautilus-q65xn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0513 19:16:35.557424 21 builder.go:146] stderr: ""
  I0513 19:16:35.557483 21 builder.go:147] stdout: "true"
  I0513 19:16:35.557762 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-4619 get pods update-demo-nautilus-q65xn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0513 19:16:35.898274 21 builder.go:146] stderr: ""
  I0513 19:16:35.898325 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0513 19:16:35.898347 21 kubectl.go:2392] validating pod update-demo-nautilus-q65xn
  I0513 19:16:35.908007 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0513 19:16:35.908093 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0513 19:16:35.908112 21 kubectl.go:2519] update-demo-nautilus-q65xn is verified up and running
  STEP: using delete to clean up resources @ 05/13/24 19:16:35.908
  I0513 19:16:35.908279 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-4619 delete --grace-period=0 --force -f -'
  I0513 19:16:36.022883 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0513 19:16:36.022941 21 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0513 19:16:36.023012 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-4619 get rc,svc -l name=update-demo --no-headers'
  I0513 19:16:36.152601 21 builder.go:146] stderr: "No resources found in kubectl-4619 namespace.\n"
  I0513 19:16:36.152650 21 builder.go:147] stdout: ""
  I0513 19:16:36.152712 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-4619 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0513 19:16:36.261278 21 builder.go:146] stderr: ""
  I0513 19:16:36.261337 21 builder.go:147] stdout: ""
  I0513 19:16:36.261624 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4619" for this suite. @ 05/13/24 19:16:36.268
• [11.830 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 05/13/24 19:16:36.293
  I0513 19:16:36.293761 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename replication-controller @ 05/13/24 19:16:36.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:16:36.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:16:36.36
  I0513 19:16:36.363974 21 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 05/13/24 19:16:36.399
  STEP: Checking rc "condition-test" has the desired failure condition set @ 05/13/24 19:16:36.418
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 05/13/24 19:16:37.431
  I0513 19:16:37.457129 21 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 05/13/24 19:16:37.457
  I0513 19:16:38.488253 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6873" for this suite. @ 05/13/24 19:16:38.492
• [2.210 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 05/13/24 19:16:38.505
  I0513 19:16:38.505698 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename webhook @ 05/13/24 19:16:38.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:16:38.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:16:38.55
  STEP: Setting up server cert @ 05/13/24 19:16:38.616
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 19:16:38.944
  STEP: Deploying the webhook pod @ 05/13/24 19:16:38.954
  STEP: Wait for the deployment to be ready @ 05/13/24 19:16:38.989
  I0513 19:16:39.015535 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0513 19:16:41.036578 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 19, 16, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 16, 39, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 16, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 16, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 19:16:43.047682 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 19, 16, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 16, 39, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 16, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 16, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 05/13/24 19:16:45.041
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 19:16:45.068
  I0513 19:16:46.068644 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 05/13/24 19:16:46.092
  STEP: create a pod that should be updated by the webhook @ 05/13/24 19:16:46.132
  I0513 19:16:46.369853 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7625" for this suite. @ 05/13/24 19:16:46.424
  STEP: Destroying namespace "webhook-markers-329" for this suite. @ 05/13/24 19:16:46.442
• [7.949 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 05/13/24 19:16:46.454
  I0513 19:16:46.454412 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename webhook @ 05/13/24 19:16:46.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:16:46.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:16:46.505
  STEP: Setting up server cert @ 05/13/24 19:16:46.58
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 19:16:46.824
  STEP: Deploying the webhook pod @ 05/13/24 19:16:47.212
  STEP: Wait for the deployment to be ready @ 05/13/24 19:16:47.261
  I0513 19:16:47.294300 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0513 19:16:49.306860 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 19, 16, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 16, 47, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 16, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 16, 47, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 05/13/24 19:16:51.311
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 19:16:51.344
  I0513 19:16:52.345211 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 05/13/24 19:16:52.362
  STEP: create a namespace for the webhook @ 05/13/24 19:16:52.398
  STEP: create a configmap should be unconditionally rejected by the webhook @ 05/13/24 19:16:52.427
  I0513 19:16:52.647934 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6714" for this suite. @ 05/13/24 19:16:52.672
  STEP: Destroying namespace "webhook-markers-9945" for this suite. @ 05/13/24 19:16:52.688
  STEP: Destroying namespace "fail-closed-namespace-7961" for this suite. @ 05/13/24 19:16:52.707
• [6.265 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:446
  STEP: Creating a kubernetes client @ 05/13/24 19:16:52.728
  I0513 19:16:52.728489 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename sched-pred @ 05/13/24 19:16:52.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:16:52.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:16:52.79
  I0513 19:16:52.793570 21 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0513 19:16:52.802771 21 util.go:400] Waiting for terminating namespaces to be deleted...
  I0513 19:16:52.806277 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-13-166.us-east-2.compute.internal before test
  I0513 19:16:52.818326 21 predicates.go:887] cloud-controller-manager-ip-172-31-13-166.us-east-2.compute.internal from kube-system started at 2024-05-13 16:11:28 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.818394 21 predicates.go:889] 	Container cloud-controller-manager ready: true, restart count 0
  I0513 19:16:52.818413 21 predicates.go:887] etcd-ip-172-31-13-166.us-east-2.compute.internal from kube-system started at 2024-05-13 16:10:27 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.818458 21 predicates.go:889] 	Container etcd ready: true, restart count 0
  I0513 19:16:52.818475 21 predicates.go:887] kube-apiserver-ip-172-31-13-166.us-east-2.compute.internal from kube-system started at 2024-05-13 16:11:19 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.818487 21 predicates.go:889] 	Container kube-apiserver ready: true, restart count 0
  I0513 19:16:52.818502 21 predicates.go:887] kube-controller-manager-ip-172-31-13-166.us-east-2.compute.internal from kube-system started at 2024-05-13 16:11:28 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.818514 21 predicates.go:889] 	Container kube-controller-manager ready: true, restart count 0
  I0513 19:16:52.818556 21 predicates.go:887] kube-proxy-ip-172-31-13-166.us-east-2.compute.internal from kube-system started at 2024-05-13 16:11:32 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.818568 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0513 19:16:52.818581 21 predicates.go:887] kube-scheduler-ip-172-31-13-166.us-east-2.compute.internal from kube-system started at 2024-05-13 16:11:28 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.818592 21 predicates.go:889] 	Container kube-scheduler ready: true, restart count 0
  I0513 19:16:52.818605 21 predicates.go:887] rke2-canal-lxqsl from kube-system started at 2024-05-13 16:11:50 +0000 UTC (2 container statuses recorded)
  I0513 19:16:52.818645 21 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0513 19:16:52.818657 21 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0513 19:16:52.818670 21 predicates.go:887] rke2-coredns-rke2-coredns-64dcf4f58b-jgwvr from kube-system started at 2024-05-13 16:12:12 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.818682 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0513 19:16:52.818695 21 predicates.go:887] rke2-ingress-nginx-controller-m6v56 from kube-system started at 2024-05-13 16:12:12 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.818736 21 predicates.go:889] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0513 19:16:52.818750 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-8692a35f669b4296-w77rh from sonobuoy started at 2024-05-13 18:54:27 +0000 UTC (2 container statuses recorded)
  I0513 19:16:52.818761 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 19:16:52.818773 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0513 19:16:52.818787 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-14-71.us-east-2.compute.internal before test
  I0513 19:16:52.829901 21 predicates.go:887] cloud-controller-manager-ip-172-31-14-71.us-east-2.compute.internal from kube-system started at 2024-05-13 16:13:18 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.830126 21 predicates.go:889] 	Container cloud-controller-manager ready: true, restart count 0
  I0513 19:16:52.830301 21 predicates.go:887] etcd-ip-172-31-14-71.us-east-2.compute.internal from kube-system started at 2024-05-13 16:11:56 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.830434 21 predicates.go:889] 	Container etcd ready: true, restart count 0
  I0513 19:16:52.830562 21 predicates.go:887] kube-apiserver-ip-172-31-14-71.us-east-2.compute.internal from kube-system started at 2024-05-13 16:13:04 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.830735 21 predicates.go:889] 	Container kube-apiserver ready: true, restart count 0
  I0513 19:16:52.830863 21 predicates.go:887] kube-controller-manager-ip-172-31-14-71.us-east-2.compute.internal from kube-system started at 2024-05-13 16:13:18 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.831045 21 predicates.go:889] 	Container kube-controller-manager ready: true, restart count 0
  I0513 19:16:52.831175 21 predicates.go:887] kube-proxy-ip-172-31-14-71.us-east-2.compute.internal from kube-system started at 2024-05-13 16:13:30 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.831330 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0513 19:16:52.831455 21 predicates.go:887] kube-scheduler-ip-172-31-14-71.us-east-2.compute.internal from kube-system started at 2024-05-13 16:13:18 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.831624 21 predicates.go:889] 	Container kube-scheduler ready: true, restart count 0
  I0513 19:16:52.831770 21 predicates.go:887] rke2-canal-6kl65 from kube-system started at 2024-05-13 16:13:36 +0000 UTC (2 container statuses recorded)
  I0513 19:16:52.831939 21 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0513 19:16:52.832060 21 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0513 19:16:52.832232 21 predicates.go:887] rke2-ingress-nginx-controller-qpq27 from kube-system started at 2024-05-13 16:14:46 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.832399 21 predicates.go:889] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0513 19:16:52.832529 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-8692a35f669b4296-9x47v from sonobuoy started at 2024-05-13 18:54:27 +0000 UTC (2 container statuses recorded)
  I0513 19:16:52.832695 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 19:16:52.832834 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0513 19:16:52.832958 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-3-239.us-east-2.compute.internal before test
  I0513 19:16:52.849462 21 predicates.go:887] cloud-controller-manager-ip-172-31-3-239.us-east-2.compute.internal from kube-system started at 2024-05-13 16:06:33 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.849508 21 predicates.go:889] 	Container cloud-controller-manager ready: true, restart count 0
  I0513 19:16:52.849527 21 predicates.go:887] etcd-ip-172-31-3-239.us-east-2.compute.internal from kube-system started at 2024-05-13 16:06:10 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.849539 21 predicates.go:889] 	Container etcd ready: true, restart count 0
  I0513 19:16:52.849552 21 predicates.go:887] helm-install-rke2-canal-58m47 from kube-system started at 2024-05-13 16:06:56 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.849564 21 predicates.go:889] 	Container helm ready: false, restart count 0
  I0513 19:16:52.849577 21 predicates.go:887] helm-install-rke2-coredns-9vtfx from kube-system started at 2024-05-13 16:06:56 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.849594 21 predicates.go:889] 	Container helm ready: false, restart count 0
  I0513 19:16:52.849609 21 predicates.go:887] helm-install-rke2-ingress-nginx-kdjxl from kube-system started at 2024-05-13 16:08:24 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.849620 21 predicates.go:889] 	Container helm ready: false, restart count 0
  I0513 19:16:52.849634 21 predicates.go:887] helm-install-rke2-metrics-server-lkmfs from kube-system started at 2024-05-13 16:08:24 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.849645 21 predicates.go:889] 	Container helm ready: false, restart count 0
  I0513 19:16:52.849658 21 predicates.go:887] helm-install-rke2-snapshot-controller-6dsg9 from kube-system started at 2024-05-13 16:08:24 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.849669 21 predicates.go:889] 	Container helm ready: false, restart count 1
  I0513 19:16:52.849683 21 predicates.go:887] helm-install-rke2-snapshot-controller-crd-4z46x from kube-system started at 2024-05-13 16:08:24 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.849694 21 predicates.go:889] 	Container helm ready: false, restart count 0
  I0513 19:16:52.849706 21 predicates.go:887] helm-install-rke2-snapshot-validation-webhook-4m66n from kube-system started at 2024-05-13 16:08:24 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.849717 21 predicates.go:889] 	Container helm ready: false, restart count 0
  I0513 19:16:52.849730 21 predicates.go:887] kube-apiserver-ip-172-31-3-239.us-east-2.compute.internal from kube-system started at 2024-05-13 16:06:25 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.849950 21 predicates.go:889] 	Container kube-apiserver ready: true, restart count 0
  I0513 19:16:52.850121 21 predicates.go:887] kube-controller-manager-ip-172-31-3-239.us-east-2.compute.internal from kube-system started at 2024-05-13 16:06:31 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.850215 21 predicates.go:889] 	Container kube-controller-manager ready: true, restart count 0
  I0513 19:16:52.850322 21 predicates.go:887] kube-proxy-ip-172-31-3-239.us-east-2.compute.internal from kube-system started at 2024-05-13 16:06:55 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.850410 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0513 19:16:52.850509 21 predicates.go:887] kube-scheduler-ip-172-31-3-239.us-east-2.compute.internal from kube-system started at 2024-05-13 16:06:31 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.850599 21 predicates.go:889] 	Container kube-scheduler ready: true, restart count 0
  I0513 19:16:52.850692 21 predicates.go:887] rke2-canal-vm47w from kube-system started at 2024-05-13 16:07:12 +0000 UTC (2 container statuses recorded)
  I0513 19:16:52.850782 21 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0513 19:16:52.850890 21 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0513 19:16:52.851004 21 predicates.go:887] rke2-coredns-rke2-coredns-64dcf4f58b-h2p8t from kube-system started at 2024-05-13 16:08:24 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.851095 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0513 19:16:52.851192 21 predicates.go:887] rke2-coredns-rke2-coredns-autoscaler-5749cd7b8b-qclvf from kube-system started at 2024-05-13 16:08:24 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.851301 21 predicates.go:889] 	Container autoscaler ready: true, restart count 0
  I0513 19:16:52.851393 21 predicates.go:887] rke2-ingress-nginx-controller-7f4wf from kube-system started at 2024-05-13 16:09:15 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.851572 21 predicates.go:889] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0513 19:16:52.851689 21 predicates.go:887] rke2-metrics-server-868fc8795f-88ljh from kube-system started at 2024-05-13 16:08:43 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.851778 21 predicates.go:889] 	Container metrics-server ready: true, restart count 0
  I0513 19:16:52.851888 21 predicates.go:887] rke2-snapshot-controller-7dcf5d5b46-twc4f from kube-system started at 2024-05-13 16:08:52 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.851979 21 predicates.go:889] 	Container rke2-snapshot-controller ready: true, restart count 0
  I0513 19:16:52.852076 21 predicates.go:887] rke2-snapshot-validation-webhook-bf7bbd6fc-jhdww from kube-system started at 2024-05-13 16:08:43 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.852178 21 predicates.go:889] 	Container rke2-snapshot-validation-webhook ready: true, restart count 0
  I0513 19:16:52.852270 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-8692a35f669b4296-22p7h from sonobuoy started at 2024-05-13 18:54:27 +0000 UTC (2 container statuses recorded)
  I0513 19:16:52.852358 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 19:16:52.852471 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0513 19:16:52.852559 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-7-107.us-east-2.compute.internal before test
  I0513 19:16:52.863073 21 predicates.go:887] kube-proxy-ip-172-31-7-107.us-east-2.compute.internal from kube-system started at 2024-05-13 16:16:16 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.863291 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0513 19:16:52.863421 21 predicates.go:887] rke2-canal-hhrx8 from kube-system started at 2024-05-13 16:16:16 +0000 UTC (2 container statuses recorded)
  I0513 19:16:52.863745 21 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0513 19:16:52.863871 21 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0513 19:16:52.864001 21 predicates.go:887] rke2-ingress-nginx-controller-qw67n from kube-system started at 2024-05-13 16:17:40 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.864125 21 predicates.go:889] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0513 19:16:52.864253 21 predicates.go:887] sonobuoy from sonobuoy started at 2024-05-13 18:54:25 +0000 UTC (1 container statuses recorded)
  I0513 19:16:52.864376 21 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0513 19:16:52.864501 21 predicates.go:887] sonobuoy-e2e-job-a300b5feb2b248aa from sonobuoy started at 2024-05-13 18:54:27 +0000 UTC (2 container statuses recorded)
  I0513 19:16:52.864626 21 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0513 19:16:52.864750 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 19:16:52.864895 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-8692a35f669b4296-rhppm from sonobuoy started at 2024-05-13 18:54:27 +0000 UTC (2 container statuses recorded)
  I0513 19:16:52.865020 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 19:16:52.865142 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 05/13/24 19:16:52.865
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17cf2267f36ac687], Reason = [FailedScheduling], Message = [0/4 nodes are available: 4 node(s) didn't match Pod's node affinity/selector. preemption: 0/4 nodes are available: 4 Preemption is not helpful for scheduling.] @ 05/13/24 19:16:52.927
  I0513 19:16:53.916725 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-216" for this suite. @ 05/13/24 19:16:53.921
• [1.208 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 05/13/24 19:16:53.936
  I0513 19:16:53.936460 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename resourcequota @ 05/13/24 19:16:53.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:16:53.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:16:53.989
  STEP: Creating a ResourceQuota @ 05/13/24 19:16:53.992
  STEP: Getting a ResourceQuota @ 05/13/24 19:16:54.007
  STEP: Updating a ResourceQuota @ 05/13/24 19:16:54.016
  STEP: Verifying a ResourceQuota was modified @ 05/13/24 19:16:54.026
  STEP: Deleting a ResourceQuota @ 05/13/24 19:16:54.034
  STEP: Verifying the deleted ResourceQuota @ 05/13/24 19:16:54.045
  I0513 19:16:54.057728 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-578" for this suite. @ 05/13/24 19:16:54.062
• [0.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 05/13/24 19:16:54.082
  I0513 19:16:54.082839 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename volumeattachment @ 05/13/24 19:16:54.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:16:54.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:16:54.124
  STEP: Create VolumeAttachment "va-e2e-4m8vk" on node "ip-172-31-7-107.us-east-2.compute.internal" @ 05/13/24 19:16:54.174
  STEP: Get VolumeAttachment "va-e2e-4m8vk" on node "ip-172-31-7-107.us-east-2.compute.internal" @ 05/13/24 19:16:54.349
  STEP: Patch VolumeAttachment "va-e2e-4m8vk" on node "ip-172-31-7-107.us-east-2.compute.internal" @ 05/13/24 19:16:54.352
  STEP: List VolumeAttachments with "va-e2e-4m8vk=patched" label @ 05/13/24 19:16:54.377
  STEP: Delete VolumeAttachment "va-e2e-4m8vk" on node "ip-172-31-7-107.us-east-2.compute.internal" @ 05/13/24 19:16:54.397
  STEP: Confirm deletion of VolumeAttachment "va-e2e-4m8vk" on node "ip-172-31-7-107.us-east-2.compute.internal" @ 05/13/24 19:16:54.408
  STEP: Create VolumeAttachment "va-e2e-8wzpz" on node "ip-172-31-3-239.us-east-2.compute.internal" @ 05/13/24 19:16:54.416
  STEP: Update the VolumeAttachment "va-e2e-8wzpz" on node "ip-172-31-3-239.us-east-2.compute.internal" with label "va-e2e=updated" @ 05/13/24 19:16:54.427
  STEP: Create VolumeAttachment "va-e2e-knzts" on node "ip-172-31-7-107.us-east-2.compute.internal" @ 05/13/24 19:16:54.45
  STEP: Update the VolumeAttachment "va-e2e-knzts" on node "ip-172-31-7-107.us-east-2.compute.internal" with label "va-e2e=updated" @ 05/13/24 19:16:54.466
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 05/13/24 19:16:54.479
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 05/13/24 19:16:54.512
  I0513 19:16:54.516589 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-1145" for this suite. @ 05/13/24 19:16:54.521
• [0.450 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 05/13/24 19:16:54.535
  I0513 19:16:54.535327 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename daemonsets @ 05/13/24 19:16:54.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:16:54.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:16:54.578
  STEP: Creating simple DaemonSet "daemon-set" @ 05/13/24 19:16:54.626
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/13/24 19:16:54.641
  I0513 19:16:54.666687 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 19:16:54.666751 21 fixtures.go:130] Node ip-172-31-13-166.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 19:16:55.659318 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 19:16:55.659571 21 fixtures.go:130] Node ip-172-31-13-166.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 19:16:56.667354 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0513 19:16:56.667410 21 fixtures.go:130] Node ip-172-31-14-71.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 19:16:57.659008 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0513 19:16:57.659196 21 fixtures.go:130] Node ip-172-31-3-239.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 19:16:58.784268 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0513 19:16:58.784324 21 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: listing all DaemonSets @ 05/13/24 19:16:58.788
  STEP: DeleteCollection of the DaemonSets @ 05/13/24 19:16:58.803
  STEP: Verify that ReplicaSets have been deleted @ 05/13/24 19:16:58.831
  I0513 19:16:58.847048 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"57169"},"items":null}

  I0513 19:16:58.870008 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"57170"},"items":[{"metadata":{"name":"daemon-set-2xhv8","generateName":"daemon-set-","namespace":"daemonsets-4754","uid":"612f43be-6ac0-4091-bf35-aae1fb1b5db9","resourceVersion":"57127","creationTimestamp":"2024-05-13T19:16:54Z","labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"6e8a1693b007f6d792777b67605a6aa6d5178f73e2e5d0fefa45dbc6b4e762d4","cni.projectcalico.org/podIP":"10.42.4.222/32","cni.projectcalico.org/podIPs":"10.42.4.222/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"e4f80eb6-0c4e-4405-98b9-a713f66f9ec6","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-13T19:16:54Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e4f80eb6-0c4e-4405-98b9-a713f66f9ec6\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-05-13T19:16:55Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-13T19:16:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.4.222\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-tt7vb","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-tt7vb","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-7-107.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-7-107.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T19:16:56Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T19:16:54Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T19:16:56Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T19:16:56Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T19:16:54Z"}],"hostIP":"172.31.7.107","hostIPs":[{"ip":"172.31.7.107"}],"podIP":"10.42.4.222","podIPs":[{"ip":"10.42.4.222"}],"startTime":"2024-05-13T19:16:54Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-13T19:16:55Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://1679669693d1f94eedd4eac6d483e1f6d245a1842334c6559d4dd5349581b4af","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-6kwcz","generateName":"daemon-set-","namespace":"daemonsets-4754","uid":"5a6095b6-37ac-4d27-9505-6f8e90a6fe94","resourceVersion":"57130","creationTimestamp":"2024-05-13T19:16:54Z","labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"9346bc0098f788585648b9ce12e52708628b172d09f593a5c0765071282a3647","cni.projectcalico.org/podIP":"10.42.1.76/32","cni.projectcalico.org/podIPs":"10.42.1.76/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"e4f80eb6-0c4e-4405-98b9-a713f66f9ec6","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-13T19:16:54Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e4f80eb6-0c4e-4405-98b9-a713f66f9ec6\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-05-13T19:16:55Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-13T19:16:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.1.76\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-h55f9","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-h55f9","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-13-166.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-13-166.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T19:16:56Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T19:16:54Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T19:16:56Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T19:16:56Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T19:16:54Z"}],"hostIP":"172.31.13.166","hostIPs":[{"ip":"172.31.13.166"}],"podIP":"10.42.1.76","podIPs":[{"ip":"10.42.1.76"}],"startTime":"2024-05-13T19:16:54Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-13T19:16:55Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://4e2165e99dee31781546b3f1b5c4cdfc69de7790cd34279bce015805cdf49801","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-9gmxv","generateName":"daemon-set-","namespace":"daemonsets-4754","uid":"90bc4fc5-4e92-498c-b5f5-cf03ff13239d","resourceVersion":"57149","creationTimestamp":"2024-05-13T19:16:54Z","labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"3360513ffad63fe2f088a01da2bfd38c883644562b6b25de566d636d541e56fa","cni.projectcalico.org/podIP":"10.42.0.70/32","cni.projectcalico.org/podIPs":"10.42.0.70/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"e4f80eb6-0c4e-4405-98b9-a713f66f9ec6","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-13T19:16:54Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e4f80eb6-0c4e-4405-98b9-a713f66f9ec6\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-05-13T19:16:55Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-13T19:16:57Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.0.70\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-7njsh","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-7njsh","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-3-239.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-3-239.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T19:16:57Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T19:16:54Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T19:16:57Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T19:16:57Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T19:16:54Z"}],"hostIP":"172.31.3.239","hostIPs":[{"ip":"172.31.3.239"}],"podIP":"10.42.0.70","podIPs":[{"ip":"10.42.0.70"}],"startTime":"2024-05-13T19:16:54Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-13T19:16:56Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://4876d20c66e42d8904c215cf100c5391e383f03116acd0c03a8426d79afb8bac","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-n8q75","generateName":"daemon-set-","namespace":"daemonsets-4754","uid":"c911b348-ffdf-494f-b26f-b0d07bb82d04","resourceVersion":"57136","creationTimestamp":"2024-05-13T19:16:54Z","labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"ba43ec63b239157c9a4a70d94267b9dfbbcbff353eaada1fdb5222cea9025d25","cni.projectcalico.org/podIP":"10.42.3.91/32","cni.projectcalico.org/podIPs":"10.42.3.91/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"e4f80eb6-0c4e-4405-98b9-a713f66f9ec6","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-05-13T19:16:54Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e4f80eb6-0c4e-4405-98b9-a713f66f9ec6\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-05-13T19:16:55Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-05-13T19:16:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.3.91\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-fr5jw","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-fr5jw","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-14-71.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-14-71.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T19:16:56Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T19:16:54Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T19:16:56Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T19:16:56Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T19:16:54Z"}],"hostIP":"172.31.14.71","hostIPs":[{"ip":"172.31.14.71"}],"podIP":"10.42.3.91","podIPs":[{"ip":"10.42.3.91"}],"startTime":"2024-05-13T19:16:54Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-13T19:16:56Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://ac687eb09d24fe9668e3253bb74c354adbf71ba4c0d1004aebe57f4358854fea","started":true}],"qosClass":"BestEffort"}}]}

  I0513 19:16:58.960967 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4754" for this suite. @ 05/13/24 19:16:58.971
• [4.450 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 05/13/24 19:16:58.986
  I0513 19:16:58.987098 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename endpointslice @ 05/13/24 19:16:58.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:16:59.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:16:59.034
  STEP: getting /apis @ 05/13/24 19:16:59.037
  STEP: getting /apis/discovery.k8s.io @ 05/13/24 19:16:59.045
  STEP: getting /apis/discovery.k8s.iov1 @ 05/13/24 19:16:59.047
  STEP: creating @ 05/13/24 19:16:59.049
  STEP: getting @ 05/13/24 19:16:59.107
  STEP: listing @ 05/13/24 19:16:59.12
  STEP: watching @ 05/13/24 19:16:59.133
  I0513 19:16:59.133517 21 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 05/13/24 19:16:59.139
  STEP: cluster-wide watching @ 05/13/24 19:16:59.153
  I0513 19:16:59.153397 21 endpointslice.go:459] starting watch
  STEP: patching @ 05/13/24 19:16:59.154
  STEP: updating @ 05/13/24 19:16:59.168
  I0513 19:16:59.190728 21 endpointslice.go:482] waiting for watch events with expected annotations
  I0513 19:16:59.190961 21 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 05/13/24 19:16:59.191
  STEP: deleting a collection @ 05/13/24 19:16:59.221
  I0513 19:16:59.279956 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-353" for this suite. @ 05/13/24 19:16:59.292
• [0.321 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 05/13/24 19:16:59.308
  I0513 19:16:59.308484 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename pods @ 05/13/24 19:16:59.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:16:59.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:16:59.401
  STEP: creating a Pod with a static label @ 05/13/24 19:16:59.417
  STEP: watching for Pod to be ready @ 05/13/24 19:16:59.442
  I0513 19:16:59.445057 21 pods.go:945] observed Pod pod-test in namespace pods-5461 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0513 19:16:59.465408 21 pods.go:945] observed Pod pod-test in namespace pods-5461 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:16:59 +0000 UTC  }]
  I0513 19:16:59.512194 21 pods.go:945] observed Pod pod-test in namespace pods-5461 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:16:59 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:16:59 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:16:59 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:16:59 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:16:59 +0000 UTC  }]
  I0513 19:17:00.650913 21 pods.go:945] observed Pod pod-test in namespace pods-5461 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:16:59 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:16:59 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:16:59 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:16:59 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:16:59 +0000 UTC  }]
  I0513 19:17:01.518014 21 pods.go:948] Found Pod pod-test in namespace pods-5461 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:17:01 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:16:59 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:17:01 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:17:01 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:16:59 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 05/13/24 19:17:01.534
  STEP: getting the Pod and ensuring that it's patched @ 05/13/24 19:17:01.569
  STEP: replacing the Pod's status Ready condition to False @ 05/13/24 19:17:01.583
  STEP: check the Pod again to ensure its Ready conditions are False @ 05/13/24 19:17:01.624
  STEP: deleting the Pod via a Collection with a LabelSelector @ 05/13/24 19:17:01.625
  STEP: watching for the Pod to be deleted @ 05/13/24 19:17:01.661
  I0513 19:17:01.664184 21 pods.go:1058] observed event type MODIFIED
  I0513 19:17:03.516752 21 pods.go:1058] observed event type MODIFIED
  I0513 19:17:04.007980 21 pods.go:1058] observed event type MODIFIED
  I0513 19:17:04.121570 21 pods.go:1058] observed event type MODIFIED
  I0513 19:17:04.524705 21 pods.go:1058] observed event type MODIFIED
  I0513 19:17:04.566323 21 pods.go:1058] observed event type MODIFIED
  I0513 19:17:04.580766 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5461" for this suite. @ 05/13/24 19:17:04.585
• [5.291 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 05/13/24 19:17:04.606
  I0513 19:17:04.606689 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename daemonsets @ 05/13/24 19:17:04.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:17:04.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:17:04.658
  STEP: Creating a simple DaemonSet "daemon-set" @ 05/13/24 19:17:04.715
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/13/24 19:17:04.731
  I0513 19:17:04.750766 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 19:17:04.750808 21 fixtures.go:130] Node ip-172-31-13-166.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 19:17:05.741225 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 19:17:05.741274 21 fixtures.go:130] Node ip-172-31-13-166.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 19:17:06.749274 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0513 19:17:06.749323 21 fixtures.go:130] Node ip-172-31-14-71.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 19:17:07.756828 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0513 19:17:07.756888 21 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 05/13/24 19:17:07.762
  I0513 19:17:07.847632 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0513 19:17:07.847700 21 fixtures.go:130] Node ip-172-31-7-107.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 19:17:08.811457 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0513 19:17:08.811555 21 fixtures.go:130] Node ip-172-31-7-107.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 19:17:09.823232 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0513 19:17:09.823287 21 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 05/13/24 19:17:09.823
  STEP: Deleting DaemonSet "daemon-set" @ 05/13/24 19:17:09.85
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6985, will wait for the garbage collector to delete the pods @ 05/13/24 19:17:09.85
  I0513 19:17:09.940928 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 32.294067ms
  I0513 19:17:10.141629 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 200.699756ms
  I0513 19:17:12.646610 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 19:17:12.646672 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0513 19:17:12.650179 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"57446"},"items":null}

  I0513 19:17:12.654913 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"57446"},"items":null}

  I0513 19:17:12.678636 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6985" for this suite. @ 05/13/24 19:17:12.684
• [8.093 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 05/13/24 19:17:12.7
  I0513 19:17:12.700765 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename container-probe @ 05/13/24 19:17:12.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:17:12.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:17:12.757
  I0513 19:18:12.787632 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1121" for this suite. @ 05/13/24 19:18:12.792
• [60.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 05/13/24 19:18:12.809
  I0513 19:18:12.809416 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename configmap @ 05/13/24 19:18:12.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:18:12.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:18:12.863
  STEP: Creating configMap with name configmap-test-upd-a6c34de0-a26d-4e0a-9558-7c7a7b5172d7 @ 05/13/24 19:18:12.881
  STEP: Creating the pod @ 05/13/24 19:18:12.89
  STEP: Waiting for pod with text data @ 05/13/24 19:18:14.932
  STEP: Waiting for pod with binary data @ 05/13/24 19:18:14.953
  I0513 19:18:14.961480 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-230" for this suite. @ 05/13/24 19:18:14.966
• [2.175 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 05/13/24 19:18:14.985
  I0513 19:18:14.985759 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename field-validation @ 05/13/24 19:18:14.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:18:15.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:18:15.035
  I0513 19:18:15.038452 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  W0513 19:18:17.588371      21 warnings.go:70] unknown field "alpha"
  W0513 19:18:17.588401      21 warnings.go:70] unknown field "beta"
  W0513 19:18:17.588410      21 warnings.go:70] unknown field "delta"
  W0513 19:18:17.588418      21 warnings.go:70] unknown field "epsilon"
  W0513 19:18:17.588425      21 warnings.go:70] unknown field "gamma"
  I0513 19:18:18.197815 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6844" for this suite. @ 05/13/24 19:18:18.202
• [3.239 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 05/13/24 19:18:18.225
  I0513 19:18:18.225470 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename secrets @ 05/13/24 19:18:18.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:18:18.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:18:18.269
  STEP: Creating secret with name s-test-opt-del-5fd1a978-30db-4263-bcd3-2ae2a4daff91 @ 05/13/24 19:18:18.283
  STEP: Creating secret with name s-test-opt-upd-e9c9fe02-ec45-42c1-9e09-908b54136b50 @ 05/13/24 19:18:18.299
  STEP: Creating the pod @ 05/13/24 19:18:18.309
  STEP: Deleting secret s-test-opt-del-5fd1a978-30db-4263-bcd3-2ae2a4daff91 @ 05/13/24 19:18:22.385
  STEP: Updating secret s-test-opt-upd-e9c9fe02-ec45-42c1-9e09-908b54136b50 @ 05/13/24 19:18:22.405
  STEP: Creating secret with name s-test-opt-create-28130111-5d66-4b1f-bf9d-e90e91f3e2a7 @ 05/13/24 19:18:22.416
  STEP: waiting to observe update in volume @ 05/13/24 19:18:22.427
  I0513 19:18:56.669130 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3759" for this suite. @ 05/13/24 19:18:56.676
• [38.464 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 05/13/24 19:18:56.689
  I0513 19:18:56.689574 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename emptydir @ 05/13/24 19:18:56.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:18:56.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:18:56.727
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 05/13/24 19:18:56.732
  STEP: Saw pod success @ 05/13/24 19:19:00.772
  I0513 19:19:00.775528 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-9063b524-e2b5-45a9-8045-e22a6c593b7a container test-container: <nil>
  STEP: delete the pod @ 05/13/24 19:19:00.783
  I0513 19:19:00.818246 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3587" for this suite. @ 05/13/24 19:19:00.831
• [4.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 05/13/24 19:19:00.848
  I0513 19:19:00.848927 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename configmap @ 05/13/24 19:19:00.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:19:00.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:19:00.879
  STEP: Creating configMap with name cm-test-opt-del-6af51ec4-7d4b-4449-8d68-78eedcb55784 @ 05/13/24 19:19:00.888
  STEP: Creating configMap with name cm-test-opt-upd-dfc54e4d-89b3-46f3-a632-6a91ba802e57 @ 05/13/24 19:19:00.898
  STEP: Creating the pod @ 05/13/24 19:19:00.927
  STEP: Deleting configmap cm-test-opt-del-6af51ec4-7d4b-4449-8d68-78eedcb55784 @ 05/13/24 19:19:05.011
  STEP: Updating configmap cm-test-opt-upd-dfc54e4d-89b3-46f3-a632-6a91ba802e57 @ 05/13/24 19:19:05.023
  STEP: Creating configMap with name cm-test-opt-create-2f63b995-0e3a-484b-9249-b966c4dda6bf @ 05/13/24 19:19:05.032
  STEP: waiting to observe update in volume @ 05/13/24 19:19:05.042
  I0513 19:19:41.259148 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6605" for this suite. @ 05/13/24 19:19:41.268
• [40.431 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 05/13/24 19:19:41.281
  I0513 19:19:41.281985 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename pods @ 05/13/24 19:19:41.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:19:41.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:19:41.322
  STEP: creating the pod @ 05/13/24 19:19:41.325
  STEP: submitting the pod to kubernetes @ 05/13/24 19:19:41.325
  STEP: verifying QOS class is set on the pod @ 05/13/24 19:19:41.365
  I0513 19:19:41.396144 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5187" for this suite. @ 05/13/24 19:19:41.401
• [0.130 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3136
  STEP: Creating a kubernetes client @ 05/13/24 19:19:41.413
  I0513 19:19:41.413220 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename services @ 05/13/24 19:19:41.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:19:41.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:19:41.448
  STEP: fetching services @ 05/13/24 19:19:41.451
  I0513 19:19:41.455517 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-701" for this suite. @ 05/13/24 19:19:41.47
• [0.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 05/13/24 19:19:41.496
  I0513 19:19:41.496836 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename resourcequota @ 05/13/24 19:19:41.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:19:41.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:19:41.542
  STEP: Counting existing ResourceQuota @ 05/13/24 19:19:41.547
  STEP: Creating a ResourceQuota @ 05/13/24 19:19:46.551
  STEP: Ensuring resource quota status is calculated @ 05/13/24 19:19:46.567
  STEP: Creating a ReplicaSet @ 05/13/24 19:19:48.571
  STEP: Ensuring resource quota status captures replicaset creation @ 05/13/24 19:19:48.598
  STEP: Deleting a ReplicaSet @ 05/13/24 19:19:50.603
  STEP: Ensuring resource quota status released usage @ 05/13/24 19:19:50.613
  I0513 19:19:52.619523 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9318" for this suite. @ 05/13/24 19:19:52.635
• [11.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:766
  STEP: Creating a kubernetes client @ 05/13/24 19:19:52.657
  I0513 19:19:52.657692 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename webhook @ 05/13/24 19:19:52.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:19:52.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:19:52.696
  STEP: Setting up server cert @ 05/13/24 19:19:52.75
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 19:19:53.593
  STEP: Deploying the webhook pod @ 05/13/24 19:19:53.606
  STEP: Wait for the deployment to be ready @ 05/13/24 19:19:53.64
  I0513 19:19:53.660893 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/13/24 19:19:55.672
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 19:19:55.711
  I0513 19:19:56.712626 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 05/13/24 19:19:56.739
  STEP: verifying the mutating webhook match conditions @ 05/13/24 19:19:56.756
  STEP: updating the mutating webhook match conditions @ 05/13/24 19:19:56.76
  STEP: verifying the mutating webhook match conditions @ 05/13/24 19:19:56.781
  I0513 19:19:56.900378 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8135" for this suite. @ 05/13/24 19:19:56.905
  STEP: Destroying namespace "webhook-markers-8115" for this suite. @ 05/13/24 19:19:56.929
• [4.291 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 05/13/24 19:19:56.949
  I0513 19:19:56.949788 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename discovery @ 05/13/24 19:19:56.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:19:56.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:19:56.998
  STEP: Setting up server cert @ 05/13/24 19:19:57.002
  I0513 19:19:58.298628 21 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0513 19:19:58.299732 21 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0513 19:19:58.299767 21 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0513 19:19:58.299782 21 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0513 19:19:58.299793 21 discovery.go:139] Checking APIGroup: apps
  I0513 19:19:58.300822 21 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0513 19:19:58.300850 21 discovery.go:148] Versions found [{apps/v1 v1}]
  I0513 19:19:58.300863 21 discovery.go:154] apps/v1 matches apps/v1
  I0513 19:19:58.300876 21 discovery.go:139] Checking APIGroup: events.k8s.io
  I0513 19:19:58.301877 21 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0513 19:19:58.301905 21 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0513 19:19:58.301917 21 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0513 19:19:58.301930 21 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0513 19:19:58.303448 21 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0513 19:19:58.303508 21 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0513 19:19:58.303522 21 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0513 19:19:58.303535 21 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0513 19:19:58.304518 21 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0513 19:19:58.304545 21 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0513 19:19:58.304557 21 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0513 19:19:58.304570 21 discovery.go:139] Checking APIGroup: autoscaling
  I0513 19:19:58.305647 21 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0513 19:19:58.305678 21 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0513 19:19:58.305691 21 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0513 19:19:58.305702 21 discovery.go:139] Checking APIGroup: batch
  I0513 19:19:58.306678 21 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0513 19:19:58.306707 21 discovery.go:148] Versions found [{batch/v1 v1}]
  I0513 19:19:58.306719 21 discovery.go:154] batch/v1 matches batch/v1
  I0513 19:19:58.306731 21 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0513 19:19:58.307776 21 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0513 19:19:58.307818 21 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0513 19:19:58.307831 21 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0513 19:19:58.307844 21 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0513 19:19:58.308805 21 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0513 19:19:58.308834 21 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0513 19:19:58.308870 21 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0513 19:19:58.308885 21 discovery.go:139] Checking APIGroup: policy
  I0513 19:19:58.309976 21 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0513 19:19:58.310007 21 discovery.go:148] Versions found [{policy/v1 v1}]
  I0513 19:19:58.310018 21 discovery.go:154] policy/v1 matches policy/v1
  I0513 19:19:58.310030 21 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0513 19:19:58.312213 21 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0513 19:19:58.312246 21 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0513 19:19:58.312259 21 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0513 19:19:58.312274 21 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0513 19:19:58.313483 21 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0513 19:19:58.313533 21 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0513 19:19:58.313547 21 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0513 19:19:58.313560 21 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0513 19:19:58.314516 21 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0513 19:19:58.314557 21 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0513 19:19:58.314570 21 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0513 19:19:58.314583 21 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0513 19:19:58.315583 21 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0513 19:19:58.315720 21 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0513 19:19:58.315853 21 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0513 19:19:58.315993 21 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0513 19:19:58.317072 21 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0513 19:19:58.317231 21 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0513 19:19:58.317348 21 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0513 19:19:58.317475 21 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0513 19:19:58.318500 21 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0513 19:19:58.318617 21 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0513 19:19:58.318734 21 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0513 19:19:58.318846 21 discovery.go:139] Checking APIGroup: node.k8s.io
  I0513 19:19:58.319890 21 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0513 19:19:58.320040 21 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0513 19:19:58.320217 21 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0513 19:19:58.320388 21 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0513 19:19:58.321605 21 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0513 19:19:58.321748 21 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0513 19:19:58.321940 21 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0513 19:19:58.322112 21 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0513 19:19:58.323698 21 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0513 19:19:58.323853 21 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I0513 19:19:58.324072 21 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0513 19:19:58.324213 21 discovery.go:139] Checking APIGroup: crd.projectcalico.org
  I0513 19:19:58.325463 21 discovery.go:147] PreferredVersion.GroupVersion: crd.projectcalico.org/v1
  I0513 19:19:58.325664 21 discovery.go:148] Versions found [{crd.projectcalico.org/v1 v1}]
  I0513 19:19:58.325818 21 discovery.go:154] crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
  I0513 19:19:58.325946 21 discovery.go:139] Checking APIGroup: helm.cattle.io
  I0513 19:19:58.327147 21 discovery.go:147] PreferredVersion.GroupVersion: helm.cattle.io/v1
  I0513 19:19:58.327290 21 discovery.go:148] Versions found [{helm.cattle.io/v1 v1}]
  I0513 19:19:58.327720 21 discovery.go:154] helm.cattle.io/v1 matches helm.cattle.io/v1
  I0513 19:19:58.327864 21 discovery.go:139] Checking APIGroup: k3s.cattle.io
  I0513 19:19:58.329799 21 discovery.go:147] PreferredVersion.GroupVersion: k3s.cattle.io/v1
  I0513 19:19:58.329980 21 discovery.go:148] Versions found [{k3s.cattle.io/v1 v1}]
  I0513 19:19:58.330110 21 discovery.go:154] k3s.cattle.io/v1 matches k3s.cattle.io/v1
  I0513 19:19:58.330265 21 discovery.go:139] Checking APIGroup: snapshot.storage.k8s.io
  I0513 19:19:58.331604 21 discovery.go:147] PreferredVersion.GroupVersion: snapshot.storage.k8s.io/v1
  I0513 19:19:58.331814 21 discovery.go:148] Versions found [{snapshot.storage.k8s.io/v1 v1} {snapshot.storage.k8s.io/v1beta1 v1beta1}]
  I0513 19:19:58.331945 21 discovery.go:154] snapshot.storage.k8s.io/v1 matches snapshot.storage.k8s.io/v1
  I0513 19:19:58.332069 21 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0513 19:19:58.333635 21 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0513 19:19:58.333790 21 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0513 19:19:58.333975 21 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0513 19:19:58.334261 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-9594" for this suite. @ 05/13/24 19:19:58.34
• [1.405 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:779
  STEP: Creating a kubernetes client @ 05/13/24 19:19:58.355
  I0513 19:19:58.355579 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename services @ 05/13/24 19:19:58.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:19:58.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:19:58.41
  I0513 19:19:58.417478 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2497" for this suite. @ 05/13/24 19:19:58.432
• [0.098 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 05/13/24 19:19:58.455
  I0513 19:19:58.456118 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename container-runtime @ 05/13/24 19:19:58.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:19:58.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:19:58.5
  STEP: create the container @ 05/13/24 19:19:58.503
  W0513 19:19:58.521830      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/13/24 19:19:58.522
  STEP: get the container status @ 05/13/24 19:20:03.062
  STEP: the container should be terminated @ 05/13/24 19:20:03.075
  STEP: the termination message should be set @ 05/13/24 19:20:03.075
  I0513 19:20:03.075831 21 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 05/13/24 19:20:03.075
  I0513 19:20:03.129031 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7717" for this suite. @ 05/13/24 19:20:03.174
• [4.748 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 05/13/24 19:20:03.206
  I0513 19:20:03.206201 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/13/24 19:20:03.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:20:03.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:20:03.272
  STEP: fetching the /apis discovery document @ 05/13/24 19:20:03.275
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 05/13/24 19:20:03.276
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 05/13/24 19:20:03.276
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 05/13/24 19:20:03.276
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 05/13/24 19:20:03.277
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 05/13/24 19:20:03.277
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 05/13/24 19:20:03.279
  I0513 19:20:03.279796 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4764" for this suite. @ 05/13/24 19:20:03.286
• [0.095 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1420
  STEP: Creating a kubernetes client @ 05/13/24 19:20:03.302
  I0513 19:20:03.302290 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename services @ 05/13/24 19:20:03.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:20:03.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:20:03.352
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-2555 @ 05/13/24 19:20:03.367
  STEP: changing the ExternalName service to type=ClusterIP @ 05/13/24 19:20:03.381
  STEP: creating replication controller externalname-service in namespace services-2555 @ 05/13/24 19:20:03.425
  I0513 19:20:03.452876      21 runners.go:198] Created replication controller with name: externalname-service, namespace: services-2555, replica count: 2
  I0513 19:20:06.505043      21 runners.go:198] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0513 19:20:06.505092 21 resource.go:361] Creating new exec pod
  I0513 19:20:09.541058 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-2555 exec execpodr5lb7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0513 19:20:09.772144 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0513 19:20:09.772209 21 builder.go:147] stdout: "externalname-service-2n2jl"
  I0513 19:20:09.772300 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-2555 exec execpodr5lb7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.100.241 80'
  I0513 19:20:10.025259 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.100.241 80\nConnection to 10.43.100.241 80 port [tcp/http] succeeded!\n"
  I0513 19:20:10.025320 21 builder.go:147] stdout: ""
  I0513 19:20:10.773389 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-2555 exec execpodr5lb7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.100.241 80'
  I0513 19:20:10.990511 21 builder.go:146] stderr: "+ echo+ nc -v -t -w 2 10.43.100.241 80\n hostName\nConnection to 10.43.100.241 80 port [tcp/http] succeeded!\n"
  I0513 19:20:10.990570 21 builder.go:147] stdout: "externalname-service-2n2jl"
  I0513 19:20:10.990676 21 service.go:1429] Cleaning up the ExternalName to ClusterIP test service
  I0513 19:20:11.041287 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2555" for this suite. @ 05/13/24 19:20:11.046
• [7.789 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:789
  STEP: Creating a kubernetes client @ 05/13/24 19:20:11.093
  I0513 19:20:11.093156 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename services @ 05/13/24 19:20:11.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:20:11.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:20:11.15
  STEP: creating service endpoint-test2 in namespace services-970 @ 05/13/24 19:20:11.154
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-970 to expose endpoints map[] @ 05/13/24 19:20:11.185
  I0513 19:20:11.209323 21 service.go:4258] successfully validated that service endpoint-test2 in namespace services-970 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-970 @ 05/13/24 19:20:11.209
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-970 to expose endpoints map[pod1:[80]] @ 05/13/24 19:20:13.246
  I0513 19:20:13.259376 21 service.go:4258] successfully validated that service endpoint-test2 in namespace services-970 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 05/13/24 19:20:13.259
  I0513 19:20:13.259487 21 resource.go:361] Creating new exec pod
  I0513 19:20:16.324450 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-970 exec execpodnfs66 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0513 19:20:16.643779 21 builder.go:146] stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0513 19:20:16.643841 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 19:20:16.644038 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-970 exec execpodnfs66 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.89.94 80'
  I0513 19:20:16.911684 21 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.89.94 80\n+ echo hostName\nConnection to 10.43.89.94 80 port [tcp/http] succeeded!\n"
  I0513 19:20:16.911738 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-970 @ 05/13/24 19:20:16.911
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-970 to expose endpoints map[pod1:[80] pod2:[80]] @ 05/13/24 19:20:20.968
  I0513 19:20:20.989094 21 service.go:4258] successfully validated that service endpoint-test2 in namespace services-970 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 05/13/24 19:20:20.989
  I0513 19:20:21.989462 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-970 exec execpodnfs66 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0513 19:20:22.197657 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0513 19:20:22.197713 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 19:20:22.197817 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-970 exec execpodnfs66 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.89.94 80'
  I0513 19:20:22.385430 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.89.94 80\nConnection to 10.43.89.94 80 port [tcp/http] succeeded!\n"
  I0513 19:20:22.385597 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-970 @ 05/13/24 19:20:22.385
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-970 to expose endpoints map[pod2:[80]] @ 05/13/24 19:20:22.452
  I0513 19:20:22.484040 21 service.go:4258] successfully validated that service endpoint-test2 in namespace services-970 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 05/13/24 19:20:22.484
  I0513 19:20:23.485126 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-970 exec execpodnfs66 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0513 19:20:23.669695 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0513 19:20:23.669762 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 19:20:23.669871 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-970 exec execpodnfs66 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.89.94 80'
  I0513 19:20:23.871820 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.89.94 80\nConnection to 10.43.89.94 80 port [tcp/http] succeeded!\n"
  I0513 19:20:23.871884 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-970 @ 05/13/24 19:20:23.871
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-970 to expose endpoints map[] @ 05/13/24 19:20:23.93
  I0513 19:20:23.958939 21 service.go:4258] successfully validated that service endpoint-test2 in namespace services-970 exposes endpoints map[]
  I0513 19:20:24.021672 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-970" for this suite. @ 05/13/24 19:20:24.043
• [12.962 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 05/13/24 19:20:24.055
  I0513 19:20:24.055710 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename deployment @ 05/13/24 19:20:24.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:20:24.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:20:24.086
  STEP: creating a Deployment @ 05/13/24 19:20:24.095
  STEP: waiting for Deployment to be created @ 05/13/24 19:20:24.104
  STEP: waiting for all Replicas to be Ready @ 05/13/24 19:20:24.107
  I0513 19:20:24.109351 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0513 19:20:24.109557 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0513 19:20:24.152829 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0513 19:20:24.152883 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0513 19:20:24.192866 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0513 19:20:24.193216 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0513 19:20:24.252966 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0513 19:20:24.253055 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0513 19:20:26.164476 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0513 19:20:26.164579 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0513 19:20:26.531783 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 05/13/24 19:20:26.532
  I0513 19:20:26.554478 21 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 05/13/24 19:20:26.555
  I0513 19:20:26.557431 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 0
  I0513 19:20:26.557907 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 0
  I0513 19:20:26.558144 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 0
  I0513 19:20:26.558165 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 0
  I0513 19:20:26.558481 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 0
  I0513 19:20:26.558717 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 0
  I0513 19:20:26.558744 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 0
  I0513 19:20:26.558759 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 0
  I0513 19:20:26.559397 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 1
  I0513 19:20:26.559638 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 1
  I0513 19:20:26.559959 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 2
  I0513 19:20:26.560185 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 2
  I0513 19:20:26.560212 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 2
  I0513 19:20:26.560229 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 2
  I0513 19:20:26.586831 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 2
  I0513 19:20:26.587092 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 2
  I0513 19:20:26.652746 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 2
  I0513 19:20:26.652792 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 2
  I0513 19:20:26.694086 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 1
  I0513 19:20:26.694128 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 1
  I0513 19:20:26.797428 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 1
  I0513 19:20:26.797478 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 1
  I0513 19:20:28.210286 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 2
  I0513 19:20:28.210330 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 2
  I0513 19:20:28.324971 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 1
  STEP: listing Deployments @ 05/13/24 19:20:28.325
  I0513 19:20:28.329185 21 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 05/13/24 19:20:28.329
  I0513 19:20:28.349620 21 deployment.go:360] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 05/13/24 19:20:28.349
  I0513 19:20:28.409227 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0513 19:20:28.409442 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0513 19:20:28.450749 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0513 19:20:28.496251 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0513 19:20:28.531751 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0513 19:20:30.216340 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0513 19:20:30.301092 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0513 19:20:30.353726 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0513 19:20:32.145546 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 05/13/24 19:20:32.22
  STEP: fetching the DeploymentStatus @ 05/13/24 19:20:32.242
  I0513 19:20:32.252079 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 1
  I0513 19:20:32.252683 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 1
  I0513 19:20:32.253174 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 1
  I0513 19:20:32.253735 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 1
  I0513 19:20:32.254153 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 1
  I0513 19:20:32.254732 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 2
  I0513 19:20:32.255314 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 2
  I0513 19:20:32.255688 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 2
  I0513 19:20:32.256052 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-9797 with ReadyReplicas 3
  STEP: deleting the Deployment @ 05/13/24 19:20:32.256
  I0513 19:20:32.280078 21 deployment.go:475] observed event type MODIFIED
  I0513 19:20:32.280238 21 deployment.go:475] observed event type MODIFIED
  I0513 19:20:32.280262 21 deployment.go:475] observed event type MODIFIED
  I0513 19:20:32.280459 21 deployment.go:475] observed event type MODIFIED
  I0513 19:20:32.280481 21 deployment.go:475] observed event type MODIFIED
  I0513 19:20:32.280534 21 deployment.go:475] observed event type MODIFIED
  I0513 19:20:32.280752 21 deployment.go:475] observed event type MODIFIED
  I0513 19:20:32.280776 21 deployment.go:475] observed event type MODIFIED
  I0513 19:20:32.280794 21 deployment.go:475] observed event type MODIFIED
  I0513 19:20:32.280939 21 deployment.go:475] observed event type MODIFIED
  I0513 19:20:32.280960 21 deployment.go:475] observed event type MODIFIED
  I0513 19:20:32.281145 21 deployment.go:475] observed event type MODIFIED
  I0513 19:20:32.291586 21 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0513 19:20:32.304787 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9797" for this suite. @ 05/13/24 19:20:32.309
• [8.280 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 05/13/24 19:20:32.336
  I0513 19:20:32.336563 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename security-context-test @ 05/13/24 19:20:32.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:20:32.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:20:32.389
  I0513 19:20:38.429526 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4129" for this suite. @ 05/13/24 19:20:38.436
• [6.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 05/13/24 19:20:38.453
  I0513 19:20:38.454000 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename downward-api @ 05/13/24 19:20:38.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:20:38.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:20:38.499
  STEP: Creating a pod to test downward API volume plugin @ 05/13/24 19:20:38.502
  STEP: Saw pod success @ 05/13/24 19:20:42.536
  I0513 19:20:42.539884 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod downwardapi-volume-17c7512c-7564-4575-8046-88fd6af06548 container client-container: <nil>
  STEP: delete the pod @ 05/13/24 19:20:42.548
  I0513 19:20:42.575880 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5143" for this suite. @ 05/13/24 19:20:42.581
• [4.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2181
  STEP: Creating a kubernetes client @ 05/13/24 19:20:42.609
  I0513 19:20:42.609518 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename services @ 05/13/24 19:20:42.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:20:42.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:20:42.644
  STEP: creating service in namespace services-1728 @ 05/13/24 19:20:42.647
  STEP: creating service affinity-clusterip in namespace services-1728 @ 05/13/24 19:20:42.647
  STEP: creating replication controller affinity-clusterip in namespace services-1728 @ 05/13/24 19:20:42.672
  I0513 19:20:42.699683      21 runners.go:198] Created replication controller with name: affinity-clusterip, namespace: services-1728, replica count: 3
  I0513 19:20:45.750741      21 runners.go:198] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0513 19:20:45.779865 21 resource.go:361] Creating new exec pod
  I0513 19:20:48.802043 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-1728 exec execpod-affinityxqklc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0513 19:20:49.009194 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I0513 19:20:49.009262 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 19:20:49.009526 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-1728 exec execpod-affinityxqklc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.142.96 80'
  I0513 19:20:49.199350 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.142.96 80\nConnection to 10.43.142.96 80 port [tcp/http] succeeded!\n"
  I0513 19:20:49.199414 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 19:20:49.199978 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-1728 exec execpod-affinityxqklc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.142.96:80/ ; done'
  I0513 19:20:49.478490 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.142.96:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.142.96:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.142.96:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.142.96:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.142.96:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.142.96:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.142.96:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.142.96:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.142.96:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.142.96:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.142.96:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.142.96:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.142.96:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.142.96:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.142.96:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.142.96:80/\n"
  I0513 19:20:49.478564 21 builder.go:147] stdout: "\naffinity-clusterip-g8f98\naffinity-clusterip-g8f98\naffinity-clusterip-g8f98\naffinity-clusterip-g8f98\naffinity-clusterip-g8f98\naffinity-clusterip-g8f98\naffinity-clusterip-g8f98\naffinity-clusterip-g8f98\naffinity-clusterip-g8f98\naffinity-clusterip-g8f98\naffinity-clusterip-g8f98\naffinity-clusterip-g8f98\naffinity-clusterip-g8f98\naffinity-clusterip-g8f98\naffinity-clusterip-g8f98\naffinity-clusterip-g8f98"
  I0513 19:20:49.478589 21 service.go:242] Received response from host: affinity-clusterip-g8f98
  I0513 19:20:49.478606 21 service.go:242] Received response from host: affinity-clusterip-g8f98
  I0513 19:20:49.478621 21 service.go:242] Received response from host: affinity-clusterip-g8f98
  I0513 19:20:49.478635 21 service.go:242] Received response from host: affinity-clusterip-g8f98
  I0513 19:20:49.478649 21 service.go:242] Received response from host: affinity-clusterip-g8f98
  I0513 19:20:49.478663 21 service.go:242] Received response from host: affinity-clusterip-g8f98
  I0513 19:20:49.478677 21 service.go:242] Received response from host: affinity-clusterip-g8f98
  I0513 19:20:49.478785 21 service.go:242] Received response from host: affinity-clusterip-g8f98
  I0513 19:20:49.478817 21 service.go:242] Received response from host: affinity-clusterip-g8f98
  I0513 19:20:49.478832 21 service.go:242] Received response from host: affinity-clusterip-g8f98
  I0513 19:20:49.478846 21 service.go:242] Received response from host: affinity-clusterip-g8f98
  I0513 19:20:49.478860 21 service.go:242] Received response from host: affinity-clusterip-g8f98
  I0513 19:20:49.478872 21 service.go:242] Received response from host: affinity-clusterip-g8f98
  I0513 19:20:49.478911 21 service.go:242] Received response from host: affinity-clusterip-g8f98
  I0513 19:20:49.478926 21 service.go:242] Received response from host: affinity-clusterip-g8f98
  I0513 19:20:49.478940 21 service.go:242] Received response from host: affinity-clusterip-g8f98
  I0513 19:20:49.479013 21 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-1728, will wait for the garbage collector to delete the pods @ 05/13/24 19:20:49.516
  I0513 19:20:49.602045 21 resources.go:139] Deleting ReplicationController affinity-clusterip took: 29.105819ms
  I0513 19:20:49.702932 21 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.885226ms
  I0513 19:20:53.875904 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1728" for this suite. @ 05/13/24 19:20:53.884
• [11.289 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 05/13/24 19:20:53.899
  I0513 19:20:53.899734 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename field-validation @ 05/13/24 19:20:53.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:20:53.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:20:53.951
  STEP: apply creating a deployment @ 05/13/24 19:20:53.954
  I0513 19:20:53.972958 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9812" for this suite. @ 05/13/24 19:20:53.977
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 05/13/24 19:20:53.998
  I0513 19:20:53.998237 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/13/24 19:20:53.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:20:54.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:20:54.035
  STEP: create the container to handle the HTTPGet hook request. @ 05/13/24 19:20:54.044
  STEP: create the pod with lifecycle hook @ 05/13/24 19:20:58.088
  STEP: delete the pod with lifecycle hook @ 05/13/24 19:21:02.137
  STEP: check prestop hook @ 05/13/24 19:21:04.175
  I0513 19:21:04.195709 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3298" for this suite. @ 05/13/24 19:21:04.2
• [10.214 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 05/13/24 19:21:04.213
  I0513 19:21:04.213759 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename security-context-test @ 05/13/24 19:21:04.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:21:04.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:21:04.264
  I0513 19:21:08.396203 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1057" for this suite. @ 05/13/24 19:21:08.411
• [4.235 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 05/13/24 19:21:08.451
  I0513 19:21:08.451860 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename secrets @ 05/13/24 19:21:08.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:21:08.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:21:08.511
  STEP: Creating secret with name secret-test-f03ed7c5-760a-4dc2-a963-b9f783845772 @ 05/13/24 19:21:08.514
  STEP: Creating a pod to test consume secrets @ 05/13/24 19:21:08.523
  STEP: Saw pod success @ 05/13/24 19:21:12.558
  I0513 19:21:12.561470 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-secrets-75d35895-7b96-4e5e-b35f-efade12831ce container secret-env-test: <nil>
  STEP: delete the pod @ 05/13/24 19:21:12.569
  I0513 19:21:12.617064 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1928" for this suite. @ 05/13/24 19:21:12.621
• [4.180 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 05/13/24 19:21:12.632
  I0513 19:21:12.632615 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename webhook @ 05/13/24 19:21:12.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:21:12.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:21:12.671
  STEP: Setting up server cert @ 05/13/24 19:21:12.719
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 19:21:13.486
  STEP: Deploying the webhook pod @ 05/13/24 19:21:13.506
  STEP: Wait for the deployment to be ready @ 05/13/24 19:21:13.547
  I0513 19:21:13.554400 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/13/24 19:21:15.565
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 19:21:15.598
  I0513 19:21:16.598964 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 05/13/24 19:21:16.607
  STEP: create a pod @ 05/13/24 19:21:16.638
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 05/13/24 19:21:18.666
  I0513 19:21:18.667053 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=webhook-4846 attach --namespace=webhook-4846 to-be-attached-pod -i -c=container1'
  I0513 19:21:18.780196 21 builder.go:135] rc: 1
  I0513 19:21:18.925519 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4846" for this suite. @ 05/13/24 19:21:18.964
  STEP: Destroying namespace "webhook-markers-1641" for this suite. @ 05/13/24 19:21:18.975
• [6.362 seconds]
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 05/13/24 19:21:18.994
  I0513 19:21:18.994367 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename containers @ 05/13/24 19:21:18.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:21:19.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:21:19.044
  STEP: Creating a pod to test override arguments @ 05/13/24 19:21:19.047
  STEP: Saw pod success @ 05/13/24 19:21:23.095
  I0513 19:21:23.098939 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod client-containers-e718c83d-dbdd-46a1-9c6f-c65d5039a573 container agnhost-container: <nil>
  STEP: delete the pod @ 05/13/24 19:21:23.106
  I0513 19:21:23.152018 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1749" for this suite. @ 05/13/24 19:21:23.156
• [4.180 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 05/13/24 19:21:23.174
  I0513 19:21:23.174770 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:21:23.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:21:23.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:21:23.226
  STEP: Creating configMap with name configmap-projected-all-test-volume-f77bf76d-a0b7-44f3-b9a4-e3882963383e @ 05/13/24 19:21:23.229
  STEP: Creating secret with name secret-projected-all-test-volume-335f9b0d-dd72-4011-9e6b-dee0a89b1f12 @ 05/13/24 19:21:23.246
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 05/13/24 19:21:23.257
  STEP: Saw pod success @ 05/13/24 19:21:27.303
  I0513 19:21:27.308145 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod projected-volume-d2ca83cd-cca5-43ab-baf7-0dc3d7f3c873 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 05/13/24 19:21:27.319
  I0513 19:21:27.370464 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1244" for this suite. @ 05/13/24 19:21:27.379
• [4.225 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 05/13/24 19:21:27.399
  I0513 19:21:27.400006 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename container-runtime @ 05/13/24 19:21:27.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:21:27.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:21:27.456
  STEP: create the container @ 05/13/24 19:21:27.459
  W0513 19:21:27.480691      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/13/24 19:21:27.48
  STEP: get the container status @ 05/13/24 19:21:31.512
  STEP: the container should be terminated @ 05/13/24 19:21:31.516
  STEP: the termination message should be set @ 05/13/24 19:21:31.516
  I0513 19:21:31.516396 21 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 05/13/24 19:21:31.516
  I0513 19:21:31.567554 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8214" for this suite. @ 05/13/24 19:21:31.573
• [4.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 05/13/24 19:21:31.587
  I0513 19:21:31.587577 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename configmap @ 05/13/24 19:21:31.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:21:31.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:21:31.655
  STEP: Creating configMap with name configmap-test-volume-c5e851d8-1249-4089-96d8-0a86a52f4c44 @ 05/13/24 19:21:31.658
  STEP: Creating a pod to test consume configMaps @ 05/13/24 19:21:31.67
  STEP: Saw pod success @ 05/13/24 19:21:35.715
  I0513 19:21:35.723647 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-configmaps-309cf515-843b-4949-8556-49c8ad5d508b container agnhost-container: <nil>
  STEP: delete the pod @ 05/13/24 19:21:35.735
  I0513 19:21:35.774835 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7613" for this suite. @ 05/13/24 19:21:35.78
• [4.210 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:715
  STEP: Creating a kubernetes client @ 05/13/24 19:21:35.797
  I0513 19:21:35.797488 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename webhook @ 05/13/24 19:21:35.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:21:35.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:21:35.841
  STEP: Setting up server cert @ 05/13/24 19:21:35.893
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 19:21:37.213
  STEP: Deploying the webhook pod @ 05/13/24 19:21:37.228
  STEP: Wait for the deployment to be ready @ 05/13/24 19:21:37.259
  I0513 19:21:37.281403 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0513 19:21:39.308969 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 19, 21, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 21, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 21, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 21, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 19:21:41.319672 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 19, 21, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 21, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 21, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 21, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 05/13/24 19:21:43.314
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 19:21:43.338
  I0513 19:21:44.339088 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 05/13/24 19:21:44.347
  STEP: verifying the validating webhook match conditions @ 05/13/24 19:21:44.365
  STEP: updating the validating webhook match conditions @ 05/13/24 19:21:44.378
  STEP: verifying the validating webhook match conditions @ 05/13/24 19:21:44.396
  I0513 19:21:44.518284 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3736" for this suite. @ 05/13/24 19:21:44.523
  STEP: Destroying namespace "webhook-markers-9874" for this suite. @ 05/13/24 19:21:44.57
• [8.797 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 05/13/24 19:21:44.595
  I0513 19:21:44.595913 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename secrets @ 05/13/24 19:21:44.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:21:44.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:21:44.642
  STEP: creating secret secrets-22/secret-test-ee483467-5a83-4862-8f9d-9d465dd88fa8 @ 05/13/24 19:21:44.645
  STEP: Creating a pod to test consume secrets @ 05/13/24 19:21:44.658
  STEP: Saw pod success @ 05/13/24 19:21:48.683
  I0513 19:21:48.687588 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-configmaps-4b6af8c5-2d87-4cfd-9120-940f8f9a94be container env-test: <nil>
  STEP: delete the pod @ 05/13/24 19:21:48.696
  I0513 19:21:48.734920 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-22" for this suite. @ 05/13/24 19:21:48.74
• [4.160 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 05/13/24 19:21:48.756
  I0513 19:21:48.756541 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename webhook @ 05/13/24 19:21:48.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:21:48.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:21:48.845
  STEP: Setting up server cert @ 05/13/24 19:21:48.902
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 19:21:49.833
  STEP: Deploying the webhook pod @ 05/13/24 19:21:49.85
  STEP: Wait for the deployment to be ready @ 05/13/24 19:21:49.897
  I0513 19:21:49.935131 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/13/24 19:21:51.946
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 19:21:52.213
  I0513 19:21:53.213543 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0513 19:21:53.221141 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2006-crds.webhook.example.com via the AdmissionRegistration API @ 05/13/24 19:21:53.74
  STEP: Creating a custom resource while v1 is storage version @ 05/13/24 19:21:53.771
  STEP: Patching Custom Resource Definition to set v2 as storage @ 05/13/24 19:21:55.904
  STEP: Patching the custom resource while v2 is storage version @ 05/13/24 19:21:55.925
  I0513 19:21:56.650729 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-121" for this suite. @ 05/13/24 19:21:56.655
  STEP: Destroying namespace "webhook-markers-6346" for this suite. @ 05/13/24 19:21:56.667
• [7.928 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 05/13/24 19:21:56.685
  I0513 19:21:56.686042 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/13/24 19:21:56.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:21:56.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:21:56.724
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 05/13/24 19:21:56.729
  I0513 19:21:56.730585 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 19:21:58.837476 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 19:22:07.285825 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5877" for this suite. @ 05/13/24 19:22:07.294
• [10.623 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 05/13/24 19:22:07.308
  I0513 19:22:07.308883 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:22:07.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:22:07.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:22:07.371
  STEP: Creating a pod to test downward API volume plugin @ 05/13/24 19:22:07.377
  STEP: Saw pod success @ 05/13/24 19:22:11.425
  I0513 19:22:11.429502 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod downwardapi-volume-d37bb608-423d-4d6b-bbf9-42240c636621 container client-container: <nil>
  STEP: delete the pod @ 05/13/24 19:22:11.447
  I0513 19:22:11.494290 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1073" for this suite. @ 05/13/24 19:22:11.501
• [4.207 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 05/13/24 19:22:11.516
  I0513 19:22:11.516100 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename container-probe @ 05/13/24 19:22:11.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:22:11.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:22:11.551
  STEP: Creating pod liveness-91bc06bc-6778-4c61-8b16-20be23120e5c in namespace container-probe-7495 @ 05/13/24 19:22:11.556
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/13/24 19:22:13.581
  I0513 19:22:13.586890 21 container_probe.go:1749] Initial restart count of pod liveness-91bc06bc-6778-4c61-8b16-20be23120e5c is 0
  I0513 19:22:13.591059 21 container_probe.go:1759] Get pod liveness-91bc06bc-6778-4c61-8b16-20be23120e5c in namespace container-probe-7495
  I0513 19:22:15.596205 21 container_probe.go:1759] Get pod liveness-91bc06bc-6778-4c61-8b16-20be23120e5c in namespace container-probe-7495
  I0513 19:22:17.601680 21 container_probe.go:1759] Get pod liveness-91bc06bc-6778-4c61-8b16-20be23120e5c in namespace container-probe-7495
  I0513 19:22:19.608079 21 container_probe.go:1759] Get pod liveness-91bc06bc-6778-4c61-8b16-20be23120e5c in namespace container-probe-7495
  I0513 19:22:21.613261 21 container_probe.go:1759] Get pod liveness-91bc06bc-6778-4c61-8b16-20be23120e5c in namespace container-probe-7495
  I0513 19:22:23.617702 21 container_probe.go:1759] Get pod liveness-91bc06bc-6778-4c61-8b16-20be23120e5c in namespace container-probe-7495
  I0513 19:22:25.623309 21 container_probe.go:1759] Get pod liveness-91bc06bc-6778-4c61-8b16-20be23120e5c in namespace container-probe-7495
  I0513 19:22:27.633726 21 container_probe.go:1759] Get pod liveness-91bc06bc-6778-4c61-8b16-20be23120e5c in namespace container-probe-7495
  I0513 19:22:29.639254 21 container_probe.go:1759] Get pod liveness-91bc06bc-6778-4c61-8b16-20be23120e5c in namespace container-probe-7495
  I0513 19:22:31.646632 21 container_probe.go:1759] Get pod liveness-91bc06bc-6778-4c61-8b16-20be23120e5c in namespace container-probe-7495
  I0513 19:22:33.652790 21 container_probe.go:1759] Get pod liveness-91bc06bc-6778-4c61-8b16-20be23120e5c in namespace container-probe-7495
  I0513 19:22:33.652849 21 container_probe.go:1763] Restart count of pod container-probe-7495/liveness-91bc06bc-6778-4c61-8b16-20be23120e5c is now 1 (20.065910099s elapsed)
  STEP: deleting the pod @ 05/13/24 19:22:33.652
  I0513 19:22:33.707260 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7495" for this suite. @ 05/13/24 19:22:33.716
• [22.212 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 05/13/24 19:22:33.728
  I0513 19:22:33.728471 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename disruption @ 05/13/24 19:22:33.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:22:33.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:22:33.784
  STEP: creating the pdb @ 05/13/24 19:22:33.788
  STEP: Waiting for the pdb to be processed @ 05/13/24 19:22:33.798
  STEP: updating the pdb @ 05/13/24 19:22:35.804
  STEP: Waiting for the pdb to be processed @ 05/13/24 19:22:35.823
  STEP: patching the pdb @ 05/13/24 19:22:37.828
  STEP: Waiting for the pdb to be processed @ 05/13/24 19:22:37.844
  STEP: Waiting for the pdb to be deleted @ 05/13/24 19:22:39.865
  I0513 19:22:39.868493 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-77" for this suite. @ 05/13/24 19:22:39.873
• [6.165 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1459
  STEP: Creating a kubernetes client @ 05/13/24 19:22:39.893
  I0513 19:22:39.893588 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename services @ 05/13/24 19:22:39.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:22:39.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:22:39.951
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-4680 @ 05/13/24 19:22:39.956
  STEP: changing the ExternalName service to type=NodePort @ 05/13/24 19:22:39.97
  STEP: creating replication controller externalname-service in namespace services-4680 @ 05/13/24 19:22:40.018
  I0513 19:22:40.045969      21 runners.go:198] Created replication controller with name: externalname-service, namespace: services-4680, replica count: 2
  I0513 19:22:43.096653      21 runners.go:198] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0513 19:22:43.096773 21 resource.go:361] Creating new exec pod
  I0513 19:22:46.124194 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-4680 exec execpodbs4w9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0513 19:22:46.336658 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0513 19:22:46.336728 21 builder.go:147] stdout: ""
  I0513 19:22:47.124672 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-4680 exec execpodbs4w9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0513 19:22:47.302575 21 builder.go:146] stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0513 19:22:47.302626 21 builder.go:147] stdout: ""
  I0513 19:22:48.124858 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-4680 exec execpodbs4w9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0513 19:22:48.304470 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0513 19:22:48.304648 21 builder.go:147] stdout: "externalname-service-vqzrb"
  I0513 19:22:48.304770 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-4680 exec execpodbs4w9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.215.253 80'
  I0513 19:22:48.471378 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.215.253 80\nConnection to 10.43.215.253 80 port [tcp/http] succeeded!\n"
  I0513 19:22:48.471508 21 builder.go:147] stdout: "externalname-service-vqzrb"
  I0513 19:22:48.471607 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-4680 exec execpodbs4w9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.14.71 31676'
  I0513 19:22:48.649792 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.14.71 31676\nConnection to 172.31.14.71 31676 port [tcp/*] succeeded!\n"
  I0513 19:22:48.649843 21 builder.go:147] stdout: ""
  I0513 19:22:49.472266 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-4680 exec execpodbs4w9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.14.71 31676'
  I0513 19:22:49.640898 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.14.71 31676\nConnection to 172.31.14.71 31676 port [tcp/*] succeeded!\n"
  I0513 19:22:49.640957 21 builder.go:147] stdout: "externalname-service-k4v8h"
  I0513 19:22:49.641048 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-4680 exec execpodbs4w9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.3.239 31676'
  I0513 19:22:49.850133 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.3.239 31676\nConnection to 172.31.3.239 31676 port [tcp/*] succeeded!\n"
  I0513 19:22:49.850185 21 builder.go:147] stdout: ""
  I0513 19:22:50.641395 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-4680 exec execpodbs4w9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.3.239 31676'
  I0513 19:22:50.822160 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.3.239 31676\nConnection to 172.31.3.239 31676 port [tcp/*] succeeded!\n"
  I0513 19:22:50.822224 21 builder.go:147] stdout: ""
  I0513 19:22:51.641149 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-4680 exec execpodbs4w9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.3.239 31676'
  I0513 19:22:51.835030 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.3.239 31676\nConnection to 172.31.3.239 31676 port [tcp/*] succeeded!\n"
  I0513 19:22:51.835093 21 builder.go:147] stdout: "externalname-service-k4v8h"
  I0513 19:22:51.835186 21 service.go:1468] Cleaning up the ExternalName to NodePort test service
  I0513 19:22:51.888924 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4680" for this suite. @ 05/13/24 19:22:51.893
• [12.009 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 05/13/24 19:22:51.902
  I0513 19:22:51.902576 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename statefulset @ 05/13/24 19:22:51.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:22:51.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:22:51.923
  STEP: Creating service test in namespace statefulset-1544 @ 05/13/24 19:22:51.927
  STEP: Looking for a node to schedule stateful set and pod @ 05/13/24 19:22:51.934
  STEP: Creating pod with conflicting port in namespace statefulset-1544 @ 05/13/24 19:22:51.942
  STEP: Waiting until pod test-pod will start running in namespace statefulset-1544 @ 05/13/24 19:22:51.953
  STEP: Creating statefulset with conflicting port in namespace statefulset-1544 @ 05/13/24 19:22:53.966
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-1544 @ 05/13/24 19:22:53.976
  I0513 19:22:54.003579 21 statefulset.go:866] Observed stateful pod in namespace: statefulset-1544, name: ss-0, uid: 2e34f67d-5ad1-4f67-af56-917a351e0387, status phase: Pending. Waiting for statefulset controller to delete.
  I0513 19:22:54.027699 21 statefulset.go:866] Observed stateful pod in namespace: statefulset-1544, name: ss-0, uid: 2e34f67d-5ad1-4f67-af56-917a351e0387, status phase: Failed. Waiting for statefulset controller to delete.
  I0513 19:22:54.038517 21 statefulset.go:866] Observed stateful pod in namespace: statefulset-1544, name: ss-0, uid: 2e34f67d-5ad1-4f67-af56-917a351e0387, status phase: Failed. Waiting for statefulset controller to delete.
  I0513 19:22:54.047515 21 statefulset.go:860] Observed delete event for stateful pod ss-0 in namespace statefulset-1544
  STEP: Removing pod with conflicting port in namespace statefulset-1544 @ 05/13/24 19:22:54.047
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-1544 and will be in running state @ 05/13/24 19:22:54.118
  I0513 19:22:56.140110 21 statefulset.go:135] Deleting all statefulset in ns statefulset-1544
  I0513 19:22:56.145611 21 rest.go:150] Scaling statefulset ss to 0
  I0513 19:23:06.172798 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0513 19:23:06.180928 21 rest.go:88] Deleting statefulset ss
  I0513 19:23:06.220024 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1544" for this suite. @ 05/13/24 19:23:06.229
• [14.349 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 05/13/24 19:23:06.266
  I0513 19:23:06.266089 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename pod-network-test @ 05/13/24 19:23:06.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:23:06.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:23:06.312
  STEP: Performing setup for networking test in namespace pod-network-test-4929 @ 05/13/24 19:23:06.315
  STEP: creating a selector @ 05/13/24 19:23:06.315
  STEP: Creating the service pods in kubernetes @ 05/13/24 19:23:06.315
  I0513 19:23:06.315306 21 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 05/13/24 19:23:28.587
  I0513 19:23:32.632009 21 utils.go:779] Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  I0513 19:23:32.632064 21 networking.go:42] Breadth first check of 10.42.1.81 on host 172.31.13.166...
  I0513 19:23:32.635991 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.4.8:9080/dial?request=hostname&protocol=http&host=10.42.1.81&port=8083&tries=1'] Namespace:pod-network-test-4929 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 19:23:32.636084 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 19:23:32.636838 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 19:23:32.636931 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4929/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.4.8%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.1.81%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0513 19:23:32.753668 21 utils.go:331] Waiting for responses: map[]
  I0513 19:23:32.753954 21 utils.go:335] reached 10.42.1.81 after 0/1 tries
  I0513 19:23:32.753976 21 networking.go:42] Breadth first check of 10.42.3.102 on host 172.31.14.71...
  I0513 19:23:32.757981 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.4.8:9080/dial?request=hostname&protocol=http&host=10.42.3.102&port=8083&tries=1'] Namespace:pod-network-test-4929 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 19:23:32.758054 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 19:23:32.758913 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 19:23:32.759018 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4929/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.4.8%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.3.102%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0513 19:23:32.879222 21 utils.go:331] Waiting for responses: map[]
  I0513 19:23:32.879268 21 utils.go:335] reached 10.42.3.102 after 0/1 tries
  I0513 19:23:32.879287 21 networking.go:42] Breadth first check of 10.42.0.72 on host 172.31.3.239...
  I0513 19:23:32.883822 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.4.8:9080/dial?request=hostname&protocol=http&host=10.42.0.72&port=8083&tries=1'] Namespace:pod-network-test-4929 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 19:23:32.883860 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 19:23:32.884853 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 19:23:32.884924 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4929/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.4.8%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.0.72%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0513 19:23:33.005293 21 utils.go:331] Waiting for responses: map[]
  I0513 19:23:33.005348 21 utils.go:335] reached 10.42.0.72 after 0/1 tries
  I0513 19:23:33.005367 21 networking.go:42] Breadth first check of 10.42.4.7 on host 172.31.7.107...
  I0513 19:23:33.010528 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.4.8:9080/dial?request=hostname&protocol=http&host=10.42.4.7&port=8083&tries=1'] Namespace:pod-network-test-4929 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 19:23:33.010572 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 19:23:33.011344 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 19:23:33.011443 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4929/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.4.8%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.4.7%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0513 19:23:33.107794 21 utils.go:331] Waiting for responses: map[]
  I0513 19:23:33.107854 21 utils.go:335] reached 10.42.4.7 after 0/1 tries
  I0513 19:23:33.107875 21 networking.go:53] Going to retry 0 out of 4 pods....
  I0513 19:23:33.107968 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4929" for this suite. @ 05/13/24 19:23:33.116
• [26.873 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3656
  STEP: Creating a kubernetes client @ 05/13/24 19:23:33.14
  I0513 19:23:33.140558 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename services @ 05/13/24 19:23:33.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:23:33.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:23:33.181
  STEP: creating service multiprotocol-test in namespace services-8279 @ 05/13/24 19:23:33.185
  STEP: creating pod pod1 in namespace services-8279 @ 05/13/24 19:23:33.215
  STEP: Creating pod pod1 in namespace services-8279 @ 05/13/24 19:23:33.216
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-8279 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 05/13/24 19:23:35.278
  I0513 19:23:35.298354 21 service.go:4351] successfully validated that service multiprotocol-test in namespace services-8279 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 05/13/24 19:23:35.298
  I0513 19:23:35.298872 21 resource.go:361] Creating new exec pod
  I0513 19:23:37.354092 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-8279 exec execpodcx7k6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.191.3 80'
  I0513 19:23:37.578771 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.191.3 80\nConnection to 10.43.191.3 80 port [tcp/http] succeeded!\n"
  I0513 19:23:37.578953 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 19:23:37.579054 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-8279 exec execpodcx7k6 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.191.3 80'
  I0513 19:23:41.760687 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.191.3 80\nConnection to 10.43.191.3 80 port [udp/*] succeeded!\n"
  I0513 19:23:41.760775 21 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 05/13/24 19:23:41.76
  I0513 19:23:41.781736 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-8279 exec execpodcx7k6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.191.3 80'
  I0513 19:23:41.981613 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.191.3 80\nConnection to 10.43.191.3 80 port [tcp/http] succeeded!\n"
  I0513 19:23:41.981668 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 19:23:41.981767 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-8279 exec execpodcx7k6 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.191.3 80'
  I0513 19:23:46.155984 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.191.3 80\nConnection to 10.43.191.3 80 port [udp/*] succeeded!\n"
  I0513 19:23:46.156050 21 builder.go:147] stdout: ""
  I0513 19:23:46.156260 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-8279 exec execpodcx7k6 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.191.3 80'
  I0513 19:23:50.336331 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.191.3 80\nConnection to 10.43.191.3 80 port [udp/*] succeeded!\n"
  I0513 19:23:50.336397 21 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 05/13/24 19:23:50.336
  I0513 19:23:50.356114 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-8279 exec execpodcx7k6 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.191.3 80'
  I0513 19:23:54.571907 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.191.3 80\nConnection to 10.43.191.3 80 port [udp/*] succeeded!\n"
  I0513 19:23:54.572053 21 builder.go:147] stdout: "pod1"
  I0513 19:23:54.572162 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-8279 exec execpodcx7k6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.191.3 80'
  I0513 19:23:56.761359 21 builder.go:135] rc: 1
  I0513 19:23:56.761433 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-8279 exec execpodcx7k6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.191.3 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.191.3 80
  nc: connect to 10.43.191.3 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0513 19:23:56.761807 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-8279 exec execpodcx7k6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.191.3 80'
  I0513 19:23:58.937340 21 builder.go:135] rc: 1
  I0513 19:23:58.937420 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-8279 exec execpodcx7k6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.191.3 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.191.3 80
  nc: connect to 10.43.191.3 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0513 19:23:58.937532 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-8279 exec execpodcx7k6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.191.3 80'
  I0513 19:24:01.156967 21 builder.go:135] rc: 1
  I0513 19:24:01.157047 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-8279 exec execpodcx7k6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.191.3 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.43.191.3 80
  + echo hostName
  nc: connect to 10.43.191.3 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0513 19:24:01.157311 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8279" for this suite. @ 05/13/24 19:24:01.164
• [28.037 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 05/13/24 19:24:01.178
  I0513 19:24:01.178248 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename var-expansion @ 05/13/24 19:24:01.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:24:01.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:24:01.224
  STEP: Creating a pod to test substitution in container's command @ 05/13/24 19:24:01.229
  STEP: Saw pod success @ 05/13/24 19:24:05.272
  I0513 19:24:05.275785 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod var-expansion-e3b1eb65-2480-4849-a687-a0473fbd3dd8 container dapi-container: <nil>
  STEP: delete the pod @ 05/13/24 19:24:05.296
  I0513 19:24:05.313122 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5778" for this suite. @ 05/13/24 19:24:05.318
• [4.154 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 05/13/24 19:24:05.332
  I0513 19:24:05.332195 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename sched-preemption @ 05/13/24 19:24:05.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:24:05.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:24:05.363
  I0513 19:24:05.388801 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0513 19:25:05.397905 21 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 05/13/24 19:25:05.405
  I0513 19:25:05.405302 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename sched-preemption-path @ 05/13/24 19:25:05.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:25:05.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:25:05.447
  STEP: Finding an available node @ 05/13/24 19:25:05.454
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/13/24 19:25:05.454
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/13/24 19:25:07.761
  I0513 19:25:07.812676 21 preemption.go:583] found a healthy node: ip-172-31-7-107.us-east-2.compute.internal
  I0513 19:25:18.091547 21 preemption.go:706] pods created so far: [1 1 1]
  I0513 19:25:18.091597 21 preemption.go:707] length of pods created so far: 3
  I0513 19:25:20.113375 21 preemption.go:724] pods created so far: [2 2 1]
  I0513 19:25:27.380500 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-4529" for this suite. @ 05/13/24 19:25:27.403
  I0513 19:25:28.010612 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5373" for this suite. @ 05/13/24 19:25:28.018
• [82.697 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 05/13/24 19:25:28.029
  I0513 19:25:28.029983 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename namespaces @ 05/13/24 19:25:28.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:25:28.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:25:28.076
  STEP: Read namespace status @ 05/13/24 19:25:28.081
  I0513 19:25:28.088073 21 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 05/13/24 19:25:28.088
  I0513 19:25:28.100167 21 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 05/13/24 19:25:28.1
  I0513 19:25:28.112118 21 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0513 19:25:28.112425 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-896" for this suite. @ 05/13/24 19:25:28.118
• [0.100 seconds]
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 05/13/24 19:25:28.131
  I0513 19:25:28.131163 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename container-probe @ 05/13/24 19:25:28.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:25:28.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:25:28.167
  STEP: Creating pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385 @ 05/13/24 19:25:28.171
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/13/24 19:25:30.196
  I0513 19:25:30.201480 21 container_probe.go:1749] Initial restart count of pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f is 0
  I0513 19:25:30.208212 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:25:32.691996 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:25:34.699963 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:25:36.705038 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:25:38.710579 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:25:40.715871 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:25:42.722058 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:25:44.726274 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:25:46.731699 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:25:48.736360 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:25:50.748592 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:25:52.753224 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:25:54.758773 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:25:56.763518 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:25:58.769133 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:26:00.775223 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:26:02.784251 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:26:04.793317 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:26:06.797938 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:26:08.803893 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:26:10.808526 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:26:12.813959 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:26:14.821104 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:26:16.826248 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:26:18.832119 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:26:20.836469 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:26:22.841039 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:26:24.849336 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:26:26.853294 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:26:28.858904 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:26:30.863728 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:26:32.869453 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:26:34.893719 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:26:36.899764 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:26:38.910262 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:26:40.919927 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:26:42.927264 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:26:44.942387 21 container_probe.go:1759] Get pod test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f in namespace container-probe-4385
  I0513 19:26:44.942460 21 container_probe.go:1763] Restart count of pod container-probe-4385/test-grpc-cadeaf71-225f-47c6-b756-6db88f7ef43f is now 1 (1m14.740206596s elapsed)
  STEP: deleting the pod @ 05/13/24 19:26:44.942
  I0513 19:26:44.993764 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4385" for this suite. @ 05/13/24 19:26:45.006
• [76.892 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:420
  STEP: Creating a kubernetes client @ 05/13/24 19:26:45.023
  I0513 19:26:45.023559 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename job @ 05/13/24 19:26:45.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:26:45.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:26:45.049
  STEP: Creating Indexed job @ 05/13/24 19:26:45.052
  STEP: Ensuring job reaches completions @ 05/13/24 19:26:45.061
  STEP: Ensuring pods with index for job exist @ 05/13/24 19:26:55.066
  I0513 19:26:55.071908 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-55" for this suite. @ 05/13/24 19:26:55.077
• [10.062 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 05/13/24 19:26:55.086
  I0513 19:26:55.086070 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename cronjob @ 05/13/24 19:26:55.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:26:55.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:26:55.111
  STEP: Creating a ForbidConcurrent cronjob @ 05/13/24 19:26:55.116
  STEP: Ensuring a job is scheduled @ 05/13/24 19:26:55.132
  STEP: Ensuring exactly one is scheduled @ 05/13/24 19:27:01.395
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 05/13/24 19:27:01.4
  STEP: Ensuring no more jobs are scheduled @ 05/13/24 19:27:01.407
  STEP: Removing cronjob @ 05/13/24 19:27:01.413
  I0513 19:27:01.438201 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1721" for this suite. @ 05/13/24 19:27:01.443
• [6.386 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:833
  STEP: Creating a kubernetes client @ 05/13/24 19:27:01.479
  I0513 19:27:01.479088 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename job @ 05/13/24 19:27:01.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:27:01.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:27:01.553
  STEP: Creating a job @ 05/13/24 19:27:01.56
  STEP: Ensure pods equal to parallelism count is attached to the job @ 05/13/24 19:27:01.582
  STEP: patching /status @ 05/13/24 19:27:03.594
  STEP: updating /status @ 05/13/24 19:27:03.632
  STEP: get /status @ 05/13/24 19:27:03.653
  I0513 19:27:03.658553 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-260" for this suite. @ 05/13/24 19:27:03.668
• [2.656 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 05/13/24 19:27:04.134
  I0513 19:27:04.134883 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename emptydir @ 05/13/24 19:27:04.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:27:04.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:27:04.175
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 05/13/24 19:27:04.178
  STEP: Saw pod success @ 05/13/24 19:27:08.21
  I0513 19:27:08.215354 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-2e9d78b5-b5e3-4861-8cbc-f8ba9a95c2c2 container test-container: <nil>
  STEP: delete the pod @ 05/13/24 19:27:08.239
  I0513 19:27:08.272160 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7231" for this suite. @ 05/13/24 19:27:08.279
• [4.163 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 05/13/24 19:27:08.298
  I0513 19:27:08.299020 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/13/24 19:27:08.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:27:08.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:27:08.369
  I0513 19:27:08.372258 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/13/24 19:27:10.792
  I0513 19:27:10.792257 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=crd-publish-openapi-9583 --namespace=crd-publish-openapi-9583 create -f -'
  I0513 19:27:10.913714 21 builder.go:146] stderr: ""
  I0513 19:27:10.913763 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4347-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0513 19:27:10.913825 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=crd-publish-openapi-9583 --namespace=crd-publish-openapi-9583 delete e2e-test-crd-publish-openapi-4347-crds test-cr'
  I0513 19:27:11.021497 21 builder.go:146] stderr: ""
  I0513 19:27:11.021549 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4347-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0513 19:27:11.021610 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=crd-publish-openapi-9583 --namespace=crd-publish-openapi-9583 apply -f -'
  I0513 19:27:11.149242 21 builder.go:146] stderr: ""
  I0513 19:27:11.149302 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4347-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0513 19:27:11.149368 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=crd-publish-openapi-9583 --namespace=crd-publish-openapi-9583 delete e2e-test-crd-publish-openapi-4347-crds test-cr'
  I0513 19:27:11.247348 21 builder.go:146] stderr: ""
  I0513 19:27:11.247422 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4347-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 05/13/24 19:27:11.247
  I0513 19:27:11.247588 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=crd-publish-openapi-9583 explain e2e-test-crd-publish-openapi-4347-crds'
  I0513 19:27:11.328498 21 builder.go:146] stderr: ""
  I0513 19:27:11.328575 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-4347-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I0513 19:27:13.364118 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9583" for this suite. @ 05/13/24 19:27:13.376
• [5.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1048
  STEP: Creating a kubernetes client @ 05/13/24 19:27:13.395
  I0513 19:27:13.395215 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename kubectl @ 05/13/24 19:27:13.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:27:13.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:27:13.451
  STEP: create deployment with httpd image @ 05/13/24 19:27:13.457
  I0513 19:27:13.457570 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-1905 create -f -'
  I0513 19:27:13.643574 21 builder.go:146] stderr: ""
  I0513 19:27:13.643646 21 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 05/13/24 19:27:13.643
  I0513 19:27:13.643741 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-1905 diff -f -'
  I0513 19:27:13.889059 21 builder.go:135] rc: 1
  I0513 19:27:13.889160 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-1905 delete -f -'
  I0513 19:27:14.027760 21 builder.go:146] stderr: ""
  I0513 19:27:14.027808 21 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0513 19:27:14.027929 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1905" for this suite. @ 05/13/24 19:27:14.045
• [0.662 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 05/13/24 19:27:14.057
  I0513 19:27:14.057029 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename downward-api @ 05/13/24 19:27:14.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:27:14.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:27:14.104
  STEP: Creating the pod @ 05/13/24 19:27:14.107
  I0513 19:27:16.716495 21 pod_client.go:141] Successfully updated pod "labelsupdatec31ab8fe-6dc9-4542-ab86-c5695a692677"
  I0513 19:27:20.760356 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-220" for this suite. @ 05/13/24 19:27:20.771
• [6.726 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 05/13/24 19:27:20.783
  I0513 19:27:20.783731 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename podtemplate @ 05/13/24 19:27:20.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:27:20.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:27:20.877
  I0513 19:27:20.935738 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6282" for this suite. @ 05/13/24 19:27:20.94
• [0.171 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1537
  STEP: Creating a kubernetes client @ 05/13/24 19:27:20.954
  I0513 19:27:20.954737 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename services @ 05/13/24 19:27:20.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:27:20.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:27:21.001
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-5839 @ 05/13/24 19:27:21.007
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 05/13/24 19:27:21.046
  STEP: creating service externalsvc in namespace services-5839 @ 05/13/24 19:27:21.046
  STEP: creating replication controller externalsvc in namespace services-5839 @ 05/13/24 19:27:21.118
  I0513 19:27:21.141953      21 runners.go:198] Created replication controller with name: externalsvc, namespace: services-5839, replica count: 2
  I0513 19:27:24.193901      21 runners.go:198] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 05/13/24 19:27:24.198
  I0513 19:27:24.249545 21 resource.go:361] Creating new exec pod
  I0513 19:27:26.298820 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-5839 exec execpodtm9ml -- /bin/sh -x -c nslookup nodeport-service.services-5839.svc.cluster.local'
  I0513 19:27:26.556159 21 builder.go:146] stderr: "+ nslookup nodeport-service.services-5839.svc.cluster.local\n"
  I0513 19:27:26.556214 21 builder.go:147] stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nnodeport-service.services-5839.svc.cluster.local\tcanonical name = externalsvc.services-5839.svc.cluster.local.\nName:\texternalsvc.services-5839.svc.cluster.local\nAddress: 10.43.107.65\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-5839, will wait for the garbage collector to delete the pods @ 05/13/24 19:27:26.556
  I0513 19:27:26.639002 21 resources.go:139] Deleting ReplicationController externalsvc took: 21.112636ms
  I0513 19:27:26.740045 21 resources.go:163] Terminating ReplicationController externalsvc pods took: 101.039413ms
  I0513 19:27:30.009696 21 service.go:1548] Cleaning up the NodePort to ExternalName test service
  I0513 19:27:30.036131 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5839" for this suite. @ 05/13/24 19:27:30.05
• [9.119 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 05/13/24 19:27:30.075
  I0513 19:27:30.075380 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename kubelet-test @ 05/13/24 19:27:30.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:27:30.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:27:30.123
  I0513 19:27:34.170544 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6565" for this suite. @ 05/13/24 19:27:34.176
• [4.117 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1497
  STEP: Creating a kubernetes client @ 05/13/24 19:27:34.193
  I0513 19:27:34.193242 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename services @ 05/13/24 19:27:34.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:27:34.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:27:34.231
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-7506 @ 05/13/24 19:27:34.235
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 05/13/24 19:27:34.26
  STEP: creating service externalsvc in namespace services-7506 @ 05/13/24 19:27:34.261
  STEP: creating replication controller externalsvc in namespace services-7506 @ 05/13/24 19:27:34.305
  I0513 19:27:34.318385      21 runners.go:198] Created replication controller with name: externalsvc, namespace: services-7506, replica count: 2
  I0513 19:27:37.369424      21 runners.go:198] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 05/13/24 19:27:37.373
  I0513 19:27:37.423295 21 resource.go:361] Creating new exec pod
  I0513 19:27:39.479433 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-7506 exec execpodw6jkk -- /bin/sh -x -c nslookup clusterip-service.services-7506.svc.cluster.local'
  I0513 19:27:39.727411 21 builder.go:146] stderr: "+ nslookup clusterip-service.services-7506.svc.cluster.local\n"
  I0513 19:27:39.727548 21 builder.go:147] stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nclusterip-service.services-7506.svc.cluster.local\tcanonical name = externalsvc.services-7506.svc.cluster.local.\nName:\texternalsvc.services-7506.svc.cluster.local\nAddress: 10.43.129.40\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-7506, will wait for the garbage collector to delete the pods @ 05/13/24 19:27:39.727
  I0513 19:27:39.810807 21 resources.go:139] Deleting ReplicationController externalsvc took: 16.303228ms
  I0513 19:27:39.911187 21 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.358705ms
  I0513 19:27:44.084518 21 service.go:1506] Cleaning up the ClusterIP to ExternalName test service
  I0513 19:27:44.114689 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7506" for this suite. @ 05/13/24 19:27:44.121
• [9.951 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 05/13/24 19:27:44.146
  I0513 19:27:44.146998 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:27:44.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:27:44.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:27:44.196
  STEP: Creating a pod to test downward API volume plugin @ 05/13/24 19:27:44.201
  STEP: Saw pod success @ 05/13/24 19:27:48.249
  I0513 19:27:48.252402 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod downwardapi-volume-0e2d1659-e366-460f-9d3c-ccfdf3a6b993 container client-container: <nil>
  STEP: delete the pod @ 05/13/24 19:27:48.26
  I0513 19:27:48.301574 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3258" for this suite. @ 05/13/24 19:27:48.306
• [4.175 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 05/13/24 19:27:48.321
  I0513 19:27:48.321773 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename security-context @ 05/13/24 19:27:48.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:27:48.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:27:48.372
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 05/13/24 19:27:48.375
  STEP: Saw pod success @ 05/13/24 19:27:52.42
  I0513 19:27:52.424439 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod security-context-de6dc2b1-56f0-4614-a30f-03a0fb33fca6 container test-container: <nil>
  STEP: delete the pod @ 05/13/24 19:27:52.431
  I0513 19:27:52.467026 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-3703" for this suite. @ 05/13/24 19:27:52.472
• [4.165 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 05/13/24 19:27:52.487
  I0513 19:27:52.487260 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename statefulset @ 05/13/24 19:27:52.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:27:52.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:27:52.54
  STEP: Creating service test in namespace statefulset-7449 @ 05/13/24 19:27:52.542
  I0513 19:27:52.620233 21 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  I0513 19:28:02.591879 21 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 05/13/24 19:28:02.599
  W0513 19:28:02.621026      21 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  I0513 19:28:02.663125 21 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0513 19:28:02.663456 21 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  I0513 19:28:12.641137 21 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0513 19:28:12.641196 21 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 05/13/24 19:28:12.649
  STEP: Delete all of the StatefulSets @ 05/13/24 19:28:12.654
  STEP: Verify that StatefulSets have been deleted @ 05/13/24 19:28:12.67
  I0513 19:28:12.682665 21 statefulset.go:135] Deleting all statefulset in ns statefulset-7449
  I0513 19:28:12.699089 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7449" for this suite. @ 05/13/24 19:28:12.705
• [20.691 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 05/13/24 19:28:13.179
  I0513 19:28:13.179551 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 05/13/24 19:28:13.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:28:13.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:28:13.271
  STEP: creating a target pod @ 05/13/24 19:28:13.296
  STEP: adding an ephemeral container @ 05/13/24 19:28:15.368
  STEP: checking pod container endpoints @ 05/13/24 19:28:19.421
  I0513 19:28:19.421462 21 exec_util.go:55] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-3102 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 19:28:19.421489 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 19:28:19.422384 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 19:28:19.422467 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-3102/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0513 19:28:19.549052 21 exec_util.go:106] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 05/13/24 19:28:19.557
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 05/13/24 19:28:19.561
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 05/13/24 19:28:19.594
  I0513 19:28:20.218287 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-3102" for this suite. @ 05/13/24 19:28:20.224
• [7.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 05/13/24 19:28:20.245
  I0513 19:28:20.245385 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename security-context-test @ 05/13/24 19:28:20.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:28:20.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:28:20.28
  I0513 19:28:24.350951 21 security_context.go:538] Got logs for pod "busybox-privileged-false-6dbd9c09-aa52-4d21-9591-3c896b2c2fcb": "ip: RTNETLINK answers: Operation not permitted\n"
  I0513 19:28:24.351253 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8071" for this suite. @ 05/13/24 19:28:24.356
• [4.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 05/13/24 19:28:24.369
  I0513 19:28:24.369998 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename sched-preemption @ 05/13/24 19:28:24.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:28:24.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:28:24.417
  I0513 19:28:24.455610 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0513 19:29:24.463559 21 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 05/13/24 19:29:24.468
  I0513 19:29:24.513845 21 preemption.go:178] Created pod: pod0-0-sched-preemption-low-priority
  I0513 19:29:24.535425 21 preemption.go:178] Created pod: pod0-1-sched-preemption-medium-priority
  I0513 19:29:24.597747 21 preemption.go:178] Created pod: pod1-0-sched-preemption-medium-priority
  I0513 19:29:24.646799 21 preemption.go:178] Created pod: pod1-1-sched-preemption-medium-priority
  I0513 19:29:24.739836 21 preemption.go:178] Created pod: pod2-0-sched-preemption-medium-priority
  I0513 19:29:24.765390 21 preemption.go:178] Created pod: pod2-1-sched-preemption-medium-priority
  I0513 19:29:24.861652 21 preemption.go:178] Created pod: pod3-0-sched-preemption-medium-priority
  I0513 19:29:24.901127 21 preemption.go:178] Created pod: pod3-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 05/13/24 19:29:24.901
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 05/13/24 19:29:30.986
  I0513 19:29:35.166584 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1168" for this suite. @ 05/13/24 19:29:35.172
• [70.822 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 05/13/24 19:29:35.193
  I0513 19:29:35.194111 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/13/24 19:29:35.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:29:35.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:29:35.239
  I0513 19:29:35.247338 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 05/13/24 19:29:37.374
  I0513 19:29:37.375371 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=crd-publish-openapi-5401 --namespace=crd-publish-openapi-5401 create -f -'
  I0513 19:29:37.526473 21 builder.go:146] stderr: ""
  I0513 19:29:37.526525 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9612-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0513 19:29:37.526586 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=crd-publish-openapi-5401 --namespace=crd-publish-openapi-5401 delete e2e-test-crd-publish-openapi-9612-crds test-foo'
  I0513 19:29:37.660661 21 builder.go:146] stderr: ""
  I0513 19:29:37.660722 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9612-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0513 19:29:37.660807 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=crd-publish-openapi-5401 --namespace=crd-publish-openapi-5401 apply -f -'
  I0513 19:29:37.762805 21 builder.go:146] stderr: ""
  I0513 19:29:37.762864 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9612-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0513 19:29:37.763029 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=crd-publish-openapi-5401 --namespace=crd-publish-openapi-5401 delete e2e-test-crd-publish-openapi-9612-crds test-foo'
  I0513 19:29:37.861841 21 builder.go:146] stderr: ""
  I0513 19:29:37.862004 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9612-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 05/13/24 19:29:37.862
  I0513 19:29:37.862123 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=crd-publish-openapi-5401 --namespace=crd-publish-openapi-5401 create -f -'
  I0513 19:29:37.947551 21 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 05/13/24 19:29:37.947
  I0513 19:29:37.948041 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=crd-publish-openapi-5401 --namespace=crd-publish-openapi-5401 create -f -'
  I0513 19:29:38.033120 21 builder.go:135] rc: 1
  I0513 19:29:38.033433 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=crd-publish-openapi-5401 --namespace=crd-publish-openapi-5401 apply -f -'
  I0513 19:29:38.431896 21 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 05/13/24 19:29:38.431
  I0513 19:29:38.432432 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=crd-publish-openapi-5401 --namespace=crd-publish-openapi-5401 create -f -'
  I0513 19:29:38.524484 21 builder.go:135] rc: 1
  I0513 19:29:38.524599 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=crd-publish-openapi-5401 --namespace=crd-publish-openapi-5401 apply -f -'
  I0513 19:29:38.611821 21 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 05/13/24 19:29:38.611
  I0513 19:29:38.612057 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=crd-publish-openapi-5401 explain e2e-test-crd-publish-openapi-9612-crds'
  I0513 19:29:38.699506 21 builder.go:146] stderr: ""
  I0513 19:29:38.699583 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9612-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 05/13/24 19:29:38.7
  I0513 19:29:38.700546 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=crd-publish-openapi-5401 explain e2e-test-crd-publish-openapi-9612-crds.metadata'
  I0513 19:29:38.780943 21 builder.go:146] stderr: ""
  I0513 19:29:38.781234 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9612-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0513 19:29:38.781494 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=crd-publish-openapi-5401 explain e2e-test-crd-publish-openapi-9612-crds.spec'
  I0513 19:29:38.859008 21 builder.go:146] stderr: ""
  I0513 19:29:38.859066 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9612-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0513 19:29:38.859294 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=crd-publish-openapi-5401 explain e2e-test-crd-publish-openapi-9612-crds.spec.bars'
  I0513 19:29:38.935142 21 builder.go:146] stderr: ""
  I0513 19:29:38.935217 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9612-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 05/13/24 19:29:38.935
  I0513 19:29:38.935687 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=crd-publish-openapi-5401 explain e2e-test-crd-publish-openapi-9612-crds.spec.bars2'
  I0513 19:29:39.015300 21 builder.go:135] rc: 1
  I0513 19:29:41.283515 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5401" for this suite. @ 05/13/24 19:29:41.802
• [6.633 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 05/13/24 19:29:41.829
  I0513 19:29:41.829960 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename deployment @ 05/13/24 19:29:41.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:29:41.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:29:41.873
  I0513 19:29:41.877002 21 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0513 19:29:41.888424 21 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0513 19:29:41.910447 21 deployment.go:222] deployment "test-recreate-deployment" doesn't have the required revision set
  I0513 19:29:43.934852 21 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0513 19:29:43.943797 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 19, 29, 41, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 29, 41, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 29, 41, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 29, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-recreate-deployment-6b6d9cd7b6\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 19:29:45.949159 21 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0513 19:29:45.971520 21 deployment.go:313] Updating deployment test-recreate-deployment
  I0513 19:29:45.971567 21 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0513 19:29:46.231351 21 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9122",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7b716fb6-4000-44d6-a524-a8f7ccc2431e",
      ResourceVersion: (string) (len=5) "63528",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851225381,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225385,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225386,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225386,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225386,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225386,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225381,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-66b65d9f8f\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0513 19:29:46.250860 21 deployment.go:39] New ReplicaSet "test-recreate-deployment-66b65d9f8f" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-66b65d9f8f",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9122",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3b21b47e-628d-421d-9539-e1f7082e3661",
      ResourceVersion: (string) (len=5) "63526",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851225386,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "7b716fb6-4000-44d6-a524-a8f7ccc2431e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225386,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 62 37 31 36 66  62 36 2d 34 30 30 30 2d  |\"7b716fb6-4000-|
              00000120  34 34 64 36 2d 61 35 32  34 2d 61 38 66 37 63 63  |44d6-a524-a8f7cc|
              00000130  63 32 34 33 31 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |c2431e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225386,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0513 19:29:46.258978 21 deployment.go:44] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0513 19:29:46.259560 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-6b6d9cd7b6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9122",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "56461b92-c363-4a10-a4e3-fc332bd67e08",
      ResourceVersion: (string) (len=5) "63516",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851225381,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "7b716fb6-4000-44d6-a524-a8f7ccc2431e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225385,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 62 37 31 36 66  62 36 2d 34 30 30 30 2d  |\"7b716fb6-4000-|
              00000120  34 34 64 36 2d 61 35 32  34 2d 61 38 66 37 63 63  |44d6-a524-a8f7cc|
              00000130  63 32 34 33 31 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |c2431e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225386,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0513 19:29:46.273502 21 deployment.go:67] Pod "test-recreate-deployment-66b65d9f8f-qpdlr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-66b65d9f8f-qpdlr",
      GenerateName: (string) (len=36) "test-recreate-deployment-66b65d9f8f-",
      Namespace: (string) (len=15) "deployment-9122",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "632454b0-beba-4a29-8e50-76aad3a1a157",
      ResourceVersion: (string) (len=5) "63525",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851225386,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-66b65d9f8f",
          UID: (types.UID) (len=36) "3b21b47e-628d-421d-9539-e1f7082e3661",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225386,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  32 31 62 34 37 65 2d 36  |d\":\"3b21b47e-6|
              00000090  32 38 64 2d 34 32 31 64  2d 39 35 33 39 2d 65 31  |28d-421d-9539-e1|
              000000a0  66 37 30 38 32 65 33 36  36 31 5c 22 7d 22 3a 7b  |f7082e3661\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225386,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qwdft",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qwdft",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-7-107.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225386,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225386,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225386,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225386,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225386,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.7.107",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.7.107"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851225386,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:29:46.276629 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9122" for this suite. @ 05/13/24 19:29:46.289
• [4.475 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 05/13/24 19:29:46.308
  I0513 19:29:46.308716 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename webhook @ 05/13/24 19:29:46.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:29:46.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:29:46.35
  STEP: Setting up server cert @ 05/13/24 19:29:46.405
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 19:29:47.444
  STEP: Deploying the webhook pod @ 05/13/24 19:29:47.835
  STEP: Wait for the deployment to be ready @ 05/13/24 19:29:47.861
  I0513 19:29:47.870138 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  I0513 19:29:49.893300 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 19, 29, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 29, 47, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 29, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 29, 47, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 05/13/24 19:29:51.897
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 19:29:52.416
  I0513 19:29:53.416211 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0513 19:29:53.428697 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2684-crds.webhook.example.com via the AdmissionRegistration API @ 05/13/24 19:29:53.945
  STEP: Creating a custom resource that should be mutated by the webhook @ 05/13/24 19:29:53.964
  I0513 19:29:56.716088 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5626" for this suite. @ 05/13/24 19:29:56.721
  STEP: Destroying namespace "webhook-markers-8190" for this suite. @ 05/13/24 19:29:56.749
• [10.473 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 05/13/24 19:29:56.782
  I0513 19:29:56.782753 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename emptydir @ 05/13/24 19:29:56.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:29:56.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:29:56.832
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 05/13/24 19:29:56.836
  STEP: Saw pod success @ 05/13/24 19:30:00.867
  I0513 19:30:00.871705 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-fdc4873c-d59b-42db-a456-bac4dd8b082a container test-container: <nil>
  STEP: delete the pod @ 05/13/24 19:30:00.889
  I0513 19:30:00.918801 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1776" for this suite. @ 05/13/24 19:30:00.924
• [4.156 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 05/13/24 19:30:00.944
  I0513 19:30:00.944343 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename container-probe @ 05/13/24 19:30:00.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:30:00.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:30:00.997
  STEP: Creating pod busybox-516ac2f6-9259-426e-a927-58911a70742c in namespace container-probe-9972 @ 05/13/24 19:30:01.001
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/13/24 19:30:05.063
  I0513 19:30:05.067863 21 container_probe.go:1749] Initial restart count of pod busybox-516ac2f6-9259-426e-a927-58911a70742c is 0
  I0513 19:30:05.075409 21 container_probe.go:1759] Get pod busybox-516ac2f6-9259-426e-a927-58911a70742c in namespace container-probe-9972
  I0513 19:30:07.080305 21 container_probe.go:1759] Get pod busybox-516ac2f6-9259-426e-a927-58911a70742c in namespace container-probe-9972
  I0513 19:30:09.087361 21 container_probe.go:1759] Get pod busybox-516ac2f6-9259-426e-a927-58911a70742c in namespace container-probe-9972
  I0513 19:30:11.092907 21 container_probe.go:1759] Get pod busybox-516ac2f6-9259-426e-a927-58911a70742c in namespace container-probe-9972
  I0513 19:30:13.098925 21 container_probe.go:1759] Get pod busybox-516ac2f6-9259-426e-a927-58911a70742c in namespace container-probe-9972
  I0513 19:30:15.103920 21 container_probe.go:1759] Get pod busybox-516ac2f6-9259-426e-a927-58911a70742c in namespace container-probe-9972
  I0513 19:30:17.111784 21 container_probe.go:1759] Get pod busybox-516ac2f6-9259-426e-a927-58911a70742c in namespace container-probe-9972
  I0513 19:30:19.118493 21 container_probe.go:1759] Get pod busybox-516ac2f6-9259-426e-a927-58911a70742c in namespace container-probe-9972
  I0513 19:30:21.122916 21 container_probe.go:1759] Get pod busybox-516ac2f6-9259-426e-a927-58911a70742c in namespace container-probe-9972
  I0513 19:30:23.127364 21 container_probe.go:1759] Get pod busybox-516ac2f6-9259-426e-a927-58911a70742c in namespace container-probe-9972
  I0513 19:30:25.131887 21 container_probe.go:1759] Get pod busybox-516ac2f6-9259-426e-a927-58911a70742c in namespace container-probe-9972
  I0513 19:30:27.139739 21 container_probe.go:1759] Get pod busybox-516ac2f6-9259-426e-a927-58911a70742c in namespace container-probe-9972
  I0513 19:30:29.316256 21 container_probe.go:1759] Get pod busybox-516ac2f6-9259-426e-a927-58911a70742c in namespace container-probe-9972
  I0513 19:30:31.323727 21 container_probe.go:1759] Get pod busybox-516ac2f6-9259-426e-a927-58911a70742c in namespace container-probe-9972
  I0513 19:30:33.333974 21 container_probe.go:1759] Get pod busybox-516ac2f6-9259-426e-a927-58911a70742c in namespace container-probe-9972
  I0513 19:30:35.342991 21 container_probe.go:1759] Get pod busybox-516ac2f6-9259-426e-a927-58911a70742c in namespace container-probe-9972
  I0513 19:30:37.358385 21 container_probe.go:1759] Get pod busybox-516ac2f6-9259-426e-a927-58911a70742c in namespace container-probe-9972
  I0513 19:30:39.372062 21 container_probe.go:1759] Get pod busybox-516ac2f6-9259-426e-a927-58911a70742c in namespace container-probe-9972
  I0513 19:30:41.377848 21 container_probe.go:1759] Get pod busybox-516ac2f6-9259-426e-a927-58911a70742c in namespace container-probe-9972
  I0513 19:30:43.384528 21 container_probe.go:1759] Get pod busybox-516ac2f6-9259-426e-a927-58911a70742c in namespace container-probe-9972
  I0513 19:30:45.389743 21 container_probe.go:1759] Get pod busybox-516ac2f6-9259-426e-a927-58911a70742c in namespace container-probe-9972
  I0513 19:30:47.677341 21 container_probe.go:1759] Get pod busybox-516ac2f6-9259-426e-a927-58911a70742c in namespace container-probe-9972
  I0513 19:30:49.682939 21 container_probe.go:1759] Get pod busybox-516ac2f6-9259-426e-a927-58911a70742c in namespace container-probe-9972
  I0513 19:30:51.687538 21 container_probe.go:1759] Get pod busybox-516ac2f6-9259-426e-a927-58911a70742c in namespace container-probe-9972
  I0513 19:30:53.697884 21 container_probe.go:1759] Get pod busybox-516ac2f6-9259-426e-a927-58911a70742c in namespace container-probe-9972
  I0513 19:30:53.697944 21 container_probe.go:1763] Restart count of pod container-probe-9972/busybox-516ac2f6-9259-426e-a927-58911a70742c is now 1 (48.6300213s elapsed)
  STEP: deleting the pod @ 05/13/24 19:30:53.698
  I0513 19:30:53.728203 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9972" for this suite. @ 05/13/24 19:30:53.737
• [52.804 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 05/13/24 19:30:53.748
  I0513 19:30:53.748099 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:30:53.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:30:53.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:30:53.783
  STEP: Creating configMap with name projected-configmap-test-volume-f9e24a86-6351-4106-9e08-d8341394ef7e @ 05/13/24 19:30:53.786
  STEP: Creating a pod to test consume configMaps @ 05/13/24 19:30:53.791
  STEP: Saw pod success @ 05/13/24 19:30:57.82
  I0513 19:30:57.823966 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-projected-configmaps-2f834fd2-4f36-4b40-a82b-ec78ee53f456 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 05/13/24 19:30:57.831
  I0513 19:30:57.874152 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9830" for this suite. @ 05/13/24 19:30:57.88
• [4.140 seconds]
------------------------------
SSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 05/13/24 19:30:57.889
  I0513 19:30:57.889203 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename podtemplate @ 05/13/24 19:30:57.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:30:57.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:30:57.929
  STEP: Create a pod template @ 05/13/24 19:30:57.936
  STEP: Replace a pod template @ 05/13/24 19:30:57.946
  I0513 19:30:57.960395 21 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0513 19:30:57.960607 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-2979" for this suite. @ 05/13/24 19:30:57.968
• [0.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 05/13/24 19:30:57.982
  I0513 19:30:57.982214 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename replicaset @ 05/13/24 19:30:57.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:30:58.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:30:58.017
  STEP: Create a Replicaset @ 05/13/24 19:30:58.027
  STEP: Verify that the required pods have come up. @ 05/13/24 19:30:58.033
  I0513 19:30:58.037221 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0513 19:31:03.054279 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/13/24 19:31:03.054
  STEP: Getting /status @ 05/13/24 19:31:03.054
  I0513 19:31:03.061470 21 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 05/13/24 19:31:03.061
  I0513 19:31:03.075688 21 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 05/13/24 19:31:03.075
  I0513 19:31:03.078296 21 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0513 19:31:03.078460 21 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0513 19:31:03.078708 21 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0513 19:31:03.079308 21 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0513 19:31:03.079368 21 replica_set.go:682] Found replicaset test-rs in namespace replicaset-6839 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0513 19:31:03.079390 21 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 05/13/24 19:31:03.079
  I0513 19:31:03.079454 21 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0513 19:31:03.101406 21 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 05/13/24 19:31:03.101
  I0513 19:31:03.104258 21 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0513 19:31:03.104914 21 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0513 19:31:03.105640 21 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0513 19:31:03.106632 21 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0513 19:31:03.106992 21 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-6839 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0513 19:31:03.107824 21 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0513 19:31:03.107900 21 replica_set.go:718] Found replicaset test-rs in namespace replicaset-6839 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0513 19:31:03.107921 21 replica_set.go:729] Replicaset test-rs has a patched status
  I0513 19:31:03.108567 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6839" for this suite. @ 05/13/24 19:31:03.117
• [5.174 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 05/13/24 19:31:03.161
  I0513 19:31:03.162010 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename containers @ 05/13/24 19:31:03.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:31:03.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:31:03.223
  STEP: Creating a pod to test override command @ 05/13/24 19:31:03.227
  STEP: Saw pod success @ 05/13/24 19:31:07.271
  I0513 19:31:07.275893 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod client-containers-545a42a0-6ee8-4d9e-855a-f3e07ba6f91c container agnhost-container: <nil>
  STEP: delete the pod @ 05/13/24 19:31:07.286
  I0513 19:31:07.982192 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6158" for this suite. @ 05/13/24 19:31:08.003
• [4.858 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 05/13/24 19:31:08.019
  I0513 19:31:08.019973 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename replication-controller @ 05/13/24 19:31:08.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:31:08.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:31:08.087
  STEP: Creating ReplicationController "e2e-rc-5knqf" @ 05/13/24 19:31:08.091
  I0513 19:31:08.102851 21 rc.go:792] Get Replication Controller "e2e-rc-5knqf" to confirm replicas
  I0513 19:31:09.107556 21 rc.go:792] Get Replication Controller "e2e-rc-5knqf" to confirm replicas
  I0513 19:31:09.112684 21 rc.go:801] Found 1 replicas for "e2e-rc-5knqf" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-5knqf" @ 05/13/24 19:31:09.112
  STEP: Updating a scale subresource @ 05/13/24 19:31:09.127
  STEP: Verifying replicas where modified for replication controller "e2e-rc-5knqf" @ 05/13/24 19:31:09.139
  I0513 19:31:09.139559 21 rc.go:792] Get Replication Controller "e2e-rc-5knqf" to confirm replicas
  I0513 19:31:10.140322 21 rc.go:792] Get Replication Controller "e2e-rc-5knqf" to confirm replicas
  I0513 19:31:10.144491 21 rc.go:801] Found 2 replicas for "e2e-rc-5knqf" replication controller
  I0513 19:31:10.144638 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6660" for this suite. @ 05/13/24 19:31:10.15
• [2.142 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:927
  STEP: Creating a kubernetes client @ 05/13/24 19:31:10.163
  I0513 19:31:10.163827 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename job @ 05/13/24 19:31:10.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:31:10.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:31:10.205
  STEP: Creating a suspended job @ 05/13/24 19:31:10.22
  STEP: Patching the Job @ 05/13/24 19:31:10.232
  STEP: Watching for Job to be patched @ 05/13/24 19:31:10.269
  I0513 19:31:10.310215 21 job.go:1109] Event ADDED observed for Job e2e-m9g8l in namespace job-4177 with labels: map[e2e-job-label:e2e-m9g8l] and annotations: map[]
  I0513 19:31:10.310683 21 job.go:1109] Event MODIFIED observed for Job e2e-m9g8l in namespace job-4177 with labels: map[e2e-job-label:e2e-m9g8l] and annotations: map[]
  I0513 19:31:10.310980 21 job.go:1112] Event MODIFIED found for Job e2e-m9g8l in namespace job-4177 with labels: map[e2e-job-label:e2e-m9g8l e2e-m9g8l:patched] and annotations: map[]
  STEP: Updating the job @ 05/13/24 19:31:10.311
  STEP: Watching for Job to be updated @ 05/13/24 19:31:10.342
  I0513 19:31:10.344594 21 job.go:1112] Event MODIFIED found for Job e2e-m9g8l in namespace job-4177 with labels: map[e2e-job-label:e2e-m9g8l e2e-m9g8l:patched] and annotations: map[updated:true]
  I0513 19:31:10.344672 21 job.go:1005] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 05/13/24 19:31:10.345
  I0513 19:31:10.358872 21 job.go:1012] Job: e2e-m9g8l as labels: map[e2e-job-label:e2e-m9g8l e2e-m9g8l:patched]
  STEP: Waiting for job to complete @ 05/13/24 19:31:10.358
  STEP: Delete a job collection with a labelselector @ 05/13/24 19:31:20.487
  STEP: Watching for Job to be deleted @ 05/13/24 19:31:20.509
  I0513 19:31:20.512033 21 job.go:1109] Event MODIFIED observed for Job e2e-m9g8l in namespace job-4177 with labels: map[e2e-job-label:e2e-m9g8l e2e-m9g8l:patched] and annotations: map[updated:true]
  I0513 19:31:20.512099 21 job.go:1109] Event MODIFIED observed for Job e2e-m9g8l in namespace job-4177 with labels: map[e2e-job-label:e2e-m9g8l e2e-m9g8l:patched] and annotations: map[updated:true]
  I0513 19:31:20.512126 21 job.go:1109] Event MODIFIED observed for Job e2e-m9g8l in namespace job-4177 with labels: map[e2e-job-label:e2e-m9g8l e2e-m9g8l:patched] and annotations: map[updated:true]
  I0513 19:31:20.512466 21 job.go:1109] Event MODIFIED observed for Job e2e-m9g8l in namespace job-4177 with labels: map[e2e-job-label:e2e-m9g8l e2e-m9g8l:patched] and annotations: map[updated:true]
  I0513 19:31:20.512717 21 job.go:1109] Event MODIFIED observed for Job e2e-m9g8l in namespace job-4177 with labels: map[e2e-job-label:e2e-m9g8l e2e-m9g8l:patched] and annotations: map[updated:true]
  I0513 19:31:20.512850 21 job.go:1112] Event DELETED found for Job e2e-m9g8l in namespace job-4177 with labels: map[e2e-job-label:e2e-m9g8l e2e-m9g8l:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 05/13/24 19:31:20.512
  I0513 19:31:20.517887 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4177" for this suite. @ 05/13/24 19:31:20.826
• [10.679 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 05/13/24 19:31:20.843
  I0513 19:31:20.843044 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename gc @ 05/13/24 19:31:20.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:31:20.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:31:20.932
  I0513 19:31:21.031976 21 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"2986cafa-7282-4591-8c57-499f98c4ef68", Controller:(*bool)(0xc0050e78d6), BlockOwnerDeletion:(*bool)(0xc0050e78d7)}}
  I0513 19:31:21.062310 21 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"7703be7d-7683-4982-938d-d9a196f09f12", Controller:(*bool)(0xc0026c4046), BlockOwnerDeletion:(*bool)(0xc0026c4047)}}
  I0513 19:31:21.079428 21 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"b7ab508b-1c9a-4b2c-8e30-13cf7edb7019", Controller:(*bool)(0xc0050e7b0e), BlockOwnerDeletion:(*bool)(0xc0050e7b0f)}}
  I0513 19:31:26.103731 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-90" for this suite. @ 05/13/24 19:31:26.12
• [5.301 seconds]
------------------------------
SS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 05/13/24 19:31:26.144
  I0513 19:31:26.144922 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename downward-api @ 05/13/24 19:31:26.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:31:26.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:31:26.633
  STEP: Creating a pod to test downward api env vars @ 05/13/24 19:31:26.636
  STEP: Saw pod success @ 05/13/24 19:31:30.668
  I0513 19:31:30.674427 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod downward-api-12a0623d-90a7-4a7b-9660-b067b051ea63 container dapi-container: <nil>
  STEP: delete the pod @ 05/13/24 19:31:30.711
  I0513 19:31:30.757628 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4866" for this suite. @ 05/13/24 19:31:30.768
• [4.640 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 05/13/24 19:31:30.785
  I0513 19:31:30.785345 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename pods @ 05/13/24 19:31:30.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:31:31.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:31:31.046
  I0513 19:31:31.133038 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: creating the pod @ 05/13/24 19:31:31.134
  STEP: submitting the pod to kubernetes @ 05/13/24 19:31:31.134
  I0513 19:31:33.341770 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6021" for this suite. @ 05/13/24 19:31:33.349
• [2.576 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 05/13/24 19:31:33.362
  I0513 19:31:33.362546 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename discovery @ 05/13/24 19:31:33.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:31:33.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:31:33.401
  STEP: Setting up server cert @ 05/13/24 19:31:33.406
  STEP: Requesting APIResourceList from "/api/v1" @ 05/13/24 19:31:35.041
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 05/13/24 19:31:35.043
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 05/13/24 19:31:35.044
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 05/13/24 19:31:35.045
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 05/13/24 19:31:35.047
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 05/13/24 19:31:35.049
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 05/13/24 19:31:35.051
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 05/13/24 19:31:35.052
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 05/13/24 19:31:35.053
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 05/13/24 19:31:35.054
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 05/13/24 19:31:35.055
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 05/13/24 19:31:35.056
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 05/13/24 19:31:35.058
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 05/13/24 19:31:35.059
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 05/13/24 19:31:35.06
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 05/13/24 19:31:35.061
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 05/13/24 19:31:35.062
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 05/13/24 19:31:35.064
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 05/13/24 19:31:35.065
  I0513 19:31:35.066259 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-9932" for this suite. @ 05/13/24 19:31:35.071
• [1.725 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3572
  STEP: Creating a kubernetes client @ 05/13/24 19:31:35.088
  I0513 19:31:35.088260 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename services @ 05/13/24 19:31:35.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:31:35.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:31:35.138
  STEP: creating a collection of services @ 05/13/24 19:31:35.14
  I0513 19:31:35.140920 21 service.go:3608] Creating e2e-svc-a-fc7c6
  I0513 19:31:35.173183 21 service.go:3608] Creating e2e-svc-b-c8s7t
  I0513 19:31:35.220261 21 service.go:3608] Creating e2e-svc-c-g45pt
  STEP: deleting service collection @ 05/13/24 19:31:35.256
  I0513 19:31:35.314053 21 service.go:3643] Collection of services has been deleted
  I0513 19:31:35.314321 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6048" for this suite. @ 05/13/24 19:31:35.319
• [0.243 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 05/13/24 19:31:35.331
  I0513 19:31:35.332029 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename emptydir-wrapper @ 05/13/24 19:31:35.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:31:35.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:31:35.369
  STEP: Cleaning up the secret @ 05/13/24 19:31:39.618
  STEP: Cleaning up the configmap @ 05/13/24 19:31:39.627
  STEP: Cleaning up the pod @ 05/13/24 19:31:39.638
  I0513 19:31:39.661752 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-7927" for this suite. @ 05/13/24 19:31:39.672
• [4.356 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 05/13/24 19:31:39.699
  I0513 19:31:39.699426 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename webhook @ 05/13/24 19:31:39.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:31:39.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:31:39.734
  STEP: Setting up server cert @ 05/13/24 19:31:39.782
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 19:31:41.044
  STEP: Deploying the webhook pod @ 05/13/24 19:31:41.058
  STEP: Wait for the deployment to be ready @ 05/13/24 19:31:41.089
  I0513 19:31:41.130435 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/13/24 19:31:43.148
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 19:31:43.194
  I0513 19:31:44.194974 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 05/13/24 19:31:44.204
  STEP: create a configmap that should be updated by the webhook @ 05/13/24 19:31:44.238
  I0513 19:31:44.447804 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1734" for this suite. @ 05/13/24 19:31:44.453
  STEP: Destroying namespace "webhook-markers-3171" for this suite. @ 05/13/24 19:31:44.466
• [4.779 seconds]
------------------------------
S
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 05/13/24 19:31:44.479
  I0513 19:31:44.479425 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename limitrange @ 05/13/24 19:31:44.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:31:44.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:31:44.538
  STEP: Creating a LimitRange @ 05/13/24 19:31:44.541
  STEP: Setting up watch @ 05/13/24 19:31:44.541
  STEP: Submitting a LimitRange @ 05/13/24 19:31:44.654
  STEP: Verifying LimitRange creation was observed @ 05/13/24 19:31:44.672
  STEP: Fetching the LimitRange to ensure it has proper values @ 05/13/24 19:31:44.672
  I0513 19:31:44.680788 21 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0513 19:31:44.680923 21 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 05/13/24 19:31:44.681
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 05/13/24 19:31:44.699
  I0513 19:31:44.708072 21 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0513 19:31:44.708304 21 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 05/13/24 19:31:44.708
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 05/13/24 19:31:44.73
  I0513 19:31:44.762957 21 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0513 19:31:44.763054 21 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 05/13/24 19:31:44.763
  STEP: Failing to create a Pod with more than max resources @ 05/13/24 19:31:44.766
  STEP: Updating a LimitRange @ 05/13/24 19:31:44.77
  STEP: Verifying LimitRange updating is effective @ 05/13/24 19:31:44.79
  STEP: Creating a Pod with less than former min resources @ 05/13/24 19:31:46.795
  STEP: Failing to create a Pod with more than max resources @ 05/13/24 19:31:46.812
  STEP: Deleting a LimitRange @ 05/13/24 19:31:46.817
  STEP: Verifying the LimitRange was deleted @ 05/13/24 19:31:46.845
  I0513 19:31:51.851979 21 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 05/13/24 19:31:51.852
  I0513 19:31:51.867386 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-4734" for this suite. @ 05/13/24 19:31:51.89
• [7.426 seconds]
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 05/13/24 19:31:51.904
  I0513 19:31:51.905004 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename svc-latency @ 05/13/24 19:31:51.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:31:51.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:31:51.942
  I0513 19:31:51.946061 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-5682 @ 05/13/24 19:31:51.947
  I0513 19:31:51.958176      21 runners.go:198] Created replication controller with name: svc-latency-rc, namespace: svc-latency-5682, replica count: 1
  I0513 19:31:53.015605      21 runners.go:198] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0513 19:31:54.015868      21 runners.go:198] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0513 19:31:55.016914      21 runners.go:198] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0513 19:31:55.144352 21 service_latency.go:356] Created: latency-svc-8s2wn
  I0513 19:31:55.177343 21 service_latency.go:363] Got endpoints: latency-svc-8s2wn [58.980419ms]
  I0513 19:31:55.217344 21 service_latency.go:356] Created: latency-svc-zx8sp
  I0513 19:31:55.228434 21 service_latency.go:363] Got endpoints: latency-svc-zx8sp [50.530387ms]
  I0513 19:31:55.241818 21 service_latency.go:356] Created: latency-svc-hcmcr
  I0513 19:31:55.260268 21 service_latency.go:356] Created: latency-svc-fqnzj
  I0513 19:31:55.267917 21 service_latency.go:363] Got endpoints: latency-svc-hcmcr [88.772768ms]
  I0513 19:31:55.292845 21 service_latency.go:356] Created: latency-svc-fqm8p
  I0513 19:31:55.296033 21 service_latency.go:363] Got endpoints: latency-svc-fqnzj [118.607628ms]
  I0513 19:31:55.314823 21 service_latency.go:363] Got endpoints: latency-svc-fqm8p [137.223045ms]
  I0513 19:31:55.334380 21 service_latency.go:356] Created: latency-svc-tnrwb
  I0513 19:31:55.343842 21 service_latency.go:356] Created: latency-svc-zcdb7
  I0513 19:31:55.356209 21 service_latency.go:363] Got endpoints: latency-svc-tnrwb [178.50969ms]
  I0513 19:31:55.357822 21 service_latency.go:363] Got endpoints: latency-svc-zcdb7 [179.848349ms]
  I0513 19:31:55.371397 21 service_latency.go:356] Created: latency-svc-gjpp8
  I0513 19:31:55.400118 21 service_latency.go:356] Created: latency-svc-jwzlz
  I0513 19:31:55.420263 21 service_latency.go:363] Got endpoints: latency-svc-gjpp8 [242.476771ms]
  I0513 19:31:55.422504 21 service_latency.go:363] Got endpoints: latency-svc-jwzlz [243.675377ms]
  I0513 19:31:55.431013 21 service_latency.go:356] Created: latency-svc-x7vr2
  I0513 19:31:55.447127 21 service_latency.go:363] Got endpoints: latency-svc-x7vr2 [267.600352ms]
  I0513 19:31:55.467337 21 service_latency.go:356] Created: latency-svc-t9p5c
  I0513 19:31:55.495569 21 service_latency.go:363] Got endpoints: latency-svc-t9p5c [315.794546ms]
  I0513 19:31:55.508943 21 service_latency.go:356] Created: latency-svc-pqnsk
  I0513 19:31:55.526914 21 service_latency.go:363] Got endpoints: latency-svc-pqnsk [348.754671ms]
  I0513 19:31:55.536212 21 service_latency.go:356] Created: latency-svc-5cr85
  I0513 19:31:55.562964 21 service_latency.go:363] Got endpoints: latency-svc-5cr85 [382.471956ms]
  I0513 19:31:55.577523 21 service_latency.go:356] Created: latency-svc-2dfdq
  I0513 19:31:55.600041 21 service_latency.go:363] Got endpoints: latency-svc-2dfdq [419.724842ms]
  I0513 19:31:55.615907 21 service_latency.go:356] Created: latency-svc-bnqx7
  I0513 19:31:55.638117 21 service_latency.go:363] Got endpoints: latency-svc-bnqx7 [459.643977ms]
  I0513 19:31:55.651668 21 service_latency.go:356] Created: latency-svc-66gzk
  I0513 19:31:55.689112 21 service_latency.go:363] Got endpoints: latency-svc-66gzk [508.977317ms]
  I0513 19:31:55.694604 21 service_latency.go:356] Created: latency-svc-v7ns2
  I0513 19:31:55.727628 21 service_latency.go:363] Got endpoints: latency-svc-v7ns2 [499.122266ms]
  I0513 19:31:55.752828 21 service_latency.go:356] Created: latency-svc-5bgnq
  I0513 19:31:55.773253 21 service_latency.go:363] Got endpoints: latency-svc-5bgnq [505.271394ms]
  I0513 19:31:56.224153 21 service_latency.go:356] Created: latency-svc-hk6g4
  I0513 19:31:56.225062 21 service_latency.go:363] Got endpoints: latency-svc-hk6g4 [928.790711ms]
  I0513 19:31:56.233857 21 service_latency.go:356] Created: latency-svc-qvpn6
  I0513 19:31:56.250956 21 service_latency.go:356] Created: latency-svc-cftmt
  I0513 19:31:56.265406 21 service_latency.go:363] Got endpoints: latency-svc-cftmt [906.846565ms]
  I0513 19:31:56.265429 21 service_latency.go:363] Got endpoints: latency-svc-qvpn6 [950.507463ms]
  I0513 19:31:56.276973 21 service_latency.go:356] Created: latency-svc-gzhkc
  I0513 19:31:56.287519 21 service_latency.go:363] Got endpoints: latency-svc-gzhkc [931.238646ms]
  I0513 19:31:56.297093 21 service_latency.go:356] Created: latency-svc-wrpzg
  I0513 19:31:56.308591 21 service_latency.go:363] Got endpoints: latency-svc-wrpzg [888.240728ms]
  I0513 19:31:56.315287 21 service_latency.go:356] Created: latency-svc-r4cgn
  I0513 19:31:56.333305 21 service_latency.go:363] Got endpoints: latency-svc-r4cgn [910.757182ms]
  I0513 19:31:56.338178 21 service_latency.go:356] Created: latency-svc-2m9qc
  I0513 19:31:56.361024 21 service_latency.go:363] Got endpoints: latency-svc-2m9qc [913.589341ms]
  I0513 19:31:56.367241 21 service_latency.go:356] Created: latency-svc-f45gg
  I0513 19:31:56.969674 21 service_latency.go:363] Got endpoints: latency-svc-f45gg [1.474029432s]
  I0513 19:31:56.978799 21 service_latency.go:356] Created: latency-svc-qtmzm
  I0513 19:31:56.998731 21 service_latency.go:363] Got endpoints: latency-svc-qtmzm [1.471696858s]
  I0513 19:31:57.009613 21 service_latency.go:356] Created: latency-svc-7xt2z
  I0513 19:31:57.029442 21 service_latency.go:363] Got endpoints: latency-svc-7xt2z [1.465451858s]
  I0513 19:31:57.037996 21 service_latency.go:356] Created: latency-svc-8mt5h
  I0513 19:31:57.064226 21 service_latency.go:363] Got endpoints: latency-svc-8mt5h [1.464109249s]
  I0513 19:31:57.096668 21 service_latency.go:356] Created: latency-svc-jhglj
  I0513 19:31:57.098568 21 service_latency.go:363] Got endpoints: latency-svc-jhglj [1.460380685s]
  I0513 19:31:57.128868 21 service_latency.go:356] Created: latency-svc-tvg7w
  I0513 19:31:57.143061 21 service_latency.go:363] Got endpoints: latency-svc-tvg7w [1.45314043s]
  I0513 19:31:57.204438 21 service_latency.go:356] Created: latency-svc-zp4mw
  I0513 19:31:57.282409 21 service_latency.go:363] Got endpoints: latency-svc-zp4mw [1.554181834s]
  I0513 19:31:57.293999 21 service_latency.go:356] Created: latency-svc-5w9bm
  I0513 19:31:57.317073 21 service_latency.go:363] Got endpoints: latency-svc-5w9bm [1.543703904s]
  I0513 19:31:57.334990 21 service_latency.go:356] Created: latency-svc-4nsqv
  I0513 19:31:57.363795 21 service_latency.go:363] Got endpoints: latency-svc-4nsqv [1.138620033s]
  I0513 19:31:57.381088 21 service_latency.go:356] Created: latency-svc-g87j5
  I0513 19:31:57.403236 21 service_latency.go:363] Got endpoints: latency-svc-g87j5 [1.137320594s]
  I0513 19:31:57.413260 21 service_latency.go:356] Created: latency-svc-shlhx
  I0513 19:31:57.431788 21 service_latency.go:363] Got endpoints: latency-svc-shlhx [1.166124578s]
  I0513 19:31:57.437190 21 service_latency.go:356] Created: latency-svc-rk72t
  I0513 19:31:57.457519 21 service_latency.go:363] Got endpoints: latency-svc-rk72t [1.169938574s]
  I0513 19:31:57.475501 21 service_latency.go:356] Created: latency-svc-q7sz8
  I0513 19:31:57.497216 21 service_latency.go:363] Got endpoints: latency-svc-q7sz8 [1.188558591s]
  I0513 19:31:57.506365 21 service_latency.go:356] Created: latency-svc-plkjf
  I0513 19:31:57.529279 21 service_latency.go:363] Got endpoints: latency-svc-plkjf [1.195897627s]
  I0513 19:31:57.539839 21 service_latency.go:356] Created: latency-svc-z24v8
  I0513 19:31:57.571445 21 service_latency.go:363] Got endpoints: latency-svc-z24v8 [1.210351506s]
  I0513 19:31:57.578322 21 service_latency.go:356] Created: latency-svc-7jcbc
  I0513 19:31:57.609463 21 service_latency.go:363] Got endpoints: latency-svc-7jcbc [639.594028ms]
  I0513 19:31:57.617225 21 service_latency.go:356] Created: latency-svc-srb72
  I0513 19:31:57.640474 21 service_latency.go:363] Got endpoints: latency-svc-srb72 [641.679348ms]
  I0513 19:31:57.664332 21 service_latency.go:356] Created: latency-svc-zwlgz
  I0513 19:31:57.694898 21 service_latency.go:363] Got endpoints: latency-svc-zwlgz [665.391549ms]
  I0513 19:31:57.706062 21 service_latency.go:356] Created: latency-svc-rv9z7
  I0513 19:31:57.734117 21 service_latency.go:363] Got endpoints: latency-svc-rv9z7 [669.827293ms]
  I0513 19:31:57.760199 21 service_latency.go:356] Created: latency-svc-vxbcm
  I0513 19:31:57.776552 21 service_latency.go:363] Got endpoints: latency-svc-vxbcm [677.92638ms]
  I0513 19:31:57.828703 21 service_latency.go:356] Created: latency-svc-ft8ft
  I0513 19:31:57.842891 21 service_latency.go:363] Got endpoints: latency-svc-ft8ft [699.765495ms]
  I0513 19:31:57.862232 21 service_latency.go:356] Created: latency-svc-rmjhr
  I0513 19:31:57.902595 21 service_latency.go:363] Got endpoints: latency-svc-rmjhr [620.118738ms]
  I0513 19:31:57.908291 21 service_latency.go:356] Created: latency-svc-z2znf
  I0513 19:31:57.928253 21 service_latency.go:363] Got endpoints: latency-svc-z2znf [610.512669ms]
  I0513 19:31:57.937632 21 service_latency.go:356] Created: latency-svc-lwsq8
  I0513 19:31:57.963623 21 service_latency.go:363] Got endpoints: latency-svc-lwsq8 [599.537101ms]
  I0513 19:31:57.975801 21 service_latency.go:356] Created: latency-svc-76k27
  I0513 19:31:58.003219 21 service_latency.go:363] Got endpoints: latency-svc-76k27 [599.153376ms]
  I0513 19:31:58.035976 21 service_latency.go:356] Created: latency-svc-smk6p
  I0513 19:31:58.068122 21 service_latency.go:363] Got endpoints: latency-svc-smk6p [635.492629ms]
  I0513 19:31:58.076037 21 service_latency.go:356] Created: latency-svc-mzdnm
  I0513 19:31:58.102601 21 service_latency.go:363] Got endpoints: latency-svc-mzdnm [644.965856ms]
  I0513 19:31:58.115966 21 service_latency.go:356] Created: latency-svc-z5k8l
  I0513 19:31:58.147637 21 service_latency.go:363] Got endpoints: latency-svc-z5k8l [650.351563ms]
  I0513 19:31:58.162838 21 service_latency.go:356] Created: latency-svc-7lz7w
  I0513 19:31:58.198702 21 service_latency.go:363] Got endpoints: latency-svc-7lz7w [668.760048ms]
  I0513 19:31:58.214491 21 service_latency.go:356] Created: latency-svc-swdxl
  I0513 19:31:58.248038 21 service_latency.go:363] Got endpoints: latency-svc-swdxl [675.937601ms]
  I0513 19:31:58.260201 21 service_latency.go:356] Created: latency-svc-sx7hl
  I0513 19:31:58.727926 21 service_latency.go:363] Got endpoints: latency-svc-sx7hl [1.118147407s]
  I0513 19:31:59.163833 21 service_latency.go:356] Created: latency-svc-ddmws
  I0513 19:31:59.176203 21 service_latency.go:363] Got endpoints: latency-svc-ddmws [1.535663296s]
  I0513 19:31:59.200558 21 service_latency.go:356] Created: latency-svc-lcz7v
  I0513 19:31:59.208692 21 service_latency.go:356] Created: latency-svc-p4m6n
  I0513 19:31:59.221171 21 service_latency.go:363] Got endpoints: latency-svc-lcz7v [1.52619175s]
  I0513 19:31:59.232216 21 service_latency.go:363] Got endpoints: latency-svc-p4m6n [1.498034075s]
  I0513 19:31:59.244408 21 service_latency.go:356] Created: latency-svc-5cmfz
  I0513 19:31:59.248412 21 service_latency.go:363] Got endpoints: latency-svc-5cmfz [1.471417201s]
  I0513 19:31:59.256935 21 service_latency.go:356] Created: latency-svc-j2tmm
  I0513 19:31:59.272294 21 service_latency.go:363] Got endpoints: latency-svc-j2tmm [1.429336975s]
  I0513 19:31:59.280588 21 service_latency.go:356] Created: latency-svc-rqsxm
  I0513 19:31:59.291576 21 service_latency.go:363] Got endpoints: latency-svc-rqsxm [1.388904804s]
  I0513 19:31:59.301208 21 service_latency.go:356] Created: latency-svc-wmrlf
  I0513 19:31:59.317695 21 service_latency.go:356] Created: latency-svc-qjljb
  I0513 19:31:59.334677 21 service_latency.go:363] Got endpoints: latency-svc-wmrlf [1.405977909s]
  I0513 19:31:59.334728 21 service_latency.go:363] Got endpoints: latency-svc-qjljb [1.371057696s]
  I0513 19:31:59.345698 21 service_latency.go:356] Created: latency-svc-bmxlk
  I0513 19:31:59.358052 21 service_latency.go:356] Created: latency-svc-75szr
  I0513 19:31:59.358550 21 service_latency.go:363] Got endpoints: latency-svc-bmxlk [1.35527156s]
  I0513 19:31:59.376789 21 service_latency.go:363] Got endpoints: latency-svc-75szr [1.308576177s]
  I0513 19:31:59.388120 21 service_latency.go:356] Created: latency-svc-6txfd
  I0513 19:31:59.396700 21 service_latency.go:363] Got endpoints: latency-svc-6txfd [1.294030257s]
  I0513 19:31:59.400839 21 service_latency.go:356] Created: latency-svc-pw49x
  I0513 19:31:59.423593 21 service_latency.go:363] Got endpoints: latency-svc-pw49x [1.274862252s]
  I0513 19:31:59.424853 21 service_latency.go:356] Created: latency-svc-wn79r
  I0513 19:31:59.444470 21 service_latency.go:363] Got endpoints: latency-svc-wn79r [1.245316947s]
  I0513 19:31:59.451665 21 service_latency.go:356] Created: latency-svc-lpggx
  I0513 19:31:59.480841 21 service_latency.go:356] Created: latency-svc-z7s8z
  I0513 19:31:59.484064 21 service_latency.go:363] Got endpoints: latency-svc-lpggx [1.235969772s]
  I0513 19:31:59.512097 21 service_latency.go:363] Got endpoints: latency-svc-z7s8z [784.112057ms]
  I0513 19:31:59.519596 21 service_latency.go:356] Created: latency-svc-mrqp8
  I0513 19:31:59.535154 21 service_latency.go:363] Got endpoints: latency-svc-mrqp8 [358.544941ms]
  I0513 19:31:59.546900 21 service_latency.go:356] Created: latency-svc-5x5fx
  I0513 19:31:59.565544 21 service_latency.go:363] Got endpoints: latency-svc-5x5fx [344.312237ms]
  I0513 19:31:59.574934 21 service_latency.go:356] Created: latency-svc-vm77b
  I0513 19:31:59.602526 21 service_latency.go:363] Got endpoints: latency-svc-vm77b [370.25219ms]
  I0513 19:31:59.610234 21 service_latency.go:356] Created: latency-svc-4qr6s
  I0513 19:31:59.648412 21 service_latency.go:363] Got endpoints: latency-svc-4qr6s [399.948738ms]
  I0513 19:31:59.649638 21 service_latency.go:356] Created: latency-svc-4wh88
  I0513 19:31:59.676898 21 service_latency.go:363] Got endpoints: latency-svc-4wh88 [404.096027ms]
  I0513 19:31:59.686321 21 service_latency.go:356] Created: latency-svc-6sx94
  I0513 19:31:59.719630 21 service_latency.go:363] Got endpoints: latency-svc-6sx94 [427.834839ms]
  I0513 19:31:59.729991 21 service_latency.go:356] Created: latency-svc-tklvb
  I0513 19:31:59.757647 21 service_latency.go:363] Got endpoints: latency-svc-tklvb [422.828187ms]
  I0513 19:31:59.762564 21 service_latency.go:356] Created: latency-svc-4xs7h
  I0513 19:31:59.791823 21 service_latency.go:363] Got endpoints: latency-svc-4xs7h [456.924148ms]
  I0513 19:31:59.798718 21 service_latency.go:356] Created: latency-svc-2wjl7
  I0513 19:31:59.825565 21 service_latency.go:363] Got endpoints: latency-svc-2wjl7 [466.79445ms]
  I0513 19:31:59.832649 21 service_latency.go:356] Created: latency-svc-2ptqg
  I0513 19:31:59.846981 21 service_latency.go:363] Got endpoints: latency-svc-2ptqg [470.109698ms]
  I0513 19:31:59.902903 21 service_latency.go:356] Created: latency-svc-shwww
  I0513 19:31:59.923829 21 service_latency.go:363] Got endpoints: latency-svc-shwww [500.17212ms]
  I0513 19:31:59.946128 21 service_latency.go:356] Created: latency-svc-zsv9p
  I0513 19:31:59.969913 21 service_latency.go:363] Got endpoints: latency-svc-zsv9p [525.371333ms]
  I0513 19:32:00.007211 21 service_latency.go:356] Created: latency-svc-bjjck
  I0513 19:32:00.037339 21 service_latency.go:363] Got endpoints: latency-svc-bjjck [553.092633ms]
  I0513 19:32:00.052013 21 service_latency.go:356] Created: latency-svc-5lzqg
  I0513 19:32:00.072028 21 service_latency.go:363] Got endpoints: latency-svc-5lzqg [559.543765ms]
  I0513 19:32:00.085835 21 service_latency.go:356] Created: latency-svc-djbfb
  I0513 19:32:00.106366 21 service_latency.go:363] Got endpoints: latency-svc-djbfb [570.504052ms]
  I0513 19:32:00.124834 21 service_latency.go:356] Created: latency-svc-fb28t
  I0513 19:32:00.157737 21 service_latency.go:363] Got endpoints: latency-svc-fb28t [592.123614ms]
  I0513 19:32:00.184078 21 service_latency.go:356] Created: latency-svc-clpq7
  I0513 19:32:00.217866 21 service_latency.go:363] Got endpoints: latency-svc-clpq7 [615.106135ms]
  I0513 19:32:00.239841 21 service_latency.go:356] Created: latency-svc-zjsnc
  I0513 19:32:00.264517 21 service_latency.go:363] Got endpoints: latency-svc-zjsnc [615.568103ms]
  I0513 19:32:00.278068 21 service_latency.go:356] Created: latency-svc-9fdb6
  I0513 19:32:00.299279 21 service_latency.go:363] Got endpoints: latency-svc-9fdb6 [622.061025ms]
  I0513 19:32:00.328369 21 service_latency.go:356] Created: latency-svc-tss44
  I0513 19:32:00.333489 21 service_latency.go:363] Got endpoints: latency-svc-tss44 [613.750977ms]
  I0513 19:32:00.353186 21 service_latency.go:356] Created: latency-svc-9vzqw
  I0513 19:32:00.384613 21 service_latency.go:363] Got endpoints: latency-svc-9vzqw [626.894625ms]
  I0513 19:32:00.392275 21 service_latency.go:356] Created: latency-svc-rdj54
  I0513 19:32:00.451649 21 service_latency.go:356] Created: latency-svc-t5cqw
  I0513 19:32:00.452067 21 service_latency.go:363] Got endpoints: latency-svc-rdj54 [660.170094ms]
  I0513 19:32:00.459330 21 service_latency.go:363] Got endpoints: latency-svc-t5cqw [633.698903ms]
  I0513 19:32:00.517919 21 service_latency.go:356] Created: latency-svc-8llr9
  I0513 19:32:00.517683 21 service_latency.go:356] Created: latency-svc-xrsnz
  I0513 19:32:00.549605 21 service_latency.go:363] Got endpoints: latency-svc-xrsnz [702.20724ms]
  I0513 19:32:00.551775 21 service_latency.go:363] Got endpoints: latency-svc-8llr9 [1.155020128s]
  I0513 19:32:00.569064 21 service_latency.go:356] Created: latency-svc-qf5mp
  I0513 19:32:00.593228 21 service_latency.go:363] Got endpoints: latency-svc-qf5mp [668.501635ms]
  I0513 19:32:00.614383 21 service_latency.go:356] Created: latency-svc-2rb87
  I0513 19:32:00.629117 21 service_latency.go:363] Got endpoints: latency-svc-2rb87 [658.609511ms]
  I0513 19:32:00.672787 21 service_latency.go:356] Created: latency-svc-v56q5
  I0513 19:32:00.672853 21 service_latency.go:363] Got endpoints: latency-svc-v56q5 [635.441918ms]
  I0513 19:32:00.702747 21 service_latency.go:356] Created: latency-svc-xm85l
  I0513 19:32:00.740914 21 service_latency.go:363] Got endpoints: latency-svc-xm85l [668.583505ms]
  I0513 19:32:00.757095 21 service_latency.go:356] Created: latency-svc-h55q2
  I0513 19:32:00.792462 21 service_latency.go:363] Got endpoints: latency-svc-h55q2 [686.038157ms]
  I0513 19:32:00.803660 21 service_latency.go:356] Created: latency-svc-5lsk9
  I0513 19:32:00.824172 21 service_latency.go:356] Created: latency-svc-btz67
  I0513 19:32:00.831868 21 service_latency.go:363] Got endpoints: latency-svc-5lsk9 [673.942212ms]
  I0513 19:32:00.838893 21 service_latency.go:363] Got endpoints: latency-svc-btz67 [620.958319ms]
  I0513 19:32:00.862371 21 service_latency.go:356] Created: latency-svc-ftf67
  I0513 19:32:00.883338 21 service_latency.go:363] Got endpoints: latency-svc-ftf67 [618.752117ms]
  I0513 19:32:00.905213 21 service_latency.go:356] Created: latency-svc-9hnq7
  I0513 19:32:00.924281 21 service_latency.go:363] Got endpoints: latency-svc-9hnq7 [624.342858ms]
  I0513 19:32:00.935128 21 service_latency.go:356] Created: latency-svc-r4lrk
  I0513 19:32:00.955786 21 service_latency.go:363] Got endpoints: latency-svc-r4lrk [621.779861ms]
  I0513 19:32:00.977303 21 service_latency.go:356] Created: latency-svc-x8v5n
  I0513 19:32:00.997789 21 service_latency.go:363] Got endpoints: latency-svc-x8v5n [612.464208ms]
  I0513 19:32:01.014450 21 service_latency.go:356] Created: latency-svc-4775k
  I0513 19:32:01.036568 21 service_latency.go:363] Got endpoints: latency-svc-4775k [584.117189ms]
  I0513 19:32:01.060042 21 service_latency.go:356] Created: latency-svc-bxpbq
  I0513 19:32:01.092554 21 service_latency.go:363] Got endpoints: latency-svc-bxpbq [633.164655ms]
  I0513 19:32:01.106723 21 service_latency.go:356] Created: latency-svc-lzdfc
  I0513 19:32:01.135229 21 service_latency.go:363] Got endpoints: latency-svc-lzdfc [583.38618ms]
  I0513 19:32:01.154697 21 service_latency.go:356] Created: latency-svc-x4pfn
  I0513 19:32:01.204540 21 service_latency.go:363] Got endpoints: latency-svc-x4pfn [654.822478ms]
  I0513 19:32:01.219720 21 service_latency.go:356] Created: latency-svc-gzt55
  I0513 19:32:01.899237 21 service_latency.go:363] Got endpoints: latency-svc-gzt55 [1.305666096s]
  I0513 19:32:01.909399 21 service_latency.go:356] Created: latency-svc-fmqgg
  I0513 19:32:01.925682 21 service_latency.go:363] Got endpoints: latency-svc-fmqgg [1.296505486s]
  I0513 19:32:01.956908 21 service_latency.go:356] Created: latency-svc-dqqlc
  I0513 19:32:01.976431 21 service_latency.go:363] Got endpoints: latency-svc-dqqlc [1.303550657s]
  I0513 19:32:01.987263 21 service_latency.go:356] Created: latency-svc-sw4mq
  I0513 19:32:02.001759 21 service_latency.go:363] Got endpoints: latency-svc-sw4mq [1.26078927s]
  I0513 19:32:02.012374 21 service_latency.go:356] Created: latency-svc-h72h9
  I0513 19:32:02.769820 21 service_latency.go:363] Got endpoints: latency-svc-h72h9 [1.977090832s]
  I0513 19:32:02.786282 21 service_latency.go:356] Created: latency-svc-bsrtc
  I0513 19:32:02.811214 21 service_latency.go:363] Got endpoints: latency-svc-bsrtc [1.978837288s]
  I0513 19:32:03.708734 21 service_latency.go:356] Created: latency-svc-tn8rs
  I0513 19:32:03.716266 21 service_latency.go:356] Created: latency-svc-vmtcf
  I0513 19:32:03.716275 21 service_latency.go:356] Created: latency-svc-lbqvb
  I0513 19:32:03.723310 21 service_latency.go:356] Created: latency-svc-jrsxg
  I0513 19:32:03.724431 21 service_latency.go:356] Created: latency-svc-54q45
  I0513 19:32:03.724551 21 service_latency.go:356] Created: latency-svc-296ch
  I0513 19:32:03.724670 21 service_latency.go:356] Created: latency-svc-4l2kp
  I0513 19:32:03.724833 21 service_latency.go:356] Created: latency-svc-fh8bm
  I0513 19:32:03.728713 21 service_latency.go:356] Created: latency-svc-tstl5
  I0513 19:32:03.729070 21 service_latency.go:356] Created: latency-svc-xsx7h
  I0513 19:32:03.729841 21 service_latency.go:356] Created: latency-svc-xntxj
  I0513 19:32:03.731142 21 service_latency.go:356] Created: latency-svc-6gc27
  I0513 19:32:03.731140 21 service_latency.go:356] Created: latency-svc-rs9gd
  I0513 19:32:03.731270 21 service_latency.go:356] Created: latency-svc-gxn2s
  I0513 19:32:03.731283 21 service_latency.go:356] Created: latency-svc-bwghj
  I0513 19:32:03.732301 21 service_latency.go:363] Got endpoints: latency-svc-tn8rs [2.695330983s]
  I0513 19:32:04.228995 21 service_latency.go:363] Got endpoints: latency-svc-54q45 [3.136371162s]
  I0513 19:32:04.229335 21 service_latency.go:363] Got endpoints: latency-svc-lbqvb [1.418034855s]
  I0513 19:32:04.229533 21 service_latency.go:363] Got endpoints: latency-svc-vmtcf [2.330237917s]
  I0513 19:32:04.229768 21 service_latency.go:363] Got endpoints: latency-svc-tstl5 [3.094471407s]
  I0513 19:32:04.229937 21 service_latency.go:363] Got endpoints: latency-svc-xsx7h [3.390980488s]
  I0513 19:32:04.230212 21 service_latency.go:363] Got endpoints: latency-svc-xntxj [3.024647973s]
  I0513 19:32:04.230491 21 service_latency.go:363] Got endpoints: latency-svc-gxn2s [3.347083956s]
  I0513 19:32:04.230666 21 service_latency.go:363] Got endpoints: latency-svc-fh8bm [3.306315109s]
  I0513 19:32:04.230817 21 service_latency.go:363] Got endpoints: latency-svc-rs9gd [3.274831906s]
  I0513 19:32:04.231036 21 service_latency.go:363] Got endpoints: latency-svc-6gc27 [2.229220443s]
  I0513 19:32:04.231234 21 service_latency.go:363] Got endpoints: latency-svc-bwghj [2.254335924s]
  I0513 19:32:04.231323 21 service_latency.go:363] Got endpoints: latency-svc-4l2kp [1.461428809s]
  I0513 19:32:04.231429 21 service_latency.go:363] Got endpoints: latency-svc-296ch [2.305689212s]
  I0513 19:32:04.231600 21 service_latency.go:363] Got endpoints: latency-svc-jrsxg [3.233751594s]
  I0513 19:32:04.246817 21 service_latency.go:356] Created: latency-svc-7xw7h
  I0513 19:32:04.260653 21 service_latency.go:363] Got endpoints: latency-svc-7xw7h [524.707254ms]
  I0513 19:32:04.296894 21 service_latency.go:356] Created: latency-svc-m5nnp
  I0513 19:32:04.325426 21 service_latency.go:363] Got endpoints: latency-svc-m5nnp [96.362137ms]
  I0513 19:32:04.336682 21 service_latency.go:356] Created: latency-svc-vsqcr
  I0513 19:32:04.373574 21 service_latency.go:363] Got endpoints: latency-svc-vsqcr [143.585646ms]
  I0513 19:32:04.381752 21 service_latency.go:356] Created: latency-svc-xkr9c
  I0513 19:32:04.421914 21 service_latency.go:363] Got endpoints: latency-svc-xkr9c [192.539311ms]
  I0513 19:32:04.424227 21 service_latency.go:356] Created: latency-svc-n5ddd
  I0513 19:32:04.450551 21 service_latency.go:363] Got endpoints: latency-svc-n5ddd [220.988321ms]
  I0513 19:32:04.459210 21 service_latency.go:356] Created: latency-svc-l7gcx
  I0513 19:32:04.495551 21 service_latency.go:363] Got endpoints: latency-svc-l7gcx [265.742286ms]
  I0513 19:32:04.509994 21 service_latency.go:356] Created: latency-svc-s8mqb
  I0513 19:32:04.526255 21 service_latency.go:363] Got endpoints: latency-svc-s8mqb [295.391192ms]
  I0513 19:32:04.534282 21 service_latency.go:356] Created: latency-svc-mn67z
  I0513 19:32:04.560603 21 service_latency.go:363] Got endpoints: latency-svc-mn67z [329.908409ms]
  I0513 19:32:04.572298 21 service_latency.go:356] Created: latency-svc-jvsxf
  I0513 19:32:04.579972 21 service_latency.go:363] Got endpoints: latency-svc-jvsxf [348.907483ms]
  I0513 19:32:04.599288 21 service_latency.go:356] Created: latency-svc-xsrtb
  I0513 19:32:04.623219 21 service_latency.go:363] Got endpoints: latency-svc-xsrtb [391.954492ms]
  I0513 19:32:04.632099 21 service_latency.go:356] Created: latency-svc-zrr75
  I0513 19:32:04.649472 21 service_latency.go:363] Got endpoints: latency-svc-zrr75 [419.231045ms]
  I0513 19:32:04.667039 21 service_latency.go:356] Created: latency-svc-qdg92
  I0513 19:32:04.691154 21 service_latency.go:363] Got endpoints: latency-svc-qdg92 [459.696567ms]
  I0513 19:32:04.702839 21 service_latency.go:356] Created: latency-svc-tmxrh
  I0513 19:32:04.739518 21 service_latency.go:363] Got endpoints: latency-svc-tmxrh [508.998157ms]
  I0513 19:32:04.747563 21 service_latency.go:356] Created: latency-svc-z2xc7
  I0513 19:32:04.780147 21 service_latency.go:363] Got endpoints: latency-svc-z2xc7 [548.517796ms]
  I0513 19:32:04.792673 21 service_latency.go:356] Created: latency-svc-rcmm7
  I0513 19:32:04.809539 21 service_latency.go:363] Got endpoints: latency-svc-rcmm7 [578.186493ms]
  I0513 19:32:04.833640 21 service_latency.go:356] Created: latency-svc-wtpdg
  I0513 19:32:04.861292 21 service_latency.go:363] Got endpoints: latency-svc-wtpdg [600.580445ms]
  I0513 19:32:04.878228 21 service_latency.go:356] Created: latency-svc-vzmjs
  I0513 19:32:04.902887 21 service_latency.go:363] Got endpoints: latency-svc-vzmjs [577.133708ms]
  I0513 19:32:04.915457 21 service_latency.go:356] Created: latency-svc-t7grs
  I0513 19:32:04.945018 21 service_latency.go:363] Got endpoints: latency-svc-t7grs [571.360995ms]
  I0513 19:32:04.958043 21 service_latency.go:356] Created: latency-svc-mnxv2
  I0513 19:32:04.978369 21 service_latency.go:363] Got endpoints: latency-svc-mnxv2 [556.37682ms]
  I0513 19:32:04.996630 21 service_latency.go:356] Created: latency-svc-82p4v
  I0513 19:32:05.025127 21 service_latency.go:363] Got endpoints: latency-svc-82p4v [574.524421ms]
  I0513 19:32:05.038102 21 service_latency.go:356] Created: latency-svc-dm7r5
  I0513 19:32:05.062614 21 service_latency.go:363] Got endpoints: latency-svc-dm7r5 [566.995222ms]
  I0513 19:32:05.071299 21 service_latency.go:356] Created: latency-svc-69wv2
  I0513 19:32:05.091577 21 service_latency.go:363] Got endpoints: latency-svc-69wv2 [565.256048ms]
  I0513 19:32:05.107170 21 service_latency.go:356] Created: latency-svc-k42qc
  I0513 19:32:05.139562 21 service_latency.go:363] Got endpoints: latency-svc-k42qc [578.885033ms]
  I0513 19:32:05.146255 21 service_latency.go:356] Created: latency-svc-cns7v
  I0513 19:32:05.168586 21 service_latency.go:363] Got endpoints: latency-svc-cns7v [588.547753ms]
  I0513 19:32:05.180044 21 service_latency.go:356] Created: latency-svc-zkphp
  I0513 19:32:05.224691 21 service_latency.go:363] Got endpoints: latency-svc-zkphp [601.399468ms]
  I0513 19:32:05.231029 21 service_latency.go:356] Created: latency-svc-pwhlg
  I0513 19:32:05.253142 21 service_latency.go:363] Got endpoints: latency-svc-pwhlg [603.259455ms]
  I0513 19:32:05.276520 21 service_latency.go:356] Created: latency-svc-qmdsp
  I0513 19:32:05.301519 21 service_latency.go:363] Got endpoints: latency-svc-qmdsp [609.624546ms]
  I0513 19:32:05.312515 21 service_latency.go:356] Created: latency-svc-kxv7k
  I0513 19:32:05.337093 21 service_latency.go:363] Got endpoints: latency-svc-kxv7k [597.505242ms]
  I0513 19:32:05.345897 21 service_latency.go:356] Created: latency-svc-qd4mn
  I0513 19:32:05.372153 21 service_latency.go:363] Got endpoints: latency-svc-qd4mn [591.743419ms]
  I0513 19:32:05.388328 21 service_latency.go:356] Created: latency-svc-gn7gh
  I0513 19:32:05.418454 21 service_latency.go:363] Got endpoints: latency-svc-gn7gh [608.856126ms]
  I0513 19:32:05.437559 21 service_latency.go:356] Created: latency-svc-p6278
  I0513 19:32:05.462949 21 service_latency.go:363] Got endpoints: latency-svc-p6278 [601.583ms]
  I0513 19:32:05.477723 21 service_latency.go:356] Created: latency-svc-224tq
  I0513 19:32:05.512182 21 service_latency.go:363] Got endpoints: latency-svc-224tq [608.763974ms]
  I0513 19:32:05.525275 21 service_latency.go:356] Created: latency-svc-qsr8x
  I0513 19:32:05.555721 21 service_latency.go:363] Got endpoints: latency-svc-qsr8x [610.629661ms]
  I0513 19:32:05.573158 21 service_latency.go:356] Created: latency-svc-fsphb
  I0513 19:32:05.611855 21 service_latency.go:363] Got endpoints: latency-svc-fsphb [632.793131ms]
  I0513 19:32:05.622238 21 service_latency.go:356] Created: latency-svc-52q8j
  I0513 19:32:05.657790 21 service_latency.go:356] Created: latency-svc-zrbsr
  I0513 19:32:05.682468 21 service_latency.go:363] Got endpoints: latency-svc-zrbsr [619.793153ms]
  I0513 19:32:05.682797 21 service_latency.go:363] Got endpoints: latency-svc-52q8j [654.737176ms]
  I0513 19:32:05.728607 21 service_latency.go:356] Created: latency-svc-bg8kr
  I0513 19:32:05.759537 21 service_latency.go:363] Got endpoints: latency-svc-bg8kr [667.657393ms]
  I0513 19:32:05.795405 21 service_latency.go:356] Created: latency-svc-p2r59
  I0513 19:32:05.838989 21 service_latency.go:356] Created: latency-svc-msdf8
  I0513 19:32:05.846218 21 service_latency.go:363] Got endpoints: latency-svc-p2r59 [706.194437ms]
  I0513 19:32:05.846789 21 service_latency.go:363] Got endpoints: latency-svc-msdf8 [677.451933ms]
  I0513 19:32:05.876793 21 service_latency.go:356] Created: latency-svc-n65qq
  I0513 19:32:05.930471 21 service_latency.go:363] Got endpoints: latency-svc-n65qq [705.71659ms]
  I0513 19:32:05.933824 21 service_latency.go:356] Created: latency-svc-lglpf
  I0513 19:32:05.961538 21 service_latency.go:363] Got endpoints: latency-svc-lglpf [708.334238ms]
  I0513 19:32:05.972017 21 service_latency.go:356] Created: latency-svc-q67bw
  I0513 19:32:06.009447 21 service_latency.go:363] Got endpoints: latency-svc-q67bw [707.573497ms]
  I0513 19:32:06.021447 21 service_latency.go:356] Created: latency-svc-kck2l
  I0513 19:32:06.044736 21 service_latency.go:363] Got endpoints: latency-svc-kck2l [707.216642ms]
  I0513 19:32:06.065022 21 service_latency.go:356] Created: latency-svc-87jqb
  I0513 19:32:06.085213 21 service_latency.go:363] Got endpoints: latency-svc-87jqb [712.725721ms]
  I0513 19:32:06.105276 21 service_latency.go:356] Created: latency-svc-jvj9j
  I0513 19:32:06.148502 21 service_latency.go:363] Got endpoints: latency-svc-jvj9j [729.974709ms]
  I0513 19:32:06.197383 21 service_latency.go:356] Created: latency-svc-nbwsf
  I0513 19:32:06.226079 21 service_latency.go:363] Got endpoints: latency-svc-nbwsf [763.064956ms]
  I0513 19:32:06.235653 21 service_latency.go:356] Created: latency-svc-m7ts6
  I0513 19:32:06.273576 21 service_latency.go:363] Got endpoints: latency-svc-m7ts6 [761.338771ms]
  I0513 19:32:06.287048 21 service_latency.go:356] Created: latency-svc-zcg8k
  I0513 19:32:06.313550 21 service_latency.go:363] Got endpoints: latency-svc-zcg8k [757.677287ms]
  I0513 19:32:06.329213 21 service_latency.go:356] Created: latency-svc-6mtzk
  I0513 19:32:06.369730 21 service_latency.go:363] Got endpoints: latency-svc-6mtzk [757.799319ms]
  I0513 19:32:06.372673 21 service_latency.go:356] Created: latency-svc-75xt4
  I0513 19:32:06.400880 21 service_latency.go:363] Got endpoints: latency-svc-75xt4 [718.349721ms]
  I0513 19:32:06.410554 21 service_latency.go:356] Created: latency-svc-ldz5n
  I0513 19:32:06.451981 21 service_latency.go:363] Got endpoints: latency-svc-ldz5n [769.081452ms]
  I0513 19:32:06.452230 21 service_latency.go:356] Created: latency-svc-c6h2l
  I0513 19:32:06.479585 21 service_latency.go:363] Got endpoints: latency-svc-c6h2l [719.980836ms]
  I0513 19:32:06.495393 21 service_latency.go:356] Created: latency-svc-cc8vk
  I0513 19:32:06.518533 21 service_latency.go:363] Got endpoints: latency-svc-cc8vk [672.267848ms]
  I0513 19:32:06.546504 21 service_latency.go:356] Created: latency-svc-sl8d5
  I0513 19:32:06.568217 21 service_latency.go:363] Got endpoints: latency-svc-sl8d5 [721.389405ms]
  I0513 19:32:06.590824 21 service_latency.go:356] Created: latency-svc-8tlk4
  I0513 19:32:07.081321 21 service_latency.go:363] Got endpoints: latency-svc-8tlk4 [1.150794528s]
  I0513 19:32:07.092492 21 service_latency.go:356] Created: latency-svc-jl5bl
  I0513 19:32:07.119604 21 service_latency.go:363] Got endpoints: latency-svc-jl5bl [1.157810199s]
  I0513 19:32:07.701498 21 service_latency.go:356] Created: latency-svc-zs5rg
  I0513 19:32:07.701559 21 service_latency.go:363] Got endpoints: latency-svc-zs5rg [1.656739192s]
  I0513 19:32:07.772283 21 service_latency.go:356] Created: latency-svc-lggkb
  I0513 19:32:07.783450 21 service_latency.go:363] Got endpoints: latency-svc-lggkb [1.695854436s]
  I0513 19:32:07.791246 21 service_latency.go:356] Created: latency-svc-pxp44
  I0513 19:32:07.807726 21 service_latency.go:356] Created: latency-svc-pz4l5
  I0513 19:32:07.809059 21 service_latency.go:363] Got endpoints: latency-svc-pxp44 [1.660485836s]
  I0513 19:32:07.821042 21 service_latency.go:363] Got endpoints: latency-svc-pz4l5 [1.594499756s]
  I0513 19:32:07.823672 21 service_latency.go:356] Created: latency-svc-wsp97
  I0513 19:32:07.871033 21 service_latency.go:356] Created: latency-svc-rq4mp
  I0513 19:32:07.871443 21 service_latency.go:363] Got endpoints: latency-svc-wsp97 [1.597798223s]
  I0513 19:32:07.902257 21 service_latency.go:363] Got endpoints: latency-svc-rq4mp [1.58778145s]
  I0513 19:32:07.914146 21 service_latency.go:356] Created: latency-svc-xb6p5
  I0513 19:32:07.930433 21 service_latency.go:363] Got endpoints: latency-svc-xb6p5 [1.559794207s]
  I0513 19:32:07.932546 21 service_latency.go:356] Created: latency-svc-vgp96
  I0513 19:32:07.943780 21 service_latency.go:363] Got endpoints: latency-svc-vgp96 [1.542828253s]
  I0513 19:32:07.950056 21 service_latency.go:356] Created: latency-svc-kvskp
  I0513 19:32:07.966429 21 service_latency.go:363] Got endpoints: latency-svc-kvskp [1.513709243s]
  I0513 19:32:07.978120 21 service_latency.go:356] Created: latency-svc-5b7p5
  I0513 19:32:07.995276 21 service_latency.go:363] Got endpoints: latency-svc-5b7p5 [1.515635681s]
  I0513 19:32:07.996334 21 service_latency.go:356] Created: latency-svc-5qrzg
  I0513 19:32:08.006884 21 service_latency.go:363] Got endpoints: latency-svc-5qrzg [1.488284517s]
  I0513 19:32:08.020918 21 service_latency.go:356] Created: latency-svc-bwsqx
  I0513 19:32:08.022389 21 service_latency.go:356] Created: latency-svc-fgtkn
  I0513 19:32:08.032433 21 service_latency.go:363] Got endpoints: latency-svc-bwsqx [2.022093952s]
  I0513 19:32:08.040385 21 service_latency.go:363] Got endpoints: latency-svc-fgtkn [1.472106834s]
  I0513 19:32:08.040543 21 service_latency.go:114] Latencies: [50.530387ms 88.772768ms 96.362137ms 118.607628ms 137.223045ms 143.585646ms 178.50969ms 179.848349ms 192.539311ms 220.988321ms 242.476771ms 243.675377ms 265.742286ms 267.600352ms 295.391192ms 315.794546ms 329.908409ms 344.312237ms 348.754671ms 348.907483ms 358.544941ms 370.25219ms 382.471956ms 391.954492ms 399.948738ms 404.096027ms 419.231045ms 419.724842ms 422.828187ms 427.834839ms 456.924148ms 459.643977ms 459.696567ms 466.79445ms 470.109698ms 499.122266ms 500.17212ms 505.271394ms 508.977317ms 508.998157ms 524.707254ms 525.371333ms 548.517796ms 553.092633ms 556.37682ms 559.543765ms 565.256048ms 566.995222ms 570.504052ms 571.360995ms 574.524421ms 577.133708ms 578.186493ms 578.885033ms 583.38618ms 584.117189ms 588.547753ms 591.743419ms 592.123614ms 597.505242ms 599.153376ms 599.537101ms 600.580445ms 601.399468ms 601.583ms 603.259455ms 608.763974ms 608.856126ms 609.624546ms 610.512669ms 610.629661ms 612.464208ms 613.750977ms 615.106135ms 615.568103ms 618.752117ms 619.793153ms 620.118738ms 620.958319ms 621.779861ms 622.061025ms 624.342858ms 626.894625ms 632.793131ms 633.164655ms 633.698903ms 635.441918ms 635.492629ms 639.594028ms 641.679348ms 644.965856ms 650.351563ms 654.737176ms 654.822478ms 658.609511ms 660.170094ms 665.391549ms 667.657393ms 668.501635ms 668.583505ms 668.760048ms 669.827293ms 672.267848ms 673.942212ms 675.937601ms 677.451933ms 677.92638ms 686.038157ms 699.765495ms 702.20724ms 705.71659ms 706.194437ms 707.216642ms 707.573497ms 708.334238ms 712.725721ms 718.349721ms 719.980836ms 721.389405ms 729.974709ms 757.677287ms 757.799319ms 761.338771ms 763.064956ms 769.081452ms 784.112057ms 888.240728ms 906.846565ms 910.757182ms 913.589341ms 928.790711ms 931.238646ms 950.507463ms 1.118147407s 1.137320594s 1.138620033s 1.150794528s 1.155020128s 1.157810199s 1.166124578s 1.169938574s 1.188558591s 1.195897627s 1.210351506s 1.235969772s 1.245316947s 1.26078927s 1.274862252s 1.294030257s 1.296505486s 1.303550657s 1.305666096s 1.308576177s 1.35527156s 1.371057696s 1.388904804s 1.405977909s 1.418034855s 1.429336975s 1.45314043s 1.460380685s 1.461428809s 1.464109249s 1.465451858s 1.471417201s 1.471696858s 1.472106834s 1.474029432s 1.488284517s 1.498034075s 1.513709243s 1.515635681s 1.52619175s 1.535663296s 1.542828253s 1.543703904s 1.554181834s 1.559794207s 1.58778145s 1.594499756s 1.597798223s 1.656739192s 1.660485836s 1.695854436s 1.977090832s 1.978837288s 2.022093952s 2.229220443s 2.254335924s 2.305689212s 2.330237917s 2.695330983s 3.024647973s 3.094471407s 3.136371162s 3.233751594s 3.274831906s 3.306315109s 3.347083956s 3.390980488s]
  I0513 19:32:08.040568 21 service_latency.go:118] 50 %ile: 668.760048ms
  I0513 19:32:08.040582 21 service_latency.go:119] 90 %ile: 1.597798223s
  I0513 19:32:08.040602 21 service_latency.go:120] 99 %ile: 3.347083956s
  I0513 19:32:08.040615 21 service_latency.go:121] Total sample count: 200
  I0513 19:32:08.040700 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-5682" for this suite. @ 05/13/24 19:32:08.054
• [16.168 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1533
  STEP: Creating a kubernetes client @ 05/13/24 19:32:08.074
  I0513 19:32:08.074752 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename kubectl @ 05/13/24 19:32:08.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:32:08.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:32:08.121
  STEP: creating Agnhost RC @ 05/13/24 19:32:08.125
  I0513 19:32:08.125785 21 kubectl.go:1540] namespace kubectl-9893
  I0513 19:32:08.125906 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-9893 create -f -'
  I0513 19:32:08.325788 21 builder.go:146] stderr: ""
  I0513 19:32:08.325863 21 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/13/24 19:32:08.325
  I0513 19:32:09.336323 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0513 19:32:09.336406 21 framework.go:733] Found 0 / 1
  I0513 19:32:10.330893 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0513 19:32:10.330952 21 framework.go:733] Found 0 / 1
  I0513 19:32:11.331910 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0513 19:32:11.331961 21 framework.go:733] Found 1 / 1
  I0513 19:32:11.331992 21 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0513 19:32:11.336442 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0513 19:32:11.336481 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0513 19:32:11.336496 21 kubectl.go:1547] wait on agnhost-primary startup in kubectl-9893 
  I0513 19:32:11.336552 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-9893 logs agnhost-primary-l5f4l agnhost-primary'
  I0513 19:32:11.452419 21 builder.go:146] stderr: ""
  I0513 19:32:11.452471 21 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 05/13/24 19:32:11.452
  I0513 19:32:11.452566 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-9893 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0513 19:32:11.573367 21 builder.go:146] stderr: ""
  I0513 19:32:11.573423 21 builder.go:147] stdout: "service/rm2 exposed\n"
  I0513 19:32:11.585911 21 utils.go:1179] Service rm2 in namespace kubectl-9893 found.
  STEP: exposing service @ 05/13/24 19:32:13.61
  I0513 19:32:13.610220 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-9893 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0513 19:32:13.748007 21 builder.go:146] stderr: ""
  I0513 19:32:13.748059 21 builder.go:147] stdout: "service/rm3 exposed\n"
  I0513 19:32:13.756487 21 utils.go:1179] Service rm3 in namespace kubectl-9893 found.
  I0513 19:32:15.784735 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9893" for this suite. @ 05/13/24 19:32:15.8
• [7.741 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:850
  STEP: Creating a kubernetes client @ 05/13/24 19:32:15.815
  I0513 19:32:15.815434 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename services @ 05/13/24 19:32:15.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:32:15.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:32:15.886
  STEP: creating service multi-endpoint-test in namespace services-9939 @ 05/13/24 19:32:15.889
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9939 to expose endpoints map[] @ 05/13/24 19:32:15.938
  I0513 19:32:15.950125 21 service.go:4226] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  I0513 19:32:17.748485 21 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-9939 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-9939 @ 05/13/24 19:32:17.748
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9939 to expose endpoints map[pod1:[100]] @ 05/13/24 19:32:20.444
  I0513 19:32:24.984851 21 service.go:4233] Unexpected endpoints: found map[], expected map[pod1:[100]], will retry
  I0513 19:32:28.042146 21 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-9939 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-9939 @ 05/13/24 19:32:28.042
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9939 to expose endpoints map[pod1:[100] pod2:[101]] @ 05/13/24 19:32:30.069
  I0513 19:32:33.092304 21 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-9939 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 05/13/24 19:32:33.092
  I0513 19:32:33.092420 21 resource.go:361] Creating new exec pod
  I0513 19:32:36.115186 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-9939 exec execpodvg7q5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0513 19:32:36.316158 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I0513 19:32:36.316223 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 19:32:36.316324 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-9939 exec execpodvg7q5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.48.242 80'
  I0513 19:32:36.498033 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.48.242 80\nConnection to 10.43.48.242 80 port [tcp/http] succeeded!\n"
  I0513 19:32:36.498093 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 19:32:36.498183 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-9939 exec execpodvg7q5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0513 19:32:36.691905 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I0513 19:32:36.691969 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 19:32:36.692061 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-9939 exec execpodvg7q5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.48.242 81'
  I0513 19:32:36.872985 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.48.242 81\nConnection to 10.43.48.242 81 port [tcp/*] succeeded!\n"
  I0513 19:32:36.873154 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-9939 @ 05/13/24 19:32:36.873
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9939 to expose endpoints map[pod2:[101]] @ 05/13/24 19:32:36.927
  I0513 19:32:36.955307 21 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-9939 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-9939 @ 05/13/24 19:32:36.955
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9939 to expose endpoints map[] @ 05/13/24 19:32:37.029
  I0513 19:32:37.059052 21 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-9939 exposes endpoints map[]
  I0513 19:32:37.113345 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9939" for this suite. @ 05/13/24 19:32:37.121
• [21.328 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 05/13/24 19:32:37.147
  I0513 19:32:37.147400 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename dns @ 05/13/24 19:32:37.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:32:37.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:32:37.202
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9591.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-9591.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 05/13/24 19:32:37.206
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9591.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-9591.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 05/13/24 19:32:37.206
  STEP: creating a pod to probe /etc/hosts @ 05/13/24 19:32:37.206
  STEP: submitting the pod to kubernetes @ 05/13/24 19:32:37.206
  STEP: retrieving the pod @ 05/13/24 19:32:41.286
  STEP: looking for the results for each expected name from probers @ 05/13/24 19:32:41.289
  I0513 19:32:41.310424 21 dns_common.go:527] DNS probes using dns-9591/dns-test-9bf5cc7b-9bfe-4be9-b226-3ea3ed1bb500 succeeded

  STEP: deleting the pod @ 05/13/24 19:32:41.31
  I0513 19:32:41.323947 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9591" for this suite. @ 05/13/24 19:32:41.332
• [4.194 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:355
  STEP: Creating a kubernetes client @ 05/13/24 19:32:41.34
  I0513 19:32:41.340850 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename kubectl @ 05/13/24 19:32:41.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:32:41.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:32:41.37
  STEP: creating a replication controller @ 05/13/24 19:32:41.373
  I0513 19:32:41.374061 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8236 create -f -'
  I0513 19:32:41.540706 21 builder.go:146] stderr: ""
  I0513 19:32:41.540775 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/13/24 19:32:41.54
  I0513 19:32:41.540885 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8236 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0513 19:32:41.641835 21 builder.go:146] stderr: ""
  I0513 19:32:41.641890 21 builder.go:147] stdout: "update-demo-nautilus-ptv56 update-demo-nautilus-qr9dz "
  I0513 19:32:41.641958 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8236 get pods update-demo-nautilus-ptv56 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0513 19:32:41.827075 21 builder.go:146] stderr: ""
  I0513 19:32:41.827122 21 builder.go:147] stdout: ""
  I0513 19:32:41.827247 21 kubectl.go:2501] update-demo-nautilus-ptv56 is created but not running
  I0513 19:32:46.828211 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8236 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0513 19:32:46.915999 21 builder.go:146] stderr: ""
  I0513 19:32:46.916161 21 builder.go:147] stdout: "update-demo-nautilus-ptv56 update-demo-nautilus-qr9dz "
  I0513 19:32:46.916227 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8236 get pods update-demo-nautilus-ptv56 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0513 19:32:47.002455 21 builder.go:146] stderr: ""
  I0513 19:32:47.002511 21 builder.go:147] stdout: "true"
  I0513 19:32:47.002572 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8236 get pods update-demo-nautilus-ptv56 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0513 19:32:47.088100 21 builder.go:146] stderr: ""
  I0513 19:32:47.088164 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0513 19:32:47.088187 21 kubectl.go:2392] validating pod update-demo-nautilus-ptv56
  I0513 19:32:47.098615 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0513 19:32:47.098695 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0513 19:32:47.098715 21 kubectl.go:2519] update-demo-nautilus-ptv56 is verified up and running
  I0513 19:32:47.098804 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8236 get pods update-demo-nautilus-qr9dz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0513 19:32:47.186281 21 builder.go:146] stderr: ""
  I0513 19:32:47.186346 21 builder.go:147] stdout: "true"
  I0513 19:32:47.186768 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8236 get pods update-demo-nautilus-qr9dz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0513 19:32:47.282413 21 builder.go:146] stderr: ""
  I0513 19:32:47.282470 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0513 19:32:47.282493 21 kubectl.go:2392] validating pod update-demo-nautilus-qr9dz
  I0513 19:32:47.291503 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0513 19:32:47.291603 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0513 19:32:47.291625 21 kubectl.go:2519] update-demo-nautilus-qr9dz is verified up and running
  STEP: scaling down the replication controller @ 05/13/24 19:32:47.291
  I0513 19:32:47.294168 21 kubectl.go:324] scanned /root for discovery docs: <nil>
  I0513 19:32:47.294231 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8236 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I0513 19:32:48.485309 21 builder.go:146] stderr: ""
  I0513 19:32:48.485473 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/13/24 19:32:48.485
  I0513 19:32:48.485589 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8236 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0513 19:32:48.566679 21 builder.go:146] stderr: ""
  I0513 19:32:48.566826 21 builder.go:147] stdout: "update-demo-nautilus-ptv56 update-demo-nautilus-qr9dz "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 05/13/24 19:32:48.566
  I0513 19:32:53.567667 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8236 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0513 19:32:53.665126 21 builder.go:146] stderr: ""
  I0513 19:32:53.665393 21 builder.go:147] stdout: "update-demo-nautilus-ptv56 "
  I0513 19:32:53.665457 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8236 get pods update-demo-nautilus-ptv56 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0513 19:32:53.769684 21 builder.go:146] stderr: ""
  I0513 19:32:53.769734 21 builder.go:147] stdout: "true"
  I0513 19:32:53.769801 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8236 get pods update-demo-nautilus-ptv56 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0513 19:32:53.852847 21 builder.go:146] stderr: ""
  I0513 19:32:53.852917 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0513 19:32:53.852940 21 kubectl.go:2392] validating pod update-demo-nautilus-ptv56
  I0513 19:32:53.857886 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0513 19:32:53.858012 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0513 19:32:53.858086 21 kubectl.go:2519] update-demo-nautilus-ptv56 is verified up and running
  STEP: scaling up the replication controller @ 05/13/24 19:32:53.858
  I0513 19:32:53.860466 21 kubectl.go:324] scanned /root for discovery docs: <nil>
  I0513 19:32:53.860518 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8236 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I0513 19:32:54.985791 21 builder.go:146] stderr: ""
  I0513 19:32:54.985836 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/13/24 19:32:54.985
  I0513 19:32:54.986147 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8236 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0513 19:32:55.086172 21 builder.go:146] stderr: ""
  I0513 19:32:55.086237 21 builder.go:147] stdout: "update-demo-nautilus-pf6x5 update-demo-nautilus-ptv56 "
  I0513 19:32:55.086307 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8236 get pods update-demo-nautilus-pf6x5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0513 19:32:55.165455 21 builder.go:146] stderr: ""
  I0513 19:32:55.165509 21 builder.go:147] stdout: ""
  I0513 19:32:55.165529 21 kubectl.go:2501] update-demo-nautilus-pf6x5 is created but not running
  I0513 19:33:00.166037 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8236 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0513 19:33:00.264728 21 builder.go:146] stderr: ""
  I0513 19:33:00.264811 21 builder.go:147] stdout: "update-demo-nautilus-pf6x5 update-demo-nautilus-ptv56 "
  I0513 19:33:00.264949 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8236 get pods update-demo-nautilus-pf6x5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0513 19:33:00.351185 21 builder.go:146] stderr: ""
  I0513 19:33:00.351243 21 builder.go:147] stdout: "true"
  I0513 19:33:00.351312 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8236 get pods update-demo-nautilus-pf6x5 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0513 19:33:00.431687 21 builder.go:146] stderr: ""
  I0513 19:33:00.431735 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0513 19:33:00.431758 21 kubectl.go:2392] validating pod update-demo-nautilus-pf6x5
  I0513 19:33:00.439359 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0513 19:33:00.440279 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0513 19:33:00.440313 21 kubectl.go:2519] update-demo-nautilus-pf6x5 is verified up and running
  I0513 19:33:00.440640 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8236 get pods update-demo-nautilus-ptv56 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0513 19:33:00.528044 21 builder.go:146] stderr: ""
  I0513 19:33:00.528228 21 builder.go:147] stdout: "true"
  I0513 19:33:00.528349 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8236 get pods update-demo-nautilus-ptv56 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0513 19:33:00.625271 21 builder.go:146] stderr: ""
  I0513 19:33:00.625325 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0513 19:33:00.625347 21 kubectl.go:2392] validating pod update-demo-nautilus-ptv56
  I0513 19:33:00.641850 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0513 19:33:00.641933 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0513 19:33:00.641958 21 kubectl.go:2519] update-demo-nautilus-ptv56 is verified up and running
  STEP: using delete to clean up resources @ 05/13/24 19:33:00.642
  I0513 19:33:00.642484 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8236 delete --grace-period=0 --force -f -'
  I0513 19:33:00.774669 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0513 19:33:00.774743 21 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0513 19:33:00.774810 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8236 get rc,svc -l name=update-demo --no-headers'
  I0513 19:33:00.974746 21 builder.go:146] stderr: "No resources found in kubectl-8236 namespace.\n"
  I0513 19:33:00.974806 21 builder.go:147] stdout: ""
  I0513 19:33:00.974996 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8236 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0513 19:33:01.144201 21 builder.go:146] stderr: ""
  I0513 19:33:01.144251 21 builder.go:147] stdout: ""
  I0513 19:33:01.144353 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8236" for this suite. @ 05/13/24 19:33:01.149
• [20.121 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 05/13/24 19:33:01.461
  I0513 19:33:01.461565 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename replication-controller @ 05/13/24 19:33:01.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:33:01.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:33:01.515
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 05/13/24 19:33:01.52
  STEP: When a replication controller with a matching selector is created @ 05/13/24 19:33:03.564
  STEP: Then the orphan pod is adopted @ 05/13/24 19:33:03.574
  I0513 19:33:04.981369 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8469" for this suite. @ 05/13/24 19:33:04.989
• [3.546 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 05/13/24 19:33:05.008
  I0513 19:33:05.008505 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename security-context-test @ 05/13/24 19:33:05.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:33:05.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:33:05.104
  I0513 19:33:11.215997 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8492" for this suite. @ 05/13/24 19:33:11.221
• [6.736 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 05/13/24 19:33:11.745
  I0513 19:33:11.745405 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:33:11.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:33:12.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:33:12.265
  STEP: Creating secret with name s-test-opt-del-11480e39-cee7-4975-8465-65985b3e1675 @ 05/13/24 19:33:12.293
  STEP: Creating secret with name s-test-opt-upd-674ff338-c1cb-408a-8d3e-693981796b32 @ 05/13/24 19:33:12.309
  STEP: Creating the pod @ 05/13/24 19:33:12.317
  STEP: Deleting secret s-test-opt-del-11480e39-cee7-4975-8465-65985b3e1675 @ 05/13/24 19:33:16.381
  STEP: Updating secret s-test-opt-upd-674ff338-c1cb-408a-8d3e-693981796b32 @ 05/13/24 19:33:16.39
  STEP: Creating secret with name s-test-opt-create-579d1e40-3d8c-4ae7-bbdc-ad85c0b0f844 @ 05/13/24 19:33:16.397
  STEP: waiting to observe update in volume @ 05/13/24 19:33:16.403
  I0513 19:34:01.542667 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8872" for this suite. @ 05/13/24 19:34:01.55
• [49.812 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 05/13/24 19:34:01.558
  I0513 19:34:01.558663 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename aggregator @ 05/13/24 19:34:01.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:34:01.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:34:01.777
  I0513 19:34:01.781407 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Registering the sample API server. @ 05/13/24 19:34:01.782
  I0513 19:34:03.063299 21 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0513 19:34:03.096097 21 deployment.go:222] new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  I0513 19:34:05.176008 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 19:34:07.189667 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 19:34:09.180543 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 19:34:11.185161 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 19:34:13.183859 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 19:34:15.183315 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 19:34:17.183548 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 19:34:19.191358 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 19:34:21.181829 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 19:34:23.182061 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 19:34:25.181752 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 19:34:27.181803 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 19:34:29.182883 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 19:34:31.181209 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 34, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 19:34:33.333279 21 aggregator.go:749] Waited 123.408192ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 05/13/24 19:34:33.406
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 05/13/24 19:34:33.411
  STEP: List APIServices @ 05/13/24 19:34:33.423
  I0513 19:34:33.436064 21 aggregator.go:550] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 05/13/24 19:34:33.436
  I0513 19:34:33.454749 21 aggregator.go:575] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 05/13/24 19:34:33.454
  I0513 19:34:33.468610 21 aggregator.go:601] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.May, 13, 19, 34, 33, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 05/13/24 19:34:33.468
  I0513 19:34:33.475803 21 aggregator.go:619] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-05-13 19:34:33 +0000 UTC Passed all checks passed}
  I0513 19:34:33.475864 21 aggregator.go:615] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0513 19:34:33.475887 21 aggregator.go:625] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 05/13/24 19:34:33.475
  I0513 19:34:33.495201 21 aggregator.go:641] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-658242951" @ 05/13/24 19:34:33.495
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 05/13/24 19:34:33.524
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 05/13/24 19:34:33.541
  STEP: Patch APIService Status @ 05/13/24 19:34:33.547
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 05/13/24 19:34:33.563
  I0513 19:34:33.571326 21 aggregator.go:719] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-05-13 19:34:33 +0000 UTC Passed all checks passed}
  I0513 19:34:33.572231 21 aggregator.go:719] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0513 19:34:33.572883 21 aggregator.go:715] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0513 19:34:33.573317 21 aggregator.go:725] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 05/13/24 19:34:33.573
  STEP: Confirm that the generated APIService has been deleted @ 05/13/24 19:34:33.593
  I0513 19:34:33.593285 21 aggregator.go:786] Requesting list of APIServices to confirm quantity
  I0513 19:34:33.600212 21 aggregator.go:796] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0513 19:34:33.600502 21 aggregator.go:738] APIService v1alpha1.wardle.example.com has been deleted.
  I0513 19:34:34.530414 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-3451" for this suite. @ 05/13/24 19:34:34.54
• [32.992 seconds]
------------------------------
SSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 05/13/24 19:34:34.551
  I0513 19:34:34.551258 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename endpointslice @ 05/13/24 19:34:34.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:34:34.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:34:34.586
  STEP: referencing a single matching pod @ 05/13/24 19:34:40.766
  STEP: referencing matching pods with named port @ 05/13/24 19:34:40.772
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 05/13/24 19:34:40.779
  STEP: recreating EndpointSlices after they've been deleted @ 05/13/24 19:34:40.786
  I0513 19:34:40.820318 21 endpointslice.go:938] EndpointSlice for Service endpointslice-5547/example-named-port not found
  I0513 19:34:42.821987 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5547" for this suite. @ 05/13/24 19:34:42.829
• [8.287 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:841
  STEP: Creating a kubernetes client @ 05/13/24 19:34:42.841
  I0513 19:34:42.841065 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename webhook @ 05/13/24 19:34:42.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:34:42.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:34:42.873
  STEP: Setting up server cert @ 05/13/24 19:34:42.91
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 19:34:43.896
  STEP: Deploying the webhook pod @ 05/13/24 19:34:43.909
  STEP: Wait for the deployment to be ready @ 05/13/24 19:34:43.952
  I0513 19:34:43.968165 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0513 19:34:45.986628 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 19, 34, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 34, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 34, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 34, 43, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 05/13/24 19:34:48.45
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 19:34:48.478
  I0513 19:34:49.479402 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 05/13/24 19:34:49.757
  I0513 19:34:49.872481 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9734" for this suite. @ 05/13/24 19:34:49.884
  STEP: Destroying namespace "webhook-markers-145" for this suite. @ 05/13/24 19:34:49.91
• [7.735 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 05/13/24 19:34:50.577
  I0513 19:34:50.577331 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:34:50.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:34:50.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:34:50.637
  STEP: Creating a pod to test downward API volume plugin @ 05/13/24 19:34:50.641
  STEP: Saw pod success @ 05/13/24 19:34:54.812
  I0513 19:34:54.819953 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod downwardapi-volume-9ff32dc6-fa82-442d-b7b6-d3784ccc92f9 container client-container: <nil>
  STEP: delete the pod @ 05/13/24 19:34:54.839
  I0513 19:34:54.877588 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9823" for this suite. @ 05/13/24 19:34:54.894
• [4.324 seconds]
------------------------------
SS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 05/13/24 19:34:54.901
  I0513 19:34:54.901829 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename sysctl @ 05/13/24 19:34:54.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:34:54.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:34:54.932
  STEP: Creating a pod with one valid and two invalid sysctls @ 05/13/24 19:34:54.935
  I0513 19:34:54.940597 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-5267" for this suite. @ 05/13/24 19:34:54.948
• [0.066 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 05/13/24 19:34:54.968
  I0513 19:34:54.968652 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename gc @ 05/13/24 19:34:54.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:34:55.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:34:55.011
  STEP: create the rc @ 05/13/24 19:34:55.014
  W0513 19:34:55.028637      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 05/13/24 19:35:00.037
  STEP: wait for all pods to be garbage collected @ 05/13/24 19:35:00.058
  STEP: Gathering metrics @ 05/13/24 19:35:05.066
  I0513 19:35:05.190618 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0513 19:35:05.191265 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7731" for this suite. @ 05/13/24 19:35:05.198
• [10.243 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 05/13/24 19:35:05.212
  I0513 19:35:05.212566 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename cronjob @ 05/13/24 19:35:05.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:35:05.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:35:05.264
  STEP: Creating a cronjob @ 05/13/24 19:35:05.268
  STEP: Ensuring more than one job is running at a time @ 05/13/24 19:35:05.285
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 05/13/24 19:37:01.289
  STEP: Removing cronjob @ 05/13/24 19:37:01.293
  I0513 19:37:01.305162 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5213" for this suite. @ 05/13/24 19:37:01.31
• [116.107 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 05/13/24 19:37:01.319
  I0513 19:37:01.319864 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename ingress @ 05/13/24 19:37:01.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:37:01.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:37:01.501
  STEP: getting /apis @ 05/13/24 19:37:01.505
  STEP: getting /apis/networking.k8s.io @ 05/13/24 19:37:01.511
  STEP: getting /apis/networking.k8s.iov1 @ 05/13/24 19:37:01.512
  STEP: creating @ 05/13/24 19:37:01.513
  STEP: getting @ 05/13/24 19:37:01.967
  STEP: listing @ 05/13/24 19:37:01.974
  STEP: watching @ 05/13/24 19:37:01.979
  I0513 19:37:01.979829 21 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 05/13/24 19:37:01.983
  STEP: cluster-wide watching @ 05/13/24 19:37:01.995
  I0513 19:37:01.995526 21 ingress.go:198] starting watch
  STEP: patching @ 05/13/24 19:37:01.997
  STEP: updating @ 05/13/24 19:37:02.415
  I0513 19:37:02.471596 21 ingress.go:221] waiting for watch events with expected annotations
  I0513 19:37:02.471879 21 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 05/13/24 19:37:02.472
  STEP: updating /status @ 05/13/24 19:37:02.496
  STEP: get /status @ 05/13/24 19:37:02.52
  STEP: deleting @ 05/13/24 19:37:02.526
  STEP: deleting a collection @ 05/13/24 19:37:02.549
  I0513 19:37:02.570427 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-4206" for this suite. @ 05/13/24 19:37:02.575
• [1.270 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 05/13/24 19:37:02.59
  I0513 19:37:02.590337 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:37:02.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:37:02.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:37:02.617
  STEP: Creating projection with secret that has name projected-secret-test-4cd94265-a95f-46f0-bc9f-a6d0ab1a167a @ 05/13/24 19:37:02.62
  STEP: Creating a pod to test consume secrets @ 05/13/24 19:37:02.626
  STEP: Saw pod success @ 05/13/24 19:37:06.66
  I0513 19:37:06.667550 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-projected-secrets-5949e0a0-4bc3-459f-8f24-c26ec358efef container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/13/24 19:37:06.705
  I0513 19:37:06.734934 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9204" for this suite. @ 05/13/24 19:37:06.741
• [4.160 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 05/13/24 19:37:06.751
  I0513 19:37:06.751310 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename pods @ 05/13/24 19:37:06.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:37:06.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:37:06.78
  STEP: Create set of pods @ 05/13/24 19:37:06.783
  I0513 19:37:06.796327 21 pods.go:871] created test-pod-1
  I0513 19:37:06.806739 21 pods.go:871] created test-pod-2
  I0513 19:37:06.816121 21 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 05/13/24 19:37:06.816
  STEP: waiting for all pods to be deleted @ 05/13/24 19:37:10.913
  I0513 19:37:10.921672 21 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0513 19:37:12.174846 21 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0513 19:37:12.917858 21 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0513 19:37:13.917251 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8843" for this suite. @ 05/13/24 19:37:13.922
• [7.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 05/13/24 19:37:13.939
  I0513 19:37:13.939103 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename init-container @ 05/13/24 19:37:13.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:37:13.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:37:13.978
  STEP: creating the pod @ 05/13/24 19:37:13.981
  I0513 19:37:13.982025 21 init_container.go:499] PodSpec: initContainers in spec.initContainers
  I0513 19:37:18.482732 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8389" for this suite. @ 05/13/24 19:37:18.493
• [4.567 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:668
  STEP: Creating a kubernetes client @ 05/13/24 19:37:18.507
  I0513 19:37:18.507538 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename job @ 05/13/24 19:37:18.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:37:18.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:37:18.556
  STEP: Creating a job @ 05/13/24 19:37:18.563
  STEP: Ensuring active pods == parallelism @ 05/13/24 19:37:18.576
  STEP: delete a job @ 05/13/24 19:37:22.583
  STEP: deleting Job.batch foo in namespace job-9375, will wait for the garbage collector to delete the pods @ 05/13/24 19:37:22.583
  I0513 19:37:22.997372 21 resources.go:139] Deleting Job.batch foo took: 360.123269ms
  I0513 19:37:23.097547 21 resources.go:163] Terminating Job.batch foo pods took: 100.172749ms
  STEP: Ensuring job was deleted @ 05/13/24 19:37:24.898
  I0513 19:37:24.907413 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9375" for this suite. @ 05/13/24 19:37:24.913
• [6.422 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 05/13/24 19:37:24.93
  I0513 19:37:24.930711 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:37:24.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:37:24.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:37:24.974
  STEP: Creating the pod @ 05/13/24 19:37:24.98
  I0513 19:37:27.571540 21 pod_client.go:141] Successfully updated pod "annotationupdate3b8697a5-5506-41b5-ba59-99c495c98432"
  I0513 19:37:30.031355 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3842" for this suite. @ 05/13/24 19:37:30.037
• [5.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 05/13/24 19:37:30.047
  I0513 19:37:30.047750 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename webhook @ 05/13/24 19:37:30.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:37:30.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:37:30.077
  STEP: Setting up server cert @ 05/13/24 19:37:30.127
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 19:37:30.426
  STEP: Deploying the webhook pod @ 05/13/24 19:37:31.271
  STEP: Wait for the deployment to be ready @ 05/13/24 19:37:31.299
  I0513 19:37:31.313660 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  I0513 19:37:33.327210 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 19, 37, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 37, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 37, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 37, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 05/13/24 19:37:35.514
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 19:37:35.541
  I0513 19:37:36.542555 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 05/13/24 19:37:37.252
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/13/24 19:37:37.252
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 05/13/24 19:37:37.541
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 05/13/24 19:37:38.566
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/13/24 19:37:38.566
  STEP: Having no error when timeout is longer than webhook latency @ 05/13/24 19:37:39.602
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/13/24 19:37:39.603
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 05/13/24 19:37:45.489
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/13/24 19:37:45.489
  I0513 19:37:51.103018 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-303" for this suite. @ 05/13/24 19:37:51.123
  STEP: Destroying namespace "webhook-markers-1701" for this suite. @ 05/13/24 19:37:51.147
• [21.123 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:697
  STEP: Creating a kubernetes client @ 05/13/24 19:37:51.173
  I0513 19:37:51.173647 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename job @ 05/13/24 19:37:51.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:37:51.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:37:51.226
  STEP: Creating a job @ 05/13/24 19:37:51.23
  STEP: Ensuring active pods == parallelism @ 05/13/24 19:37:51.241
  STEP: Orphaning one of the Job's Pods @ 05/13/24 19:37:55.246
  I0513 19:37:55.771304 21 pod_client.go:141] Successfully updated pod "adopt-release-6q2nh"
  STEP: Checking that the Job readopts the Pod @ 05/13/24 19:37:55.771
  STEP: Removing the labels from the Job's Pod @ 05/13/24 19:37:57.781
  I0513 19:37:58.303585 21 pod_client.go:141] Successfully updated pod "adopt-release-6q2nh"
  STEP: Checking that the Job releases the Pod @ 05/13/24 19:37:58.303
  I0513 19:38:00.367940 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3939" for this suite. @ 05/13/24 19:38:00.373
• [9.234 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 05/13/24 19:38:00.407
  I0513 19:38:00.407026 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename dns @ 05/13/24 19:38:00.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:38:00.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:38:00.441
  STEP: Creating a test headless service @ 05/13/24 19:38:00.446
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5539.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-5539.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5539.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-5539.svc.cluster.local;sleep 1; done
   @ 05/13/24 19:38:00.459
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5539.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-5539.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5539.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-5539.svc.cluster.local;sleep 1; done
   @ 05/13/24 19:38:00.459
  STEP: creating a pod to probe DNS @ 05/13/24 19:38:00.459
  STEP: submitting the pod to kubernetes @ 05/13/24 19:38:00.459
  STEP: retrieving the pod @ 05/13/24 19:38:04.505
  STEP: looking for the results for each expected name from probers @ 05/13/24 19:38:04.509
  I0513 19:38:04.519329 21 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:04.523384 21 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:04.529523 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:04.537594 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:04.542595 21 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:04.547268 21 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:04.552607 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:04.563006 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:04.563248 21 dns_common.go:489] Lookups using dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5539.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5539.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local jessie_udp@dns-test-service-2.dns-5539.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5539.svc.cluster.local]

  I0513 19:38:04.571889 21 dns_common.go:495] Pod client logs for webserver: 
  I0513 19:38:04.581765 21 dns_common.go:495] Pod client logs for querier: 
  I0513 19:38:04.593041 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0513 19:38:09.515316 21 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:09.520971 21 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:09.525611 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:09.539024 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:09.543643 21 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:09.547778 21 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:09.555093 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:09.559962 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:09.560439 21 dns_common.go:489] Lookups using dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5539.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5539.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local jessie_udp@dns-test-service-2.dns-5539.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5539.svc.cluster.local]

  I0513 19:38:09.568893 21 dns_common.go:495] Pod client logs for webserver: 
  I0513 19:38:09.583183 21 dns_common.go:495] Pod client logs for querier: 
  I0513 19:38:09.591765 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0513 19:38:14.517505 21 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:14.522028 21 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:14.527011 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:14.531168 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:14.537858 21 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:14.545309 21 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:14.550231 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:14.556343 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:14.556401 21 dns_common.go:489] Lookups using dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5539.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5539.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local jessie_udp@dns-test-service-2.dns-5539.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5539.svc.cluster.local]

  I0513 19:38:14.566665 21 dns_common.go:495] Pod client logs for webserver: 
  I0513 19:38:14.575395 21 dns_common.go:495] Pod client logs for querier: 
  I0513 19:38:14.584438 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0513 19:38:19.515125 21 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:19.526477 21 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:19.533857 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:19.539191 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:19.543521 21 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:19.548012 21 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:19.553888 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:19.559824 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:19.559883 21 dns_common.go:489] Lookups using dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5539.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5539.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local jessie_udp@dns-test-service-2.dns-5539.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5539.svc.cluster.local]

  I0513 19:38:19.569903 21 dns_common.go:495] Pod client logs for webserver: 
  I0513 19:38:19.580941 21 dns_common.go:495] Pod client logs for querier: 
  I0513 19:38:19.593855 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0513 19:38:24.516504 21 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:24.521911 21 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:24.527907 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:24.531734 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:24.535795 21 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:24.540347 21 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:24.545454 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:24.550866 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:24.550923 21 dns_common.go:489] Lookups using dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5539.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5539.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local jessie_udp@dns-test-service-2.dns-5539.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5539.svc.cluster.local]

  I0513 19:38:24.559135 21 dns_common.go:495] Pod client logs for webserver: 
  I0513 19:38:24.567886 21 dns_common.go:495] Pod client logs for querier: 
  I0513 19:38:24.577633 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0513 19:38:29.514905 21 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:29.521907 21 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:29.525800 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:29.529286 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:29.533905 21 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:29.537665 21 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:29.542921 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:29.547606 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-5539.svc.cluster.local from pod dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16: the server could not find the requested resource (get pods dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16)
  I0513 19:38:29.547663 21 dns_common.go:489] Lookups using dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5539.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5539.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5539.svc.cluster.local jessie_udp@dns-test-service-2.dns-5539.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5539.svc.cluster.local]

  I0513 19:38:29.554908 21 dns_common.go:495] Pod client logs for webserver: 
  I0513 19:38:29.564714 21 dns_common.go:495] Pod client logs for querier: 
  I0513 19:38:29.573294 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0513 19:38:35.295460 21 dns_common.go:527] DNS probes using dns-5539/dns-test-457441ff-04b9-46ef-a5fd-c0a7dd48cd16 succeeded

  STEP: deleting the pod @ 05/13/24 19:38:35.295
  STEP: deleting the test headless service @ 05/13/24 19:38:35.351
  I0513 19:38:35.385415 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5539" for this suite. @ 05/13/24 19:38:35.406
• [35.009 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 05/13/24 19:38:35.417
  I0513 19:38:35.417085 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:38:35.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:38:35.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:38:35.443
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-6fb32387-44d8-4bb1-a760-f6b79fc6c808 @ 05/13/24 19:38:35.454
  STEP: Creating the pod @ 05/13/24 19:38:35.46
  STEP: Updating configmap projected-configmap-test-upd-6fb32387-44d8-4bb1-a760-f6b79fc6c808 @ 05/13/24 19:38:39.511
  STEP: waiting to observe update in volume @ 05/13/24 19:38:39.519
  I0513 19:38:43.549572 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-696" for this suite. @ 05/13/24 19:38:43.556
• [8.148 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 05/13/24 19:38:43.566
  I0513 19:38:43.566891 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename configmap @ 05/13/24 19:38:43.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:38:43.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:38:43.604
  STEP: Creating configMap with name configmap-test-volume-map-8fa82d14-4369-4151-a2c7-aee78484f7b8 @ 05/13/24 19:38:43.607
  STEP: Creating a pod to test consume configMaps @ 05/13/24 19:38:43.614
  STEP: Saw pod success @ 05/13/24 19:38:47.861
  I0513 19:38:48.330387 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-configmaps-cfbce992-f97d-4c17-bef6-04d3ea22e91a container agnhost-container: <nil>
  STEP: delete the pod @ 05/13/24 19:38:48.347
  I0513 19:38:48.874068 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8105" for this suite. @ 05/13/24 19:38:48.879
• [5.322 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 05/13/24 19:38:48.901
  I0513 19:38:48.901165 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:38:48.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:38:48.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:38:48.937
  STEP: Creating configMap with name projected-configmap-test-volume-map-20b606e5-dfef-494f-8a97-13e6e0f1ee33 @ 05/13/24 19:38:48.943
  STEP: Creating a pod to test consume configMaps @ 05/13/24 19:38:48.953
  STEP: Saw pod success @ 05/13/24 19:38:52.985
  I0513 19:38:52.988077 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-projected-configmaps-f3d0870f-c994-4bcd-b12a-127b1fdae174 container agnhost-container: <nil>
  STEP: delete the pod @ 05/13/24 19:38:52.999
  I0513 19:38:53.514100 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-707" for this suite. @ 05/13/24 19:38:53.521
• [4.631 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 05/13/24 19:38:53.533
  I0513 19:38:53.533148 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename resourcequota @ 05/13/24 19:38:53.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:38:53.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:38:53.561
  STEP: Counting existing ResourceQuota @ 05/13/24 19:38:53.564
  STEP: Creating a ResourceQuota @ 05/13/24 19:38:59.097
  STEP: Ensuring resource quota status is calculated @ 05/13/24 19:38:59.107
  STEP: Creating a Pod that fits quota @ 05/13/24 19:39:01.113
  STEP: Ensuring ResourceQuota status captures the pod usage @ 05/13/24 19:39:01.639
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 05/13/24 19:39:03.643
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 05/13/24 19:39:03.646
  STEP: Ensuring a pod cannot update its resource requirements @ 05/13/24 19:39:03.649
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 05/13/24 19:39:03.655
  STEP: Deleting the pod @ 05/13/24 19:39:05.659
  STEP: Ensuring resource quota status released the pod usage @ 05/13/24 19:39:05.69
  I0513 19:39:07.884394 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2181" for this suite. @ 05/13/24 19:39:07.89
• [14.367 seconds]
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 05/13/24 19:39:07.9
  I0513 19:39:07.900708 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename runtimeclass @ 05/13/24 19:39:07.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:39:07.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:39:07.965
  I0513 19:39:07.978790 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7238" for this suite. @ 05/13/24 19:39:07.983
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 05/13/24 19:39:07.996
  I0513 19:39:07.996768 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename lease-test @ 05/13/24 19:39:07.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:39:08.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:39:08.031
  I0513 19:39:08.149012 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-9919" for this suite. @ 05/13/24 19:39:08.155
• [0.169 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 05/13/24 19:39:08.167
  I0513 19:39:08.167521 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename svcaccounts @ 05/13/24 19:39:08.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:39:08.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:39:08.191
  I0513 19:39:08.210267 21 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-3959"
  I0513 19:39:08.217801 21 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-3959"
  STEP: waiting for a new root ca configmap created @ 05/13/24 19:39:08.718
  I0513 19:39:08.721986 21 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-3959"
  I0513 19:39:08.729937 21 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-3959"
  STEP: waiting for the root ca configmap reconciled @ 05/13/24 19:39:09.23
  I0513 19:39:09.234487 21 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-3959"
  I0513 19:39:09.234599 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3959" for this suite. @ 05/13/24 19:39:09.239
• [1.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 05/13/24 19:39:09.258
  I0513 19:39:09.258154 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename configmap @ 05/13/24 19:39:09.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:39:09.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:39:09.295
  STEP: Creating configMap with name configmap-test-volume-8b45ace5-3b30-4935-9644-4b5460f41b0c @ 05/13/24 19:39:09.298
  STEP: Creating a pod to test consume configMaps @ 05/13/24 19:39:09.322
  STEP: Saw pod success @ 05/13/24 19:39:15.759
  I0513 19:39:15.762715 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-configmaps-d3ef3dd9-393c-4d3f-b672-9a37fd8c61b5 container agnhost-container: <nil>
  STEP: delete the pod @ 05/13/24 19:39:15.77
  I0513 19:39:16.237539 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6540" for this suite. @ 05/13/24 19:39:16.244
• [7.000 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:469
  STEP: Creating a kubernetes client @ 05/13/24 19:39:16.258
  I0513 19:39:16.258202 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename sched-pred @ 05/13/24 19:39:16.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:39:16.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:39:16.484
  I0513 19:39:16.490873 21 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0513 19:39:16.504429 21 util.go:400] Waiting for terminating namespaces to be deleted...
  I0513 19:39:16.508025 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-13-166.us-east-2.compute.internal before test
  I0513 19:39:16.521232 21 predicates.go:887] cloud-controller-manager-ip-172-31-13-166.us-east-2.compute.internal from kube-system started at 2024-05-13 16:11:28 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.521471 21 predicates.go:889] 	Container cloud-controller-manager ready: true, restart count 0
  I0513 19:39:16.521884 21 predicates.go:887] etcd-ip-172-31-13-166.us-east-2.compute.internal from kube-system started at 2024-05-13 16:10:27 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.522242 21 predicates.go:889] 	Container etcd ready: true, restart count 0
  I0513 19:39:16.522659 21 predicates.go:887] kube-apiserver-ip-172-31-13-166.us-east-2.compute.internal from kube-system started at 2024-05-13 16:11:19 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.522968 21 predicates.go:889] 	Container kube-apiserver ready: true, restart count 0
  I0513 19:39:16.523226 21 predicates.go:887] kube-controller-manager-ip-172-31-13-166.us-east-2.compute.internal from kube-system started at 2024-05-13 16:11:28 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.523244 21 predicates.go:889] 	Container kube-controller-manager ready: true, restart count 0
  I0513 19:39:16.523262 21 predicates.go:887] kube-proxy-ip-172-31-13-166.us-east-2.compute.internal from kube-system started at 2024-05-13 16:11:32 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.523274 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0513 19:39:16.523288 21 predicates.go:887] kube-scheduler-ip-172-31-13-166.us-east-2.compute.internal from kube-system started at 2024-05-13 16:11:28 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.523437 21 predicates.go:889] 	Container kube-scheduler ready: true, restart count 0
  I0513 19:39:16.523458 21 predicates.go:887] rke2-canal-lxqsl from kube-system started at 2024-05-13 16:11:50 +0000 UTC (2 container statuses recorded)
  I0513 19:39:16.523495 21 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0513 19:39:16.523508 21 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0513 19:39:16.523795 21 predicates.go:887] rke2-coredns-rke2-coredns-64dcf4f58b-jgwvr from kube-system started at 2024-05-13 16:12:12 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.523917 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0513 19:39:16.523938 21 predicates.go:887] rke2-ingress-nginx-controller-m6v56 from kube-system started at 2024-05-13 16:12:12 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.524267 21 predicates.go:889] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0513 19:39:16.524304 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-8692a35f669b4296-w77rh from sonobuoy started at 2024-05-13 18:54:27 +0000 UTC (2 container statuses recorded)
  I0513 19:39:16.524578 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 19:39:16.524596 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0513 19:39:16.524907 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-14-71.us-east-2.compute.internal before test
  I0513 19:39:16.537619 21 predicates.go:887] cloud-controller-manager-ip-172-31-14-71.us-east-2.compute.internal from kube-system started at 2024-05-13 16:13:18 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.537664 21 predicates.go:889] 	Container cloud-controller-manager ready: true, restart count 0
  I0513 19:39:16.537683 21 predicates.go:887] etcd-ip-172-31-14-71.us-east-2.compute.internal from kube-system started at 2024-05-13 16:11:56 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.537696 21 predicates.go:889] 	Container etcd ready: true, restart count 0
  I0513 19:39:16.537709 21 predicates.go:887] kube-apiserver-ip-172-31-14-71.us-east-2.compute.internal from kube-system started at 2024-05-13 16:13:04 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.537721 21 predicates.go:889] 	Container kube-apiserver ready: true, restart count 0
  I0513 19:39:16.537733 21 predicates.go:887] kube-controller-manager-ip-172-31-14-71.us-east-2.compute.internal from kube-system started at 2024-05-13 16:13:18 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.537744 21 predicates.go:889] 	Container kube-controller-manager ready: true, restart count 0
  I0513 19:39:16.537913 21 predicates.go:887] kube-proxy-ip-172-31-14-71.us-east-2.compute.internal from kube-system started at 2024-05-13 16:13:30 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.537929 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0513 19:39:16.538021 21 predicates.go:887] kube-scheduler-ip-172-31-14-71.us-east-2.compute.internal from kube-system started at 2024-05-13 16:13:18 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.538092 21 predicates.go:889] 	Container kube-scheduler ready: true, restart count 0
  I0513 19:39:16.538111 21 predicates.go:887] rke2-canal-6kl65 from kube-system started at 2024-05-13 16:13:36 +0000 UTC (2 container statuses recorded)
  I0513 19:39:16.538122 21 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0513 19:39:16.538201 21 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0513 19:39:16.538284 21 predicates.go:887] rke2-ingress-nginx-controller-qpq27 from kube-system started at 2024-05-13 16:14:46 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.538299 21 predicates.go:889] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0513 19:39:16.538406 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-8692a35f669b4296-9x47v from sonobuoy started at 2024-05-13 18:54:27 +0000 UTC (2 container statuses recorded)
  I0513 19:39:16.538422 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 19:39:16.538434 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0513 19:39:16.538446 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-3-239.us-east-2.compute.internal before test
  I0513 19:39:16.552733 21 predicates.go:887] cloud-controller-manager-ip-172-31-3-239.us-east-2.compute.internal from kube-system started at 2024-05-13 16:06:33 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.552781 21 predicates.go:889] 	Container cloud-controller-manager ready: true, restart count 0
  I0513 19:39:16.552801 21 predicates.go:887] etcd-ip-172-31-3-239.us-east-2.compute.internal from kube-system started at 2024-05-13 16:06:10 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.552813 21 predicates.go:889] 	Container etcd ready: true, restart count 0
  I0513 19:39:16.552828 21 predicates.go:887] helm-install-rke2-canal-58m47 from kube-system started at 2024-05-13 16:06:56 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.552839 21 predicates.go:889] 	Container helm ready: false, restart count 0
  I0513 19:39:16.552852 21 predicates.go:887] helm-install-rke2-coredns-9vtfx from kube-system started at 2024-05-13 16:06:56 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.552862 21 predicates.go:889] 	Container helm ready: false, restart count 0
  I0513 19:39:16.552904 21 predicates.go:887] helm-install-rke2-ingress-nginx-kdjxl from kube-system started at 2024-05-13 16:08:24 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.552916 21 predicates.go:889] 	Container helm ready: false, restart count 0
  I0513 19:39:16.552931 21 predicates.go:887] helm-install-rke2-metrics-server-lkmfs from kube-system started at 2024-05-13 16:08:24 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.552941 21 predicates.go:889] 	Container helm ready: false, restart count 0
  I0513 19:39:16.552954 21 predicates.go:887] helm-install-rke2-snapshot-controller-6dsg9 from kube-system started at 2024-05-13 16:08:24 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.552964 21 predicates.go:889] 	Container helm ready: false, restart count 1
  I0513 19:39:16.552976 21 predicates.go:887] helm-install-rke2-snapshot-controller-crd-4z46x from kube-system started at 2024-05-13 16:08:24 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.552987 21 predicates.go:889] 	Container helm ready: false, restart count 0
  I0513 19:39:16.553000 21 predicates.go:887] helm-install-rke2-snapshot-validation-webhook-4m66n from kube-system started at 2024-05-13 16:08:24 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.553011 21 predicates.go:889] 	Container helm ready: false, restart count 0
  I0513 19:39:16.553024 21 predicates.go:887] kube-apiserver-ip-172-31-3-239.us-east-2.compute.internal from kube-system started at 2024-05-13 16:06:25 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.553035 21 predicates.go:889] 	Container kube-apiserver ready: true, restart count 0
  I0513 19:39:16.553048 21 predicates.go:887] kube-controller-manager-ip-172-31-3-239.us-east-2.compute.internal from kube-system started at 2024-05-13 16:06:31 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.553060 21 predicates.go:889] 	Container kube-controller-manager ready: true, restart count 0
  I0513 19:39:16.553072 21 predicates.go:887] kube-proxy-ip-172-31-3-239.us-east-2.compute.internal from kube-system started at 2024-05-13 16:06:55 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.553083 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0513 19:39:16.553096 21 predicates.go:887] kube-scheduler-ip-172-31-3-239.us-east-2.compute.internal from kube-system started at 2024-05-13 16:06:31 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.553107 21 predicates.go:889] 	Container kube-scheduler ready: true, restart count 0
  I0513 19:39:16.553121 21 predicates.go:887] rke2-canal-vm47w from kube-system started at 2024-05-13 16:07:12 +0000 UTC (2 container statuses recorded)
  I0513 19:39:16.553135 21 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0513 19:39:16.553146 21 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0513 19:39:16.553160 21 predicates.go:887] rke2-coredns-rke2-coredns-64dcf4f58b-h2p8t from kube-system started at 2024-05-13 16:08:24 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.553171 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0513 19:39:16.553184 21 predicates.go:887] rke2-coredns-rke2-coredns-autoscaler-5749cd7b8b-qclvf from kube-system started at 2024-05-13 16:08:24 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.553195 21 predicates.go:889] 	Container autoscaler ready: true, restart count 0
  I0513 19:39:16.553208 21 predicates.go:887] rke2-ingress-nginx-controller-7f4wf from kube-system started at 2024-05-13 16:09:15 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.553219 21 predicates.go:889] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0513 19:39:16.553232 21 predicates.go:887] rke2-metrics-server-868fc8795f-88ljh from kube-system started at 2024-05-13 16:08:43 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.553246 21 predicates.go:889] 	Container metrics-server ready: true, restart count 0
  I0513 19:39:16.553260 21 predicates.go:887] rke2-snapshot-controller-7dcf5d5b46-twc4f from kube-system started at 2024-05-13 16:08:52 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.553271 21 predicates.go:889] 	Container rke2-snapshot-controller ready: true, restart count 0
  I0513 19:39:16.553284 21 predicates.go:887] rke2-snapshot-validation-webhook-bf7bbd6fc-jhdww from kube-system started at 2024-05-13 16:08:43 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.553295 21 predicates.go:889] 	Container rke2-snapshot-validation-webhook ready: true, restart count 0
  I0513 19:39:16.553308 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-8692a35f669b4296-22p7h from sonobuoy started at 2024-05-13 18:54:27 +0000 UTC (2 container statuses recorded)
  I0513 19:39:16.553319 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 19:39:16.553330 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0513 19:39:16.553342 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-7-107.us-east-2.compute.internal before test
  I0513 19:39:16.566386 21 predicates.go:887] kube-proxy-ip-172-31-7-107.us-east-2.compute.internal from kube-system started at 2024-05-13 16:16:16 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.566433 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0513 19:39:16.566449 21 predicates.go:887] rke2-canal-hhrx8 from kube-system started at 2024-05-13 16:16:16 +0000 UTC (2 container statuses recorded)
  I0513 19:39:16.566462 21 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0513 19:39:16.566475 21 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0513 19:39:16.566488 21 predicates.go:887] rke2-ingress-nginx-controller-qw67n from kube-system started at 2024-05-13 16:17:40 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.566819 21 predicates.go:889] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0513 19:39:16.566841 21 predicates.go:887] sonobuoy from sonobuoy started at 2024-05-13 18:54:25 +0000 UTC (1 container statuses recorded)
  I0513 19:39:16.567154 21 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0513 19:39:16.567179 21 predicates.go:887] sonobuoy-e2e-job-a300b5feb2b248aa from sonobuoy started at 2024-05-13 18:54:27 +0000 UTC (2 container statuses recorded)
  I0513 19:39:16.567437 21 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0513 19:39:16.567455 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 19:39:16.567821 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-8692a35f669b4296-rhppm from sonobuoy started at 2024-05-13 18:54:27 +0000 UTC (2 container statuses recorded)
  I0513 19:39:16.568094 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 19:39:16.568559 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/13/24 19:39:16.568
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/13/24 19:39:18.881
  STEP: Trying to apply a random label on the found node. @ 05/13/24 19:39:18.927
  STEP: verifying the node has the label kubernetes.io/e2e-38fa4ac9-5041-421e-8f8c-750278f84426 42 @ 05/13/24 19:39:18.981
  STEP: Trying to relaunch the pod, now with labels. @ 05/13/24 19:39:18.996
  STEP: removing the label kubernetes.io/e2e-38fa4ac9-5041-421e-8f8c-750278f84426 off the node ip-172-31-7-107.us-east-2.compute.internal @ 05/13/24 19:39:21.942
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-38fa4ac9-5041-421e-8f8c-750278f84426 @ 05/13/24 19:39:21.967
  I0513 19:39:21.976403 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8102" for this suite. @ 05/13/24 19:39:21.991
• [5.742 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 05/13/24 19:39:22.004
  I0513 19:39:22.004698 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename pods @ 05/13/24 19:39:22.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:39:22.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:39:22.034
  STEP: creating the pod @ 05/13/24 19:39:22.04
  STEP: submitting the pod to kubernetes @ 05/13/24 19:39:22.04
  W0513 19:39:22.047960      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 05/13/24 19:39:26.313
  STEP: updating the pod @ 05/13/24 19:39:26.317
  I0513 19:39:26.908649 21 pod_client.go:141] Successfully updated pod "pod-update-activedeadlineseconds-16eb5aa5-0846-4697-9398-46852fc9107f"
  I0513 19:39:28.973215 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7884" for this suite. @ 05/13/24 19:39:28.981
• [7.586 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 05/13/24 19:39:29.591
  I0513 19:39:29.591775 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename var-expansion @ 05/13/24 19:39:29.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:39:29.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:39:29.996
  I0513 19:39:32.848944 21 delete.go:62] Deleting pod "var-expansion-0376dd3f-234e-48c5-b432-d7d146fa4dd3" in namespace "var-expansion-6083"
  I0513 19:39:32.870072 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-0376dd3f-234e-48c5-b432-d7d146fa4dd3" to be fully deleted
  I0513 19:39:37.715683 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6083" for this suite. @ 05/13/24 19:39:37.723
• [8.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 05/13/24 19:39:37.731
  I0513 19:39:37.731545 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:39:37.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:39:37.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:39:37.758
  STEP: Creating a pod to test downward API volume plugin @ 05/13/24 19:39:37.761
  STEP: Saw pod success @ 05/13/24 19:39:41.788
  I0513 19:39:41.792436 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod downwardapi-volume-d0397864-ef37-432f-9c90-2375aec45013 container client-container: <nil>
  STEP: delete the pod @ 05/13/24 19:39:41.799
  I0513 19:39:41.836615 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7099" for this suite. @ 05/13/24 19:39:41.841
• [4.119 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 05/13/24 19:39:41.85
  I0513 19:39:41.850869 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename emptydir @ 05/13/24 19:39:41.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:39:41.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:39:41.877
  STEP: Creating a pod to test emptydir volume type on node default medium @ 05/13/24 19:39:41.881
  STEP: Saw pod success @ 05/13/24 19:39:47.924
  I0513 19:39:47.927860 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-1ae82b86-1c4d-4865-bf42-d92bb45a7a00 container test-container: <nil>
  STEP: delete the pod @ 05/13/24 19:39:47.935
  I0513 19:39:47.978346 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2787" for this suite. @ 05/13/24 19:39:47.984
• [6.153 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 05/13/24 19:39:48.003
  I0513 19:39:48.003992 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename cronjob @ 05/13/24 19:39:48.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:39:48.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:39:48.093
  STEP: Creating a suspended cronjob @ 05/13/24 19:39:48.097
  STEP: Ensuring no jobs are scheduled @ 05/13/24 19:39:48.108
  STEP: Ensuring no job exists by listing jobs explicitly @ 05/13/24 19:44:48.109
  STEP: Removing cronjob @ 05/13/24 19:44:48.113
  I0513 19:44:48.126446 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-492" for this suite. @ 05/13/24 19:44:48.131
• [300.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 05/13/24 19:44:48.146
  I0513 19:44:48.146916 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename chunking @ 05/13/24 19:44:48.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:44:48.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:44:48.193
  STEP: creating a large number of resources @ 05/13/24 19:44:48.236
  STEP: retrieving the first page @ 05/13/24 19:45:05.859
  I0513 19:45:05.910690 21 chunking.go:163] Retrieved 40/40 results with rv 71441 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzE0NDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 05/13/24 19:45:05.91
  I0513 19:45:25.917452 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzE0NDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 19:45:45.919003 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzE0NDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 19:46:05.926532 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzE0NDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 19:46:25.919059 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzE0NDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 19:46:45.917785 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzE0NDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 19:47:05.917638 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzE0NDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 19:47:25.921458 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzE0NDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 19:47:45.919268 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzE0NDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 19:48:05.918923 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzE0NDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 19:48:26.225450 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzE0NDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 19:48:46.171060 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzE0NDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 19:49:05.916219 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzE0NDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 19:49:25.919680 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzE0NDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 19:49:45.917142 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzE0NDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 19:50:06.120373 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzE0NDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 19:50:25.917296 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzE0NDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 19:50:45.919151 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzE0NDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 19:51:05.918691 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzE0NDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 19:51:25.930809 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzE0NDEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 19:51:46.431148 21 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0513 19:51:46.431203 21 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 05/13/24 19:51:46.431
  STEP: retrieving all remaining pages @ 05/13/24 19:51:46.436
  I0513 19:51:46.441397 21 chunking.go:221] Retrieved 40/40 results with rv 72974 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzI5NzQsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0513 19:51:46.446272 21 chunking.go:221] Retrieved 40/40 results with rv 72974 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzI5NzQsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0513 19:51:46.450758 21 chunking.go:221] Retrieved 40/40 results with rv 72974 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzI5NzQsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0513 19:51:46.456825 21 chunking.go:221] Retrieved 40/40 results with rv 72974 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzI5NzQsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0513 19:51:46.462429 21 chunking.go:221] Retrieved 40/40 results with rv 72974 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzI5NzQsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0513 19:51:46.467932 21 chunking.go:221] Retrieved 40/40 results with rv 72974 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzI5NzQsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0513 19:51:46.473550 21 chunking.go:221] Retrieved 40/40 results with rv 72974 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzI5NzQsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0513 19:51:46.478732 21 chunking.go:221] Retrieved 40/40 results with rv 72974 and continue 
  I0513 19:51:46.480060 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-2664" for this suite. @ 05/13/24 19:51:46.485
• [418.365 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 05/13/24 19:51:46.513
  I0513 19:51:46.513131 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename containers @ 05/13/24 19:51:46.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:51:46.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:51:46.544
  STEP: Creating a pod to test override all @ 05/13/24 19:51:46.548
  STEP: Saw pod success @ 05/13/24 19:51:50.572
  I0513 19:51:50.578820 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod client-containers-ce281453-f182-453b-a9d9-d3aa177566ab container agnhost-container: <nil>
  STEP: delete the pod @ 05/13/24 19:51:50.597
  I0513 19:51:50.616820 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3676" for this suite. @ 05/13/24 19:51:50.621
• [4.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 05/13/24 19:51:50.63
  I0513 19:51:50.630174 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename subpath @ 05/13/24 19:51:50.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:51:50.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:51:50.656
  STEP: Setting up data @ 05/13/24 19:51:50.659
  STEP: Creating pod pod-subpath-test-configmap-rctr @ 05/13/24 19:51:50.674
  STEP: Creating a pod to test atomic-volume-subpath @ 05/13/24 19:51:50.674
  STEP: Saw pod success @ 05/13/24 19:52:14.979
  I0513 19:52:14.986064 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-subpath-test-configmap-rctr container test-container-subpath-configmap-rctr: <nil>
  STEP: delete the pod @ 05/13/24 19:52:15.004
  STEP: Deleting pod pod-subpath-test-configmap-rctr @ 05/13/24 19:52:15.065
  I0513 19:52:15.065189 21 delete.go:62] Deleting pod "pod-subpath-test-configmap-rctr" in namespace "subpath-626"
  I0513 19:52:15.068707 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-626" for this suite. @ 05/13/24 19:52:15.073
• [24.451 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 05/13/24 19:52:15.082
  I0513 19:52:15.082032 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename secrets @ 05/13/24 19:52:15.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:52:15.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:52:15.112
  STEP: creating a secret @ 05/13/24 19:52:15.116
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 05/13/24 19:52:15.126
  STEP: patching the secret @ 05/13/24 19:52:15.137
  STEP: deleting the secret using a LabelSelector @ 05/13/24 19:52:15.158
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 05/13/24 19:52:15.191
  I0513 19:52:15.203168 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-24" for this suite. @ 05/13/24 19:52:15.208
• [0.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 05/13/24 19:52:15.243
  I0513 19:52:15.243164 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename daemonsets @ 05/13/24 19:52:15.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:52:15.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:52:15.284
  STEP: Creating simple DaemonSet "daemon-set" @ 05/13/24 19:52:15.329
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/13/24 19:52:15.338
  I0513 19:52:15.348729 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 19:52:15.348810 21 fixtures.go:130] Node ip-172-31-13-166.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 19:52:16.347948 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 19:52:16.348941 21 fixtures.go:130] Node ip-172-31-13-166.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 19:52:17.357906 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0513 19:52:17.358179 21 fixtures.go:130] Node ip-172-31-13-166.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 19:52:18.403406 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0513 19:52:18.403448 21 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Getting /status @ 05/13/24 19:52:18.406
  I0513 19:52:18.413364 21 daemon_set.go:912] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 05/13/24 19:52:18.413
  I0513 19:52:18.437541 21 daemon_set.go:932] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 05/13/24 19:52:18.437
  I0513 19:52:18.443503 21 daemon_set.go:957] Observed &DaemonSet event: ADDED
  I0513 19:52:18.444056 21 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0513 19:52:18.444344 21 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0513 19:52:18.444610 21 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0513 19:52:18.445070 21 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0513 19:52:18.445547 21 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0513 19:52:18.445606 21 daemon_set.go:950] Found daemon set daemon-set in namespace daemonsets-1539 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0513 19:52:18.445628 21 daemon_set.go:961] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 05/13/24 19:52:18.445
  STEP: watching for the daemon set status to be patched @ 05/13/24 19:52:18.469
  I0513 19:52:18.473552 21 daemon_set.go:1001] Observed &DaemonSet event: ADDED
  I0513 19:52:18.474035 21 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0513 19:52:18.474268 21 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0513 19:52:18.474408 21 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0513 19:52:18.474584 21 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0513 19:52:18.474724 21 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0513 19:52:18.474765 21 daemon_set.go:997] Observed daemon set daemon-set in namespace daemonsets-1539 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0513 19:52:18.474952 21 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0513 19:52:18.475018 21 daemon_set.go:994] Found daemon set daemon-set in namespace daemonsets-1539 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0513 19:52:18.475039 21 daemon_set.go:1005] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 05/13/24 19:52:18.484
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1539, will wait for the garbage collector to delete the pods @ 05/13/24 19:52:18.484
  I0513 19:52:18.552042 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 13.365263ms
  I0513 19:52:18.652507 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.463499ms
  I0513 19:52:22.156845 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 19:52:22.156920 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0513 19:52:22.165705 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"73666"},"items":null}

  I0513 19:52:22.169702 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"73666"},"items":null}

  I0513 19:52:22.196374 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1539" for this suite. @ 05/13/24 19:52:22.201
• [6.976 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 05/13/24 19:52:22.219
  I0513 19:52:22.219928 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename crd-webhook @ 05/13/24 19:52:22.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:52:22.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:52:22.257
  STEP: Setting up server cert @ 05/13/24 19:52:22.261
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/13/24 19:52:22.69
  STEP: Deploying the custom resource conversion webhook pod @ 05/13/24 19:52:22.702
  STEP: Wait for the deployment to be ready @ 05/13/24 19:52:22.735
  I0513 19:52:22.772104 21 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/13/24 19:52:25.101
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 19:52:25.121
  I0513 19:52:26.121435 21 util.go:427] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0513 19:52:26.143022 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Creating a v1 custom resource @ 05/13/24 19:52:28.736
  STEP: v2 custom resource should be converted @ 05/13/24 19:52:28.746
  I0513 19:52:29.343986 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-9051" for this suite. @ 05/13/24 19:52:29.353
• [7.158 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1833
  STEP: Creating a kubernetes client @ 05/13/24 19:52:29.378
  I0513 19:52:29.378829 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename kubectl @ 05/13/24 19:52:29.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:52:29.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:52:29.434
  STEP: starting the proxy server @ 05/13/24 19:52:29.441
  I0513 19:52:29.446502 21 util.go:592] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-25 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 05/13/24 19:52:29.557
  I0513 19:52:29.565931 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0513 19:52:29.569970 21 kubectl.go:2223] kubectl proxy stdout: Starting to serve on 127.0.0.1:37883

  I0513 19:52:29.570021 21 kubectl.go:2228] kubectl proxy stderr: W0513 19:52:29.556679     839 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-25" for this suite. @ 05/13/24 19:52:29.571
• [0.201 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 05/13/24 19:52:29.579
  I0513 19:52:29.579245 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename ingressclass @ 05/13/24 19:52:29.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:52:29.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:52:29.629
  STEP: getting /apis @ 05/13/24 19:52:29.634
  STEP: getting /apis/networking.k8s.io @ 05/13/24 19:52:29.639
  STEP: getting /apis/networking.k8s.iov1 @ 05/13/24 19:52:29.641
  STEP: creating @ 05/13/24 19:52:29.642
  STEP: getting @ 05/13/24 19:52:29.675
  STEP: listing @ 05/13/24 19:52:29.679
  STEP: watching @ 05/13/24 19:52:29.683
  I0513 19:52:29.684163 21 ingressclass.go:348] starting watch
  STEP: patching @ 05/13/24 19:52:29.685
  STEP: updating @ 05/13/24 19:52:29.699
  I0513 19:52:29.710660 21 ingressclass.go:364] waiting for watch events with expected annotations
  I0513 19:52:29.710904 21 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 05/13/24 19:52:29.711
  STEP: deleting a collection @ 05/13/24 19:52:29.732
  I0513 19:52:29.757388 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-5393" for this suite. @ 05/13/24 19:52:29.762
• [0.194 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 05/13/24 19:52:29.773
  I0513 19:52:29.773691 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename emptydir @ 05/13/24 19:52:29.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:52:29.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:52:29.802
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 05/13/24 19:52:29.806
  STEP: Saw pod success @ 05/13/24 19:52:34.013
  I0513 19:52:34.017671 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-107bf687-bac2-4b06-a24f-5e82880d7f17 container test-container: <nil>
  STEP: delete the pod @ 05/13/24 19:52:34.029
  I0513 19:52:34.069602 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8183" for this suite. @ 05/13/24 19:52:34.079
• [4.318 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 05/13/24 19:52:34.092
  I0513 19:52:34.092834 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename secrets @ 05/13/24 19:52:34.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:52:34.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:52:34.142
  STEP: Creating projection with secret that has name secret-emptykey-test-fb9068f2-9ecd-4be0-a0c6-37d72ed1ddad @ 05/13/24 19:52:34.146
  I0513 19:52:34.148865 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-469" for this suite. @ 05/13/24 19:52:34.154
• [0.077 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 05/13/24 19:52:34.17
  I0513 19:52:34.170388 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename csi-storageclass @ 05/13/24 19:52:34.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:52:34.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:52:34.217
  STEP: Creating a StorageClass @ 05/13/24 19:52:34.22
  STEP: Get StorageClass "e2e-mv6rn" @ 05/13/24 19:52:34.231
  STEP: Patching the StorageClass "e2e-mv6rn" @ 05/13/24 19:52:34.235
  STEP: Delete StorageClass "e2e-mv6rn" @ 05/13/24 19:52:34.247
  STEP: Confirm deletion of StorageClass "e2e-mv6rn" @ 05/13/24 19:52:34.259
  STEP: Create a replacement StorageClass @ 05/13/24 19:52:34.271
  STEP: Updating StorageClass "e2e-v2-7j7vh" @ 05/13/24 19:52:34.288
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-7j7vh=updated" @ 05/13/24 19:52:34.308
  STEP: Deleting StorageClass "e2e-v2-7j7vh" via DeleteCollection @ 05/13/24 19:52:34.312
  STEP: Confirm deletion of StorageClass "e2e-v2-7j7vh" @ 05/13/24 19:52:34.328
  I0513 19:52:34.334821 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-1532" for this suite. @ 05/13/24 19:52:34.342
• [0.192 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:334
  STEP: Creating a kubernetes client @ 05/13/24 19:52:34.363
  I0513 19:52:34.363690 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename sched-pred @ 05/13/24 19:52:34.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:52:34.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:52:34.405
  I0513 19:52:34.410503 21 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0513 19:52:34.424449 21 util.go:400] Waiting for terminating namespaces to be deleted...
  I0513 19:52:34.429535 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-13-166.us-east-2.compute.internal before test
  I0513 19:52:34.449181 21 predicates.go:887] cloud-controller-manager-ip-172-31-13-166.us-east-2.compute.internal from kube-system started at 2024-05-13 16:11:28 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.449227 21 predicates.go:889] 	Container cloud-controller-manager ready: true, restart count 0
  I0513 19:52:34.449245 21 predicates.go:887] etcd-ip-172-31-13-166.us-east-2.compute.internal from kube-system started at 2024-05-13 16:10:27 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.449258 21 predicates.go:889] 	Container etcd ready: true, restart count 0
  I0513 19:52:34.449286 21 predicates.go:887] kube-apiserver-ip-172-31-13-166.us-east-2.compute.internal from kube-system started at 2024-05-13 16:11:19 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.449299 21 predicates.go:889] 	Container kube-apiserver ready: true, restart count 0
  I0513 19:52:34.449353 21 predicates.go:887] kube-controller-manager-ip-172-31-13-166.us-east-2.compute.internal from kube-system started at 2024-05-13 16:11:28 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.449368 21 predicates.go:889] 	Container kube-controller-manager ready: true, restart count 0
  I0513 19:52:34.449384 21 predicates.go:887] kube-proxy-ip-172-31-13-166.us-east-2.compute.internal from kube-system started at 2024-05-13 16:11:32 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.449395 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0513 19:52:34.449443 21 predicates.go:887] kube-scheduler-ip-172-31-13-166.us-east-2.compute.internal from kube-system started at 2024-05-13 16:11:28 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.449465 21 predicates.go:889] 	Container kube-scheduler ready: true, restart count 0
  I0513 19:52:34.449480 21 predicates.go:887] rke2-canal-lxqsl from kube-system started at 2024-05-13 16:11:50 +0000 UTC (2 container statuses recorded)
  I0513 19:52:34.449491 21 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0513 19:52:34.449502 21 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0513 19:52:34.449515 21 predicates.go:887] rke2-coredns-rke2-coredns-64dcf4f58b-jgwvr from kube-system started at 2024-05-13 16:12:12 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.449529 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0513 19:52:34.449708 21 predicates.go:887] rke2-ingress-nginx-controller-m6v56 from kube-system started at 2024-05-13 16:12:12 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.449729 21 predicates.go:889] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0513 19:52:34.449744 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-8692a35f669b4296-w77rh from sonobuoy started at 2024-05-13 18:54:27 +0000 UTC (2 container statuses recorded)
  I0513 19:52:34.449756 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 19:52:34.449897 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0513 19:52:34.449910 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-14-71.us-east-2.compute.internal before test
  I0513 19:52:34.465438 21 predicates.go:887] cloud-controller-manager-ip-172-31-14-71.us-east-2.compute.internal from kube-system started at 2024-05-13 16:13:18 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.465487 21 predicates.go:889] 	Container cloud-controller-manager ready: true, restart count 0
  I0513 19:52:34.465504 21 predicates.go:887] etcd-ip-172-31-14-71.us-east-2.compute.internal from kube-system started at 2024-05-13 16:11:56 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.465516 21 predicates.go:889] 	Container etcd ready: true, restart count 0
  I0513 19:52:34.465529 21 predicates.go:887] kube-apiserver-ip-172-31-14-71.us-east-2.compute.internal from kube-system started at 2024-05-13 16:13:04 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.465576 21 predicates.go:889] 	Container kube-apiserver ready: true, restart count 0
  I0513 19:52:34.465622 21 predicates.go:887] kube-controller-manager-ip-172-31-14-71.us-east-2.compute.internal from kube-system started at 2024-05-13 16:13:18 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.465682 21 predicates.go:889] 	Container kube-controller-manager ready: true, restart count 0
  I0513 19:52:34.465702 21 predicates.go:887] kube-proxy-ip-172-31-14-71.us-east-2.compute.internal from kube-system started at 2024-05-13 16:13:30 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.465714 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0513 19:52:34.465728 21 predicates.go:887] kube-scheduler-ip-172-31-14-71.us-east-2.compute.internal from kube-system started at 2024-05-13 16:13:18 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.465767 21 predicates.go:889] 	Container kube-scheduler ready: true, restart count 0
  I0513 19:52:34.465788 21 predicates.go:887] rke2-canal-6kl65 from kube-system started at 2024-05-13 16:13:36 +0000 UTC (2 container statuses recorded)
  I0513 19:52:34.465799 21 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0513 19:52:34.465866 21 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0513 19:52:34.465886 21 predicates.go:887] rke2-ingress-nginx-controller-qpq27 from kube-system started at 2024-05-13 16:14:46 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.465899 21 predicates.go:889] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0513 19:52:34.465913 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-8692a35f669b4296-9x47v from sonobuoy started at 2024-05-13 18:54:27 +0000 UTC (2 container statuses recorded)
  I0513 19:52:34.465970 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 19:52:34.466002 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0513 19:52:34.466017 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-3-239.us-east-2.compute.internal before test
  I0513 19:52:34.490375 21 predicates.go:887] cloud-controller-manager-ip-172-31-3-239.us-east-2.compute.internal from kube-system started at 2024-05-13 16:06:33 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.490415 21 predicates.go:889] 	Container cloud-controller-manager ready: true, restart count 0
  I0513 19:52:34.490431 21 predicates.go:887] etcd-ip-172-31-3-239.us-east-2.compute.internal from kube-system started at 2024-05-13 16:06:10 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.490443 21 predicates.go:889] 	Container etcd ready: true, restart count 0
  I0513 19:52:34.490456 21 predicates.go:887] helm-install-rke2-canal-58m47 from kube-system started at 2024-05-13 16:06:56 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.490467 21 predicates.go:889] 	Container helm ready: false, restart count 0
  I0513 19:52:34.490481 21 predicates.go:887] helm-install-rke2-coredns-9vtfx from kube-system started at 2024-05-13 16:06:56 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.490492 21 predicates.go:889] 	Container helm ready: false, restart count 0
  I0513 19:52:34.490505 21 predicates.go:887] helm-install-rke2-ingress-nginx-kdjxl from kube-system started at 2024-05-13 16:08:24 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.490516 21 predicates.go:889] 	Container helm ready: false, restart count 0
  I0513 19:52:34.490529 21 predicates.go:887] helm-install-rke2-metrics-server-lkmfs from kube-system started at 2024-05-13 16:08:24 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.490539 21 predicates.go:889] 	Container helm ready: false, restart count 0
  I0513 19:52:34.490632 21 predicates.go:887] helm-install-rke2-snapshot-controller-6dsg9 from kube-system started at 2024-05-13 16:08:24 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.490719 21 predicates.go:889] 	Container helm ready: false, restart count 1
  I0513 19:52:34.490739 21 predicates.go:887] helm-install-rke2-snapshot-controller-crd-4z46x from kube-system started at 2024-05-13 16:08:24 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.490799 21 predicates.go:889] 	Container helm ready: false, restart count 0
  I0513 19:52:34.490819 21 predicates.go:887] helm-install-rke2-snapshot-validation-webhook-4m66n from kube-system started at 2024-05-13 16:08:24 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.490831 21 predicates.go:889] 	Container helm ready: false, restart count 0
  I0513 19:52:34.490901 21 predicates.go:887] kube-apiserver-ip-172-31-3-239.us-east-2.compute.internal from kube-system started at 2024-05-13 16:06:25 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.490916 21 predicates.go:889] 	Container kube-apiserver ready: true, restart count 0
  I0513 19:52:34.490929 21 predicates.go:887] kube-controller-manager-ip-172-31-3-239.us-east-2.compute.internal from kube-system started at 2024-05-13 16:06:31 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.491001 21 predicates.go:889] 	Container kube-controller-manager ready: true, restart count 0
  I0513 19:52:34.491020 21 predicates.go:887] kube-proxy-ip-172-31-3-239.us-east-2.compute.internal from kube-system started at 2024-05-13 16:06:55 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.491031 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0513 19:52:34.491045 21 predicates.go:887] kube-scheduler-ip-172-31-3-239.us-east-2.compute.internal from kube-system started at 2024-05-13 16:06:31 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.491090 21 predicates.go:889] 	Container kube-scheduler ready: true, restart count 0
  I0513 19:52:34.491107 21 predicates.go:887] rke2-canal-vm47w from kube-system started at 2024-05-13 16:07:12 +0000 UTC (2 container statuses recorded)
  I0513 19:52:34.491659 21 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0513 19:52:34.491702 21 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0513 19:52:34.491760 21 predicates.go:887] rke2-coredns-rke2-coredns-64dcf4f58b-h2p8t from kube-system started at 2024-05-13 16:08:24 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.491807 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0513 19:52:34.491881 21 predicates.go:887] rke2-coredns-rke2-coredns-autoscaler-5749cd7b8b-qclvf from kube-system started at 2024-05-13 16:08:24 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.491893 21 predicates.go:889] 	Container autoscaler ready: true, restart count 0
  I0513 19:52:34.491936 21 predicates.go:887] rke2-ingress-nginx-controller-7f4wf from kube-system started at 2024-05-13 16:09:15 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.491988 21 predicates.go:889] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0513 19:52:34.492005 21 predicates.go:887] rke2-metrics-server-868fc8795f-88ljh from kube-system started at 2024-05-13 16:08:43 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.492017 21 predicates.go:889] 	Container metrics-server ready: true, restart count 0
  I0513 19:52:34.492215 21 predicates.go:887] rke2-snapshot-controller-7dcf5d5b46-twc4f from kube-system started at 2024-05-13 16:08:52 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.492279 21 predicates.go:889] 	Container rke2-snapshot-controller ready: true, restart count 0
  I0513 19:52:34.492298 21 predicates.go:887] rke2-snapshot-validation-webhook-bf7bbd6fc-jhdww from kube-system started at 2024-05-13 16:08:43 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.492310 21 predicates.go:889] 	Container rke2-snapshot-validation-webhook ready: true, restart count 0
  I0513 19:52:34.492370 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-8692a35f669b4296-22p7h from sonobuoy started at 2024-05-13 18:54:27 +0000 UTC (2 container statuses recorded)
  I0513 19:52:34.492385 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 19:52:34.492397 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0513 19:52:34.492410 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-7-107.us-east-2.compute.internal before test
  I0513 19:52:34.521432 21 predicates.go:887] kube-proxy-ip-172-31-7-107.us-east-2.compute.internal from kube-system started at 2024-05-13 16:16:16 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.521964 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0513 19:52:34.522438 21 predicates.go:887] rke2-canal-hhrx8 from kube-system started at 2024-05-13 16:16:16 +0000 UTC (2 container statuses recorded)
  I0513 19:52:34.522673 21 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0513 19:52:34.522694 21 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0513 19:52:34.522714 21 predicates.go:887] rke2-ingress-nginx-controller-qw67n from kube-system started at 2024-05-13 16:17:40 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.522725 21 predicates.go:889] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0513 19:52:34.522743 21 predicates.go:887] sonobuoy from sonobuoy started at 2024-05-13 18:54:25 +0000 UTC (1 container statuses recorded)
  I0513 19:52:34.522884 21 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0513 19:52:34.522908 21 predicates.go:887] sonobuoy-e2e-job-a300b5feb2b248aa from sonobuoy started at 2024-05-13 18:54:27 +0000 UTC (2 container statuses recorded)
  I0513 19:52:34.522921 21 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0513 19:52:34.522933 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 19:52:34.522947 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-8692a35f669b4296-rhppm from sonobuoy started at 2024-05-13 18:54:27 +0000 UTC (2 container statuses recorded)
  I0513 19:52:34.523007 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 19:52:34.523054 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-13-166.us-east-2.compute.internal @ 05/13/24 19:52:34.581
  STEP: verifying the node has the label node ip-172-31-14-71.us-east-2.compute.internal @ 05/13/24 19:52:34.706
  STEP: verifying the node has the label node ip-172-31-3-239.us-east-2.compute.internal @ 05/13/24 19:52:34.838
  STEP: verifying the node has the label node ip-172-31-7-107.us-east-2.compute.internal @ 05/13/24 19:52:34.885
  I0513 19:52:34.919713 21 predicates.go:374] Pod cloud-controller-manager-ip-172-31-13-166.us-east-2.compute.internal requesting resource cpu=100m on Node ip-172-31-13-166.us-east-2.compute.internal
  I0513 19:52:34.920311 21 predicates.go:374] Pod cloud-controller-manager-ip-172-31-14-71.us-east-2.compute.internal requesting resource cpu=100m on Node ip-172-31-14-71.us-east-2.compute.internal
  I0513 19:52:34.920711 21 predicates.go:374] Pod cloud-controller-manager-ip-172-31-3-239.us-east-2.compute.internal requesting resource cpu=100m on Node ip-172-31-3-239.us-east-2.compute.internal
  I0513 19:52:34.921887 21 predicates.go:374] Pod etcd-ip-172-31-13-166.us-east-2.compute.internal requesting resource cpu=200m on Node ip-172-31-13-166.us-east-2.compute.internal
  I0513 19:52:34.922698 21 predicates.go:374] Pod etcd-ip-172-31-14-71.us-east-2.compute.internal requesting resource cpu=200m on Node ip-172-31-14-71.us-east-2.compute.internal
  I0513 19:52:34.924812 21 predicates.go:374] Pod etcd-ip-172-31-3-239.us-east-2.compute.internal requesting resource cpu=200m on Node ip-172-31-3-239.us-east-2.compute.internal
  I0513 19:52:34.925295 21 predicates.go:374] Pod kube-apiserver-ip-172-31-13-166.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-13-166.us-east-2.compute.internal
  I0513 19:52:34.925740 21 predicates.go:374] Pod kube-apiserver-ip-172-31-14-71.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-14-71.us-east-2.compute.internal
  I0513 19:52:34.926716 21 predicates.go:374] Pod kube-apiserver-ip-172-31-3-239.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-3-239.us-east-2.compute.internal
  I0513 19:52:34.928820 21 predicates.go:374] Pod kube-controller-manager-ip-172-31-13-166.us-east-2.compute.internal requesting resource cpu=200m on Node ip-172-31-13-166.us-east-2.compute.internal
  I0513 19:52:34.929323 21 predicates.go:374] Pod kube-controller-manager-ip-172-31-14-71.us-east-2.compute.internal requesting resource cpu=200m on Node ip-172-31-14-71.us-east-2.compute.internal
  I0513 19:52:34.929796 21 predicates.go:374] Pod kube-controller-manager-ip-172-31-3-239.us-east-2.compute.internal requesting resource cpu=200m on Node ip-172-31-3-239.us-east-2.compute.internal
  I0513 19:52:34.930558 21 predicates.go:374] Pod kube-proxy-ip-172-31-13-166.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-13-166.us-east-2.compute.internal
  I0513 19:52:34.934043 21 predicates.go:374] Pod kube-proxy-ip-172-31-14-71.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-14-71.us-east-2.compute.internal
  I0513 19:52:34.934476 21 predicates.go:374] Pod kube-proxy-ip-172-31-3-239.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-3-239.us-east-2.compute.internal
  I0513 19:52:34.934945 21 predicates.go:374] Pod kube-proxy-ip-172-31-7-107.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-7-107.us-east-2.compute.internal
  I0513 19:52:34.935602 21 predicates.go:374] Pod kube-scheduler-ip-172-31-13-166.us-east-2.compute.internal requesting resource cpu=100m on Node ip-172-31-13-166.us-east-2.compute.internal
  I0513 19:52:34.936087 21 predicates.go:374] Pod kube-scheduler-ip-172-31-14-71.us-east-2.compute.internal requesting resource cpu=100m on Node ip-172-31-14-71.us-east-2.compute.internal
  I0513 19:52:34.936589 21 predicates.go:374] Pod kube-scheduler-ip-172-31-3-239.us-east-2.compute.internal requesting resource cpu=100m on Node ip-172-31-3-239.us-east-2.compute.internal
  I0513 19:52:34.937688 21 predicates.go:374] Pod rke2-canal-6kl65 requesting resource cpu=250m on Node ip-172-31-14-71.us-east-2.compute.internal
  I0513 19:52:34.938113 21 predicates.go:374] Pod rke2-canal-hhrx8 requesting resource cpu=250m on Node ip-172-31-7-107.us-east-2.compute.internal
  I0513 19:52:34.938831 21 predicates.go:374] Pod rke2-canal-lxqsl requesting resource cpu=250m on Node ip-172-31-13-166.us-east-2.compute.internal
  I0513 19:52:34.939316 21 predicates.go:374] Pod rke2-canal-vm47w requesting resource cpu=250m on Node ip-172-31-3-239.us-east-2.compute.internal
  I0513 19:52:34.939980 21 predicates.go:374] Pod rke2-coredns-rke2-coredns-64dcf4f58b-h2p8t requesting resource cpu=100m on Node ip-172-31-3-239.us-east-2.compute.internal
  I0513 19:52:34.940382 21 predicates.go:374] Pod rke2-coredns-rke2-coredns-64dcf4f58b-jgwvr requesting resource cpu=100m on Node ip-172-31-13-166.us-east-2.compute.internal
  I0513 19:52:34.940417 21 predicates.go:374] Pod rke2-coredns-rke2-coredns-autoscaler-5749cd7b8b-qclvf requesting resource cpu=25m on Node ip-172-31-3-239.us-east-2.compute.internal
  I0513 19:52:34.940438 21 predicates.go:374] Pod rke2-ingress-nginx-controller-7f4wf requesting resource cpu=100m on Node ip-172-31-3-239.us-east-2.compute.internal
  I0513 19:52:34.940452 21 predicates.go:374] Pod rke2-ingress-nginx-controller-m6v56 requesting resource cpu=100m on Node ip-172-31-13-166.us-east-2.compute.internal
  I0513 19:52:34.940466 21 predicates.go:374] Pod rke2-ingress-nginx-controller-qpq27 requesting resource cpu=100m on Node ip-172-31-14-71.us-east-2.compute.internal
  I0513 19:52:34.940480 21 predicates.go:374] Pod rke2-ingress-nginx-controller-qw67n requesting resource cpu=100m on Node ip-172-31-7-107.us-east-2.compute.internal
  I0513 19:52:34.940493 21 predicates.go:374] Pod rke2-metrics-server-868fc8795f-88ljh requesting resource cpu=100m on Node ip-172-31-3-239.us-east-2.compute.internal
  I0513 19:52:34.940507 21 predicates.go:374] Pod rke2-snapshot-controller-7dcf5d5b46-twc4f requesting resource cpu=0m on Node ip-172-31-3-239.us-east-2.compute.internal
  I0513 19:52:34.940520 21 predicates.go:374] Pod rke2-snapshot-validation-webhook-bf7bbd6fc-jhdww requesting resource cpu=0m on Node ip-172-31-3-239.us-east-2.compute.internal
  I0513 19:52:34.940534 21 predicates.go:374] Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-7-107.us-east-2.compute.internal
  I0513 19:52:34.940550 21 predicates.go:374] Pod sonobuoy-e2e-job-a300b5feb2b248aa requesting resource cpu=0m on Node ip-172-31-7-107.us-east-2.compute.internal
  I0513 19:52:34.940564 21 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-8692a35f669b4296-22p7h requesting resource cpu=0m on Node ip-172-31-3-239.us-east-2.compute.internal
  I0513 19:52:34.940577 21 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-8692a35f669b4296-9x47v requesting resource cpu=0m on Node ip-172-31-14-71.us-east-2.compute.internal
  I0513 19:52:34.940590 21 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-8692a35f669b4296-rhppm requesting resource cpu=0m on Node ip-172-31-7-107.us-east-2.compute.internal
  I0513 19:52:34.940602 21 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-8692a35f669b4296-w77rh requesting resource cpu=0m on Node ip-172-31-13-166.us-east-2.compute.internal
  STEP: Starting Pods to consume most of the cluster CPU. @ 05/13/24 19:52:34.94
  I0513 19:52:34.940648 21 predicates.go:384] Creating a pod which consumes cpu=315m on Node ip-172-31-13-166.us-east-2.compute.internal
  I0513 19:52:34.961489 21 predicates.go:384] Creating a pod which consumes cpu=385m on Node ip-172-31-14-71.us-east-2.compute.internal
  I0513 19:52:34.986306 21 predicates.go:384] Creating a pod which consumes cpu=227m on Node ip-172-31-3-239.us-east-2.compute.internal
  I0513 19:52:35.037007 21 predicates.go:384] Creating a pod which consumes cpu=980m on Node ip-172-31-7-107.us-east-2.compute.internal
  STEP: Creating another pod that requires unavailable amount of CPU. @ 05/13/24 19:52:39.221
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-3de3e327-d4b4-460f-84b8-0169b067cbd9.17cf245ab17b0878], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7698/filler-pod-3de3e327-d4b4-460f-84b8-0169b067cbd9 to ip-172-31-13-166.us-east-2.compute.internal] @ 05/13/24 19:52:39.226
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-3de3e327-d4b4-460f-84b8-0169b067cbd9.17cf245ae820c560], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/13/24 19:52:39.226
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-3de3e327-d4b4-460f-84b8-0169b067cbd9.17cf245aecf2e1cc], Reason = [Created], Message = [Created container filler-pod-3de3e327-d4b4-460f-84b8-0169b067cbd9] @ 05/13/24 19:52:39.226
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-3de3e327-d4b4-460f-84b8-0169b067cbd9.17cf245afab95756], Reason = [Started], Message = [Started container filler-pod-3de3e327-d4b4-460f-84b8-0169b067cbd9] @ 05/13/24 19:52:39.226
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-42fd327b-f493-4d3d-a46d-d9eba53c1ee0.17cf245ab7c24806], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7698/filler-pod-42fd327b-f493-4d3d-a46d-d9eba53c1ee0 to ip-172-31-7-107.us-east-2.compute.internal] @ 05/13/24 19:52:39.226
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-42fd327b-f493-4d3d-a46d-d9eba53c1ee0.17cf245aed81878f], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/13/24 19:52:39.226
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-42fd327b-f493-4d3d-a46d-d9eba53c1ee0.17cf245af2d1e737], Reason = [Created], Message = [Created container filler-pod-42fd327b-f493-4d3d-a46d-d9eba53c1ee0] @ 05/13/24 19:52:39.226
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-42fd327b-f493-4d3d-a46d-d9eba53c1ee0.17cf245afff100bf], Reason = [Started], Message = [Started container filler-pod-42fd327b-f493-4d3d-a46d-d9eba53c1ee0] @ 05/13/24 19:52:39.226
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-84013734-29bd-4de4-a0f9-4211b2868e6d.17cf245ab2377d87], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7698/filler-pod-84013734-29bd-4de4-a0f9-4211b2868e6d to ip-172-31-14-71.us-east-2.compute.internal] @ 05/13/24 19:52:39.226
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-84013734-29bd-4de4-a0f9-4211b2868e6d.17cf245aebd40b0e], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/13/24 19:52:39.226
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-84013734-29bd-4de4-a0f9-4211b2868e6d.17cf245b312a6ba0], Reason = [Created], Message = [Created container filler-pod-84013734-29bd-4de4-a0f9-4211b2868e6d] @ 05/13/24 19:52:39.226
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-84013734-29bd-4de4-a0f9-4211b2868e6d.17cf245b4a590cda], Reason = [Started], Message = [Started container filler-pod-84013734-29bd-4de4-a0f9-4211b2868e6d] @ 05/13/24 19:52:39.226
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e65b50d2-f7a7-41c3-afb4-9e6f1e6009ec.17cf245ab553057b], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7698/filler-pod-e65b50d2-f7a7-41c3-afb4-9e6f1e6009ec to ip-172-31-3-239.us-east-2.compute.internal] @ 05/13/24 19:52:39.226
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e65b50d2-f7a7-41c3-afb4-9e6f1e6009ec.17cf245afb143390], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/13/24 19:52:39.226
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e65b50d2-f7a7-41c3-afb4-9e6f1e6009ec.17cf245b006cf0ba], Reason = [Created], Message = [Created container filler-pod-e65b50d2-f7a7-41c3-afb4-9e6f1e6009ec] @ 05/13/24 19:52:39.226
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e65b50d2-f7a7-41c3-afb4-9e6f1e6009ec.17cf245b21413b2d], Reason = [Started], Message = [Started container filler-pod-e65b50d2-f7a7-41c3-afb4-9e6f1e6009ec] @ 05/13/24 19:52:39.226
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17cf245baf723534], Reason = [FailedScheduling], Message = [0/4 nodes are available: 4 Insufficient cpu. preemption: 0/4 nodes are available: 4 No preemption victims found for incoming pod.] @ 05/13/24 19:52:39.285
  STEP: removing the label node off the node ip-172-31-14-71.us-east-2.compute.internal @ 05/13/24 19:52:40.266
  STEP: verifying the node doesn't have the label node @ 05/13/24 19:52:40.299
  STEP: removing the label node off the node ip-172-31-3-239.us-east-2.compute.internal @ 05/13/24 19:52:40.309
  STEP: verifying the node doesn't have the label node @ 05/13/24 19:52:40.341
  STEP: removing the label node off the node ip-172-31-7-107.us-east-2.compute.internal @ 05/13/24 19:52:40.354
  STEP: verifying the node doesn't have the label node @ 05/13/24 19:52:40.394
  STEP: removing the label node off the node ip-172-31-13-166.us-east-2.compute.internal @ 05/13/24 19:52:40.408
  STEP: verifying the node doesn't have the label node @ 05/13/24 19:52:40.455
  I0513 19:52:40.469038 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7698" for this suite. @ 05/13/24 19:52:40.482
• [6.140 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 05/13/24 19:52:40.504
  I0513 19:52:40.504193 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/13/24 19:52:40.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:52:40.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:52:40.551
  I0513 19:52:40.554723 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 19:52:43.668159 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7003" for this suite. @ 05/13/24 19:52:43.673
• [3.191 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 05/13/24 19:52:43.695
  I0513 19:52:43.695864 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename var-expansion @ 05/13/24 19:52:43.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:52:43.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:52:43.74
  STEP: Creating a pod to test env composition @ 05/13/24 19:52:43.743
  STEP: Saw pod success @ 05/13/24 19:52:50.017
  I0513 19:52:50.020862 21 output.go:196] Trying to get logs from node ip-172-31-14-71.us-east-2.compute.internal pod var-expansion-5d51c068-e78a-40f0-a418-8d566ecb1de5 container dapi-container: <nil>
  STEP: delete the pod @ 05/13/24 19:52:50.051
  I0513 19:52:50.075829 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-422" for this suite. @ 05/13/24 19:52:50.081
• [6.395 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 05/13/24 19:52:50.091
  I0513 19:52:50.092030 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename replicaset @ 05/13/24 19:52:50.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:52:50.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:52:50.129
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 05/13/24 19:52:50.132
  I0513 19:52:50.171074 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0513 19:52:55.178437 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/13/24 19:52:55.178
  STEP: getting scale subresource @ 05/13/24 19:52:55.178
  STEP: updating a scale subresource @ 05/13/24 19:52:55.182
  STEP: verifying the replicaset Spec.Replicas was modified @ 05/13/24 19:52:55.202
  STEP: Patch a scale subresource @ 05/13/24 19:52:55.213
  I0513 19:52:55.265935 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2994" for this suite. @ 05/13/24 19:52:55.283
• [5.229 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 05/13/24 19:52:55.321
  I0513 19:52:55.321759 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename resourcequota @ 05/13/24 19:52:55.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:52:55.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:52:55.387
  STEP: Creating resourceQuota "e2e-rq-status-9cjhh" @ 05/13/24 19:52:55.409
  I0513 19:52:55.438779 21 resource_quota.go:1051] Resource quota "e2e-rq-status-9cjhh" reports spec: hard cpu limit of 500m
  I0513 19:52:55.438867 21 resource_quota.go:1053] Resource quota "e2e-rq-status-9cjhh" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-9cjhh" /status @ 05/13/24 19:52:55.439
  STEP: Confirm /status for "e2e-rq-status-9cjhh" resourceQuota via watch @ 05/13/24 19:52:55.452
  I0513 19:52:55.455556 21 resource_quota.go:1080] observed resourceQuota "e2e-rq-status-9cjhh" in namespace "resourcequota-8853" with hard status: v1.ResourceList(nil)
  I0513 19:52:55.455639 21 resource_quota.go:1083] Found resourceQuota "e2e-rq-status-9cjhh" in namespace "resourcequota-8853" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0513 19:52:55.455662 21 resource_quota.go:1090] ResourceQuota "e2e-rq-status-9cjhh" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 05/13/24 19:52:55.471
  I0513 19:52:55.484569 21 resource_quota.go:1101] Resource quota "e2e-rq-status-9cjhh" reports spec: hard cpu limit of 1
  I0513 19:52:55.484834 21 resource_quota.go:1102] Resource quota "e2e-rq-status-9cjhh" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-9cjhh" /status @ 05/13/24 19:52:55.485
  STEP: Confirm /status for "e2e-rq-status-9cjhh" resourceQuota via watch @ 05/13/24 19:52:55.496
  I0513 19:52:55.497821 21 resource_quota.go:1124] observed resourceQuota "e2e-rq-status-9cjhh" in namespace "resourcequota-8853" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0513 19:52:55.498140 21 resource_quota.go:1127] Found resourceQuota "e2e-rq-status-9cjhh" in namespace "resourcequota-8853" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0513 19:52:55.498183 21 resource_quota.go:1134] ResourceQuota "e2e-rq-status-9cjhh" /status was patched
  STEP: Get "e2e-rq-status-9cjhh" /status @ 05/13/24 19:52:55.498
  I0513 19:52:55.502367 21 resource_quota.go:1145] Resourcequota "e2e-rq-status-9cjhh" reports status: hard cpu of 1
  I0513 19:52:55.502422 21 resource_quota.go:1147] Resourcequota "e2e-rq-status-9cjhh" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-9cjhh" /status before checking Spec is unchanged @ 05/13/24 19:52:55.505
  I0513 19:52:55.519716 21 resource_quota.go:1167] Resourcequota "e2e-rq-status-9cjhh" reports status: hard cpu of 2
  I0513 19:52:55.520362 21 resource_quota.go:1169] Resourcequota "e2e-rq-status-9cjhh" reports status: hard memory of 2Gi
  I0513 19:52:55.522786 21 resource_quota.go:1181] Found resourceQuota "e2e-rq-status-9cjhh" in namespace "resourcequota-8853" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0513 19:52:55.530847 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-9cjhh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9cjhh", GenerateName:"", Namespace:"resourcequota-8853", SelfLink:"", UID:"1e32e734-19a4-4d6b-993f-581f3897a0c7", ResourceVersion:"74136", Generation:0, CreationTimestamp:time.Date(2024, time.May, 13, 19, 52, 55, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9cjhh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 13, 19, 52, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00538a180), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 13, 19, 52, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00538a1e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 13, 19, 52, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00538a210), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList(nil)}}
  I0513 19:53:00.527640 21 resource_quota.go:1209] ResourceQuota "e2e-rq-status-9cjhh" Spec was unchanged and /status reset
  I0513 19:53:00.527870 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8853" for this suite. @ 05/13/24 19:53:00.553
• [5.250 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 05/13/24 19:53:00.573
  I0513 19:53:00.573712 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename var-expansion @ 05/13/24 19:53:00.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:53:01.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:53:01.185
  STEP: Creating a pod to test substitution in volume subpath @ 05/13/24 19:53:01.189
  STEP: Saw pod success @ 05/13/24 19:53:05.235
  I0513 19:53:05.242807 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod var-expansion-3d7f73d9-c62b-46a0-8fff-d96da0eec1f6 container dapi-container: <nil>
  STEP: delete the pod @ 05/13/24 19:53:05.251
  I0513 19:53:05.655230 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9392" for this suite. @ 05/13/24 19:53:05.659
• [5.093 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 05/13/24 19:53:05.666
  I0513 19:53:05.666386 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename replication-controller @ 05/13/24 19:53:05.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:53:05.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:53:05.697
  STEP: creating a ReplicationController @ 05/13/24 19:53:05.703
  STEP: waiting for RC to be added @ 05/13/24 19:53:05.709
  STEP: waiting for available Replicas @ 05/13/24 19:53:05.71
  STEP: patching ReplicationController @ 05/13/24 19:53:07.249
  STEP: waiting for RC to be modified @ 05/13/24 19:53:07.267
  STEP: patching ReplicationController status @ 05/13/24 19:53:07.268
  STEP: waiting for RC to be modified @ 05/13/24 19:53:07.279
  STEP: waiting for available Replicas @ 05/13/24 19:53:07.279
  STEP: fetching ReplicationController status @ 05/13/24 19:53:07.297
  STEP: patching ReplicationController scale @ 05/13/24 19:53:07.301
  STEP: waiting for RC to be modified @ 05/13/24 19:53:07.324
  STEP: waiting for ReplicationController's scale to be the max amount @ 05/13/24 19:53:07.324
  STEP: fetching ReplicationController; ensuring that it's patched @ 05/13/24 19:53:10.126
  STEP: updating ReplicationController status @ 05/13/24 19:53:10.13
  STEP: waiting for RC to be modified @ 05/13/24 19:53:10.394
  STEP: listing all ReplicationControllers @ 05/13/24 19:53:10.394
  STEP: checking that ReplicationController has expected values @ 05/13/24 19:53:10.398
  STEP: deleting ReplicationControllers by collection @ 05/13/24 19:53:10.398
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 05/13/24 19:53:10.413
  I0513 19:53:10.530357 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0513 19:53:10.530990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-2609" for this suite. @ 05/13/24 19:53:10.535
• [4.887 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 05/13/24 19:53:10.555
  I0513 19:53:10.555557 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename webhook @ 05/13/24 19:53:10.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:53:10.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:53:10.59
  STEP: Setting up server cert @ 05/13/24 19:53:10.635
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 19:53:11.029
  STEP: Deploying the webhook pod @ 05/13/24 19:53:11.049
  STEP: Wait for the deployment to be ready @ 05/13/24 19:53:11.092
  I0513 19:53:11.117334 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0513 19:53:11.531805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:12.532836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 19:53:13.131853 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 19, 53, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 53, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 53, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 53, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0513 19:53:13.533491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:14.533681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/13/24 19:53:15.136
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 19:53:15.162
  E0513 19:53:15.534765      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 19:53:16.163734 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 05/13/24 19:53:16.418
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/13/24 19:53:16.486
  E0513 19:53:16.535794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the collection of validation webhooks @ 05/13/24 19:53:16.549
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/13/24 19:53:16.647
  I0513 19:53:16.777040 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-40" for this suite. @ 05/13/24 19:53:16.798
  STEP: Destroying namespace "webhook-markers-1346" for this suite. @ 05/13/24 19:53:16.819
• [6.298 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 05/13/24 19:53:16.857
  I0513 19:53:16.857601 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename statefulset @ 05/13/24 19:53:16.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:53:16.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:53:16.906
  STEP: Creating service test in namespace statefulset-3275 @ 05/13/24 19:53:16.91
  STEP: Creating a new StatefulSet @ 05/13/24 19:53:17.517
  E0513 19:53:17.536247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 19:53:17.590794 21 wait.go:40] Found 0 stateful pods, waiting for 3
  E0513 19:53:18.537046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:19.537082      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:20.537512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:21.538248      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:22.538433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:23.538908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:24.539434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:25.540326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:26.540878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:27.541008      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 19:53:27.557060 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0513 19:53:27.557117 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0513 19:53:27.557138 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0513 19:53:27.576595 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=statefulset-3275 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0513 19:53:27.782161 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0513 19:53:27.782215 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0513 19:53:27.782233 21 statefulset.go:2184] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0513 19:53:28.541210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:29.541786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:30.542538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:31.542728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:32.542914      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:33.543106      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:34.543539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:35.543837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:36.543982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:37.544107      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 05/13/24 19:53:37.789
  I0513 19:53:37.810199 21 statefulset.go:2241] Updating stateful set ss2
  STEP: Creating a new revision @ 05/13/24 19:53:37.81
  E0513 19:53:38.545093      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:39.545198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:40.545706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:41.546455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:42.546811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:43.546943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:44.547252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:45.548401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:46.548333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:47.548484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 05/13/24 19:53:47.822
  I0513 19:53:47.828552 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=statefulset-3275 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0513 19:53:48.038025 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0513 19:53:48.038091 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0513 19:53:48.038128 21 statefulset.go:2208] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0513 19:53:48.549518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:49.550018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:50.550376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:51.550447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:52.550545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:53.550690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:54.550889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:55.551265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:56.551983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:57.552486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:58.552731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:53:59.553262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:00.554175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:01.554566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:02.555552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:03.555662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:04.556749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:05.557039      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:06.557498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:07.558638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 19:54:08.154947 21 wait.go:158] Waiting for StatefulSet statefulset-3275/ss2 to complete update
  E0513 19:54:08.559572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:09.560587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:10.560923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:11.561131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:12.561257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:13.561302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:14.561448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:15.561759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:16.562059      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:17.562351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 05/13/24 19:54:18.153
  I0513 19:54:18.154068 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=statefulset-3275 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0513 19:54:18.458151 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0513 19:54:18.458205 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0513 19:54:18.458225 21 statefulset.go:2184] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0513 19:54:18.563117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:19.563985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:20.564728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:21.564927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:22.565205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:23.565356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:24.565550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:25.565831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:26.566103      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:27.566390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 19:54:28.494212 21 statefulset.go:2241] Updating stateful set ss2
  E0513 19:54:28.567798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:29.568392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:30.569126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:31.569745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:32.570183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:33.570364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:34.570518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:35.571386      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:36.571700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:37.572983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 05/13/24 19:54:38.504
  I0513 19:54:38.510295 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=statefulset-3275 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0513 19:54:38.574100      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 19:54:38.720619 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0513 19:54:38.720790 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0513 19:54:38.720814 21 statefulset.go:2208] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0513 19:54:39.574382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:40.574669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:41.574979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:42.575104      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:43.575250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:44.575378      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:45.575574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:46.575656      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:47.576740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:48.577725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 19:54:48.746725 21 wait.go:158] Waiting for StatefulSet statefulset-3275/ss2 to complete update
  I0513 19:54:48.746799 21 wait.go:165] Waiting for Pod statefulset-3275/ss2-0 to have revision ss2-7b6c9599d5 update revision ss2-5459d8585b
  E0513 19:54:49.578668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:50.579623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:51.579693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:52.579821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:53.580008      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:54.580150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:55.580639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:56.580818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:57.580999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:54:58.581125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 19:54:58.878323 21 statefulset.go:135] Deleting all statefulset in ns statefulset-3275
  I0513 19:54:58.882806 21 rest.go:150] Scaling statefulset ss2 to 0
  E0513 19:54:59.581307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:00.581472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:01.581763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:02.581814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:03.582116      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:04.582573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:05.583256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:06.583374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:07.583749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:08.583909      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 19:55:08.912615 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0513 19:55:08.916709 21 rest.go:88] Deleting statefulset ss2
  I0513 19:55:08.969773 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3275" for this suite. @ 05/13/24 19:55:08.981
• [112.146 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 05/13/24 19:55:09.003
  I0513 19:55:09.003836 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename deployment @ 05/13/24 19:55:09.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:55:09.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:55:09.061
  STEP: creating a Deployment @ 05/13/24 19:55:09.069
  I0513 19:55:09.069939 21 deployment.go:507] Creating simple deployment test-deployment-n4kch
  I0513 19:55:09.104198 21 deployment.go:222] new replicaset for deployment "test-deployment-n4kch" is yet to be created
  E0513 19:55:09.585057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:10.585415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting /status @ 05/13/24 19:55:11.129
  I0513 19:55:11.133589 21 deployment.go:532] Deployment test-deployment-n4kch has Conditions: [{Available True 2024-05-13 19:55:10 +0000 UTC 2024-05-13 19:55:10 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-05-13 19:55:10 +0000 UTC 2024-05-13 19:55:09 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-n4kch-c8586b885" has successfully progressed.}]
  STEP: updating Deployment Status @ 05/13/24 19:55:11.133
  I0513 19:55:11.148257 21 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 55, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 55, 10, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 55, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 55, 9, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-n4kch-c8586b885\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 05/13/24 19:55:11.148
  I0513 19:55:11.150521 21 deployment.go:579] Observed &Deployment event: ADDED
  I0513 19:55:11.150583 21 deployment.go:575] Observed Deployment test-deployment-n4kch in namespace deployment-7079 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-13 19:55:09 +0000 UTC 2024-05-13 19:55:09 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-n4kch-c8586b885"}
  I0513 19:55:11.150731 21 deployment.go:579] Observed &Deployment event: MODIFIED
  I0513 19:55:11.150774 21 deployment.go:575] Observed Deployment test-deployment-n4kch in namespace deployment-7079 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-13 19:55:09 +0000 UTC 2024-05-13 19:55:09 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-n4kch-c8586b885"}
  I0513 19:55:11.150797 21 deployment.go:575] Observed Deployment test-deployment-n4kch in namespace deployment-7079 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-13 19:55:09 +0000 UTC 2024-05-13 19:55:09 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0513 19:55:11.150937 21 deployment.go:579] Observed &Deployment event: MODIFIED
  I0513 19:55:11.151718 21 deployment.go:575] Observed Deployment test-deployment-n4kch in namespace deployment-7079 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-13 19:55:09 +0000 UTC 2024-05-13 19:55:09 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0513 19:55:11.151766 21 deployment.go:575] Observed Deployment test-deployment-n4kch in namespace deployment-7079 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-13 19:55:09 +0000 UTC 2024-05-13 19:55:09 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-n4kch-c8586b885" is progressing.}
  I0513 19:55:11.152046 21 deployment.go:579] Observed &Deployment event: MODIFIED
  I0513 19:55:11.152082 21 deployment.go:575] Observed Deployment test-deployment-n4kch in namespace deployment-7079 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-13 19:55:10 +0000 UTC 2024-05-13 19:55:10 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0513 19:55:11.152471 21 deployment.go:575] Observed Deployment test-deployment-n4kch in namespace deployment-7079 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-13 19:55:10 +0000 UTC 2024-05-13 19:55:09 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-n4kch-c8586b885" has successfully progressed.}
  I0513 19:55:11.152869 21 deployment.go:579] Observed &Deployment event: MODIFIED
  I0513 19:55:11.152915 21 deployment.go:575] Observed Deployment test-deployment-n4kch in namespace deployment-7079 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-13 19:55:10 +0000 UTC 2024-05-13 19:55:10 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0513 19:55:11.153054 21 deployment.go:575] Observed Deployment test-deployment-n4kch in namespace deployment-7079 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-13 19:55:10 +0000 UTC 2024-05-13 19:55:09 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-n4kch-c8586b885" has successfully progressed.}
  I0513 19:55:11.153084 21 deployment.go:572] Found Deployment test-deployment-n4kch in namespace deployment-7079 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0513 19:55:11.153235 21 deployment.go:583] Deployment test-deployment-n4kch has an updated status
  STEP: patching the Statefulset Status @ 05/13/24 19:55:11.153
  I0513 19:55:11.153587 21 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0513 19:55:11.171998 21 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 05/13/24 19:55:11.172
  I0513 19:55:11.175053 21 deployment.go:616] Observed &Deployment event: ADDED
  I0513 19:55:11.175120 21 deployment.go:612] Observed deployment test-deployment-n4kch in namespace deployment-7079 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-13 19:55:09 +0000 UTC 2024-05-13 19:55:09 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-n4kch-c8586b885"}
  I0513 19:55:11.175431 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0513 19:55:11.175611 21 deployment.go:612] Observed deployment test-deployment-n4kch in namespace deployment-7079 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-13 19:55:09 +0000 UTC 2024-05-13 19:55:09 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-n4kch-c8586b885"}
  I0513 19:55:11.175799 21 deployment.go:612] Observed deployment test-deployment-n4kch in namespace deployment-7079 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-13 19:55:09 +0000 UTC 2024-05-13 19:55:09 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0513 19:55:11.176074 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0513 19:55:11.176243 21 deployment.go:612] Observed deployment test-deployment-n4kch in namespace deployment-7079 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-13 19:55:09 +0000 UTC 2024-05-13 19:55:09 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0513 19:55:11.176364 21 deployment.go:612] Observed deployment test-deployment-n4kch in namespace deployment-7079 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-13 19:55:09 +0000 UTC 2024-05-13 19:55:09 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-n4kch-c8586b885" is progressing.}
  I0513 19:55:11.176638 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0513 19:55:11.177118 21 deployment.go:612] Observed deployment test-deployment-n4kch in namespace deployment-7079 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-13 19:55:10 +0000 UTC 2024-05-13 19:55:10 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0513 19:55:11.177171 21 deployment.go:612] Observed deployment test-deployment-n4kch in namespace deployment-7079 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-13 19:55:10 +0000 UTC 2024-05-13 19:55:09 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-n4kch-c8586b885" has successfully progressed.}
  I0513 19:55:11.177353 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0513 19:55:11.177384 21 deployment.go:612] Observed deployment test-deployment-n4kch in namespace deployment-7079 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-13 19:55:10 +0000 UTC 2024-05-13 19:55:10 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0513 19:55:11.177407 21 deployment.go:612] Observed deployment test-deployment-n4kch in namespace deployment-7079 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-13 19:55:10 +0000 UTC 2024-05-13 19:55:09 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-n4kch-c8586b885" has successfully progressed.}
  I0513 19:55:11.177426 21 deployment.go:612] Observed deployment test-deployment-n4kch in namespace deployment-7079 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0513 19:55:11.177641 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0513 19:55:11.177681 21 deployment.go:609] Found deployment test-deployment-n4kch in namespace deployment-7079 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0513 19:55:11.177698 21 deployment.go:620] Deployment test-deployment-n4kch has a patched status
  I0513 19:55:11.190420 21 deployment.go:633] Deployment "test-deployment-n4kch":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-n4kch",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7079",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "84680316-6bb5-4707-838d-4b0eedb6011a",
      ResourceVersion: (string) (len=5) "75281",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851226909,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226911,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226911,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226911,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226911,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=55) "Found new replica set \"test-deployment-n4kch-c8586b885\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0513 19:55:11.205605 21 deployment.go:39] New ReplicaSet "test-deployment-n4kch-c8586b885" of Deployment "test-deployment-n4kch":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-n4kch-c8586b885",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7079",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "76e066c8-90f2-494c-a72f-92e5e83b5d41",
      ResourceVersion: (string) (len=5) "75274",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851226909,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-n4kch",
          UID: (types.UID) (len=36) "84680316-6bb5-4707-838d-4b0eedb6011a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 38 34 36  |k:{\"uid\":\"846|
              00000120  38 30 33 31 36 2d 36 62  62 35 2d 34 37 30 37 2d  |80316-6bb5-4707-|
              00000130  38 33 38 64 2d 34 62 30  65 65 64 62 36 30 31 31  |838d-4b0eedb6011|
              00000140  61 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |a\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0513 19:55:11.214439 21 deployment.go:67] Pod "test-deployment-n4kch-c8586b885-dmsxt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-n4kch-c8586b885-dmsxt",
      GenerateName: (string) (len=32) "test-deployment-n4kch-c8586b885-",
      Namespace: (string) (len=15) "deployment-7079",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c01114a9-8108-47c4-b8fc-c58fd33b2834",
      ResourceVersion: (string) (len=5) "75273",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851226909,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "44e6ea5d9dfe170d9c2da427f58454a0604c70e3161436526bf26a8a865b39e7",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.4.112/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.4.112/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-n4kch-c8586b885",
          UID: (types.UID) (len=36) "76e066c8-90f2-494c-a72f-92e5e83b5d41",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 37 36 65 30 36 36 63  38 2d 39 30 66 32 2d 34  |"76e066c8-90f2-4|
              000000a0  39 34 63 2d 61 37 32 66  2d 39 32 65 35 65 38 33  |94c-a72f-92e5e83|
              000000b0  62 35 64 34 31 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |b5d41\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 34 2e 31 31  32 5c 22 7d 22 3a 7b 22  |.42.4.112\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f8jkz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f8jkz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-7-107.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.7.107",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.7.107"
        }
      },
      PodIP: (string) (len=11) "10.42.4.112",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.4.112"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851226909,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851226910,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://39ff4f0639cb46d554f9e9d50e83092da123eeb7f1f6622cc0e2e5abd7e624bc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:55:11.218323 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7079" for this suite. @ 05/13/24 19:55:11.223
• [2.231 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1726
  STEP: Creating a kubernetes client @ 05/13/24 19:55:11.235
  I0513 19:55:11.235449 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename kubectl @ 05/13/24 19:55:11.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:55:11.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:55:11.275
  I0513 19:55:11.280167 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-114 version'
  I0513 19:55:11.353530 21 builder.go:146] stderr: ""
  I0513 19:55:11.353718 21 builder.go:147] stdout: "Client Version: v1.30.0\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.30.0+rke2r1\n"
  I0513 19:55:11.354111 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-114" for this suite. @ 05/13/24 19:55:11.36
• [0.136 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 05/13/24 19:55:11.371
  I0513 19:55:11.371975 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename gc @ 05/13/24 19:55:11.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:55:11.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:55:11.414
  STEP: create the deployment @ 05/13/24 19:55:11.417
  W0513 19:55:11.431421      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 05/13/24 19:55:11.431
  STEP: delete the deployment @ 05/13/24 19:55:11.579
  E0513 19:55:11.585995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 05/13/24 19:55:11.602
  E0513 19:55:12.586103      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/13/24 19:55:12.662
  I0513 19:55:12.892914 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0513 19:55:12.893321 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-494" for this suite. @ 05/13/24 19:55:12.898
• [1.542 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 05/13/24 19:55:12.932
  I0513 19:55:12.932057 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:55:12.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:55:13.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:55:13.344
  STEP: Creating configMap with name projected-configmap-test-volume-e1482844-631b-4bfb-9909-409a222e0b07 @ 05/13/24 19:55:13.348
  STEP: Creating a pod to test consume configMaps @ 05/13/24 19:55:13.355
  E0513 19:55:13.586748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:14.587646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:15.588464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:16.588591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 19:55:17.387
  I0513 19:55:17.392430 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-projected-configmaps-86bdab41-3afb-43c4-bf8e-18c3cd42b3c1 container agnhost-container: <nil>
  STEP: delete the pod @ 05/13/24 19:55:17.416
  I0513 19:55:17.461038 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8172" for this suite. @ 05/13/24 19:55:17.467
• [4.559 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 05/13/24 19:55:17.492
  I0513 19:55:17.492911 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename field-validation @ 05/13/24 19:55:17.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:55:17.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:55:17.539
  STEP: apply creating a deployment @ 05/13/24 19:55:17.545
  I0513 19:55:17.567002 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7959" for this suite. @ 05/13/24 19:55:17.575
  E0513 19:55:17.589541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
• [0.114 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 05/13/24 19:55:17.607
  I0513 19:55:17.607030 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename sched-preemption @ 05/13/24 19:55:17.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:55:17.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:55:17.642
  I0513 19:55:17.682159 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0513 19:55:18.591760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:19.592804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:20.593669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:21.594275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:22.594302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:23.594485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:24.595304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:25.595676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:26.595740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:27.595956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:28.596860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:29.597649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:30.598030      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:31.598373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:32.598361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:33.598418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:34.598651      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:35.598792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:36.599654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:37.600030      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:38.600219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:39.600804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:40.601195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:41.601348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:42.601571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:43.601906      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:44.602203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:45.602476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:46.602708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:47.603071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:48.603518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:49.603756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:50.604793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:51.604928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:52.605398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:53.605671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:54.605743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:55.606414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:56.606661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:57.607103      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:58.608160      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:55:59.608305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:00.608635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:01.609040      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:02.609306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:03.610081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:04.610988      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:05.611557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:06.611626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:07.611760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:08.612801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:09.613043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:10.614016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:11.614307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:12.614456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:13.614622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:14.615757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:15.616314      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:16.616476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:17.616635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 19:56:17.897817 21 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 05/13/24 19:56:17.903
  I0513 19:56:17.960779 21 preemption.go:269] Created pod: pod0-0-sched-preemption-low-priority
  I0513 19:56:17.974456 21 preemption.go:269] Created pod: pod0-1-sched-preemption-medium-priority
  I0513 19:56:18.016250 21 preemption.go:269] Created pod: pod1-0-sched-preemption-medium-priority
  I0513 19:56:18.065057 21 preemption.go:269] Created pod: pod1-1-sched-preemption-medium-priority
  I0513 19:56:18.442652 21 preemption.go:269] Created pod: pod2-0-sched-preemption-medium-priority
  I0513 19:56:18.460077 21 preemption.go:269] Created pod: pod2-1-sched-preemption-medium-priority
  I0513 19:56:18.530629 21 preemption.go:269] Created pod: pod3-0-sched-preemption-medium-priority
  E0513 19:56:18.617705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 19:56:18.705226 21 preemption.go:269] Created pod: pod3-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 05/13/24 19:56:18.705
  E0513 19:56:19.619585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:20.617812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:21.618139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:22.618284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 05/13/24 19:56:23.367
  E0513 19:56:23.618887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:24.619373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:25.619331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:26.619997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:27.620637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 19:56:27.631763 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2942" for this suite. @ 05/13/24 19:56:27.639
• [70.051 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 05/13/24 19:56:27.658
  I0513 19:56:27.658220 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename disruption @ 05/13/24 19:56:27.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:56:27.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:56:27.7
  STEP: Creating a kubernetes client @ 05/13/24 19:56:27.708
  I0513 19:56:27.708372 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename disruption-2 @ 05/13/24 19:56:27.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:56:27.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:56:27.746
  STEP: Waiting for the pdb to be processed @ 05/13/24 19:56:27.767
  E0513 19:56:28.620865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:29.621460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 05/13/24 19:56:29.786
  E0513 19:56:30.621616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:31.621711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 05/13/24 19:56:31.8
  E0513 19:56:32.621865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:33.622912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 05/13/24 19:56:33.827
  STEP: listing a collection of PDBs in namespace disruption-3069 @ 05/13/24 19:56:33.855
  STEP: deleting a collection of PDBs @ 05/13/24 19:56:33.864
  STEP: Waiting for the PDB collection to be deleted @ 05/13/24 19:56:33.896
  I0513 19:56:33.901049 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-167" for this suite. @ 05/13/24 19:56:33.912
  I0513 19:56:33.926028 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3069" for this suite. @ 05/13/24 19:56:33.933
• [6.299 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 05/13/24 19:56:33.958
  I0513 19:56:33.958664 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:56:33.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:56:34.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:56:34.024
  STEP: Creating configMap with name projected-configmap-test-volume-map-a0c875b1-7fa3-467c-979c-f5334b6369c6 @ 05/13/24 19:56:34.028
  STEP: Creating a pod to test consume configMaps @ 05/13/24 19:56:34.039
  E0513 19:56:34.623336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:35.623718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:36.624051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:37.624411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 19:56:38.094
  I0513 19:56:38.098255 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-projected-configmaps-c4d4e9bf-5639-4d1c-86cb-aaf0583f2d61 container agnhost-container: <nil>
  STEP: delete the pod @ 05/13/24 19:56:38.105
  I0513 19:56:38.139805 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6850" for this suite. @ 05/13/24 19:56:38.144
• [4.199 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 05/13/24 19:56:38.158
  I0513 19:56:38.158580 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename emptydir @ 05/13/24 19:56:38.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:56:38.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:56:38.188
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 05/13/24 19:56:38.199
  E0513 19:56:38.625288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:39.626281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:40.627041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:41.627130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 19:56:42.241
  I0513 19:56:42.247228 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-95806939-9940-410b-addc-0ba6d3e003ef container test-container: <nil>
  STEP: delete the pod @ 05/13/24 19:56:42.267
  I0513 19:56:42.304535 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6866" for this suite. @ 05/13/24 19:56:42.31
• [4.163 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 05/13/24 19:56:42.321
  I0513 19:56:42.321708 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename disruption @ 05/13/24 19:56:42.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:56:42.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:56:42.373
  STEP: Waiting for the pdb to be processed @ 05/13/24 19:56:42.386
  E0513 19:56:42.627752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:43.628306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 05/13/24 19:56:44.39
  STEP: Waiting for all pods to be running @ 05/13/24 19:56:44.402
  I0513 19:56:44.425007 21 disruption.go:578] running pods: 0 < 1
  E0513 19:56:44.628644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:45.630070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 05/13/24 19:56:46.459
  STEP: Waiting for the pdb to be processed @ 05/13/24 19:56:46.476
  STEP: Patching PodDisruptionBudget status @ 05/13/24 19:56:46.489
  STEP: Waiting for the pdb to be processed @ 05/13/24 19:56:46.509
  I0513 19:56:46.512312 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7137" for this suite. @ 05/13/24 19:56:46.519
• [4.210 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 05/13/24 19:56:46.532
  I0513 19:56:46.532143 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename configmap @ 05/13/24 19:56:46.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:56:46.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:56:46.567
  STEP: Creating configMap with name configmap-test-upd-2fe5cd5c-f4a7-4c8c-9a39-8b412c207e20 @ 05/13/24 19:56:46.581
  STEP: Creating the pod @ 05/13/24 19:56:46.591
  E0513 19:56:46.630944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:47.632132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:48.633064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-2fe5cd5c-f4a7-4c8c-9a39-8b412c207e20 @ 05/13/24 19:56:48.645
  STEP: waiting to observe update in volume @ 05/13/24 19:56:48.652
  E0513 19:56:49.633982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:50.634252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 19:56:50.674734 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-780" for this suite. @ 05/13/24 19:56:50.68
• [4.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 05/13/24 19:56:50.688
  I0513 19:56:50.688580 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/13/24 19:56:50.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:56:50.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:56:50.715
  STEP: set up a multi version CRD @ 05/13/24 19:56:50.718
  I0513 19:56:50.719280 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  E0513 19:56:51.635259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:52.636214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:53.636711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:54.637808      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: rename a version @ 05/13/24 19:56:55.127
  STEP: check the new version name is served @ 05/13/24 19:56:55.351
  E0513 19:56:55.638537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:56.639830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 05/13/24 19:56:57.027
  E0513 19:56:57.640557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 05/13/24 19:56:57.818
  E0513 19:56:58.641484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:56:59.642089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:00.642449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 19:57:01.419918 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7342" for this suite. @ 05/13/24 19:57:01.429
• [10.750 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 05/13/24 19:57:01.439
  I0513 19:57:01.439453 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename emptydir @ 05/13/24 19:57:01.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:57:01.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:57:01.477
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 05/13/24 19:57:01.482
  E0513 19:57:01.642660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:02.642788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:03.642909      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:04.643068      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:05.643904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:06.644374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:07.644518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 19:57:07.789
  I0513 19:57:07.792601 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-554a753e-7ffd-4bbe-9a40-c4b4e31a644f container test-container: <nil>
  STEP: delete the pod @ 05/13/24 19:57:07.807
  I0513 19:57:07.824956 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-559" for this suite. @ 05/13/24 19:57:07.829
• [6.403 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 05/13/24 19:57:07.842
  I0513 19:57:07.842556 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename resourcequota @ 05/13/24 19:57:07.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:57:07.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:57:07.866
  STEP: Counting existing ResourceQuota @ 05/13/24 19:57:07.87
  E0513 19:57:08.644918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:09.645067      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:10.645173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:11.645323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:12.646330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/13/24 19:57:12.876
  STEP: Ensuring resource quota status is calculated @ 05/13/24 19:57:12.893
  E0513 19:57:13.647329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:14.647529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 05/13/24 19:57:14.901
  STEP: Ensuring resource quota status captures replication controller creation @ 05/13/24 19:57:14.933
  E0513 19:57:15.648567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:16.649021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 05/13/24 19:57:16.946
  STEP: Ensuring resource quota status released usage @ 05/13/24 19:57:16.974
  E0513 19:57:17.649543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:18.649801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 19:57:18.979729 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4431" for this suite. @ 05/13/24 19:57:18.989
• [11.162 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 05/13/24 19:57:19.004
  I0513 19:57:19.004404 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename statefulset @ 05/13/24 19:57:19.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:57:19.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:57:19.065
  STEP: Creating service test in namespace statefulset-7346 @ 05/13/24 19:57:19.069
  STEP: Creating a new StatefulSet @ 05/13/24 19:57:19.078
  I0513 19:57:19.111974 21 wait.go:40] Found 0 stateful pods, waiting for 3
  E0513 19:57:19.649828      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:20.650004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:21.650170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:22.650671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:23.651595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:24.651831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:25.652023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:26.652930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:27.653487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:28.653916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 19:57:29.115821 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0513 19:57:29.115881 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0513 19:57:29.115901 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 05/13/24 19:57:29.138
  I0513 19:57:29.169682 21 statefulset.go:2241] Updating stateful set ss2
  STEP: Creating a new revision @ 05/13/24 19:57:29.169
  E0513 19:57:29.654956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:30.655677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:31.656391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:32.657021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:33.657131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:34.657420      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:35.657846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:36.657998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:37.658485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:38.658784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 05/13/24 19:57:39.178
  STEP: Performing a canary update @ 05/13/24 19:57:39.179
  I0513 19:57:39.205155 21 statefulset.go:2241] Updating stateful set ss2
  I0513 19:57:39.229202 21 wait.go:74] Waiting for Pod statefulset-7346/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0513 19:57:39.658925      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:40.659118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:41.659508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:42.659715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:43.660822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:44.661401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:45.661565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:46.662091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:47.662217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:48.662921      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 05/13/24 19:57:49.215
  I0513 19:57:49.300967 21 wait.go:40] Found 2 stateful pods, waiting for 3
  E0513 19:57:49.663205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:50.663335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:51.663653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:52.664761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:53.665058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:54.665205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:55.665695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:56.665862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:57.666128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:57:58.666557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 19:57:59.280083 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0513 19:57:59.280155 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0513 19:57:59.280179 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 05/13/24 19:57:59.287
  I0513 19:57:59.308500 21 statefulset.go:2241] Updating stateful set ss2
  I0513 19:57:59.328870 21 wait.go:74] Waiting for Pod statefulset-7346/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0513 19:57:59.667537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:00.668334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:01.668803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:02.668977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:03.669128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:04.669248      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:05.669668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:06.669794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:07.669905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:08.670053      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 19:58:09.366745 21 statefulset.go:2241] Updating stateful set ss2
  I0513 19:58:09.377048 21 wait.go:56] Waiting for StatefulSet statefulset-7346/ss2 to complete update
  I0513 19:58:09.377152 21 wait.go:63] Waiting for Pod statefulset-7346/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0513 19:58:09.670161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:10.670695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:11.670716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:12.671049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:13.671194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:14.671332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:15.671655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:16.671813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:17.672266      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:18.673029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 19:58:19.383933 21 statefulset.go:135] Deleting all statefulset in ns statefulset-7346
  I0513 19:58:19.389714 21 rest.go:150] Scaling statefulset ss2 to 0
  E0513 19:58:19.673892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:20.674284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:21.674444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:22.674579      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:23.675338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:24.675630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:25.676478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:26.676600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:27.676797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:28.676946      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 19:58:29.411841 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0513 19:58:29.417838 21 rest.go:88] Deleting statefulset ss2
  I0513 19:58:29.443967 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7346" for this suite. @ 05/13/24 19:58:29.453
• [70.468 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 05/13/24 19:58:29.472
  I0513 19:58:29.472743 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename resourcequota @ 05/13/24 19:58:29.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:58:29.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:58:29.519
  STEP: Creating a ResourceQuota with best effort scope @ 05/13/24 19:58:29.522
  STEP: Ensuring ResourceQuota status is calculated @ 05/13/24 19:58:29.531
  E0513 19:58:29.677554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:30.677698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 05/13/24 19:58:31.535
  STEP: Ensuring ResourceQuota status is calculated @ 05/13/24 19:58:31.544
  E0513 19:58:31.678230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:32.678418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 05/13/24 19:58:33.552
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 05/13/24 19:58:33.583
  E0513 19:58:33.678707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:34.679673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 05/13/24 19:58:35.595
  E0513 19:58:35.680045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:36.680128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 05/13/24 19:58:37.599
  STEP: Ensuring resource quota status released the pod usage @ 05/13/24 19:58:37.635
  E0513 19:58:37.680556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:38.680699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 05/13/24 19:58:39.64
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 05/13/24 19:58:39.661
  E0513 19:58:39.681496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:40.681785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 05/13/24 19:58:41.665
  E0513 19:58:41.682849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:42.683564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 05/13/24 19:58:43.668
  E0513 19:58:43.684161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota status released the pod usage @ 05/13/24 19:58:43.697
  E0513 19:58:44.685050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:45.685186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 19:58:45.703802 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-415" for this suite. @ 05/13/24 19:58:45.71
• [16.248 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 05/13/24 19:58:45.722
  I0513 19:58:45.722256 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename field-validation @ 05/13/24 19:58:45.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:58:45.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:58:45.773
  I0513 19:58:45.778766 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  W0513 19:58:45.779882      21 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc000981370 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0513 19:58:46.685328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:47.686297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0513 19:58:48.340747      21 warnings.go:70] unknown field "alpha"
  W0513 19:58:48.340888      21 warnings.go:70] unknown field "beta"
  W0513 19:58:48.340898      21 warnings.go:70] unknown field "delta"
  W0513 19:58:48.340906      21 warnings.go:70] unknown field "epsilon"
  W0513 19:58:48.340914      21 warnings.go:70] unknown field "gamma"
  E0513 19:58:48.686849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 19:58:48.943617 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-456" for this suite. @ 05/13/24 19:58:48.952
• [3.241 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 05/13/24 19:58:48.965
  I0513 19:58:48.965577 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename init-container @ 05/13/24 19:58:48.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:58:49.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:58:49.024
  STEP: creating the pod @ 05/13/24 19:58:49.028
  I0513 19:58:49.028873 21 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E0513 19:58:49.686992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:50.687113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:51.687266      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:52.687892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:53.688495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:54.689087      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 19:58:55.246471 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9691" for this suite. @ 05/13/24 19:58:55.256
• [6.305 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 05/13/24 19:58:55.273
  I0513 19:58:55.273886 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename hostport @ 05/13/24 19:58:55.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:58:55.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:58:55.299
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 05/13/24 19:58:55.305
  E0513 19:58:55.689763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:56.690092      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.7.107 on the node which pod1 resides and expect scheduled @ 05/13/24 19:58:57.323
  E0513 19:58:57.690960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:58:58.691310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.7.107 but use UDP protocol on the node which pod2 resides @ 05/13/24 19:58:59.336
  E0513 19:58:59.692061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:00.692254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:01.693346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:02.693417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:03.693909      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:04.693991      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 05/13/24 19:59:05.389
  I0513 19:59:05.389415 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.7.107 http://127.0.0.1:54323/hostname] Namespace:hostport-6137 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 19:59:05.389437 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 19:59:05.390328 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 19:59:05.390402 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-6137/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.7.107+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.7.107, port: 54323 @ 05/13/24 19:59:05.51
  I0513 19:59:05.510953 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.7.107:54323/hostname] Namespace:hostport-6137 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 19:59:05.510989 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 19:59:05.511825 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 19:59:05.511901 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-6137/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.7.107%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.7.107, port: 54323 UDP @ 05/13/24 19:59:05.642
  I0513 19:59:05.642430 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.7.107 54323] Namespace:hostport-6137 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 19:59:05.642624 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 19:59:05.643799 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 19:59:05.644027 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-6137/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.7.107+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0513 19:59:05.694974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:06.695073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:07.695344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:08.695774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:09.695897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:10.696327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 19:59:10.761875 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-6137" for this suite. @ 05/13/24 19:59:10.772
• [15.511 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 05/13/24 19:59:10.785
  I0513 19:59:10.785198 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename secrets @ 05/13/24 19:59:10.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:59:10.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:59:10.819
  STEP: Creating secret with name secret-test-map-f79b59b0-2919-4ba4-bb7c-6dab8393a8f8 @ 05/13/24 19:59:10.823
  STEP: Creating a pod to test consume secrets @ 05/13/24 19:59:10.84
  E0513 19:59:11.696424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:12.696624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:13.696773      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:14.697264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 19:59:14.893
  I0513 19:59:14.897168 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-secrets-3aafaca4-2c6a-49ee-8610-a4a4c11718b3 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/13/24 19:59:14.911
  I0513 19:59:14.938251 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7680" for this suite. @ 05/13/24 19:59:14.954
• [4.181 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 05/13/24 19:59:14.966
  I0513 19:59:14.966173 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename runtimeclass @ 05/13/24 19:59:14.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:59:14.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:59:15.002
  STEP: getting /apis @ 05/13/24 19:59:15.007
  STEP: getting /apis/node.k8s.io @ 05/13/24 19:59:15.012
  STEP: getting /apis/node.k8s.io/v1 @ 05/13/24 19:59:15.014
  STEP: creating @ 05/13/24 19:59:15.016
  STEP: watching @ 05/13/24 19:59:15.062
  I0513 19:59:15.063035 21 runtimeclass.go:275] starting watch
  STEP: getting @ 05/13/24 19:59:15.077
  STEP: listing @ 05/13/24 19:59:15.082
  STEP: patching @ 05/13/24 19:59:15.085
  STEP: updating @ 05/13/24 19:59:15.096
  I0513 19:59:15.107524 21 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 05/13/24 19:59:15.107
  STEP: deleting a collection @ 05/13/24 19:59:15.126
  I0513 19:59:15.153421 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4352" for this suite. @ 05/13/24 19:59:15.158
• [0.222 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1793
  STEP: Creating a kubernetes client @ 05/13/24 19:59:15.189
  I0513 19:59:15.189303 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename kubectl @ 05/13/24 19:59:15.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:59:15.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:59:15.232
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/13/24 19:59:15.236
  I0513 19:59:15.237044 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-9936 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0513 19:59:15.346188 21 builder.go:146] stderr: ""
  I0513 19:59:15.346250 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 05/13/24 19:59:15.346
  E0513 19:59:15.698372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:16.698481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:17.698613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:18.698715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:19.698864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 05/13/24 19:59:20.398
  I0513 19:59:20.398163 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-9936 get pod e2e-test-httpd-pod -o json'
  I0513 19:59:20.493290 21 builder.go:146] stderr: ""
  I0513 19:59:20.493455 21 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"163c9e81617d3da46090ca8095c9ec50c9c24e452f59369bbe876749b53e716e\",\n            \"cni.projectcalico.org/podIP\": \"10.42.4.130/32\",\n            \"cni.projectcalico.org/podIPs\": \"10.42.4.130/32\"\n        },\n        \"creationTimestamp\": \"2024-05-13T19:59:15Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-9936\",\n        \"resourceVersion\": \"77362\",\n        \"uid\": \"07df3aa6-bc27-4b32-aae7-48c72d23c43c\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-m5p8c\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-7-107.us-east-2.compute.internal\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-m5p8c\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-13T19:59:18Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-13T19:59:15Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-13T19:59:18Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-13T19:59:18Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-13T19:59:15Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://b4a50860445033432faaac54d3b157e00f921391bb278048074ef3484a970edb\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-05-13T19:59:17Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.7.107\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.7.107\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.42.4.130\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.42.4.130\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-05-13T19:59:15Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 05/13/24 19:59:20.493
  I0513 19:59:20.493611 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-9936 replace -f -'
  E0513 19:59:20.699275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 19:59:20.720681 21 builder.go:146] stderr: ""
  I0513 19:59:20.720726 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 05/13/24 19:59:20.72
  I0513 19:59:20.724779 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-9936 delete pods e2e-test-httpd-pod'
  E0513 19:59:21.699520      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 19:59:22.473699 21 builder.go:146] stderr: ""
  I0513 19:59:22.473765 21 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0513 19:59:22.473879 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9936" for this suite. @ 05/13/24 19:59:22.478
• [7.297 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 05/13/24 19:59:22.486
  I0513 19:59:22.486558 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename kubelet-test @ 05/13/24 19:59:22.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:59:22.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:59:22.523
  E0513 19:59:22.700339      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:23.700460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 19:59:24.569789 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9863" for this suite. @ 05/13/24 19:59:24.575
• [2.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 05/13/24 19:59:24.592
  I0513 19:59:24.592980 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename chunking @ 05/13/24 19:59:24.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:59:24.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:59:24.627
  STEP: creating a large number of resources @ 05/13/24 19:59:24.631
  E0513 19:59:24.701346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:25.701783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:26.702305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:27.703762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:28.704484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:29.704565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:30.704929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:31.705639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:32.706084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:33.706381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:34.706535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:35.707115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:36.707605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:37.708419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:38.709431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:39.710827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:40.711330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:41.711800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 05/13/24 19:59:42.309
  I0513 19:59:42.349735 21 chunking.go:98] Retrieved 17/17 results with rv 77932 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzIsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0513 19:59:42.400399 21 chunking.go:98] Retrieved 17/17 results with rv 77932 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0513 19:59:42.450484 21 chunking.go:98] Retrieved 17/17 results with rv 77932 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzIsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0513 19:59:42.500530 21 chunking.go:98] Retrieved 17/17 results with rv 77932 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzIsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0513 19:59:42.550894 21 chunking.go:98] Retrieved 17/17 results with rv 77932 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzIsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0513 19:59:42.599810 21 chunking.go:98] Retrieved 17/17 results with rv 77932 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzIsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0513 19:59:42.657363 21 chunking.go:98] Retrieved 17/17 results with rv 77932 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzIsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  E0513 19:59:42.712429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 19:59:42.714713 21 chunking.go:98] Retrieved 17/17 results with rv 77932 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzIsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0513 19:59:42.750933 21 chunking.go:98] Retrieved 17/17 results with rv 77932 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzIsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0513 19:59:42.800199 21 chunking.go:98] Retrieved 17/17 results with rv 77932 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzIsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0513 19:59:42.850213 21 chunking.go:98] Retrieved 17/17 results with rv 77932 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzIsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0513 19:59:42.901546 21 chunking.go:98] Retrieved 17/17 results with rv 77932 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzIsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0513 19:59:42.949910 21 chunking.go:98] Retrieved 17/17 results with rv 77932 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzIsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0513 19:59:42.999933 21 chunking.go:98] Retrieved 17/17 results with rv 77932 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzIsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0513 19:59:43.049656 21 chunking.go:98] Retrieved 17/17 results with rv 77932 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzIsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0513 19:59:43.099818 21 chunking.go:98] Retrieved 17/17 results with rv 77932 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzIsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0513 19:59:43.151862 21 chunking.go:98] Retrieved 17/17 results with rv 77932 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzIsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0513 19:59:43.202426 21 chunking.go:98] Retrieved 17/17 results with rv 77932 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzIsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0513 19:59:43.253346 21 chunking.go:98] Retrieved 17/17 results with rv 77932 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzIsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0513 19:59:43.301413 21 chunking.go:98] Retrieved 17/17 results with rv 77932 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzIsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0513 19:59:43.351380 21 chunking.go:98] Retrieved 17/17 results with rv 77932 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzIsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0513 19:59:43.399862 21 chunking.go:98] Retrieved 17/17 results with rv 77932 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzIsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0513 19:59:43.449839 21 chunking.go:98] Retrieved 17/17 results with rv 77932 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzIsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0513 19:59:43.499189 21 chunking.go:98] Retrieved 9/17 results with rv 77932 and continue 
  I0513 19:59:43.554287 21 chunking.go:98] Retrieved 17/17 results with rv 77934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0513 19:59:43.599693 21 chunking.go:98] Retrieved 17/17 results with rv 77934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0513 19:59:43.650123 21 chunking.go:98] Retrieved 17/17 results with rv 77934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0513 19:59:43.699907 21 chunking.go:98] Retrieved 17/17 results with rv 77934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  E0513 19:59:43.713105      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 19:59:43.772835 21 chunking.go:98] Retrieved 17/17 results with rv 77934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0513 19:59:43.808545 21 chunking.go:98] Retrieved 17/17 results with rv 77934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0513 19:59:43.859786 21 chunking.go:98] Retrieved 17/17 results with rv 77934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0513 19:59:43.899322 21 chunking.go:98] Retrieved 17/17 results with rv 77934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0513 19:59:43.950107 21 chunking.go:98] Retrieved 17/17 results with rv 77934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0513 19:59:44.002818 21 chunking.go:98] Retrieved 17/17 results with rv 77934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0513 19:59:44.051943 21 chunking.go:98] Retrieved 17/17 results with rv 77934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0513 19:59:44.099603 21 chunking.go:98] Retrieved 17/17 results with rv 77934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0513 19:59:44.151587 21 chunking.go:98] Retrieved 17/17 results with rv 77934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0513 19:59:44.202114 21 chunking.go:98] Retrieved 17/17 results with rv 77934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0513 19:59:44.249598 21 chunking.go:98] Retrieved 17/17 results with rv 77934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0513 19:59:44.300885 21 chunking.go:98] Retrieved 17/17 results with rv 77934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0513 19:59:44.349727 21 chunking.go:98] Retrieved 17/17 results with rv 77934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0513 19:59:44.399811 21 chunking.go:98] Retrieved 17/17 results with rv 77934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0513 19:59:44.449998 21 chunking.go:98] Retrieved 17/17 results with rv 77934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0513 19:59:44.503542 21 chunking.go:98] Retrieved 17/17 results with rv 77934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0513 19:59:44.551510 21 chunking.go:98] Retrieved 17/17 results with rv 77934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0513 19:59:44.600059 21 chunking.go:98] Retrieved 17/17 results with rv 77934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0513 19:59:44.675304 21 chunking.go:98] Retrieved 17/17 results with rv 77934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzQsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0513 19:59:44.706961 21 chunking.go:98] Retrieved 9/17 results with rv 77934 and continue 
  E0513 19:59:44.714174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 19:59:44.753410 21 chunking.go:98] Retrieved 17/17 results with rv 77939 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzksInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0513 19:59:44.805983 21 chunking.go:98] Retrieved 17/17 results with rv 77939 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzksInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0513 19:59:44.851383 21 chunking.go:98] Retrieved 17/17 results with rv 77939 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzksInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0513 19:59:44.914988 21 chunking.go:98] Retrieved 17/17 results with rv 77939 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzksInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0513 19:59:44.958115 21 chunking.go:98] Retrieved 17/17 results with rv 77939 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzksInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0513 19:59:45.004334 21 chunking.go:98] Retrieved 17/17 results with rv 77939 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzksInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0513 19:59:45.050483 21 chunking.go:98] Retrieved 17/17 results with rv 77939 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzksInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0513 19:59:45.105972 21 chunking.go:98] Retrieved 17/17 results with rv 77939 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzksInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0513 19:59:45.160958 21 chunking.go:98] Retrieved 17/17 results with rv 77939 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzksInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0513 19:59:45.202285 21 chunking.go:98] Retrieved 17/17 results with rv 77939 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzksInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0513 19:59:45.251513 21 chunking.go:98] Retrieved 17/17 results with rv 77939 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzksInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0513 19:59:45.302690 21 chunking.go:98] Retrieved 17/17 results with rv 77939 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzksInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0513 19:59:45.357384 21 chunking.go:98] Retrieved 17/17 results with rv 77939 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzksInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0513 19:59:45.400675 21 chunking.go:98] Retrieved 17/17 results with rv 77939 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzksInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0513 19:59:45.453399 21 chunking.go:98] Retrieved 17/17 results with rv 77939 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzksInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0513 19:59:45.506729 21 chunking.go:98] Retrieved 17/17 results with rv 77939 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzksInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0513 19:59:45.553720 21 chunking.go:98] Retrieved 17/17 results with rv 77939 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzksInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0513 19:59:45.602955 21 chunking.go:98] Retrieved 17/17 results with rv 77939 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzksInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0513 19:59:45.652630 21 chunking.go:98] Retrieved 17/17 results with rv 77939 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzksInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0513 19:59:45.699678 21 chunking.go:98] Retrieved 17/17 results with rv 77939 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzksInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  E0513 19:59:45.714869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 19:59:45.751316 21 chunking.go:98] Retrieved 17/17 results with rv 77939 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzksInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0513 19:59:45.801163 21 chunking.go:98] Retrieved 17/17 results with rv 77939 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzksInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0513 19:59:45.851420 21 chunking.go:98] Retrieved 17/17 results with rv 77939 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc5MzksInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0513 19:59:45.901010 21 chunking.go:98] Retrieved 9/17 results with rv 77939 and continue 
  STEP: retrieving those results all at once @ 05/13/24 19:59:45.901
  I0513 19:59:45.969011 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-336" for this suite. @ 05/13/24 19:59:46
• [21.476 seconds]
------------------------------
S
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 05/13/24 19:59:46.068
  I0513 19:59:46.068085 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename configmap @ 05/13/24 19:59:46.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:59:46.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:59:46.112
  STEP: Creating configMap configmap-8152/configmap-test-1f77aa50-b25e-44db-aaf1-3f60c1ac50a8 @ 05/13/24 19:59:46.119
  STEP: Creating a pod to test consume configMaps @ 05/13/24 19:59:46.13
  E0513 19:59:46.715635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:47.716752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:48.717013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:49.716993      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 19:59:50.159
  I0513 19:59:50.163056 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-configmaps-f9c074ce-b080-4a58-a779-8897209a6021 container env-test: <nil>
  STEP: delete the pod @ 05/13/24 19:59:50.171
  I0513 19:59:50.460579 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8152" for this suite. @ 05/13/24 19:59:50.465
• [4.405 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 05/13/24 19:59:50.474
  I0513 19:59:50.474655 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/13/24 19:59:50.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:59:50.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:59:50.515
  E0513 19:59:50.717215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting /apis @ 05/13/24 19:59:50.903
  STEP: getting /apis/admissionregistration.k8s.io @ 05/13/24 19:59:50.91
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 05/13/24 19:59:50.912
  STEP: creating @ 05/13/24 19:59:50.913
  STEP: getting @ 05/13/24 19:59:50.954
  STEP: listing @ 05/13/24 19:59:50.961
  STEP: watching @ 05/13/24 19:59:50.966
  I0513 19:59:50.966586 21 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 05/13/24 19:59:50.969
  STEP: updating @ 05/13/24 19:59:50.988
  I0513 19:59:51.018247 21 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  STEP: getting /status @ 05/13/24 19:59:51.018
  STEP: patching /status @ 05/13/24 19:59:51.025
  STEP: updating /status @ 05/13/24 19:59:51.039
  STEP: deleting @ 05/13/24 19:59:51.079
  STEP: deleting a collection @ 05/13/24 19:59:51.127
  I0513 19:59:51.165510 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3108" for this suite. @ 05/13/24 19:59:51.176
• [0.712 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 05/13/24 19:59:51.187
  I0513 19:59:51.187359 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename subpath @ 05/13/24 19:59:51.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:59:51.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:59:51.232
  STEP: Setting up data @ 05/13/24 19:59:51.235
  STEP: Creating pod pod-subpath-test-downwardapi-27v7 @ 05/13/24 19:59:51.259
  STEP: Creating a pod to test atomic-volume-subpath @ 05/13/24 19:59:51.259
  E0513 19:59:51.717218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:52.717541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:53.718575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:54.718657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:55.719430      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:56.719686      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:57.720416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:58.720534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 19:59:59.720738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:00.720910      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:01.721971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:02.722155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:03.722904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:04.723182      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:05.724053      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:06.724411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:07.724487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:08.724917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:09.725807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:10.726196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:11.727307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:12.727846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:13.728120      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:14.728232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:00:15.375
  I0513 20:00:15.377995 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-subpath-test-downwardapi-27v7 container test-container-subpath-downwardapi-27v7: <nil>
  STEP: delete the pod @ 05/13/24 20:00:15.388
  STEP: Deleting pod pod-subpath-test-downwardapi-27v7 @ 05/13/24 20:00:15.423
  I0513 20:00:15.423382 21 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-27v7" in namespace "subpath-6573"
  I0513 20:00:15.426982 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6573" for this suite. @ 05/13/24 20:00:15.433
• [24.254 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 05/13/24 20:00:15.441
  I0513 20:00:15.441711 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename resourcequota @ 05/13/24 20:00:15.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:00:15.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:00:15.488
  STEP: Creating a ResourceQuota @ 05/13/24 20:00:15.491
  STEP: Getting a ResourceQuota @ 05/13/24 20:00:15.503
  STEP: Listing all ResourceQuotas with LabelSelector @ 05/13/24 20:00:15.512
  STEP: Patching the ResourceQuota @ 05/13/24 20:00:15.516
  STEP: Deleting a Collection of ResourceQuotas @ 05/13/24 20:00:15.528
  STEP: Verifying the deleted ResourceQuota @ 05/13/24 20:00:15.554
  I0513 20:00:15.557382 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2251" for this suite. @ 05/13/24 20:00:15.561
• [0.131 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 05/13/24 20:00:15.574
  I0513 20:00:15.574732 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename events @ 05/13/24 20:00:15.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:00:15.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:00:15.617
  STEP: Create set of events @ 05/13/24 20:00:15.622
  STEP: get a list of Events with a label in the current namespace @ 05/13/24 20:00:15.663
  STEP: delete a list of events @ 05/13/24 20:00:15.672
  I0513 20:00:15.672343 21 events.go:224] requesting DeleteCollection of events
  E0513 20:00:15.728662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check that the list of events matches the requested quantity @ 05/13/24 20:00:15.73
  I0513 20:00:15.737196 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8554" for this suite. @ 05/13/24 20:00:15.745
• [0.183 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 05/13/24 20:00:15.758
  I0513 20:00:15.758258 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename pods @ 05/13/24 20:00:15.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:00:15.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:00:15.803
  STEP: creating pod @ 05/13/24 20:00:15.808
  E0513 20:00:16.729552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:17.729504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:00:17.854091 21 pods.go:83] Pod pod-hostip-d1a852ab-0e57-43b5-8bcc-f9e93db14f5d has hostIP: 172.31.7.107
  I0513 20:00:17.854428 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2349" for this suite. @ 05/13/24 20:00:17.863
• [2.118 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 05/13/24 20:00:17.876
  I0513 20:00:17.876854 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename projected @ 05/13/24 20:00:17.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:00:17.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:00:17.91
  STEP: Creating a pod to test downward API volume plugin @ 05/13/24 20:00:17.916
  E0513 20:00:18.729551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:19.729750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:20.730260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:21.730644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:00:21.956
  I0513 20:00:21.959489 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod downwardapi-volume-faad58ee-2264-41e6-bb2c-bafa14eb8ba8 container client-container: <nil>
  STEP: delete the pod @ 05/13/24 20:00:21.966
  I0513 20:00:21.981247 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9707" for this suite. @ 05/13/24 20:00:21.985
• [4.116 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 05/13/24 20:00:21.994
  I0513 20:00:21.994597 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename prestop @ 05/13/24 20:00:21.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:00:22.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:00:22.03
  STEP: Creating server pod server in namespace prestop-8608 @ 05/13/24 20:00:22.034
  STEP: Waiting for pods to come up. @ 05/13/24 20:00:22.049
  E0513 20:00:22.730982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:23.731254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-8608 @ 05/13/24 20:00:24.067
  E0513 20:00:24.731828      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:25.732082      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 05/13/24 20:00:26.099
  E0513 20:00:26.732270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:27.732365      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:28.732806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:29.732966      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:30.733572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:00:31.132849 21 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 05/13/24 20:00:31.133
  I0513 20:00:31.163864 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-8608" for this suite. @ 05/13/24 20:00:31.184
• [9.205 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 05/13/24 20:00:31.2
  I0513 20:00:31.200225 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename container-probe @ 05/13/24 20:00:31.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:00:31.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:00:31.242
  STEP: Creating pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970 @ 05/13/24 20:00:31.246
  E0513 20:00:31.733820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:32.734530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/13/24 20:00:33.282
  I0513 20:00:33.287382 21 container_probe.go:1749] Initial restart count of pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a is 0
  I0513 20:00:33.292602 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:00:33.734724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:34.734850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:00:35.300721 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:00:35.735201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:36.735423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:00:37.304366 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:00:37.735836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:38.735980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:00:39.308588 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:00:39.736108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:40.736819      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:00:41.313248 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:00:41.737830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:42.737962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:00:43.317633 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:00:43.738130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:44.738267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:00:45.324177 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:00:45.738417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:46.739173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:00:47.330165 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:00:47.740043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:48.740670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:00:49.338722 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:00:49.741316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:50.742189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:00:51.342549 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:00:51.743043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:52.743168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:00:53.347992 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:00:53.743550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:54.743655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:00:55.357376 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:00:55.743988      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:56.744705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:00:57.361847 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:00:57.745232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:00:58.745382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:00:59.374871 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:00:59.746297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:01:00.746474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:01:01.378668 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:01:01.747604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:01:02.747949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:01:03.384447 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:01:03.748758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:01:04.749126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:01:05.388466 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:01:05.749979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:01:06.750433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:01:07.590969 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:01:07.751327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:01:08.751609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:01:09.596815 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:01:09.752249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:01:10.752719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:01:11.606364 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:01:11.753713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:01:12.754154      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:01:13.611584 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:01:13.754896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:01:14.755029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:01:15.616600 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:01:15.755872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:01:16.756051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:01:17.624477 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:01:17.756959      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:01:18.757082      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:01:19.628320 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:01:19.757662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:01:20.758737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:01:21.634995 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:01:21.759210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:01:22.759734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:01:23.643996 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:01:23.760206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:01:24.760329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:01:25.650675 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:01:25.761491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:01:26.761937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:01:27.658250 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:01:27.762574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:01:28.762891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:01:29.662268 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:01:29.763617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:01:30.764327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:01:31.673368 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:01:31.764618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:01:32.764807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:01:33.677783 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:01:33.764924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:01:34.765343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:01:35.682395 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:01:35.765647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:01:36.765790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:01:37.687034 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:01:37.766227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:01:38.767024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:01:39.700087 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:01:39.767362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:01:40.767998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:01:41.706485 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:01:41.768601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:01:42.768796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:01:43.711177 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:01:43.769382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:01:44.769603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:01:45.715309 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:01:45.770568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:01:46.771459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:01:47.724531 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:01:47.775652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:01:48.776769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:01:49.728831 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:01:49.777117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:01:50.777384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:01:51.733715 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:01:51.777964      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:01:52.778838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:01:53.737812 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:01:53.779055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:01:54.779211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:01:55.741974 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:01:55.780096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:01:56.780309      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:01:57.745911 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:01:57.781122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:01:58.781262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:01:59.750203 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:01:59.781378      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:02:00.781798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:02:01.755016 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:02:01.782100      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:02:02.782213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:02:03.759706 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:02:03.782983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:02:04.783450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:02:05.771693 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:02:05.783917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:02:06.784813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:02:07.776195 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:02:07.785933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:02:08.785964      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:02:09.781299 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:02:09.786504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:02:10.787221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:02:11.787747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:02:11.788384 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:02:12.787968      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:02:13.788204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:02:13.793780 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:02:14.788889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:02:15.789798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:02:15.797983 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:02:16.789996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:02:17.790105      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:02:17.803177 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:02:18.790498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:02:19.790789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:02:19.808907 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:02:20.791138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:02:21.791421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:02:21.813681 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:02:22.791638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:02:23.791811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:02:23.818572 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:02:24.792796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:02:25.793009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:02:26.138866 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:02:26.793592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:02:27.793900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:02:28.144218 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:02:28.794428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:02:29.794982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:02:30.148947 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:02:30.795301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:02:31.795893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:02:32.156707 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:02:32.796604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:02:33.797047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:02:34.162274 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:02:34.797746      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:02:35.797985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:02:36.165931 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:02:36.798379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:02:37.798508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:02:38.169960 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:02:38.799113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:02:39.799250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:02:40.175502 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:02:40.800245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:02:41.800723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:02:42.180562 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:02:42.800944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:02:43.801080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:02:44.185266 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:02:44.801282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:02:45.801663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:02:46.196000 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:02:46.802691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:02:47.802878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:02:48.200830 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:02:48.803543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:02:49.804417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:02:50.205086 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:02:50.804782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:02:51.804954      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:02:52.210503 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:02:52.805229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:02:53.805410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:02:54.220097 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:02:54.805727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:02:55.806328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:02:56.226248 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:02:56.806510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:02:57.806915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:02:58.230558 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:02:58.807209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:02:59.807661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:03:00.235256 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:03:00.807830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:03:01.808004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:03:02.239850 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:03:02.808450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:03:03.808578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:03:04.244432 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:03:04.808767      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:03:05.809748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:03:06.249583 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:03:06.810145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:03:07.810307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:03:08.258657 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:03:08.811398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:03:09.811650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:03:10.264065 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:03:10.812751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:03:11.812936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:03:12.268092 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:03:12.813827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:03:13.814128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:03:14.273628 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:03:14.814180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:03:15.814790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:03:16.278155 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:03:16.815852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:03:17.816755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:03:18.282621 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:03:18.817175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:03:19.817275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:03:20.287648 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:03:20.817291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:03:21.817642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:03:22.293130 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:03:22.818302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:03:23.818467      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:03:24.297788 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:03:24.819624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:03:25.820753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:03:26.301753 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:03:26.821358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:03:27.821675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:03:28.308716 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:03:28.822443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:03:29.822979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:03:30.313104 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:03:30.823912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:03:31.824100      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:03:32.317516 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:03:32.824207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:03:33.824393      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:03:34.321659 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:03:34.825309      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:03:35.825770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:03:36.326219 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:03:36.825901      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:03:37.826106      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:03:38.330035 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:03:38.826288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:03:39.826724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:03:40.334529 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:03:40.827107      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:03:41.827650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:03:42.339811 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:03:42.828356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:03:43.829028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:03:44.345105 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:03:44.829354      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:03:45.829674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:03:46.350133 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:03:46.830777      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:03:47.831074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:03:48.355037 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:03:48.831786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:03:49.832801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:03:50.359311 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:03:50.832907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:03:51.833104      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:03:52.363222 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:03:52.833838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:03:53.834024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:03:54.370592 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:03:54.834530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:03:55.835114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:03:56.375170 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:03:56.835664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:03:57.835815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:03:58.379437 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:03:58.836255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:03:59.837138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:04:00.388083 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:04:00.837259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:01.837428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:04:02.396161 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:04:02.837737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:03.838276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:04:04.404955 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:04:04.838383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:05.838476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:04:06.408960 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:04:06.839634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:07.839924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:04:08.414343 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:04:08.840753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:09.841511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:04:10.419739 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:04:10.842375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:11.843268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:04:12.423800 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:04:12.844315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:13.844526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:04:14.429838 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:04:14.845734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:15.846335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:04:16.435205 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:04:16.846722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:17.847442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:04:18.456269 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:04:18.847677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:19.847872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:04:20.466492 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:04:20.848504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:21.848137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:04:22.471146 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:04:22.848468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:23.849474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:04:24.477175 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:04:24.850194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:25.850561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:04:26.482077 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:04:26.850414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:27.850682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:04:28.486685 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:04:28.850866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:29.851356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:04:30.491280 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:04:30.851673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:31.851807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:04:32.496080 21 container_probe.go:1759] Get pod liveness-d2a2050b-ae25-4de1-877e-799d50dc490a in namespace container-probe-9970
  E0513 20:04:32.852825      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:33.852949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 05/13/24 20:04:34.496
  I0513 20:04:34.530097 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9970" for this suite. @ 05/13/24 20:04:34.542
• [243.367 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 05/13/24 20:04:34.568
  I0513 20:04:34.568887 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename kubelet-test @ 05/13/24 20:04:34.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:04:34.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:04:34.631
  I0513 20:04:34.709832 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5549" for this suite. @ 05/13/24 20:04:34.714
• [0.156 seconds]
------------------------------
SS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 05/13/24 20:04:34.724
  I0513 20:04:34.724957 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename containers @ 05/13/24 20:04:34.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:04:34.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:04:34.763
  E0513 20:04:34.853301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:35.853522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:04:36.815886 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5979" for this suite. @ 05/13/24 20:04:36.82
• [2.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 05/13/24 20:04:36.831
  I0513 20:04:36.831454 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename taint-multiple-pods @ 05/13/24 20:04:36.832
  E0513 20:04:36.854601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:04:36.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:04:36.863
  I0513 20:04:36.874282 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0513 20:04:37.854761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:38.855200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:39.856032      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:40.856153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:41.856397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:42.856495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:43.856669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:44.857554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:45.858099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:46.858196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:47.858331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:48.858506      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:49.859152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:50.859680      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:51.860740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:52.860812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:53.861047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:54.861685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:55.862377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:56.862893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:57.862887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:58.863366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:04:59.863533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:00.864342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:01.864567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:02.865018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:03.865130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:04.865459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:05.865656      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:06.865948      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:07.866167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:08.866569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:09.867121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:10.867785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:11.868558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:12.868676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:13.868873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:14.869293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:15.869552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:16.869742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:17.869925      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:18.870454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:19.870503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:20.871084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:21.871247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:22.871643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:23.871821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:24.872771      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:25.872917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:26.873261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:27.874121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:28.874433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:29.875022      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:30.875611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:31.875832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:32.876556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:33.876986      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:34.876975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:35.877532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:05:36.874834 21 util.go:400] Waiting for terminating namespaces to be deleted...
  E0513 20:05:36.878288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:05:36.879085 21 taints.go:150] Starting informer...
  STEP: Starting pods... @ 05/13/24 20:05:36.879
  I0513 20:05:37.099882 21 taints.go:469] Pod1 is running on ip-172-31-7-107.us-east-2.compute.internal. Tainting Node
  E0513 20:05:37.879150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:38.879718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:39.880801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:40.880929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:05:41.431892 21 taints.go:477] Pod2 is running on ip-172-31-7-107.us-east-2.compute.internal. Tainting Node
  STEP: Trying to apply a taint on the Node @ 05/13/24 20:05:41.431
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/13/24 20:05:41.447
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 05/13/24 20:05:41.483
  E0513 20:05:41.881058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:42.881201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:43.881480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:44.881778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:45.882862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:46.883016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:05:47.505475 21 taints.go:498] Noticed Pod "taint-eviction-b1" gets evicted.
  E0513 20:05:47.883223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:48.883712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:49.884760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:50.885406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:51.885687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:52.885951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:53.886243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:54.887382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:55.886849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:56.887817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:57.887965      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:58.888744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:05:59.889272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:06:00.889458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:06:01.889753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:06:02.889918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:06:03.890211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:06:04.891139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:06:05.891645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:06:06.892472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:06:07.586114 21 taints.go:498] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/13/24 20:06:07.614
  I0513 20:06:07.625578 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-4366" for this suite. @ 05/13/24 20:06:07.649
• [90.850 seconds]
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 05/13/24 20:06:07.682
  I0513 20:06:07.682077 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename container-probe @ 05/13/24 20:06:07.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:06:07.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:06:07.727
  STEP: Creating pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878 @ 05/13/24 20:06:07.733
  E0513 20:06:07.893331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:06:08.893483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/13/24 20:06:09.782
  I0513 20:06:09.786652 21 container_probe.go:1749] Initial restart count of pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d is 0
  I0513 20:06:09.790180 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:06:09.894307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:06:10.895396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:06:11.794360 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:06:11.895602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:06:12.895875      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:06:13.799871 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:06:13.896188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:06:14.896919      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:06:15.814515 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:06:15.896855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:06:16.896971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:06:17.818453 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:06:17.897792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:06:18.897917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:06:19.824165 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:06:19.897977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:06:20.898538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:06:21.827913 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:06:21.899094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:06:22.899253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:06:23.834416 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:06:23.899678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:06:24.899941      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:06:25.839596 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:06:25.900770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:06:26.901130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:06:27.843934 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:06:27.902114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:06:28.902821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:06:29.848598 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:06:29.903627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:06:30.904200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:06:31.859778 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:06:31.905080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:06:32.905221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:06:33.863571 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:06:33.905740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:06:34.905865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:06:35.867299 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:06:35.906497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:06:36.906677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:06:37.871660 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:06:37.906781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:06:38.907758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:06:39.876821 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:06:39.908843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:06:40.908980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:06:41.909689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:06:42.728918 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:06:42.910574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:06:43.910441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:06:44.738155 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:06:44.911513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:06:45.911677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:06:46.743427 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:06:46.912802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:06:47.913158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:06:48.748345 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:06:48.913717      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:06:49.914030      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:06:50.752387 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:06:50.914676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:06:51.915050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:06:52.757385 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:06:52.915628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:06:53.915813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:06:54.762552 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:06:54.916850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:06:55.917133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:06:56.775030 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:06:56.917290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:06:57.917542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:06:58.779164 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:06:58.917759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:06:59.918409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:07:00.796294 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:07:00.918927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:07:01.918954      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:07:02.800365 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:07:02.919651      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:07:03.920728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:07:04.804080 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:07:04.921831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:07:05.922461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:07:06.865963 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:07:06.923036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:07:07.923212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:07:08.869565 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:07:08.923994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:07:09.924159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:07:10.874164 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:07:10.924235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:07:11.924382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:07:12.878223 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:07:12.925473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:07:13.925790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:07:14.884147 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:07:14.926191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:07:15.926613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:07:16.892597 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:07:16.926730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:07:17.927012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:07:18.900819 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:07:18.927954      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:07:19.928050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:07:20.905023 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:07:20.928224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:07:21.928442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:07:22.911162 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:07:22.929468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:07:23.929509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:07:24.915534 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:07:24.929625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:07:25.929776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:07:26.920398 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:07:26.930493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:07:27.930622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:07:28.925350 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:07:28.931555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:07:29.931659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:07:30.929831 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:07:30.931991      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:07:31.932392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:07:32.932865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:07:32.934258 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:07:33.933344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:07:34.933976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:07:34.937446 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:07:35.934832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:07:36.935021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:07:36.942046 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:07:37.935102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:07:38.935643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:07:38.948263 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:07:39.936756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:07:40.937808      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:07:40.953317 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:07:41.937926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:07:42.938317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:07:42.958280 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:07:43.938477      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:07:44.938582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:07:44.963557 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:07:45.939160      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:07:46.939316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:07:46.968289 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:07:47.939447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:07:48.940289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:07:48.986296 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:07:49.940980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:07:50.941441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:07:51.222650 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:07:51.942516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:07:52.942666      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:07:53.231658 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:07:53.943626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:07:54.943697      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:07:55.239677 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:07:55.944397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:07:56.945018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:07:57.246111 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:07:57.944759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:07:58.944865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:07:59.250364 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:07:59.945033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:08:00.945640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:08:01.254786 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:08:01.946635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:08:02.946757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:08:03.258817 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:08:03.947259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:08:04.947542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:08:05.264061 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:08:05.947754      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:08:06.948069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:08:07.269511 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:08:07.948218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:08:08.948968      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:08:09.274431 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:08:09.949124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:08:10.949943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:08:11.279027 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:08:11.950811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:08:12.950963      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:08:13.284947 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:08:13.951103      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:08:14.951423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:08:15.289789 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:08:15.951908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:08:16.951793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:08:17.305447 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:08:17.952889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:08:18.953401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:08:19.310071 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:08:19.954020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:08:20.954579      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:08:21.315218 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:08:21.955004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:08:22.955174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:08:23.318882 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:08:23.955316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:08:24.955712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:08:25.323651 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:08:25.957542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:08:26.957753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:08:27.335047 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:08:27.957887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:08:28.958840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:08:29.341347 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:08:29.959151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:08:30.959635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:08:31.353099 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:08:31.960733      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:08:32.960916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:08:33.357377 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:08:33.961813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:08:34.961949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:08:35.362575 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:08:35.962326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:08:36.962360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:08:37.370649 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:08:37.962513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:08:38.963450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:08:39.375012 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:08:39.963693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:08:40.964722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:08:41.379255 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:08:41.964933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:08:42.965048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:08:43.383916 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:08:43.965283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:08:44.965404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:08:45.388669 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:08:45.966437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:08:46.966540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:08:47.398894 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:08:47.967428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:08:48.967644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:08:49.404960 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:08:49.968942      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:08:50.969207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:08:51.409665 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:08:51.970291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:08:52.970465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:08:53.413333 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:08:53.970667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:08:54.972827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:08:55.418861 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:08:55.973286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:08:56.973562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:08:57.422690 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:08:57.973827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:08:58.974783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:08:59.428330 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:08:59.974954      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:09:00.975126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:09:01.436427 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:09:01.975950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:09:02.976822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:09:03.442391 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:09:03.977048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:09:04.977177      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:09:05.446432 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:09:05.978159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:09:06.978293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:09:07.450487 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:09:07.978812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:09:08.980845      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:09:09.454404 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:09:09.980998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:09:10.981850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:09:11.458025 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:09:11.982751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:09:12.983062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:09:13.462701 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:09:13.983274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:09:14.983585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:09:15.466489 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:09:15.983786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:09:16.984742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:09:17.472380 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:09:17.984905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:09:18.985906      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:09:19.478314 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:09:19.986908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:09:20.987383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:09:21.482821 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:09:21.988446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:09:22.988581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:09:23.487537 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:09:23.988753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:09:24.989062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:09:25.492476 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:09:25.990111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:09:26.990547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:09:27.496829 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:09:27.991395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:09:28.991727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:09:29.501489 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:09:29.992893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:09:30.993439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:09:31.509852 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:09:31.993568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:09:32.993762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:09:33.519853 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:09:33.994327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:09:34.995278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:09:35.523540 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:09:35.996140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:09:36.996241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:09:37.528975 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:09:37.997271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:09:38.997806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:09:39.534241 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:09:39.998806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:09:40.998962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:09:41.537971 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:09:41.999449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:09:42.999644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:09:43.542507 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:09:43.999749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:09:45.000709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:09:45.547083 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:09:46.000824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:09:47.001102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:09:47.557643 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:09:48.002297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:09:49.002831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:09:49.566420 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:09:50.002918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:09:51.003016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:09:51.581500 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:09:52.004000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:09:53.004742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:09:53.587261 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:09:54.004827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:09:55.005076      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:09:55.593155 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:09:56.005106      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:09:57.005418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:09:57.598706 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:09:58.006197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:09:59.006812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:09:59.604988 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:10:00.008918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:01.009035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:10:01.614086 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:10:02.009198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:03.009426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:10:03.620656 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:10:04.010371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:05.010548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:10:05.627105 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:10:06.010727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:07.010929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:10:07.631776 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:10:08.011576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:09.011668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:10:09.636428 21 container_probe.go:1759] Get pod test-webserver-adbf2812-b3f8-4d03-971a-52c9f621ca1d in namespace container-probe-8878
  E0513 20:10:10.012771      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:11.013546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 05/13/24 20:10:11.637
  I0513 20:10:11.677810 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8878" for this suite. @ 05/13/24 20:10:11.706
• [244.042 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 05/13/24 20:10:11.726
  I0513 20:10:11.726712 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename cronjob @ 05/13/24 20:10:11.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:10:11.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:10:11.767
  STEP: Creating a cronjob @ 05/13/24 20:10:11.77
  STEP: creating @ 05/13/24 20:10:11.77
  STEP: getting @ 05/13/24 20:10:11.779
  STEP: listing @ 05/13/24 20:10:11.784
  STEP: watching @ 05/13/24 20:10:11.795
  I0513 20:10:11.795820 21 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 05/13/24 20:10:11.8
  STEP: cluster-wide watching @ 05/13/24 20:10:11.809
  I0513 20:10:11.809476 21 cronjob.go:382] starting watch
  STEP: patching @ 05/13/24 20:10:11.811
  STEP: updating @ 05/13/24 20:10:11.823
  I0513 20:10:11.848368 21 cronjob.go:406] waiting for watch events with expected annotations
  I0513 20:10:11.848491 21 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 05/13/24 20:10:11.848
  STEP: updating /status @ 05/13/24 20:10:11.86
  STEP: get /status @ 05/13/24 20:10:11.871
  STEP: deleting @ 05/13/24 20:10:11.875
  STEP: deleting a collection @ 05/13/24 20:10:11.919
  I0513 20:10:11.935340 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-679" for this suite. @ 05/13/24 20:10:11.939
• [0.230 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 05/13/24 20:10:11.958
  I0513 20:10:11.958440 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename projected @ 05/13/24 20:10:11.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:10:12.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:10:12.006
  E0513 20:10:12.014050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a pod to test downward API volume plugin @ 05/13/24 20:10:12.015
  E0513 20:10:13.014247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:14.014398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:15.014585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:16.015400      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:10:16.06
  I0513 20:10:16.064769 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod downwardapi-volume-7663f2c4-3419-4136-8e33-137cd4f30429 container client-container: <nil>
  STEP: delete the pod @ 05/13/24 20:10:16.088
  I0513 20:10:16.138878 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5704" for this suite. @ 05/13/24 20:10:16.149
• [4.204 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 05/13/24 20:10:16.163
  I0513 20:10:16.163618 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename emptydir @ 05/13/24 20:10:16.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:10:16.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:10:16.199
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 05/13/24 20:10:16.203
  E0513 20:10:17.015639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:18.015813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:19.015858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:20.016045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:10:20.236
  I0513 20:10:20.245432 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-8d9d9b88-1db6-437f-96e1-9144035eceac container test-container: <nil>
  STEP: delete the pod @ 05/13/24 20:10:20.252
  I0513 20:10:20.295507 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8608" for this suite. @ 05/13/24 20:10:20.3
• [4.151 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 05/13/24 20:10:20.315
  I0513 20:10:20.315247 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename configmap @ 05/13/24 20:10:20.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:10:20.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:10:20.348
  STEP: Creating configMap with name configmap-test-volume-map-76d7bb04-de66-4e1d-a22d-81ae2512d2f5 @ 05/13/24 20:10:20.351
  STEP: Creating a pod to test consume configMaps @ 05/13/24 20:10:20.364
  E0513 20:10:21.016754      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:22.016963      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:23.017216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:24.017940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:10:24.392
  I0513 20:10:24.396333 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-configmaps-af60209b-0195-46f4-b9b4-5a6f35ce166a container agnhost-container: <nil>
  STEP: delete the pod @ 05/13/24 20:10:24.404
  I0513 20:10:24.426503 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-521" for this suite. @ 05/13/24 20:10:24.432
• [4.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 05/13/24 20:10:24.445
  I0513 20:10:24.445451 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename container-probe @ 05/13/24 20:10:24.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:10:24.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:10:24.471
  E0513 20:10:25.017853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:26.018046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:27.018165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:28.018301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:29.019024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:30.019040      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:31.019152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:32.019308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:33.019436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:34.019830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:35.020952      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:36.021578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:37.021762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:38.022323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:39.023231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:40.023592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:41.023740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:42.024387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:43.024620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:44.025356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:45.025425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:46.025538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:10:46.564186 21 container_probe.go:92] Container started at 2024-05-13 20:10:25 +0000 UTC, pod became ready at 2024-05-13 20:10:44 +0000 UTC
  I0513 20:10:46.564336 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7421" for this suite. @ 05/13/24 20:10:46.568
• [22.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 05/13/24 20:10:46.58
  I0513 20:10:46.580524 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename projected @ 05/13/24 20:10:46.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:10:46.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:10:46.61
  STEP: Creating projection with secret that has name projected-secret-test-a574e946-a86c-452c-807f-a483b45da4be @ 05/13/24 20:10:46.614
  STEP: Creating a pod to test consume secrets @ 05/13/24 20:10:46.624
  E0513 20:10:47.026458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:48.026689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:49.026964      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:50.027135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:10:50.662
  I0513 20:10:50.665290 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-projected-secrets-b1dbfed6-2f30-499e-8f29-26dcdd8fd031 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/13/24 20:10:50.675
  I0513 20:10:50.716198 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8702" for this suite. @ 05/13/24 20:10:50.728
• [4.160 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 05/13/24 20:10:50.742
  I0513 20:10:50.742307 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename events @ 05/13/24 20:10:50.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:10:50.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:10:50.787
  STEP: creating a test event @ 05/13/24 20:10:50.791
  STEP: listing all events in all namespaces @ 05/13/24 20:10:50.807
  STEP: patching the test event @ 05/13/24 20:10:50.812
  E0513 20:10:51.027646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: fetching the test event @ 05/13/24 20:10:51.317
  STEP: updating the test event @ 05/13/24 20:10:51.32
  STEP: getting the test event @ 05/13/24 20:10:51.332
  STEP: deleting the test event @ 05/13/24 20:10:51.335
  STEP: listing all events in all namespaces @ 05/13/24 20:10:51.346
  I0513 20:10:51.351079 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5062" for this suite. @ 05/13/24 20:10:51.356
• [0.622 seconds]
------------------------------
SS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 05/13/24 20:10:51.363
  I0513 20:10:51.364063 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename subpath @ 05/13/24 20:10:51.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:10:51.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:10:51.388
  STEP: Setting up data @ 05/13/24 20:10:51.392
  STEP: Creating pod pod-subpath-test-secret-s7kb @ 05/13/24 20:10:51.403
  STEP: Creating a pod to test atomic-volume-subpath @ 05/13/24 20:10:51.403
  E0513 20:10:52.027748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:53.027936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:54.028053      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:55.028428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:56.028761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:57.029421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:58.029618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:10:59.029768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:00.030466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:01.030659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:02.030786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:03.030884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:04.031071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:05.031156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:06.031937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:07.032793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:08.032989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:09.033891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:10.034186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:11.034128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:12.035079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:13.035347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:14.035736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:15.036325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:11:15.489
  I0513 20:11:15.494397 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-subpath-test-secret-s7kb container test-container-subpath-secret-s7kb: <nil>
  STEP: delete the pod @ 05/13/24 20:11:15.504
  STEP: Deleting pod pod-subpath-test-secret-s7kb @ 05/13/24 20:11:15.547
  I0513 20:11:15.547598 21 delete.go:62] Deleting pod "pod-subpath-test-secret-s7kb" in namespace "subpath-3027"
  I0513 20:11:15.551276 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3027" for this suite. @ 05/13/24 20:11:15.558
• [24.206 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 05/13/24 20:11:15.571
  I0513 20:11:15.571204 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename container-probe @ 05/13/24 20:11:15.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:11:15.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:11:15.609
  STEP: Creating pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432 @ 05/13/24 20:11:15.613
  E0513 20:11:16.038283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:17.038363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/13/24 20:11:17.865
  I0513 20:11:17.869425 21 container_probe.go:1749] Initial restart count of pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b is 0
  I0513 20:11:17.874046 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:11:18.039495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:19.040005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:11:19.880871 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:11:20.040491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:21.040988      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:11:21.884938 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:11:22.041553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:23.041535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:24.041570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:11:24.127733 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:11:25.041968      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:26.042192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:11:26.133889 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:11:27.042371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:28.042663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:11:28.138697 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:11:29.042742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:30.043327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:11:30.143206 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:11:31.043691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:32.043837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:11:32.148076 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:11:33.044950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:34.045214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:11:34.152722 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:11:35.045401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:36.045971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:11:36.163802 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:11:37.046851      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:38.046972      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:11:38.167812 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:11:39.048149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:40.048278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:11:40.172691 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:11:41.048623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:42.048746      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:11:42.177299 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:11:43.048920      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:44.049218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:11:44.181170 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:11:45.050170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:46.050485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:11:46.188490 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:11:47.050676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:48.050807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:11:48.192694 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:11:49.051650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:50.052936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:11:50.196536 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:11:51.053929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:52.054327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:11:52.205045 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:11:53.054469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:54.054610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:11:54.214780 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:11:55.054866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:56.054979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:11:56.220141 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:11:57.055282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:11:58.055553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:11:58.226004 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:11:59.056098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:12:00.056186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:12:00.229839 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:12:01.056674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:12:02.056979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:12:02.235366 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:12:03.057683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:12:04.057947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:12:04.240006 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:12:05.058292      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:12:06.058427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:12:06.244480 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:12:07.059433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:12:08.059682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:12:08.249055 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:12:09.060745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:12:10.061318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:12:10.253105 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:12:11.061942      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:12:12.062320      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:12:12.257661 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:12:13.062625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:12:14.062778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:12:14.261801 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:12:15.063071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:12:16.063305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:12:16.266238 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:12:17.063687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:12:18.063825      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:12:18.275203 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:12:19.063872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:12:20.064162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:12:20.279801 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:12:21.064324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:12:22.064553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:12:22.284220 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:12:23.065186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:12:24.065471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:12:24.288516 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:12:25.066519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:12:26.066750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:12:26.292870 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:12:27.067754      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:12:28.067883      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:12:28.296849 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:12:29.068744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:12:30.069302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:12:30.301215 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:12:31.070050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:12:32.070207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:12:32.307411 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:12:33.070344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:12:34.070497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:12:34.312317 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:12:35.070702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:12:36.071903      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:12:36.316117 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:12:37.071949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:12:38.072864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:12:38.320130 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:12:39.073014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:12:40.073077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:12:40.323418 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:12:41.073247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:12:42.073537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:12:42.330432 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:12:43.073757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:12:44.073912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:12:44.335190 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:12:45.074471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:12:46.074633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:12:46.340579 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:12:47.075356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:12:48.075727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:12:48.345287 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:12:49.076496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:12:50.077040      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:12:50.348835 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:12:51.077487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:12:52.078093      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:12:52.353782 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:12:53.078560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:12:54.078607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:12:54.357625 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:12:55.079412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:12:56.079671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:12:56.363771 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:12:57.080671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:12:58.081191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:12:58.368667 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:12:59.081710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:13:00.082696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:13:00.372614 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:13:01.083689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:13:02.083870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:13:02.377662 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:13:03.084542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:13:04.084697      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:13:04.382123 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:13:05.085053      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:13:06.085174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:13:06.387020 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:13:07.085921      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:13:08.086075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:13:08.391496 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:13:09.086856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:13:10.087313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:13:10.395719 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:13:11.087622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:13:12.087841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:13:12.405765 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:13:13.088269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:13:14.088940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:13:14.410595 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:13:15.089343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:13:16.089500      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:13:16.414861 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:13:17.089629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:13:18.089917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:13:18.419028 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:13:19.090965      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:13:20.091074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:13:20.423169 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:13:21.092024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:13:22.092172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:13:22.427306 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:13:23.092746      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:13:24.093114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:13:24.439653 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:13:25.094164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:13:26.094535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:13:26.444928 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:13:27.094643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:13:28.094916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:13:28.448873 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:13:29.095836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:13:30.096218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:13:30.467872 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:13:31.096449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:13:32.096624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:13:32.476858 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:13:33.096734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:13:34.097242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:13:34.494483 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:13:35.097786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:13:36.097905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:13:36.502864 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:13:37.098831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:13:38.099060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:13:38.508120 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:13:39.100026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:13:40.100735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:13:40.513086 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:13:41.101901      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:13:42.102099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:13:42.518107 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:13:43.102290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:13:44.102448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:13:44.522828 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:13:45.102531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:13:46.102783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:13:46.527128 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:13:47.103838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:13:48.103950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:13:48.532716 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:13:49.104140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:13:50.105157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:13:50.536067 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:13:51.106108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:13:52.106540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:13:52.541751 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:13:53.107426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:13:54.107714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:13:54.546331 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:13:55.108142      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:13:56.108287      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:13:56.553046 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:13:57.108439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:13:58.108588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:13:58.558492 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:13:59.109557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:14:00.109640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:14:00.567072 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:14:01.109709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:14:02.110073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:14:02.859254 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:14:03.110579      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:14:04.110733      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:14:04.863783 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:14:05.111562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:14:06.111703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:14:06.868438 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:14:07.112781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:14:08.113491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:14:08.873262 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:14:09.113790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:14:10.114205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:14:10.879626 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:14:11.114945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:14:12.115327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:14:12.885656 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:14:13.116132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:14:14.116732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:14:14.890607 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:14:15.117156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:14:16.117909      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:14:16.894391 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:14:17.118778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:14:18.119096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:14:18.899183 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:14:19.119626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:14:20.120141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:14:20.904432 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:14:21.120755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:14:22.121159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:14:22.910344 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:14:23.121662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:14:24.121824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:14:24.914868 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:14:25.122424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:14:26.123096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:14:26.918745 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:14:27.124087      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:14:28.124371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:14:28.923006 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:14:29.125393      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:14:30.126515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:14:30.927164 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:14:31.127559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:14:32.127675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:14:32.932237 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:14:33.128557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:14:34.128712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:14:34.936960 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:14:35.129418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:14:36.129889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:14:36.941695 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:14:37.130043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:14:38.130183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:14:38.947293 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:14:39.130570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:14:40.131420      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:14:40.952445 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:14:41.131659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:14:42.131892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:14:42.956763 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:14:43.132039      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:14:44.132149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:14:44.961086 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:14:45.132773      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:14:46.132941      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:14:46.964411 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:14:47.133046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:14:48.133240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:14:48.971635 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:14:49.133768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:14:50.134185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:14:50.979758 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:14:51.135074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:14:52.135237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:14:52.983795 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:14:53.136313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:14:54.136470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:14:54.987509 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:14:55.137119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:14:56.137263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:14:56.991818 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:14:57.138304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:14:58.139583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:14:58.995764 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:14:59.140337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:00.141201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:15:00.999294 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:15:01.141633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:02.141826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:15:03.005676 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:15:03.141915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:04.141983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:15:05.011451 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:15:05.142576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:06.142743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:15:07.027137 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:15:07.143446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:08.143679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:15:09.035022 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:15:09.144293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:10.144433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:15:11.047012 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:15:11.145216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:12.145273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:15:13.060619 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:15:13.145763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:14.146026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:15:15.064665 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:15:15.147068      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:16.147382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:15:17.077789 21 container_probe.go:1759] Get pod test-grpc-58bce582-0078-44f8-841e-86257ea6f47b in namespace container-probe-1432
  E0513 20:15:17.148088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:18.148188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 05/13/24 20:15:19.078
  I0513 20:15:19.127849 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0513 20:15:19.148602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "container-probe-1432" for this suite. @ 05/13/24 20:15:19.149
• [243.603 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:707
  STEP: Creating a kubernetes client @ 05/13/24 20:15:19.175
  I0513 20:15:19.179549 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename sched-pred @ 05/13/24 20:15:19.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:15:19.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:15:19.25
  I0513 20:15:19.256068 21 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0513 20:15:19.277944 21 util.go:400] Waiting for terminating namespaces to be deleted...
  I0513 20:15:19.281969 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-13-166.us-east-2.compute.internal before test
  I0513 20:15:19.299702 21 predicates.go:887] cloud-controller-manager-ip-172-31-13-166.us-east-2.compute.internal from kube-system started at 2024-05-13 16:11:28 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.299739 21 predicates.go:889] 	Container cloud-controller-manager ready: true, restart count 0
  I0513 20:15:19.299756 21 predicates.go:887] etcd-ip-172-31-13-166.us-east-2.compute.internal from kube-system started at 2024-05-13 16:10:27 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.299771 21 predicates.go:889] 	Container etcd ready: true, restart count 0
  I0513 20:15:19.299786 21 predicates.go:887] kube-apiserver-ip-172-31-13-166.us-east-2.compute.internal from kube-system started at 2024-05-13 16:11:19 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.299798 21 predicates.go:889] 	Container kube-apiserver ready: true, restart count 0
  I0513 20:15:19.299813 21 predicates.go:887] kube-controller-manager-ip-172-31-13-166.us-east-2.compute.internal from kube-system started at 2024-05-13 16:11:28 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.299825 21 predicates.go:889] 	Container kube-controller-manager ready: true, restart count 0
  I0513 20:15:19.299839 21 predicates.go:887] kube-proxy-ip-172-31-13-166.us-east-2.compute.internal from kube-system started at 2024-05-13 16:11:32 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.299850 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0513 20:15:19.299864 21 predicates.go:887] kube-scheduler-ip-172-31-13-166.us-east-2.compute.internal from kube-system started at 2024-05-13 16:11:28 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.299875 21 predicates.go:889] 	Container kube-scheduler ready: true, restart count 0
  I0513 20:15:19.299888 21 predicates.go:887] rke2-canal-lxqsl from kube-system started at 2024-05-13 16:11:50 +0000 UTC (2 container statuses recorded)
  I0513 20:15:19.299900 21 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0513 20:15:19.299911 21 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0513 20:15:19.299925 21 predicates.go:887] rke2-coredns-rke2-coredns-64dcf4f58b-jgwvr from kube-system started at 2024-05-13 16:12:12 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.299936 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0513 20:15:19.299950 21 predicates.go:887] rke2-ingress-nginx-controller-m6v56 from kube-system started at 2024-05-13 16:12:12 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.299961 21 predicates.go:889] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0513 20:15:19.299974 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-8692a35f669b4296-w77rh from sonobuoy started at 2024-05-13 18:54:27 +0000 UTC (2 container statuses recorded)
  I0513 20:15:19.299986 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 20:15:19.299998 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0513 20:15:19.300011 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-14-71.us-east-2.compute.internal before test
  I0513 20:15:19.311219 21 predicates.go:887] cloud-controller-manager-ip-172-31-14-71.us-east-2.compute.internal from kube-system started at 2024-05-13 16:13:18 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.311530 21 predicates.go:889] 	Container cloud-controller-manager ready: true, restart count 0
  I0513 20:15:19.311724 21 predicates.go:887] etcd-ip-172-31-14-71.us-east-2.compute.internal from kube-system started at 2024-05-13 16:11:56 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.311959 21 predicates.go:889] 	Container etcd ready: true, restart count 0
  I0513 20:15:19.311991 21 predicates.go:887] kube-apiserver-ip-172-31-14-71.us-east-2.compute.internal from kube-system started at 2024-05-13 16:13:04 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.312208 21 predicates.go:889] 	Container kube-apiserver ready: true, restart count 0
  I0513 20:15:19.312333 21 predicates.go:887] kube-controller-manager-ip-172-31-14-71.us-east-2.compute.internal from kube-system started at 2024-05-13 16:13:18 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.312349 21 predicates.go:889] 	Container kube-controller-manager ready: true, restart count 0
  I0513 20:15:19.312580 21 predicates.go:887] kube-proxy-ip-172-31-14-71.us-east-2.compute.internal from kube-system started at 2024-05-13 16:13:30 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.312699 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0513 20:15:19.312720 21 predicates.go:887] kube-scheduler-ip-172-31-14-71.us-east-2.compute.internal from kube-system started at 2024-05-13 16:13:18 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.312732 21 predicates.go:889] 	Container kube-scheduler ready: true, restart count 0
  I0513 20:15:19.312782 21 predicates.go:887] rke2-canal-6kl65 from kube-system started at 2024-05-13 16:13:36 +0000 UTC (2 container statuses recorded)
  I0513 20:15:19.313048 21 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0513 20:15:19.313179 21 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0513 20:15:19.313365 21 predicates.go:887] rke2-ingress-nginx-controller-qpq27 from kube-system started at 2024-05-13 16:14:46 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.313383 21 predicates.go:889] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0513 20:15:19.313398 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-8692a35f669b4296-9x47v from sonobuoy started at 2024-05-13 18:54:27 +0000 UTC (2 container statuses recorded)
  I0513 20:15:19.313414 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 20:15:19.313464 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0513 20:15:19.313531 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-3-239.us-east-2.compute.internal before test
  I0513 20:15:19.332260 21 predicates.go:887] cloud-controller-manager-ip-172-31-3-239.us-east-2.compute.internal from kube-system started at 2024-05-13 16:06:33 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.332506 21 predicates.go:889] 	Container cloud-controller-manager ready: true, restart count 0
  I0513 20:15:19.332698 21 predicates.go:887] etcd-ip-172-31-3-239.us-east-2.compute.internal from kube-system started at 2024-05-13 16:06:10 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.332922 21 predicates.go:889] 	Container etcd ready: true, restart count 0
  I0513 20:15:19.333081 21 predicates.go:887] helm-install-rke2-canal-58m47 from kube-system started at 2024-05-13 16:06:56 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.333241 21 predicates.go:889] 	Container helm ready: false, restart count 0
  I0513 20:15:19.333401 21 predicates.go:887] helm-install-rke2-coredns-9vtfx from kube-system started at 2024-05-13 16:06:56 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.333544 21 predicates.go:889] 	Container helm ready: false, restart count 0
  I0513 20:15:19.333671 21 predicates.go:887] helm-install-rke2-ingress-nginx-kdjxl from kube-system started at 2024-05-13 16:08:24 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.333798 21 predicates.go:889] 	Container helm ready: false, restart count 0
  I0513 20:15:19.333923 21 predicates.go:887] helm-install-rke2-metrics-server-lkmfs from kube-system started at 2024-05-13 16:08:24 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.334047 21 predicates.go:889] 	Container helm ready: false, restart count 0
  I0513 20:15:19.334166 21 predicates.go:887] helm-install-rke2-snapshot-controller-6dsg9 from kube-system started at 2024-05-13 16:08:24 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.334265 21 predicates.go:889] 	Container helm ready: false, restart count 1
  I0513 20:15:19.334391 21 predicates.go:887] helm-install-rke2-snapshot-controller-crd-4z46x from kube-system started at 2024-05-13 16:08:24 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.334518 21 predicates.go:889] 	Container helm ready: false, restart count 0
  I0513 20:15:19.334644 21 predicates.go:887] helm-install-rke2-snapshot-validation-webhook-4m66n from kube-system started at 2024-05-13 16:08:24 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.334767 21 predicates.go:889] 	Container helm ready: false, restart count 0
  I0513 20:15:19.334878 21 predicates.go:887] kube-apiserver-ip-172-31-3-239.us-east-2.compute.internal from kube-system started at 2024-05-13 16:06:25 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.334976 21 predicates.go:889] 	Container kube-apiserver ready: true, restart count 0
  I0513 20:15:19.335099 21 predicates.go:887] kube-controller-manager-ip-172-31-3-239.us-east-2.compute.internal from kube-system started at 2024-05-13 16:06:31 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.335219 21 predicates.go:889] 	Container kube-controller-manager ready: true, restart count 0
  I0513 20:15:19.335358 21 predicates.go:887] kube-proxy-ip-172-31-3-239.us-east-2.compute.internal from kube-system started at 2024-05-13 16:06:55 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.335546 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0513 20:15:19.335688 21 predicates.go:887] kube-scheduler-ip-172-31-3-239.us-east-2.compute.internal from kube-system started at 2024-05-13 16:06:31 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.335811 21 predicates.go:889] 	Container kube-scheduler ready: true, restart count 0
  I0513 20:15:19.335921 21 predicates.go:887] rke2-canal-vm47w from kube-system started at 2024-05-13 16:07:12 +0000 UTC (2 container statuses recorded)
  I0513 20:15:19.336019 21 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0513 20:15:19.336140 21 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0513 20:15:19.336271 21 predicates.go:887] rke2-coredns-rke2-coredns-64dcf4f58b-h2p8t from kube-system started at 2024-05-13 16:08:24 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.336410 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0513 20:15:19.336521 21 predicates.go:887] rke2-coredns-rke2-coredns-autoscaler-5749cd7b8b-qclvf from kube-system started at 2024-05-13 16:08:24 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.336620 21 predicates.go:889] 	Container autoscaler ready: true, restart count 0
  I0513 20:15:19.336764 21 predicates.go:887] rke2-ingress-nginx-controller-7f4wf from kube-system started at 2024-05-13 16:09:15 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.336888 21 predicates.go:889] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0513 20:15:19.337026 21 predicates.go:887] rke2-metrics-server-868fc8795f-88ljh from kube-system started at 2024-05-13 16:08:43 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.337157 21 predicates.go:889] 	Container metrics-server ready: true, restart count 0
  I0513 20:15:19.337319 21 predicates.go:887] rke2-snapshot-controller-7dcf5d5b46-twc4f from kube-system started at 2024-05-13 16:08:52 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.337428 21 predicates.go:889] 	Container rke2-snapshot-controller ready: true, restart count 0
  I0513 20:15:19.337557 21 predicates.go:887] rke2-snapshot-validation-webhook-bf7bbd6fc-jhdww from kube-system started at 2024-05-13 16:08:43 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.337682 21 predicates.go:889] 	Container rke2-snapshot-validation-webhook ready: true, restart count 0
  I0513 20:15:19.337832 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-8692a35f669b4296-22p7h from sonobuoy started at 2024-05-13 18:54:27 +0000 UTC (2 container statuses recorded)
  I0513 20:15:19.337964 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 20:15:19.338075 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0513 20:15:19.338503 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-7-107.us-east-2.compute.internal before test
  I0513 20:15:19.349143 21 predicates.go:887] kube-proxy-ip-172-31-7-107.us-east-2.compute.internal from kube-system started at 2024-05-13 16:16:16 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.349757 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0513 20:15:19.349948 21 predicates.go:887] rke2-canal-hhrx8 from kube-system started at 2024-05-13 16:16:16 +0000 UTC (2 container statuses recorded)
  I0513 20:15:19.350115 21 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0513 20:15:19.350272 21 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0513 20:15:19.350462 21 predicates.go:887] rke2-ingress-nginx-controller-bq46q from kube-system started at 2024-05-13 20:06:07 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.350633 21 predicates.go:889] 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  I0513 20:15:19.350794 21 predicates.go:887] sonobuoy from sonobuoy started at 2024-05-13 18:54:25 +0000 UTC (1 container statuses recorded)
  I0513 20:15:19.350918 21 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0513 20:15:19.351086 21 predicates.go:887] sonobuoy-e2e-job-a300b5feb2b248aa from sonobuoy started at 2024-05-13 18:54:27 +0000 UTC (2 container statuses recorded)
  I0513 20:15:19.351358 21 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0513 20:15:19.351578 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 20:15:19.351728 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-8692a35f669b4296-rhppm from sonobuoy started at 2024-05-13 18:54:27 +0000 UTC (2 container statuses recorded)
  I0513 20:15:19.352003 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 20:15:19.352193 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/13/24 20:15:19.352
  E0513 20:15:20.149111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:21.149223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/13/24 20:15:21.422
  STEP: Trying to apply a random label on the found node. @ 05/13/24 20:15:21.464
  STEP: verifying the node has the label kubernetes.io/e2e-dc8a77a7-9ead-4b83-a184-b6ccd65d62c6 95 @ 05/13/24 20:15:21.488
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 05/13/24 20:15:21.5
  E0513 20:15:22.150257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:23.150715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:24.150996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:25.151647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.7.107 on the node which pod4 resides and expect not scheduled @ 05/13/24 20:15:25.543
  E0513 20:15:26.151798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:27.152118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:28.152392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:29.152798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:30.153547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:31.153903      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:32.154734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:33.155033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:34.155554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:35.155768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:36.156083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:37.156411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:38.157017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:39.157596      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:40.157805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:41.157888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:42.158668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:43.158953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:44.160039      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:45.160214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:46.160709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:47.161065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:48.161615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:49.162252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:50.163309      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:51.163670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:52.164227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:53.164407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:54.164662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:55.165186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:56.166136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:57.166471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:58.167260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:15:59.167665      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:00.168208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:01.168350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:02.169478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:03.169783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:04.170521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:05.171328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:06.172076      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:07.172630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:08.173201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:09.173896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:10.174522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:11.174642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:12.175346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:13.175714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:14.176646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:15.176997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:16.178366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:17.178511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:18.179282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:19.180146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:20.180328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:21.180830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:22.180980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:23.181098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:24.181754      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:25.182345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:26.182997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:27.183711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:28.184730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:29.184946      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:30.185289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:31.185925      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:32.186109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:33.186288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:34.186635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:35.187246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:36.187348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:37.187674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:38.187795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:39.188844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:40.189284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:41.189405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:42.189534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:43.189898      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:44.190103      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:45.190236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:46.190362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:47.190823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:48.190992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:49.191905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:50.192621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:51.193352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:52.193474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:53.193534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:54.193916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:55.194551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:56.194698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:57.194835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:58.194967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:16:59.195916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:00.196499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:01.197482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:02.197541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:03.197835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:04.197982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:05.198516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:06.198638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:07.198759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:08.198963      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:09.200060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:10.200557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:11.201527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:12.201722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:13.201899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:14.202032      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:15.202152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:16.202608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:17.202870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:18.203137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:19.203839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:20.204776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:21.205157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:22.205434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:23.205618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:24.205972      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:25.207109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:26.207607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:27.208372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:28.208587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:29.209655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:30.210167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:31.210352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:32.210886      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:33.210971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:34.211600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:35.211246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:36.211579      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:37.212349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:38.212486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:39.212785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:40.213300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:41.214187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:42.214305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:43.214446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:44.215233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:45.216165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:46.216235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:47.217385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:48.217495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:49.217686      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:50.218249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:51.219127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:52.219395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:53.220482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:54.220618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:55.221270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:56.221410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:57.222343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:58.222501      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:17:59.222645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:00.223332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:01.224324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:02.224615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:03.225272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:04.225434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:05.226431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:06.226576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:07.226702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:08.226983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:09.227051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:10.228236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:11.228791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:12.228913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:13.229357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:14.229796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:15.230452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:16.230568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:17.230734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:18.231171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:19.231270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:20.231307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:21.231509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:22.231694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:23.232775      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:24.233086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:25.233128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:26.233528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:27.234298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:28.234451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:29.235255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:30.237469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:31.237217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:32.239435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:33.239613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:34.239699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:35.240448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:36.240955      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:37.242198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:38.242344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:39.243123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:40.243624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:41.244731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:42.244865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:43.245405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:44.245549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:45.246624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:46.246811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:47.247642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:48.247938      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:49.248266      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:50.249406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:51.249535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:52.249751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:53.249893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:54.250627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:55.250766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:56.250995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:57.251865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:58.251995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:18:59.252096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:00.252745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:01.253798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:02.254249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:03.254744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:04.254988      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:05.255570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:06.255651      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:07.256209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:08.256734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:09.257785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:10.258613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:11.258908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:12.259199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:13.260274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:14.260587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:15.261236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:16.261366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:17.261868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:18.261760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:19.262069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:20.262491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:21.262661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:22.262811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:23.263083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:24.263280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:25.263559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:26.264736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:27.264911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:28.265091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:29.265834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:30.266564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:31.267061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:32.267435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:33.267937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:34.268369      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:35.268801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:36.269806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:37.269959      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:38.270952      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:39.271273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:40.272147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:41.272276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:42.272417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:43.272715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:44.273813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:45.273988      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:46.274598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:47.274746      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:48.275865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:49.276312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:50.276893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:51.277229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:52.277669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:53.278115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:54.278425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:55.279326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:56.279651      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:57.279927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:58.280750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:19:59.280844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:00.281362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:01.281847      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:02.282355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:03.282556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:04.282522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:05.283420      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:06.283814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:07.284731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:08.284897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:09.285031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:10.285190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:11.285473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:12.285612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:13.285885      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:14.286024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:15.286149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:16.287238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:17.287762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:18.288507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:19.289678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:20.290378      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:21.290555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:22.291607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:23.291696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:24.291791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:25.292862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-dc8a77a7-9ead-4b83-a184-b6ccd65d62c6 off the node ip-172-31-7-107.us-east-2.compute.internal @ 05/13/24 20:20:25.56
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-dc8a77a7-9ead-4b83-a184-b6ccd65d62c6 @ 05/13/24 20:20:25.584
  I0513 20:20:25.605954 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-772" for this suite. @ 05/13/24 20:20:25.615
• [306.457 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 05/13/24 20:20:25.641
  I0513 20:20:25.641966 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename webhook @ 05/13/24 20:20:25.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:20:25.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:20:25.68
  STEP: Setting up server cert @ 05/13/24 20:20:25.715
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 20:20:26.149
  STEP: Deploying the webhook pod @ 05/13/24 20:20:26.165
  STEP: Wait for the deployment to be ready @ 05/13/24 20:20:26.196
  I0513 20:20:26.214783 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0513 20:20:26.292953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:27.293175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:20:28.224174 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 20, 20, 26, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 20, 26, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 20, 20, 26, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 20, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0513 20:20:28.293319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:29.294021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/13/24 20:20:30.228
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 20:20:30.245
  E0513 20:20:30.294725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:20:31.245172 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  E0513 20:20:31.295571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the webhook via the AdmissionRegistration API @ 05/13/24 20:20:31.377
  STEP: create a pod that should be denied by the webhook @ 05/13/24 20:20:31.404
  STEP: create a pod that causes the webhook to hang @ 05/13/24 20:20:31.464
  E0513 20:20:32.296155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:33.296796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:34.297173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:35.297286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:36.297424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:37.297793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:38.297876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:39.298002      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:40.298857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:41.298994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 05/13/24 20:20:41.851
  STEP: create a configmap that should be admitted by the webhook @ 05/13/24 20:20:41.868
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 05/13/24 20:20:41.883
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 05/13/24 20:20:41.892
  STEP: create a namespace that bypass the webhook @ 05/13/24 20:20:41.898
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 05/13/24 20:20:41.916
  I0513 20:20:42.007078 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1490" for this suite. @ 05/13/24 20:20:42.019
  STEP: Destroying namespace "webhook-markers-1012" for this suite. @ 05/13/24 20:20:42.027
  STEP: Destroying namespace "exempted-namespace-9951" for this suite. @ 05/13/24 20:20:42.06
• [16.426 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:882
  STEP: Creating a kubernetes client @ 05/13/24 20:20:42.069
  I0513 20:20:42.069693 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename kubectl @ 05/13/24 20:20:42.07
  E0513 20:20:42.299765      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:20:42.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:20:42.589
  STEP: validating api versions @ 05/13/24 20:20:42.593
  I0513 20:20:42.593150 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-8428 api-versions'
  I0513 20:20:42.741248 21 builder.go:146] stderr: ""
  I0513 20:20:42.741305 21 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nhelm.cattle.io/v1\nk3s.cattle.io/v1\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nsnapshot.storage.k8s.io/v1\nsnapshot.storage.k8s.io/v1beta1\nstorage.k8s.io/v1\nv1\n"
  I0513 20:20:42.741508 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8428" for this suite. @ 05/13/24 20:20:42.746
• [0.682 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 05/13/24 20:20:42.752
  I0513 20:20:42.752361 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename pod-network-test @ 05/13/24 20:20:42.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:20:42.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:20:43.002
  STEP: Performing setup for networking test in namespace pod-network-test-2829 @ 05/13/24 20:20:43.006
  STEP: creating a selector @ 05/13/24 20:20:43.006
  STEP: Creating the service pods in kubernetes @ 05/13/24 20:20:43.006
  I0513 20:20:43.006485 21 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0513 20:20:43.299914      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:44.302214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:45.302425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:46.302645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:47.303614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:48.303785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:49.304756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:50.305337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:51.305963      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:52.306119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:53.307207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:54.307461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:55.308087      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:56.308769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:57.309382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:58.309879      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:20:59.310301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:21:00.310677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:21:01.311043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:21:02.312041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:21:03.312012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:21:04.312684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:21:05.313470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 05/13/24 20:21:05.65
  E0513 20:21:06.313603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:21:07.314287      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:21:08.315194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:21:09.315917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:21:09.723332 21 utils.go:779] Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  I0513 20:21:09.723390 21 utils.go:472] Going to poll 10.42.1.96 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  I0513 20:21:09.726805 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.1.96:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2829 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:21:09.726984 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 20:21:09.727853 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:21:09.727955 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-2829/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.1.96%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0513 20:21:09.845634 21 utils.go:489] Found all 1 expected endpoints: [netserver-0]
  I0513 20:21:09.845793 21 utils.go:472] Going to poll 10.42.3.125 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  I0513 20:21:09.848903 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.3.125:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2829 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:21:09.849048 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 20:21:09.849732 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:21:09.849822 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-2829/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.3.125%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0513 20:21:09.977207 21 utils.go:489] Found all 1 expected endpoints: [netserver-1]
  I0513 20:21:09.977542 21 utils.go:472] Going to poll 10.42.0.79 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  I0513 20:21:10.281127 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.0.79:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2829 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:21:10.281222 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 20:21:10.282195 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:21:10.282297 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-2829/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.0.79%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0513 20:21:10.316817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:21:10.378465 21 utils.go:489] Found all 1 expected endpoints: [netserver-2]
  I0513 20:21:10.378529 21 utils.go:472] Going to poll 10.42.4.154 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  I0513 20:21:10.382207 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.4.154:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2829 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:21:10.382251 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 20:21:10.383075 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:21:10.383146 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-2829/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.4.154%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0513 20:21:10.474677 21 utils.go:489] Found all 1 expected endpoints: [netserver-3]
  I0513 20:21:10.474824 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2829" for this suite. @ 05/13/24 20:21:10.48
• [27.736 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 05/13/24 20:21:10.488
  I0513 20:21:10.488916 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename container-probe @ 05/13/24 20:21:10.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:21:10.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:21:10.516
  STEP: Creating pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975 @ 05/13/24 20:21:10.52
  E0513 20:21:11.316893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:21:12.317057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/13/24 20:21:12.541
  I0513 20:21:12.544750 21 container_probe.go:1749] Initial restart count of pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b is 0
  I0513 20:21:12.547271 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:21:13.317087      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:21:14.317248      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:21:14.552429 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:21:15.318094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:21:16.318365      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:21:17.098182 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:21:17.319367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:21:18.319596      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:21:19.117449 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:21:19.319685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:21:20.320232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:21:21.122809 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:21:21.321148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:21:22.321446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:21:23.126257 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:21:23.322503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:21:24.323709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:21:25.130723 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:21:25.324199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:21:26.324504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:21:27.134909 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:21:27.325301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:21:28.325473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:21:29.139151 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:21:29.326443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:21:30.326777      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:21:31.145977 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:21:31.327574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:21:32.327676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:21:33.150150 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  I0513 20:21:33.150348 21 container_probe.go:1763] Restart count of pod container-probe-6975/liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b is now 1 (20.605524938s elapsed)
  E0513 20:21:33.328453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:21:34.328571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:21:35.155762 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:21:35.329172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:21:36.329470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:21:37.159914 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:21:37.330202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:21:38.330548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:21:39.164063 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:21:39.331342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:21:40.331756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:21:41.169810 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:21:41.332086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:21:42.332284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:21:43.173746 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:21:43.332994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:21:44.333179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:21:45.179023 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:21:45.334264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:21:46.334565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:21:47.183128 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:21:47.334582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:21:48.334756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:21:49.189300 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:21:49.335574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:21:50.336111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:21:51.195371 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:21:51.336980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:21:52.338003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:21:53.199697 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  I0513 20:21:53.199759 21 container_probe.go:1763] Restart count of pod container-probe-6975/liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b is now 2 (40.654935648s elapsed)
  E0513 20:21:53.339007      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:21:54.339333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:21:55.208420 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:21:55.339659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:21:56.339992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:21:57.215846 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:21:57.340721      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:21:58.341139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:21:59.219859 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:21:59.342156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:22:00.342745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:22:01.224505 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:22:01.343750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:22:02.344812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:22:03.230279 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:22:03.345767      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:22:04.346063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:22:05.249214 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:22:05.346296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:22:06.346412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:22:07.260655 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:22:07.347163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:22:08.347235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:22:09.282277 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:22:09.347357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:22:10.347535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:22:11.290444 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:22:11.347860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:22:12.348292      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:22:13.295291 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  I0513 20:22:13.295392 21 container_probe.go:1763] Restart count of pod container-probe-6975/liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b is now 3 (1m0.750569054s elapsed)
  E0513 20:22:13.348565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:22:14.348714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:22:15.300835 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:22:15.349163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:22:16.349310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:22:17.306477 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:22:17.349605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:22:18.349954      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:22:19.324612 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:22:19.350821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:22:20.351379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:22:21.352171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:22:21.355800 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:22:22.352355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:22:23.352782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:22:23.368106 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:22:24.353200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:22:25.354018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:22:25.383933 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:22:26.354590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:22:27.354931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:22:27.393080 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:22:28.354985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:22:29.355204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:22:29.399619 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:22:30.355565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:22:31.355644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:22:31.403613 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:22:32.356617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:22:33.356745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:22:33.408133 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  I0513 20:22:33.408195 21 container_probe.go:1763] Restart count of pod container-probe-6975/liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b is now 4 (1m20.863371508s elapsed)
  E0513 20:22:34.356917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:22:35.357618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:22:35.414041 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:22:36.357992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:22:37.359663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:22:37.417938 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:22:38.359802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:22:39.360235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:22:39.425716 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:22:40.361270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:22:41.361414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:22:41.440156 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:22:42.362129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:22:43.362263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:22:43.444297 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:22:44.362421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:22:45.363687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:22:45.461890 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:22:46.363669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:22:47.363764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:22:47.465536 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:22:48.364558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:22:49.365069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:22:49.471727 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:22:50.365286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:22:51.365586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:22:51.475588 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:22:52.365821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:22:53.366277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:22:53.483615 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:22:54.366595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:22:55.367557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:22:55.495851 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:22:56.367710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:22:57.367782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:22:57.499716 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:22:58.368686      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:22:59.369187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:22:59.507663 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:23:00.369327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:23:01.369466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:23:01.512398 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:23:02.370268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:23:03.370416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:23:03.516605 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:23:04.370468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:23:05.370552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:23:05.521343 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:23:06.371352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:23:07.371968      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:23:07.525853 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:23:08.372681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:23:09.373631      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:23:09.530505 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:23:10.374693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:23:11.375522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:23:11.534403 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:23:12.376625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:23:13.376646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:23:13.551679 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:23:14.376812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:23:15.377447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:23:15.567253 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:23:16.378059      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:23:17.383878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:23:17.571008 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:23:18.384787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:23:19.385220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:23:19.575927 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:23:20.386235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:23:21.386651      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:23:21.584345 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:23:22.387862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:23:23.388026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:23:23.587996 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:23:24.388782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:23:25.389375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:23:25.592431 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:23:26.390568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:23:27.391678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:23:27.596162 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:23:28.391894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:23:29.392194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:23:29.602331 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:23:30.392413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:23:31.392856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:23:31.607611 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  E0513 20:23:32.392998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:23:33.393269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:23:33.613280 21 container_probe.go:1759] Get pod liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b in namespace container-probe-6975
  I0513 20:23:33.613342 21 container_probe.go:1763] Restart count of pod container-probe-6975/liveness-f6ed4baf-be8f-4e27-b211-05ebc30d218b is now 5 (2m21.06851884s elapsed)
  STEP: deleting the pod @ 05/13/24 20:23:33.613
  I0513 20:23:33.631688 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6975" for this suite. @ 05/13/24 20:23:33.643
• [143.167 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 05/13/24 20:23:33.657
  I0513 20:23:33.658254 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename daemonsets @ 05/13/24 20:23:33.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:23:33.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:23:33.694
  I0513 20:23:33.729886 21 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0513 20:23:33.739867 21 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0513 20:23:33.750487 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 20:23:33.750545 21 fixtures.go:130] Node ip-172-31-13-166.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0513 20:23:34.393829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:23:34.748754 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 20:23:34.748930 21 fixtures.go:130] Node ip-172-31-13-166.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0513 20:23:35.394387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:23:35.748002 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0513 20:23:35.748044 21 fixtures.go:130] Node ip-172-31-14-71.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0513 20:23:36.394874      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:23:36.748653 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0513 20:23:36.748864 21 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  I0513 20:23:36.748985 21 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0513 20:23:36.766432 21 daemon_set.go:102] Updating DaemonSet daemon-set
  E0513 20:23:37.395027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:23:38.395745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:23:39.396487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:23:39.814296 21 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0513 20:23:39.848003 21 daemon_set.go:102] Updating DaemonSet daemon-set
  I0513 20:23:39.848087 21 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0513 20:23:39.866777 21 daemon_set.go:1178] Wrong image for pod: daemon-set-mfmbx. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I0513 20:23:39.867020 21 daemon_set.go:1183] Pod daemon-set-mfmbx is not available
  E0513 20:23:40.396850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:23:41.397681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:23:42.397662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:23:42.861273 21 daemon_set.go:1183] Pod daemon-set-fmkw6 is not available
  STEP: Deleting DaemonSet "daemon-set" @ 05/13/24 20:23:42.877
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6291, will wait for the garbage collector to delete the pods @ 05/13/24 20:23:42.878
  I0513 20:23:42.940846 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.644236ms
  I0513 20:23:43.041438 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.590062ms
  E0513 20:23:43.397784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:23:44.398837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:23:45.246576 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 20:23:45.246646 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0513 20:23:45.254773 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"84884"},"items":null}

  I0513 20:23:45.260172 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"84884"},"items":null}

  I0513 20:23:45.282217 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6291" for this suite. @ 05/13/24 20:23:45.285
• [11.638 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 05/13/24 20:23:45.297
  I0513 20:23:45.297253 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename downward-api @ 05/13/24 20:23:45.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:23:45.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:23:45.345
  STEP: Creating a pod to test downward API volume plugin @ 05/13/24 20:23:45.347
  E0513 20:23:45.399614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:23:46.399733      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:23:47.400048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:23:48.400118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:23:49.400508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:23:49.4
  I0513 20:23:49.403854 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod downwardapi-volume-0979590f-1abf-4c04-b9e7-b91d34a04e1d container client-container: <nil>
  STEP: delete the pod @ 05/13/24 20:23:49.425
  I0513 20:23:49.453914 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4436" for this suite. @ 05/13/24 20:23:49.458
• [4.181 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 05/13/24 20:23:49.478
  I0513 20:23:49.478726 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename resourcequota @ 05/13/24 20:23:49.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:23:49.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:23:49.511
  STEP: Counting existing ResourceQuota @ 05/13/24 20:23:49.513
  E0513 20:23:50.401434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:23:51.401581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:23:52.401736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:23:53.401860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:23:54.402006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/13/24 20:23:54.523
  STEP: Ensuring resource quota status is calculated @ 05/13/24 20:23:54.532
  E0513 20:23:55.402256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:23:56.402438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 05/13/24 20:23:56.541
  STEP: Creating a NodePort Service @ 05/13/24 20:23:56.581
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 05/13/24 20:23:56.637
  STEP: Ensuring resource quota status captures service creation @ 05/13/24 20:23:56.687
  E0513 20:23:57.402537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:23:58.403173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 05/13/24 20:23:58.693
  STEP: Ensuring resource quota status released usage @ 05/13/24 20:23:58.765
  E0513 20:23:59.403373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:00.403442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:24:00.769224 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-367" for this suite. @ 05/13/24 20:24:00.773
• [11.302 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 05/13/24 20:24:00.781
  I0513 20:24:00.781349 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename projected @ 05/13/24 20:24:00.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:24:00.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:24:00.803
  STEP: Creating configMap with name projected-configmap-test-volume-map-a8a4df81-d70f-4184-80e9-25a86df6f71e @ 05/13/24 20:24:00.808
  STEP: Creating a pod to test consume configMaps @ 05/13/24 20:24:00.815
  E0513 20:24:01.403652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:02.403802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:03.407664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:04.408011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:24:04.849
  I0513 20:24:04.852824 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-projected-configmaps-51da492b-56f8-44d3-8a0e-4e7320eacdb7 container agnhost-container: <nil>
  STEP: delete the pod @ 05/13/24 20:24:04.859
  I0513 20:24:04.893513 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4160" for this suite. @ 05/13/24 20:24:04.898
• [4.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 05/13/24 20:24:04.92
  I0513 20:24:04.920875 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename field-validation @ 05/13/24 20:24:04.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:24:04.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:24:04.97
  I0513 20:24:04.973693 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  E0513 20:24:05.408769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:06.409674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:07.410926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0513 20:24:07.540316      21 warnings.go:70] unknown field "alpha"
  W0513 20:24:07.540362      21 warnings.go:70] unknown field "beta"
  W0513 20:24:07.540374      21 warnings.go:70] unknown field "delta"
  W0513 20:24:07.540384      21 warnings.go:70] unknown field "epsilon"
  W0513 20:24:07.540393      21 warnings.go:70] unknown field "gamma"
  I0513 20:24:08.100082 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1346" for this suite. @ 05/13/24 20:24:08.109
• [3.198 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 05/13/24 20:24:08.119
  I0513 20:24:08.119699 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename var-expansion @ 05/13/24 20:24:08.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:24:08.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:24:08.164
  STEP: creating the pod @ 05/13/24 20:24:08.167
  STEP: waiting for pod running @ 05/13/24 20:24:08.176
  E0513 20:24:08.411073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:09.411223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:10.412334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:11.412754      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 05/13/24 20:24:12.196
  I0513 20:24:12.199806 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-7419 PodName:var-expansion-d249042d-42aa-4e34-bd68-8a4e78192442 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:24:12.199852 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 20:24:12.200645 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:24:12.200746 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/var-expansion-7419/pods/var-expansion-d249042d-42aa-4e34-bd68-8a4e78192442/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 05/13/24 20:24:12.295
  I0513 20:24:12.298247 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-7419 PodName:var-expansion-d249042d-42aa-4e34-bd68-8a4e78192442 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:24:12.298379 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 20:24:12.299037 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:24:12.299205 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/var-expansion-7419/pods/var-expansion-d249042d-42aa-4e34-bd68-8a4e78192442/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 05/13/24 20:24:12.4
  E0513 20:24:12.413319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:24:12.924473 21 pod_client.go:141] Successfully updated pod "var-expansion-d249042d-42aa-4e34-bd68-8a4e78192442"
  STEP: waiting for annotated pod running @ 05/13/24 20:24:12.924
  STEP: deleting the pod gracefully @ 05/13/24 20:24:12.937
  I0513 20:24:12.938070 21 delete.go:62] Deleting pod "var-expansion-d249042d-42aa-4e34-bd68-8a4e78192442" in namespace "var-expansion-7419"
  I0513 20:24:12.966839 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-d249042d-42aa-4e34-bd68-8a4e78192442" to be fully deleted
  E0513 20:24:13.413524      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:14.413719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:15.414348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:16.414739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:17.415908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:18.416014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:19.416264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:20.416573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:21.416837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:22.417170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:23.418045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:24.418228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:25.419087      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:26.419230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:27.422850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:28.423063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:29.424212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:30.424584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:31.424691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:32.425102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:33.425257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:34.425426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:35.426368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:36.426631      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:37.429118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:38.429248      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:39.429677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:40.430567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:41.431133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:42.432109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:43.432730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:44.432885      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:24:45.053427 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7419" for this suite. @ 05/13/24 20:24:45.057
• [36.944 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 05/13/24 20:24:45.063
  I0513 20:24:45.063438 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename emptydir @ 05/13/24 20:24:45.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:24:45.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:24:45.092
  STEP: Creating Pod @ 05/13/24 20:24:45.095
  E0513 20:24:45.433444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:46.435673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:47.440331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:48.440761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 05/13/24 20:24:49.137
  I0513 20:24:49.137177 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-4872 PodName:pod-sharedvolume-fccf55fd-2e71-4823-961a-e047463a467d ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:24:49.137203 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 20:24:49.138085 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:24:49.138170 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/emptydir-4872/pods/pod-sharedvolume-fccf55fd-2e71-4823-961a-e047463a467d/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  I0513 20:24:49.224791 21 exec_util.go:106] Exec stderr: ""
  I0513 20:24:49.224931 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4872" for this suite. @ 05/13/24 20:24:49.23
• [4.175 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 05/13/24 20:24:49.239
  I0513 20:24:49.239028 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename pods @ 05/13/24 20:24:49.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:24:49.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:24:49.265
  STEP: Create a pod @ 05/13/24 20:24:49.268
  E0513 20:24:49.441821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:50.442449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:51.442523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:52.442682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 05/13/24 20:24:53.289
  I0513 20:24:53.305468 21 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0513 20:24:53.305599 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9673" for this suite. @ 05/13/24 20:24:53.31
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1079
  STEP: Creating a kubernetes client @ 05/13/24 20:24:53.32
  I0513 20:24:53.320147 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename kubectl @ 05/13/24 20:24:53.321
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:24:53.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:24:53.346
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/13/24 20:24:53.35
  I0513 20:24:53.350304 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-777 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  E0513 20:24:53.443012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:24:53.460748 21 builder.go:146] stderr: ""
  I0513 20:24:53.460808 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 05/13/24 20:24:53.46
  I0513 20:24:53.461112 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-777 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0513 20:24:53.563497 21 builder.go:146] stderr: ""
  I0513 20:24:53.563561 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/13/24 20:24:53.563
  I0513 20:24:53.567990 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-777 delete pods e2e-test-httpd-pod'
  E0513 20:24:54.443162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:55.443740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:56.444000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:24:56.459379 21 builder.go:146] stderr: ""
  I0513 20:24:56.459428 21 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0513 20:24:56.459571 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-777" for this suite. @ 05/13/24 20:24:56.464
• [3.160 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3161
  STEP: Creating a kubernetes client @ 05/13/24 20:24:56.48
  I0513 20:24:56.480756 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename services @ 05/13/24 20:24:56.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:24:56.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:24:56.522
  STEP: creating an Endpoint @ 05/13/24 20:24:56.53
  STEP: waiting for available Endpoint @ 05/13/24 20:24:56.539
  STEP: listing all Endpoints @ 05/13/24 20:24:56.541
  STEP: updating the Endpoint @ 05/13/24 20:24:56.544
  STEP: fetching the Endpoint @ 05/13/24 20:24:56.565
  STEP: patching the Endpoint @ 05/13/24 20:24:56.569
  STEP: fetching the Endpoint @ 05/13/24 20:24:56.583
  STEP: deleting the Endpoint by Collection @ 05/13/24 20:24:56.586
  STEP: waiting for Endpoint deletion @ 05/13/24 20:24:56.606
  STEP: fetching the Endpoint @ 05/13/24 20:24:56.608
  I0513 20:24:56.610831 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4694" for this suite. @ 05/13/24 20:24:56.616
• [0.154 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 05/13/24 20:24:56.637
  I0513 20:24:56.637337 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename secrets @ 05/13/24 20:24:56.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:24:56.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:24:56.688
  STEP: Creating secret with name secret-test-8ac18bd6-baec-4cdd-80e2-4862a52be7c7 @ 05/13/24 20:24:56.696
  STEP: Creating a pod to test consume secrets @ 05/13/24 20:24:57.321
  E0513 20:24:57.446559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:58.447338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:59.448043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:00.448931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:01.449061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:02.449761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:25:03.372
  I0513 20:25:03.377937 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-secrets-c489799b-7425-4176-9774-4063b96628b1 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/13/24 20:25:03.386
  I0513 20:25:03.418333 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6515" for this suite. @ 05/13/24 20:25:03.431
  E0513 20:25:03.450133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
• [6.815 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 05/13/24 20:25:03.453
  I0513 20:25:03.453786 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename watch @ 05/13/24 20:25:03.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:25:03.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:25:03.549
  STEP: creating a new configmap @ 05/13/24 20:25:03.553
  STEP: modifying the configmap once @ 05/13/24 20:25:03.572
  STEP: modifying the configmap a second time @ 05/13/24 20:25:03.588
  STEP: deleting the configmap @ 05/13/24 20:25:03.609
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 05/13/24 20:25:03.627
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 05/13/24 20:25:03.63
  I0513 20:25:03.630953 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-3843  c5cc3541-bcc5-42f3-9a16-62e7d033c3e0 85491 0 2024-05-13 20:25:03 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-05-13 20:25:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0513 20:25:03.631296 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-3843  c5cc3541-bcc5-42f3-9a16-62e7d033c3e0 85492 0 2024-05-13 20:25:03 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-05-13 20:25:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0513 20:25:03.631619 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3843" for this suite. @ 05/13/24 20:25:03.648
• [0.215 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 05/13/24 20:25:03.669
  I0513 20:25:03.669300 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/13/24 20:25:03.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:25:03.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:25:03.712
  I0513 20:25:03.722067 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  E0513 20:25:04.451156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:05.451310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:06.451854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:25:06.788413 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-1901" for this suite. @ 05/13/24 20:25:06.795
• [3.136 seconds]
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 05/13/24 20:25:06.804
  I0513 20:25:06.804995 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename gc @ 05/13/24 20:25:06.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:25:06.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:25:06.842
  STEP: create the deployment @ 05/13/24 20:25:06.846
  W0513 20:25:06.858109      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 05/13/24 20:25:06.858
  E0513 20:25:07.452727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 05/13/24 20:25:07.573
  STEP: wait for all rs to be garbage collected @ 05/13/24 20:25:07.6
  STEP: expected 0 rs, got 1 rs @ 05/13/24 20:25:07.625
  STEP: expected 0 pods, got 2 pods @ 05/13/24 20:25:07.633
  STEP: Gathering metrics @ 05/13/24 20:25:08.113
  I0513 20:25:08.232812 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0513 20:25:08.233273 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1971" for this suite. @ 05/13/24 20:25:08.238
• [1.439 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 05/13/24 20:25:08.244
  I0513 20:25:08.244227 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename downward-api @ 05/13/24 20:25:08.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:25:08.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:25:08.271
  STEP: Creating the pod @ 05/13/24 20:25:08.282
  E0513 20:25:08.452776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:09.453272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:10.454231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:11.455098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:12.455735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:25:12.862966 21 pod_client.go:141] Successfully updated pod "annotationupdateb59c4eab-3947-44a9-ae74-98d9c126b1bd"
  E0513 20:25:13.456065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:14.456185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:25:14.883610 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4671" for this suite. @ 05/13/24 20:25:14.887
• [6.655 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 05/13/24 20:25:14.9
  I0513 20:25:14.900123 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename replicaset @ 05/13/24 20:25:14.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:25:14.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:25:14.94
  I0513 20:25:14.963285 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0513 20:25:15.457212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:16.457493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:17.457715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:18.458499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:19.459518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:25:19.973036 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/13/24 20:25:19.973
  STEP: Scaling up "test-rs" replicaset @ 05/13/24 20:25:19.973
  I0513 20:25:19.983925 21 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 05/13/24 20:25:19.983
  I0513 20:25:19.996784 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9134 with ReadyReplicas 1, AvailableReplicas 1
  I0513 20:25:20.031167 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9134 with ReadyReplicas 1, AvailableReplicas 1
  I0513 20:25:20.077488 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9134 with ReadyReplicas 1, AvailableReplicas 1
  I0513 20:25:20.099656 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9134 with ReadyReplicas 1, AvailableReplicas 1
  E0513 20:25:20.460470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:21.460852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:25:21.614039 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-9134 with ReadyReplicas 2, AvailableReplicas 2
  I0513 20:25:21.676623 21 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-9134 with ReadyReplicas 3 found true
  I0513 20:25:21.676892 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9134" for this suite. @ 05/13/24 20:25:21.682
• [6.792 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 05/13/24 20:25:21.692
  I0513 20:25:21.692647 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/13/24 20:25:21.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:25:21.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:25:21.729
  STEP: create the container to handle the HTTPGet hook request. @ 05/13/24 20:25:21.74
  E0513 20:25:22.460936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:23.460958      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 05/13/24 20:25:23.782
  E0513 20:25:24.461953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:25.462028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 05/13/24 20:25:25.806
  E0513 20:25:26.462578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:27.487751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:28.488794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:29.489242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 05/13/24 20:25:29.837
  I0513 20:25:29.845875 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-592" for this suite. @ 05/13/24 20:25:29.85
• [8.168 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1284
  STEP: Creating a kubernetes client @ 05/13/24 20:25:29.862
  I0513 20:25:29.862969 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename services @ 05/13/24 20:25:29.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:25:29.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:25:29.907
  STEP: creating service nodeport-test with type=NodePort in namespace services-9766 @ 05/13/24 20:25:29.911
  STEP: creating replication controller nodeport-test in namespace services-9766 @ 05/13/24 20:25:29.937
  I0513 20:25:29.958591      21 runners.go:198] Created replication controller with name: nodeport-test, namespace: services-9766, replica count: 2
  E0513 20:25:30.489278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:31.489469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:32.489655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:25:33.009149      21 runners.go:198] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0513 20:25:33.009201 21 resource.go:361] Creating new exec pod
  E0513 20:25:33.490393      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:34.491093      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:35.491877      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:25:36.036719 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-9766 exec execpod48sl7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0513 20:25:36.229236 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0513 20:25:36.229291 21 builder.go:147] stdout: "nodeport-test-k8s82"
  I0513 20:25:36.229373 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-9766 exec execpod48sl7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.105.103 80'
  I0513 20:25:36.409981 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.105.103 80\nConnection to 10.43.105.103 80 port [tcp/http] succeeded!\n"
  I0513 20:25:36.410045 21 builder.go:147] stdout: "nodeport-test-4qfv4"
  I0513 20:25:36.410136 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-9766 exec execpod48sl7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.3.239 32568'
  E0513 20:25:36.493108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:25:36.634962 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.3.239 32568\nConnection to 172.31.3.239 32568 port [tcp/*] succeeded!\n"
  I0513 20:25:36.635012 21 builder.go:147] stdout: "nodeport-test-4qfv4"
  I0513 20:25:36.635218 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=services-9766 exec execpod48sl7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.13.166 32568'
  I0513 20:25:36.846988 21 builder.go:146] stderr: "+ + nc -v -t -w 2 172.31.13.166 32568\necho hostName\nConnection to 172.31.13.166 32568 port [tcp/*] succeeded!\n"
  I0513 20:25:36.847049 21 builder.go:147] stdout: "nodeport-test-k8s82"
  I0513 20:25:36.847411 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9766" for this suite. @ 05/13/24 20:25:36.852
• [7.001 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 05/13/24 20:25:36.866
  I0513 20:25:36.866142 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename configmap @ 05/13/24 20:25:36.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:25:36.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:25:36.909
  STEP: Creating configMap with name configmap-test-volume-map-924573af-ca79-43f2-b471-571096c3bcd1 @ 05/13/24 20:25:36.914
  STEP: Creating a pod to test consume configMaps @ 05/13/24 20:25:36.925
  E0513 20:25:37.494013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:38.494126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:39.494305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:40.494635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:25:40.956
  I0513 20:25:40.967990 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-configmaps-21b0546a-77d7-4947-9c14-afad755fc30a container agnhost-container: <nil>
  STEP: delete the pod @ 05/13/24 20:25:40.977
  I0513 20:25:41.005195 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2597" for this suite. @ 05/13/24 20:25:41.011
• [4.152 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 05/13/24 20:25:41.02
  I0513 20:25:41.020341 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename downward-api @ 05/13/24 20:25:41.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:25:41.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:25:41.069
  STEP: Creating a pod to test downward api env vars @ 05/13/24 20:25:41.073
  E0513 20:25:41.495124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:42.495847      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:43.496574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:44.496816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:25:45.106
  I0513 20:25:45.109272 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod downward-api-b648d924-d669-4f65-8ac9-4945efa635d8 container dapi-container: <nil>
  STEP: delete the pod @ 05/13/24 20:25:45.119
  I0513 20:25:45.159550 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3799" for this suite. @ 05/13/24 20:25:45.164
• [4.156 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 05/13/24 20:25:45.177
  I0513 20:25:45.177601 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename init-container @ 05/13/24 20:25:45.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:25:45.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:25:45.231
  STEP: creating the pod @ 05/13/24 20:25:45.235
  I0513 20:25:45.235623 21 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E0513 20:25:45.496901      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:46.498490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:47.498173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:48.498495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:49.498565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:50.498907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:51.499038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:52.499157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:53.499317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:54.499451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:55.499696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:56.499748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:57.499887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:58.500742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:59.501155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:00.501993      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:01.502259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:02.502536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:03.503120      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:04.503745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:05.503867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:06.504169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:07.504300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:08.504797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:09.505357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:10.505412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:11.505776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:12.506426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:13.507322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:14.508380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:15.509094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:16.509266      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:17.510027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:18.510104      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:19.510241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:20.510444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:21.510586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:22.510725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:23.511372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:24.511712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:25.512218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:26.512373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:27.512753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:28.513097      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:26:28.773141 21 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-8f3c562f-a957-4669-93b1-56efb6156484", GenerateName:"", Namespace:"init-container-413", SelfLink:"", UID:"517f2e7e-3cd1-4988-bd82-24c05fbac955", ResourceVersion:"86210", Generation:0, CreationTimestamp:time.Date(2024, time.May, 13, 20, 25, 45, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"235613249"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"af1caa10511a63ba8614cc554ae50c29e6cbecc94abf5166ad167f00451c0f74", "cni.projectcalico.org/podIP":"10.42.4.175/32", "cni.projectcalico.org/podIPs":"10.42.4.175/32"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 13, 20, 25, 45, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00526ad38), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 13, 20, 25, 45, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00526ad68), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 13, 20, 26, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00526ad98), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-l9jjj", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc004c25ee0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-l9jjj", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-l9jjj", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-l9jjj", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc005036d40), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-7-107.us-east-2.compute.internal", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc002426980), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc005036dc0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc005036de0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc005036de8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc005036dec), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc004df9420), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 13, 20, 25, 46, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 13, 20, 25, 45, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 13, 20, 25, 45, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 13, 20, 25, 45, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 13, 20, 25, 45, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.7.107", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.7.107"}}, PodIP:"10.42.4.175", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.42.4.175"}}, StartTime:time.Date(2024, time.May, 13, 20, 25, 45, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc001c5be30)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc001c5bea0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://bb38cc09e5feafab23ad764b11855867d6bbefb965dd1427d037eda9aff83f3d", Started:(*bool)(0xc005036e8a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004c25f40), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc005036e9f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004c25f20), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc005036e6f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0513 20:26:28.780068 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-413" for this suite. @ 05/13/24 20:26:28.784
• [43.618 seconds]
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 05/13/24 20:26:28.795
  I0513 20:26:28.795664 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename replicaset @ 05/13/24 20:26:28.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:26:28.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:26:28.866
  I0513 20:26:28.870463 21 replica_set.go:191] Creating ReplicaSet my-hostname-basic-5f7c3523-dc10-405a-a3c5-97baa472016f
  I0513 20:26:28.884727 21 resource.go:87] Pod name my-hostname-basic-5f7c3523-dc10-405a-a3c5-97baa472016f: Found 0 pods out of 1
  E0513 20:26:29.513517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:30.513621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:31.513927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:32.514194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:33.514312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:26:33.890035 21 resource.go:87] Pod name my-hostname-basic-5f7c3523-dc10-405a-a3c5-97baa472016f: Found 1 pods out of 1
  I0513 20:26:33.890103 21 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-5f7c3523-dc10-405a-a3c5-97baa472016f" is running
  I0513 20:26:33.892892 21 replica_set.go:220] Pod "my-hostname-basic-5f7c3523-dc10-405a-a3c5-97baa472016f-qczgx" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-13 20:26:30 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-13 20:26:28 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-13 20:26:30 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-13 20:26:30 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-13 20:26:28 +0000 UTC Reason: Message:}])
  I0513 20:26:33.892937 21 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 05/13/24 20:26:33.892
  I0513 20:26:33.910984 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9764" for this suite. @ 05/13/24 20:26:33.934
• [5.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 05/13/24 20:26:33.952
  I0513 20:26:33.952142 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename resourcequota @ 05/13/24 20:26:33.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:26:34.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:26:34.006
  STEP: Creating a ResourceQuota with terminating scope @ 05/13/24 20:26:34.054
  STEP: Ensuring ResourceQuota status is calculated @ 05/13/24 20:26:34.063
  E0513 20:26:34.514902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:35.515827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 05/13/24 20:26:36.071
  STEP: Ensuring ResourceQuota status is calculated @ 05/13/24 20:26:36.086
  E0513 20:26:36.516841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:37.517128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 05/13/24 20:26:38.092
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 05/13/24 20:26:38.113
  E0513 20:26:38.517657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:39.517821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 05/13/24 20:26:40.118
  E0513 20:26:40.518254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:41.518392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 05/13/24 20:26:42.123
  STEP: Ensuring resource quota status released the pod usage @ 05/13/24 20:26:42.146
  E0513 20:26:42.518546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:43.518984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 05/13/24 20:26:44.151
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 05/13/24 20:26:44.166
  E0513 20:26:44.519034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:45.519793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 05/13/24 20:26:46.174
  E0513 20:26:46.520800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:47.521198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 05/13/24 20:26:48.178
  STEP: Ensuring resource quota status released the pod usage @ 05/13/24 20:26:48.211
  E0513 20:26:48.521872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:49.522463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:26:50.218888 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1420" for this suite. @ 05/13/24 20:26:50.224
• [16.282 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 05/13/24 20:26:50.234
  I0513 20:26:50.234626 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename statefulset @ 05/13/24 20:26:50.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:26:50.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:26:50.261
  STEP: Creating service test in namespace statefulset-483 @ 05/13/24 20:26:50.264
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 05/13/24 20:26:50.27
  STEP: Creating stateful set ss in namespace statefulset-483 @ 05/13/24 20:26:50.28
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-483 @ 05/13/24 20:26:50.294
  I0513 20:26:50.298999 21 wait.go:40] Found 0 stateful pods, waiting for 1
  E0513 20:26:50.523444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:51.524014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:52.524358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:53.524511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:54.524645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:55.525088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:56.525313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:57.525632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:58.525768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:59.525911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:00.300333 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 05/13/24 20:27:00.3
  I0513 20:27:00.304001 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=statefulset-483 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0513 20:27:00.526518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:00.544003 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0513 20:27:00.544051 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0513 20:27:00.544070 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0513 20:27:00.549004 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0513 20:27:01.526993      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:02.527124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:03.527601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:04.527658      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:05.527970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:06.528088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:07.528283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:08.528898      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:09.529277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:10.529752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:10.550803 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0513 20:27:10.550864 21 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0513 20:27:10.586772 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 9.99999937s
  E0513 20:27:11.529890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:11.592977 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 8.990877848s
  E0513 20:27:12.530028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:12.597329 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 7.984771208s
  E0513 20:27:13.530141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:13.666963 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 6.98088527s
  E0513 20:27:14.530287      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:14.675419 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 5.91070495s
  E0513 20:27:15.530477      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:15.679781 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 4.90241652s
  E0513 20:27:16.530618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:16.685080 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 3.898450262s
  E0513 20:27:17.530801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:17.689745 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 2.89219826s
  E0513 20:27:18.531656      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:18.693590 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 1.888451335s
  E0513 20:27:19.533038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:19.697982 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 883.915047ms
  E0513 20:27:20.533776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-483 @ 05/13/24 20:27:20.698
  I0513 20:27:20.705561 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=statefulset-483 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0513 20:27:20.915035 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0513 20:27:20.915100 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0513 20:27:20.915122 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0513 20:27:20.918816 21 wait.go:40] Found 1 stateful pods, waiting for 3
  E0513 20:27:21.533915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:22.534570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:23.535944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:24.536195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:25.536322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:26.536658      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:27.536941      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:28.537349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:29.538175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:30.538418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:30.921983 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0513 20:27:30.922039 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0513 20:27:30.922059 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 05/13/24 20:27:30.922
  STEP: Scale down will halt with unhealthy stateful pod @ 05/13/24 20:27:30.922
  I0513 20:27:30.930650 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=statefulset-483 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0513 20:27:31.131219 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0513 20:27:31.131278 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0513 20:27:31.131297 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0513 20:27:31.131797 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=statefulset-483 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0513 20:27:31.330544 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0513 20:27:31.330630 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0513 20:27:31.330656 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0513 20:27:31.330856 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=statefulset-483 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0513 20:27:31.532193 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0513 20:27:31.532246 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0513 20:27:31.532371 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0513 20:27:31.532386 21 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0513 20:27:31.535707 21 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0513 20:27:31.538954      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:32.539964      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:33.540709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:34.541302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:35.541411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:36.541530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:37.541799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:38.542012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:39.542442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:40.543565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:41.541357 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0513 20:27:41.541415 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0513 20:27:41.541433 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  E0513 20:27:41.543898      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:41.555332 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 9.9999996s
  E0513 20:27:42.544143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:42.566117 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 8.995450572s
  E0513 20:27:43.544285      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:43.574116 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 7.984154928s
  E0513 20:27:44.544928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:44.578241 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 6.976662089s
  E0513 20:27:45.545941      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:45.583446 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 5.971499102s
  E0513 20:27:46.546102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:46.589825 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 4.966410278s
  E0513 20:27:47.546526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:47.594929 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 3.959962993s
  E0513 20:27:48.546815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:48.610526 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 2.955239294s
  E0513 20:27:49.546911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:49.615132 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 1.939684748s
  E0513 20:27:50.547714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:50.619996 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 934.769166ms
  E0513 20:27:51.548763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-483 @ 05/13/24 20:27:51.621
  I0513 20:27:51.625292 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=statefulset-483 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0513 20:27:51.802112 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0513 20:27:51.802173 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0513 20:27:51.802195 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0513 20:27:51.802361 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=statefulset-483 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0513 20:27:52.011365 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0513 20:27:52.011425 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0513 20:27:52.011454 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0513 20:27:52.011546 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=statefulset-483 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0513 20:27:52.205859 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0513 20:27:52.205920 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0513 20:27:52.205945 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0513 20:27:52.205962 21 rest.go:150] Scaling statefulset ss to 0
  E0513 20:27:52.549466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:53.549674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:54.550602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:55.551396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:56.551807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:57.551932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:58.552750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:59.553309      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:00.553654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:01.553741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 05/13/24 20:28:02.223
  I0513 20:28:02.223988 21 statefulset.go:135] Deleting all statefulset in ns statefulset-483
  I0513 20:28:02.227436 21 rest.go:150] Scaling statefulset ss to 0
  I0513 20:28:02.239347 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0513 20:28:02.242614 21 rest.go:88] Deleting statefulset ss
  I0513 20:28:02.264188 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-483" for this suite. @ 05/13/24 20:28:02.274
• [72.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 05/13/24 20:28:02.286
  I0513 20:28:02.287094 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/13/24 20:28:02.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:28:02.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:28:02.341
  STEP: create the container to handle the HTTPGet hook request. @ 05/13/24 20:28:02.358
  E0513 20:28:02.553884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:03.553932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 05/13/24 20:28:04.399
  E0513 20:28:04.554612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:05.554774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 05/13/24 20:28:06.42
  STEP: delete the pod with lifecycle hook @ 05/13/24 20:28:06.437
  E0513 20:28:06.555259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:07.555939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:08.556448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:09.557179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:28:10.465865 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-222" for this suite. @ 05/13/24 20:28:10.47
• [8.193 seconds]
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 05/13/24 20:28:10.481
  I0513 20:28:10.481408 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename configmap @ 05/13/24 20:28:10.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:28:10.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:28:10.515
  E0513 20:28:10.557729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:28:10.582890 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3346" for this suite. @ 05/13/24 20:28:10.591
• [0.137 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 05/13/24 20:28:10.618
  I0513 20:28:10.618374 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename csiinlinevolumes @ 05/13/24 20:28:10.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:28:10.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:28:10.664
  STEP: creating @ 05/13/24 20:28:10.667
  STEP: getting @ 05/13/24 20:28:10.728
  STEP: listing in namespace @ 05/13/24 20:28:10.734
  STEP: patching @ 05/13/24 20:28:10.738
  STEP: deleting @ 05/13/24 20:28:10.778
  I0513 20:28:10.800834 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-8187" for this suite. @ 05/13/24 20:28:10.808
• [0.219 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 05/13/24 20:28:10.837
  I0513 20:28:10.837726 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename pods @ 05/13/24 20:28:10.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:28:10.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:28:10.869
  E0513 20:28:11.557945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:12.558844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:13.559802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:14.559964      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:15.560719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:16.560821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:17.560990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:18.561114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:28:18.974
  I0513 20:28:18.979749 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod client-envvars-35071818-8bad-4377-89e0-7f7f15f18481 container env3cont: <nil>
  STEP: delete the pod @ 05/13/24 20:28:19.003
  I0513 20:28:19.047423 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5784" for this suite. @ 05/13/24 20:28:19.383
• [8.572 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 05/13/24 20:28:19.41
  I0513 20:28:19.410745 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename daemonsets @ 05/13/24 20:28:19.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:28:19.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:28:19.433
  I0513 20:28:19.464645 21 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 05/13/24 20:28:19.472
  I0513 20:28:19.477498 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 20:28:19.477544 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 05/13/24 20:28:19.477
  I0513 20:28:19.528403 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 20:28:19.528455 21 fixtures.go:130] Node ip-172-31-14-71.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0513 20:28:19.561620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:28:20.515802 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 20:28:20.515868 21 fixtures.go:130] Node ip-172-31-14-71.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0513 20:28:20.562028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:28:21.514850 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 20:28:21.514915 21 fixtures.go:130] Node ip-172-31-14-71.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0513 20:28:21.563008      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:28:22.514418 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0513 20:28:22.514583 21 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 05/13/24 20:28:22.517
  I0513 20:28:22.552007 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0513 20:28:22.552071 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E0513 20:28:22.563052      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:28:23.544773 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 20:28:23.544824 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 05/13/24 20:28:23.544
  E0513 20:28:23.563929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:28:23.571539 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 20:28:23.571581 21 fixtures.go:130] Node ip-172-31-14-71.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 20:28:24.560052 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 20:28:24.560135 21 fixtures.go:130] Node ip-172-31-14-71.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0513 20:28:24.564455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:28:25.562656 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 20:28:25.562709 21 fixtures.go:130] Node ip-172-31-14-71.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0513 20:28:25.564827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:28:26.561340 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 20:28:26.561401 21 fixtures.go:130] Node ip-172-31-14-71.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0513 20:28:26.565483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:28:27.561437 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0513 20:28:27.561916 21 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  E0513 20:28:27.565518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting DaemonSet "daemon-set" @ 05/13/24 20:28:27.569
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8768, will wait for the garbage collector to delete the pods @ 05/13/24 20:28:27.569
  I0513 20:28:27.654261 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 31.166191ms
  I0513 20:28:27.755321 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.058956ms
  E0513 20:28:28.565990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:29.567050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:28:30.259092 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 20:28:30.259147 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0513 20:28:30.261944 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"87185"},"items":null}

  I0513 20:28:30.265497 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"87185"},"items":null}

  I0513 20:28:30.311510 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8768" for this suite. @ 05/13/24 20:28:30.316
• [10.917 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 05/13/24 20:28:30.327
  I0513 20:28:30.327900 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename svcaccounts @ 05/13/24 20:28:30.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:28:30.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:28:30.351
  STEP: creating a ServiceAccount @ 05/13/24 20:28:30.354
  STEP: watching for the ServiceAccount to be added @ 05/13/24 20:28:30.364
  STEP: patching the ServiceAccount @ 05/13/24 20:28:30.365
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 05/13/24 20:28:30.4
  STEP: deleting the ServiceAccount @ 05/13/24 20:28:30.411
  I0513 20:28:30.448702 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7686" for this suite. @ 05/13/24 20:28:30.466
• [0.156 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 05/13/24 20:28:30.485
  I0513 20:28:30.485120 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename webhook @ 05/13/24 20:28:30.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:28:30.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:28:30.538
  E0513 20:28:30.568018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 05/13/24 20:28:30.573
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 20:28:31.279
  STEP: Deploying the webhook pod @ 05/13/24 20:28:31.295
  STEP: Wait for the deployment to be ready @ 05/13/24 20:28:31.324
  I0513 20:28:31.338911 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0513 20:28:31.568382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:32.568406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/13/24 20:28:33.353
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 20:28:33.391
  E0513 20:28:33.569327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:28:34.392309 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 05/13/24 20:28:34.399
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/13/24 20:28:34.425
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 05/13/24 20:28:34.439
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/13/24 20:28:34.468
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 05/13/24 20:28:34.487
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/13/24 20:28:34.504
  E0513 20:28:34.569772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:28:34.605934 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6794" for this suite. @ 05/13/24 20:28:34.62
  STEP: Destroying namespace "webhook-markers-8035" for this suite. @ 05/13/24 20:28:34.635
• [4.199 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 05/13/24 20:28:34.69
  I0513 20:28:34.691125 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename statefulset @ 05/13/24 20:28:34.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:28:34.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:28:34.736
  STEP: Creating service test in namespace statefulset-4599 @ 05/13/24 20:28:34.739
  STEP: Creating statefulset ss in namespace statefulset-4599 @ 05/13/24 20:28:34.747
  I0513 20:28:34.790654 21 wait.go:40] Found 0 stateful pods, waiting for 1
  E0513 20:28:35.569995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:36.570199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:37.571131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:38.572039      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:39.572234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:40.572956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:41.573564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:42.573916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:43.574024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:44.574290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:28:44.790896 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 05/13/24 20:28:44.796
  STEP: updating a scale subresource @ 05/13/24 20:28:44.799
  STEP: verifying the statefulset Spec.Replicas was modified @ 05/13/24 20:28:44.813
  STEP: Patch a scale subresource @ 05/13/24 20:28:44.818
  STEP: verifying the statefulset Spec.Replicas was modified @ 05/13/24 20:28:44.838
  I0513 20:28:44.854286 21 statefulset.go:135] Deleting all statefulset in ns statefulset-4599
  I0513 20:28:44.859760 21 rest.go:150] Scaling statefulset ss to 0
  E0513 20:28:45.575420      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:46.576434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:47.577170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:48.577723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:49.578298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:50.578676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:51.578802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:52.578920      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:53.579243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:54.579401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:28:54.925472 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0513 20:28:54.939659 21 rest.go:88] Deleting statefulset ss
  I0513 20:28:54.962296 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4599" for this suite. @ 05/13/24 20:28:54.971
• [20.293 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 05/13/24 20:28:54.982
  I0513 20:28:54.982831 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/13/24 20:28:54.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:28:55.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:28:55.033
  STEP: set up a multi version CRD @ 05/13/24 20:28:55.036
  I0513 20:28:55.037438 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  E0513 20:28:55.579940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:56.580261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:57.580899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:58.581634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 05/13/24 20:28:59.471
  STEP: check the unserved version gets removed @ 05/13/24 20:28:59.488
  E0513 20:28:59.582719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:00.589503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 05/13/24 20:29:01.157
  E0513 20:29:01.589615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:02.590613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:03.590683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:29:04.590442 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0513 20:29:04.590917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "crd-publish-openapi-3668" for this suite. @ 05/13/24 20:29:04.599
• [9.635 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 05/13/24 20:29:04.619
  I0513 20:29:04.619517 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/13/24 20:29:04.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:29:04.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:29:04.659
  I0513 20:29:04.672681 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-3693" for this suite. @ 05/13/24 20:29:04.679
• [0.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 05/13/24 20:29:04.707
  I0513 20:29:04.707198 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/13/24 20:29:04.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:29:04.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:29:04.78
  STEP: create the container to handle the HTTPGet hook request. @ 05/13/24 20:29:04.793
  E0513 20:29:05.591656      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:06.591709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:07.592737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:08.593014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 05/13/24 20:29:08.878
  E0513 20:29:09.593452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:10.595597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:11.596061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:12.596114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 05/13/24 20:29:12.935
  STEP: delete the pod with lifecycle hook @ 05/13/24 20:29:12.953
  E0513 20:29:13.597129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:14.597642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:29:14.992443 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5597" for this suite. @ 05/13/24 20:29:15.002
• [10.323 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 05/13/24 20:29:15.031
  I0513 20:29:15.031504 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename secrets @ 05/13/24 20:29:15.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:29:15.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:29:15.089
  I0513 20:29:15.198407 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4185" for this suite. @ 05/13/24 20:29:15.203
• [0.194 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 05/13/24 20:29:15.226
  I0513 20:29:15.226262 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename emptydir @ 05/13/24 20:29:15.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:29:15.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:29:15.271
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 05/13/24 20:29:15.275
  E0513 20:29:15.597659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:16.598167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:17.598307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:18.598434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:29:19.329
  I0513 20:29:19.333795 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-658a6439-3e4d-44a6-9e69-1dec2cf785f1 container test-container: <nil>
  STEP: delete the pod @ 05/13/24 20:29:19.349
  I0513 20:29:19.387097 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8428" for this suite. @ 05/13/24 20:29:19.391
• [4.182 seconds]
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 05/13/24 20:29:19.408
  I0513 20:29:19.408369 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename projected @ 05/13/24 20:29:19.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:29:19.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:29:19.471
  STEP: Creating configMap with name cm-test-opt-del-16d71b79-0be0-4113-877d-f715b8036aef @ 05/13/24 20:29:19.48
  STEP: Creating configMap with name cm-test-opt-upd-87a47612-1306-4dd4-86e5-622aea2f4504 @ 05/13/24 20:29:19.49
  STEP: Creating the pod @ 05/13/24 20:29:19.511
  E0513 20:29:19.598530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:20.599055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:21.599561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:22.599704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:23.600481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-16d71b79-0be0-4113-877d-f715b8036aef @ 05/13/24 20:29:23.805
  STEP: Updating configmap cm-test-opt-upd-87a47612-1306-4dd4-86e5-622aea2f4504 @ 05/13/24 20:29:23.815
  STEP: Creating configMap with name cm-test-opt-create-de4cdc78-96a6-4eda-8c14-9fa7d36be253 @ 05/13/24 20:29:23.826
  STEP: waiting to observe update in volume @ 05/13/24 20:29:23.836
  E0513 20:29:24.601009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:25.601782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:26.603107      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:27.604001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:28.604889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:29.605876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:30.606546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:31.607130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:32.607291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:33.607445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:34.607857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:35.608771      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:36.609833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:37.610000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:38.610933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:39.611427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:40.611749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:41.611904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:42.612070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:43.612294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:44.612877      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:45.613762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:46.615074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:47.615216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:48.616173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:49.617354      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:50.618131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:51.618548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:52.618895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:53.619006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:54.619652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:55.620669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:56.621730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:57.621869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:58.622478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:59.623012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:00.625371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:01.623918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:02.624231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:03.625330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:04.625915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:05.626457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:06.626484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:07.626620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:08.627606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:30:08.668291 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8408" for this suite. @ 05/13/24 20:30:08.68
• [49.285 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 05/13/24 20:30:08.694
  I0513 20:30:08.694315 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename configmap @ 05/13/24 20:30:08.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:30:08.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:30:08.729
  STEP: Creating configMap with name configmap-test-volume-c7fa9d79-2c81-4332-92ff-8bc96b918a09 @ 05/13/24 20:30:08.733
  STEP: Creating a pod to test consume configMaps @ 05/13/24 20:30:08.739
  E0513 20:30:09.627854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:10.628943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:11.629362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:12.629525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:30:12.777
  I0513 20:30:12.781718 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-configmaps-428efed8-384a-4363-acf9-0186ef2f7010 container agnhost-container: <nil>
  STEP: delete the pod @ 05/13/24 20:30:12.792
  I0513 20:30:12.822114 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1569" for this suite. @ 05/13/24 20:30:12.827
• [4.148 seconds]
------------------------------
S
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 05/13/24 20:30:12.842
  I0513 20:30:12.842171 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename sysctl @ 05/13/24 20:30:12.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:30:12.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:30:12.888
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 05/13/24 20:30:12.891
  STEP: Watching for error events or started pod @ 05/13/24 20:30:12.904
  E0513 20:30:13.629790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:14.631609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 05/13/24 20:30:14.927
  E0513 20:30:15.631678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:16.632689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:17.633793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:18.633887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 05/13/24 20:30:18.959
  STEP: Getting logs from the pod @ 05/13/24 20:30:18.959
  STEP: Checking that the sysctl is actually updated @ 05/13/24 20:30:18.97
  I0513 20:30:18.970873 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-5020" for this suite. @ 05/13/24 20:30:18.985
• [6.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 05/13/24 20:30:19.011
  I0513 20:30:19.011222 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename csistoragecapacity @ 05/13/24 20:30:19.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:30:19.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:30:19.072
  STEP: getting /apis @ 05/13/24 20:30:19.077
  STEP: getting /apis/storage.k8s.io @ 05/13/24 20:30:19.083
  STEP: getting /apis/storage.k8s.io/v1 @ 05/13/24 20:30:19.085
  STEP: creating @ 05/13/24 20:30:19.087
  STEP: watching @ 05/13/24 20:30:19.128
  I0513 20:30:19.128733 21 csistoragecapacity.go:143] starting watch
  STEP: getting @ 05/13/24 20:30:19.151
  STEP: listing in namespace @ 05/13/24 20:30:19.158
  STEP: listing across namespaces @ 05/13/24 20:30:19.167
  STEP: patching @ 05/13/24 20:30:19.172
  STEP: updating @ 05/13/24 20:30:19.199
  I0513 20:30:19.215173 21 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0513 20:30:19.215392 21 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 05/13/24 20:30:19.215
  STEP: deleting a collection @ 05/13/24 20:30:19.236
  I0513 20:30:19.270753 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-2388" for this suite. @ 05/13/24 20:30:19.277
• [0.300 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 05/13/24 20:30:19.313
  I0513 20:30:19.313127 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename downward-api @ 05/13/24 20:30:19.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:30:19.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:30:19.357
  STEP: Creating a pod to test downward API volume plugin @ 05/13/24 20:30:19.362
  E0513 20:30:19.634352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:20.635126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:21.635373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:22.635654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:30:23.419
  I0513 20:30:23.422634 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod downwardapi-volume-02daf8b6-e1af-44f3-a4d7-b9c8f63f99ed container client-container: <nil>
  STEP: delete the pod @ 05/13/24 20:30:23.441
  I0513 20:30:23.511182 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8733" for this suite. @ 05/13/24 20:30:23.516
• [4.216 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 05/13/24 20:30:23.529
  I0513 20:30:23.529873 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 05/13/24 20:30:23.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:30:23.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:30:23.579
  STEP: Setting up the test @ 05/13/24 20:30:23.582
  STEP: Creating hostNetwork=false pod @ 05/13/24 20:30:23.582
  E0513 20:30:23.636567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:24.636707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:25.636895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:26.637396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:27.637822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 05/13/24 20:30:27.65
  E0513 20:30:28.637716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:29.638322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 05/13/24 20:30:29.693
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 05/13/24 20:30:29.693
  I0513 20:30:29.693175 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4296 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:30:29.693473 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 20:30:29.694438 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:30:29.694511 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4296/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0513 20:30:29.808778 21 exec_util.go:106] Exec stderr: ""
  I0513 20:30:29.808866 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4296 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:30:29.808898 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 20:30:29.809818 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:30:29.809903 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4296/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0513 20:30:29.920139 21 exec_util.go:106] Exec stderr: ""
  I0513 20:30:29.920208 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4296 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:30:29.920226 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 20:30:29.920997 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:30:29.921079 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4296/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0513 20:30:30.019550 21 exec_util.go:106] Exec stderr: ""
  I0513 20:30:30.019732 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4296 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:30:30.019755 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 20:30:30.020422 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:30:30.020505 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4296/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0513 20:30:30.120006 21 exec_util.go:106] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 05/13/24 20:30:30.12
  I0513 20:30:30.120369 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4296 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:30:30.121033 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 20:30:30.122230 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:30:30.122457 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4296/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0513 20:30:30.236902 21 exec_util.go:106] Exec stderr: ""
  I0513 20:30:30.237123 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4296 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:30:30.237534 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 20:30:30.238563 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:30:30.238765 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4296/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0513 20:30:30.346116 21 exec_util.go:106] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 05/13/24 20:30:30.346
  I0513 20:30:30.346975 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4296 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:30:30.347245 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 20:30:30.348213 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:30:30.348547 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4296/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0513 20:30:30.442519 21 exec_util.go:106] Exec stderr: ""
  I0513 20:30:30.442590 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4296 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:30:30.442607 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 20:30:30.443316 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:30:30.443399 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4296/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0513 20:30:30.543354 21 exec_util.go:106] Exec stderr: ""
  I0513 20:30:30.543425 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4296 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:30:30.543451 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 20:30:30.544530 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:30:30.544644 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4296/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  E0513 20:30:30.639179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:30:30.642497 21 exec_util.go:106] Exec stderr: ""
  I0513 20:30:30.642737 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4296 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:30:30.642917 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 20:30:30.643841 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:30:30.644219 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4296/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0513 20:30:30.741492 21 exec_util.go:106] Exec stderr: ""
  I0513 20:30:30.741934 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-4296" for this suite. @ 05/13/24 20:30:30.749
• [7.234 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 05/13/24 20:30:30.765
  I0513 20:30:30.765251 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename emptydir @ 05/13/24 20:30:30.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:30:30.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:30:30.808
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 05/13/24 20:30:30.811
  E0513 20:30:31.639230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:32.639437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:33.639822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:34.640030      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:30:34.859
  I0513 20:30:34.871804 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-cd86c4a8-a755-4ae2-a113-2eabf7003cd2 container test-container: <nil>
  STEP: delete the pod @ 05/13/24 20:30:34.903
  I0513 20:30:34.963403 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4930" for this suite. @ 05/13/24 20:30:34.972
• [4.234 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 05/13/24 20:30:34.999
  I0513 20:30:34.999897 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename proxy @ 05/13/24 20:30:35.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:30:35.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:30:35.058
  I0513 20:30:35.063276 21 proxy.go:387] Creating pod...
  E0513 20:30:35.647639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:36.647972      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:30:37.107931 21 proxy.go:411] Creating service...
  I0513 20:30:37.141601 21 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4721/pods/agnhost/proxy?method=DELETE
  I0513 20:30:37.193988 21 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0513 20:30:37.194240 21 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4721/pods/agnhost/proxy?method=OPTIONS
  I0513 20:30:37.200695 21 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0513 20:30:37.200905 21 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4721/pods/agnhost/proxy?method=PATCH
  I0513 20:30:37.209458 21 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0513 20:30:37.209673 21 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4721/pods/agnhost/proxy?method=POST
  I0513 20:30:37.215741 21 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0513 20:30:37.215961 21 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4721/pods/agnhost/proxy?method=PUT
  I0513 20:30:37.224246 21 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0513 20:30:37.224417 21 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4721/services/e2e-proxy-test-service/proxy?method=DELETE
  I0513 20:30:37.231687 21 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0513 20:30:37.231905 21 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4721/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0513 20:30:37.252203 21 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0513 20:30:37.252429 21 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4721/services/e2e-proxy-test-service/proxy?method=PATCH
  I0513 20:30:37.259739 21 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0513 20:30:37.259929 21 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4721/services/e2e-proxy-test-service/proxy?method=POST
  I0513 20:30:37.276759 21 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0513 20:30:37.276977 21 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4721/services/e2e-proxy-test-service/proxy?method=PUT
  I0513 20:30:37.283716 21 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0513 20:30:37.283926 21 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4721/pods/agnhost/proxy?method=GET
  I0513 20:30:37.287713 21 proxy.go:487] http.Client request:GET StatusCode:301
  I0513 20:30:37.287892 21 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4721/services/e2e-proxy-test-service/proxy?method=GET
  I0513 20:30:37.293541 21 proxy.go:487] http.Client request:GET StatusCode:301
  I0513 20:30:37.293756 21 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4721/pods/agnhost/proxy?method=HEAD
  I0513 20:30:37.299636 21 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0513 20:30:37.299874 21 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4721/services/e2e-proxy-test-service/proxy?method=HEAD
  I0513 20:30:37.304771 21 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0513 20:30:37.305089 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4721" for this suite. @ 05/13/24 20:30:37.311
• [2.323 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 05/13/24 20:30:37.324
  I0513 20:30:37.324590 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename resourcequota @ 05/13/24 20:30:37.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:30:37.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:30:37.373
  E0513 20:30:37.649697      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:38.650740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:39.651915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:40.652602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:41.653423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:42.653589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:43.654459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:44.654609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:45.655657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:46.656404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:47.657403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:48.657574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:49.657632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:50.658209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:51.658271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:52.658471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:53.658685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 05/13/24 20:30:54.381
  E0513 20:30:54.659530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:55.660433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:56.661416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:57.662150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:58.662585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/13/24 20:30:59.388
  STEP: Ensuring resource quota status is calculated @ 05/13/24 20:30:59.394
  E0513 20:30:59.663760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:00.664464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 05/13/24 20:31:01.399
  STEP: Ensuring resource quota status captures configMap creation @ 05/13/24 20:31:01.425
  E0513 20:31:01.665380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:02.665553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 05/13/24 20:31:03.43
  STEP: Ensuring resource quota status released usage @ 05/13/24 20:31:03.438
  E0513 20:31:03.665826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:04.666530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:31:05.443128 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1254" for this suite. @ 05/13/24 20:31:05.45
• [28.136 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 05/13/24 20:31:05.463
  I0513 20:31:05.463665 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename deployment @ 05/13/24 20:31:05.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:31:05.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:31:05.515
  I0513 20:31:05.543102 21 deployment.go:1645] Creating simple deployment test-new-deployment
  I0513 20:31:05.565203 21 deployment.go:222] deployment "test-new-deployment" doesn't have the required revision set
  E0513 20:31:05.666409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:06.667312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:31:07.577543 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 20, 31, 5, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 31, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 20, 31, 5, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 31, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-new-deployment-77db57d8df\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0513 20:31:07.667762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:08.668074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 05/13/24 20:31:09.587
  STEP: updating a scale subresource @ 05/13/24 20:31:09.592
  STEP: verifying the deployment Spec.Replicas was modified @ 05/13/24 20:31:09.601
  STEP: Patch a scale subresource @ 05/13/24 20:31:09.608
  I0513 20:31:09.663285 21 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5254",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d27a3d87-8c5d-4dd4-9145-3fe45db53a06",
      ResourceVersion: (string) (len=5) "88394",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851229065,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851229065,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851229067,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851229067,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851229067,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851229067,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851229065,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-77db57d8df\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  E0513 20:31:09.669453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:31:09.681759 21 deployment.go:39] New ReplicaSet "test-new-deployment-77db57d8df" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-77db57d8df",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5254",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1bbad103-dbf3-4ebe-9d36-7ec3ad01e144",
      ResourceVersion: (string) (len=5) "88400",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851229065,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "d27a3d87-8c5d-4dd4-9145-3fe45db53a06",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851229069,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 32 37 61 33 64  38 37 2d 38 63 35 64 2d  |\"d27a3d87-8c5d-|
              00000120  34 64 64 34 2d 39 31 34  35 2d 33 66 65 34 35 64  |4dd4-9145-3fe45d|
              00000130  62 35 33 61 30 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b53a06\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851229069,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0513 20:31:09.715299 21 deployment.go:67] Pod "test-new-deployment-77db57d8df-c82js" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-77db57d8df-c82js",
      GenerateName: (string) (len=31) "test-new-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5254",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "746643cb-3cc0-4844-b546-7fe98a8aea8b",
      ResourceVersion: (string) (len=5) "88407",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851229069,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-77db57d8df",
          UID: (types.UID) (len=36) "1bbad103-dbf3-4ebe-9d36-7ec3ad01e144",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851229069,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  62 61 64 31 30 33 2d 64  |d\":\"1bbad103-d|
              00000090  62 66 33 2d 34 65 62 65  2d 39 64 33 36 2d 37 65  |bf3-4ebe-9d36-7e|
              000000a0  63 33 61 64 30 31 65 31  34 34 5c 22 7d 22 3a 7b  |c3ad01e144\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zjsc6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zjsc6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-13-166.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851229069,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:31:09.718582 21 deployment.go:67] Pod "test-new-deployment-77db57d8df-vpgvt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-77db57d8df-vpgvt",
      GenerateName: (string) (len=31) "test-new-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5254",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "16beead0-74cd-46bb-be36-79e85af7b09d",
      ResourceVersion: (string) (len=5) "88405",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851229069,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-77db57d8df",
          UID: (types.UID) (len=36) "1bbad103-dbf3-4ebe-9d36-7ec3ad01e144",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851229069,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  62 61 64 31 30 33 2d 64  |d\":\"1bbad103-d|
              00000090  62 66 33 2d 34 65 62 65  2d 39 64 33 36 2d 37 65  |bf3-4ebe-9d36-7e|
              000000a0  63 33 61 64 30 31 65 31  34 34 5c 22 7d 22 3a 7b  |c3ad01e144\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9wr8l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9wr8l",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:31:09.723297 21 deployment.go:67] Pod "test-new-deployment-77db57d8df-xf8gc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-77db57d8df-xf8gc",
      GenerateName: (string) (len=31) "test-new-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5254",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9203c4ef-99af-40b3-8c0a-da2e07266655",
      ResourceVersion: (string) (len=5) "88403",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851229069,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-77db57d8df",
          UID: (types.UID) (len=36) "1bbad103-dbf3-4ebe-9d36-7ec3ad01e144",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851229069,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  62 61 64 31 30 33 2d 64  |d\":\"1bbad103-d|
              00000090  62 66 33 2d 34 65 62 65  2d 39 64 33 36 2d 37 65  |bf3-4ebe-9d36-7e|
              000000a0  63 33 61 64 30 31 65 31  34 34 5c 22 7d 22 3a 7b  |c3ad01e144\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851229069,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pf998",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pf998",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-14-71.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851229069,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851229069,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851229069,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851229069,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851229069,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.14.71",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.14.71"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851229069,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:31:09.727085 21 deployment.go:67] Pod "test-new-deployment-77db57d8df-xmflz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-77db57d8df-xmflz",
      GenerateName: (string) (len=31) "test-new-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5254",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "555046e9-c642-4111-81e5-be39b56cb583",
      ResourceVersion: (string) (len=5) "88376",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851229065,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "b8d4ebf14039d79f9bd3957e82a6eb48e00370de70f1231129ef2bfd874f4149",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.4.191/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.4.191/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-77db57d8df",
          UID: (types.UID) (len=36) "1bbad103-dbf3-4ebe-9d36-7ec3ad01e144",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851229065,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  62 61 64 31 30 33 2d 64  |d\":\"1bbad103-d|
              00000090  62 66 33 2d 34 65 62 65  2d 39 64 33 36 2d 37 65  |bf3-4ebe-9d36-7e|
              000000a0  63 33 61 64 30 31 65 31  34 34 5c 22 7d 22 3a 7b  |c3ad01e144\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851229066,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851229067,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 34 2e 31 39  31 5c 22 7d 22 3a 7b 22  |.42.4.191\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9mgzq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9mgzq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-7-107.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851229067,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851229065,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851229067,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851229067,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851229065,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.7.107",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.7.107"
        }
      },
      PodIP: (string) (len=11) "10.42.4.191",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.4.191"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851229065,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851229066,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://be02f71ce5e5bcd633395f943266a876e1b2a4237502b2f83766fa8a23a8da62",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:31:09.732122 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5254" for this suite. @ 05/13/24 20:31:09.756
• [4.339 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 05/13/24 20:31:09.802
  I0513 20:31:09.802456 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename webhook @ 05/13/24 20:31:09.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:31:09.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:31:09.859
  STEP: Setting up server cert @ 05/13/24 20:31:09.925
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 20:31:10.327
  STEP: Deploying the webhook pod @ 05/13/24 20:31:10.343
  STEP: Wait for the deployment to be ready @ 05/13/24 20:31:10.389
  I0513 20:31:10.409386 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0513 20:31:10.670508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:11.670639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:31:12.425431 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 20, 31, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 31, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 20, 31, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 31, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0513 20:31:12.671390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:13.671733      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/13/24 20:31:14.435
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 20:31:14.477
  E0513 20:31:14.672194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:31:15.479300 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 05/13/24 20:31:15.502
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 05/13/24 20:31:15.508
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 05/13/24 20:31:15.508
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 05/13/24 20:31:15.508
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 05/13/24 20:31:15.51
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 05/13/24 20:31:15.51
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 05/13/24 20:31:15.513
  I0513 20:31:15.647824 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4010" for this suite. @ 05/13/24 20:31:15.671
  E0513 20:31:15.672208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-markers-540" for this suite. @ 05/13/24 20:31:15.689
• [5.900 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 05/13/24 20:31:15.703
  I0513 20:31:15.703407 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename endpointslice @ 05/13/24 20:31:15.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:31:15.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:31:15.772
  E0513 20:31:16.672836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:17.673098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:31:17.911711 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1959" for this suite. @ 05/13/24 20:31:17.918
• [2.226 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 05/13/24 20:31:17.93
  I0513 20:31:17.930359 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename daemonsets @ 05/13/24 20:31:17.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:31:17.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:31:17.986
  STEP: Creating simple DaemonSet "daemon-set" @ 05/13/24 20:31:18.032
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/13/24 20:31:18.054
  I0513 20:31:18.083501 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 20:31:18.083566 21 fixtures.go:130] Node ip-172-31-13-166.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0513 20:31:18.673661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:31:19.063440 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 20:31:19.063620 21 fixtures.go:130] Node ip-172-31-13-166.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0513 20:31:19.673849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:31:20.113180 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 20:31:20.113250 21 fixtures.go:130] Node ip-172-31-13-166.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0513 20:31:20.673938      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:31:21.069191 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0513 20:31:21.069250 21 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 05/13/24 20:31:21.078
  I0513 20:31:21.129247 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0513 20:31:21.129322 21 fixtures.go:130] Node ip-172-31-3-239.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0513 20:31:21.674730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:31:22.117054 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0513 20:31:22.117093 21 fixtures.go:130] Node ip-172-31-3-239.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0513 20:31:22.675784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:31:23.117993 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0513 20:31:23.118412 21 fixtures.go:130] Node ip-172-31-3-239.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0513 20:31:23.676355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:31:24.116377 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0513 20:31:24.116435 21 fixtures.go:130] Node ip-172-31-3-239.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0513 20:31:24.677575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:31:25.117331 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0513 20:31:25.117394 21 fixtures.go:130] Node ip-172-31-3-239.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0513 20:31:25.677577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:31:26.122963 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0513 20:31:26.124185 21 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/13/24 20:31:26.129
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6959, will wait for the garbage collector to delete the pods @ 05/13/24 20:31:26.129
  I0513 20:31:26.213872 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 22.450615ms
  I0513 20:31:26.415015 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 201.227343ms
  E0513 20:31:26.678124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:27.679606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:31:28.522666 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 20:31:28.522734 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0513 20:31:28.526314 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"88697"},"items":null}

  I0513 20:31:28.529320 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"88697"},"items":null}

  I0513 20:31:28.548388 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6959" for this suite. @ 05/13/24 20:31:28.553
• [10.635 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 05/13/24 20:31:28.568
  I0513 20:31:28.568977 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename emptydir @ 05/13/24 20:31:28.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:31:28.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:31:28.604
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 05/13/24 20:31:28.61
  E0513 20:31:28.679660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:29.680913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:30.681656      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:31.681833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:31:32.649
  I0513 20:31:32.653830 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-b854fd8e-7780-4f0d-bdab-67ed321f073f container test-container: <nil>
  STEP: delete the pod @ 05/13/24 20:31:32.662
  E0513 20:31:32.682431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:31:32.700802 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4764" for this suite. @ 05/13/24 20:31:32.707
• [4.153 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 05/13/24 20:31:32.722
  I0513 20:31:32.722161 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename downward-api @ 05/13/24 20:31:32.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:31:32.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:31:32.781
  STEP: Creating a pod to test downward api env vars @ 05/13/24 20:31:32.785
  E0513 20:31:33.682970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:34.683125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:35.683261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:36.683363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:31:36.814
  I0513 20:31:36.820558 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod downward-api-cf8db69e-ec79-4844-acb8-03466c953056 container dapi-container: <nil>
  STEP: delete the pod @ 05/13/24 20:31:36.831
  I0513 20:31:36.857322 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6531" for this suite. @ 05/13/24 20:31:36.868
• [4.168 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 05/13/24 20:31:36.893
  I0513 20:31:36.893678 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename events @ 05/13/24 20:31:36.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:31:36.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:31:36.936
  STEP: creating a test event @ 05/13/24 20:31:36.94
  STEP: listing events in all namespaces @ 05/13/24 20:31:36.956
  STEP: listing events in test namespace @ 05/13/24 20:31:36.968
  STEP: listing events with field selection filtering on source @ 05/13/24 20:31:36.974
  STEP: listing events with field selection filtering on reportingController @ 05/13/24 20:31:36.979
  STEP: getting the test event @ 05/13/24 20:31:36.983
  STEP: patching the test event @ 05/13/24 20:31:36.986
  STEP: getting the test event @ 05/13/24 20:31:37.001
  STEP: updating the test event @ 05/13/24 20:31:37.006
  STEP: getting the test event @ 05/13/24 20:31:37.017
  STEP: deleting the test event @ 05/13/24 20:31:37.022
  STEP: listing events in all namespaces @ 05/13/24 20:31:37.042
  STEP: listing events in test namespace @ 05/13/24 20:31:37.046
  I0513 20:31:37.050523 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7437" for this suite. @ 05/13/24 20:31:37.055
• [0.173 seconds]
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 05/13/24 20:31:37.066
  I0513 20:31:37.066092 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename pods @ 05/13/24 20:31:37.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:31:37.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:31:37.105
  I0513 20:31:37.110366 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: creating the pod @ 05/13/24 20:31:37.111
  STEP: submitting the pod to kubernetes @ 05/13/24 20:31:37.111
  E0513 20:31:37.683918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:38.684058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:31:39.183314 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6457" for this suite. @ 05/13/24 20:31:39.189
• [2.137 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 05/13/24 20:31:39.203
  I0513 20:31:39.203805 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename gc @ 05/13/24 20:31:39.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:31:39.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:31:39.282
  STEP: create the rc1 @ 05/13/24 20:31:39.292
  STEP: create the rc2 @ 05/13/24 20:31:39.305
  E0513 20:31:39.686300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:40.689818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:41.690720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:42.701385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:43.711307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 05/13/24 20:31:43.747
  E0513 20:31:44.713121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:45.713749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:46.714096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:47.715169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 05/13/24 20:31:48.515
  STEP: wait for the rc to be deleted @ 05/13/24 20:31:48.531
  E0513 20:31:48.717109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:49.717211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:50.717342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:51.717483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:52.718578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:53.720246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:31:54.428522 21 garbage_collector.go:762] 63 pods remaining
  I0513 20:31:54.428581 21 garbage_collector.go:769] 63 pods has nil DeletionTimestamp
  I0513 20:31:54.428596 21 garbage_collector.go:770] 
  E0513 20:31:54.721364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:55.725585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:56.727512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:57.727714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 05/13/24 20:31:58.564
  E0513 20:31:58.731358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:59.731685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:00.310943 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0513 20:32:00.311076 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2ckhj" in namespace "gc-6505"
  I0513 20:32:00.348195 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2j8m7" in namespace "gc-6505"
  I0513 20:32:00.406024 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2jvr2" in namespace "gc-6505"
  I0513 20:32:00.437630 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2kc92" in namespace "gc-6505"
  I0513 20:32:00.494591 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2l8qb" in namespace "gc-6505"
  I0513 20:32:00.535147 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2wg9j" in namespace "gc-6505"
  I0513 20:32:00.585115 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2wtnr" in namespace "gc-6505"
  I0513 20:32:00.633435 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-455jt" in namespace "gc-6505"
  I0513 20:32:00.694534 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-47rds" in namespace "gc-6505"
  I0513 20:32:00.727097 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4psrj" in namespace "gc-6505"
  E0513 20:32:00.732517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:00.763076 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4sfdw" in namespace "gc-6505"
  I0513 20:32:00.799432 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5ngfs" in namespace "gc-6505"
  I0513 20:32:00.872753 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5pxg2" in namespace "gc-6505"
  I0513 20:32:00.958489 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5z7jv" in namespace "gc-6505"
  I0513 20:32:01.033230 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-627w4" in namespace "gc-6505"
  I0513 20:32:01.069559 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-62ts5" in namespace "gc-6505"
  I0513 20:32:01.139502 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6jsnw" in namespace "gc-6505"
  I0513 20:32:01.226176 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6kzrl" in namespace "gc-6505"
  I0513 20:32:01.300141 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6tw6c" in namespace "gc-6505"
  I0513 20:32:01.373600 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-74hnz" in namespace "gc-6505"
  I0513 20:32:01.438560 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-797b4" in namespace "gc-6505"
  I0513 20:32:01.511070 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7gp9x" in namespace "gc-6505"
  I0513 20:32:01.548147 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7lh4h" in namespace "gc-6505"
  I0513 20:32:01.589718 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7mv4t" in namespace "gc-6505"
  I0513 20:32:01.689151 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7n99d" in namespace "gc-6505"
  I0513 20:32:01.735052 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-948pk" in namespace "gc-6505"
  E0513 20:32:01.747813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:01.764470 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9bzcm" in namespace "gc-6505"
  I0513 20:32:01.803281 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9sxln" in namespace "gc-6505"
  I0513 20:32:01.861438 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9wwgf" in namespace "gc-6505"
  I0513 20:32:01.916448 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9xl4w" in namespace "gc-6505"
  I0513 20:32:01.979680 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9zkh8" in namespace "gc-6505"
  I0513 20:32:02.011793 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-blwww" in namespace "gc-6505"
  I0513 20:32:02.121273 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bp57r" in namespace "gc-6505"
  I0513 20:32:02.168335 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bs9h6" in namespace "gc-6505"
  I0513 20:32:02.203994 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bzn6c" in namespace "gc-6505"
  I0513 20:32:02.257764 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ccqsf" in namespace "gc-6505"
  I0513 20:32:02.322334 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cjmj2" in namespace "gc-6505"
  I0513 20:32:02.397305 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cnnlm" in namespace "gc-6505"
  I0513 20:32:02.462463 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-db87g" in namespace "gc-6505"
  I0513 20:32:02.497901 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dch29" in namespace "gc-6505"
  I0513 20:32:02.551053 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dvhsx" in namespace "gc-6505"
  I0513 20:32:02.588617 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dzx6z" in namespace "gc-6505"
  I0513 20:32:02.623552 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fbs6x" in namespace "gc-6505"
  I0513 20:32:02.701958 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fxjvf" in namespace "gc-6505"
  E0513 20:32:02.748396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:02.792578 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gr9xk" in namespace "gc-6505"
  I0513 20:32:02.864569 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gs9rb" in namespace "gc-6505"
  I0513 20:32:02.905233 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gsqwg" in namespace "gc-6505"
  I0513 20:32:02.951612 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gwkp7" in namespace "gc-6505"
  E0513 20:32:03.748968      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:04.075050 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h88vr" in namespace "gc-6505"
  I0513 20:32:04.126136 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hqs7d" in namespace "gc-6505"
  I0513 20:32:04.191900 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6505" for this suite. @ 05/13/24 20:32:04.224
• [25.055 seconds]
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 05/13/24 20:32:04.258
  I0513 20:32:04.259146 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename events @ 05/13/24 20:32:04.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:32:04.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:32:04.329
  STEP: Create set of events @ 05/13/24 20:32:04.332
  I0513 20:32:04.356965 21 core_events.go:198] created test-event-1
  I0513 20:32:04.372760 21 core_events.go:198] created test-event-2
  I0513 20:32:04.384448 21 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 05/13/24 20:32:04.384
  STEP: delete collection of events @ 05/13/24 20:32:04.393
  I0513 20:32:04.393300 21 core_events.go:213] requesting DeleteCollection of events
  E0513 20:32:04.749146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check that the list of events matches the requested quantity @ 05/13/24 20:32:04.817
  I0513 20:32:04.817745 21 core_events.go:230] requesting list of events to confirm quantity
  I0513 20:32:04.848561 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2355" for this suite. @ 05/13/24 20:32:04.864
• [0.722 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 05/13/24 20:32:04.982
  I0513 20:32:04.982606 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename watch @ 05/13/24 20:32:04.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:32:05.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:32:05.018
  STEP: creating a watch on configmaps @ 05/13/24 20:32:05.022
  STEP: creating a new configmap @ 05/13/24 20:32:05.024
  STEP: modifying the configmap once @ 05/13/24 20:32:05.04
  STEP: closing the watch once it receives two notifications @ 05/13/24 20:32:05.086
  I0513 20:32:05.086380 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1611  76777ba4-2211-4ad6-bbe1-0471bbdd7222 90323 0 2024-05-13 20:32:05 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-13 20:32:05 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0513 20:32:05.086562 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1611  76777ba4-2211-4ad6-bbe1-0471bbdd7222 90324 0 2024-05-13 20:32:05 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-13 20:32:05 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 05/13/24 20:32:05.086
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 05/13/24 20:32:05.109
  STEP: deleting the configmap @ 05/13/24 20:32:05.113
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 05/13/24 20:32:05.129
  I0513 20:32:05.130112 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1611  76777ba4-2211-4ad6-bbe1-0471bbdd7222 90325 0 2024-05-13 20:32:05 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-13 20:32:05 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0513 20:32:05.130391 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1611  76777ba4-2211-4ad6-bbe1-0471bbdd7222 90326 0 2024-05-13 20:32:05 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-13 20:32:05 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0513 20:32:05.130605 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1611" for this suite. @ 05/13/24 20:32:05.135
• [0.163 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 05/13/24 20:32:05.146
  I0513 20:32:05.146641 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/13/24 20:32:05.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:32:05.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:32:05.191
  I0513 20:32:05.200563 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7133" for this suite. @ 05/13/24 20:32:05.207
• [0.077 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 05/13/24 20:32:05.223
  I0513 20:32:05.224026 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename pod-network-test @ 05/13/24 20:32:05.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:32:05.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:32:05.269
  STEP: Performing setup for networking test in namespace pod-network-test-9002 @ 05/13/24 20:32:05.273
  STEP: creating a selector @ 05/13/24 20:32:05.273
  STEP: Creating the service pods in kubernetes @ 05/13/24 20:32:05.273
  I0513 20:32:05.273859 21 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0513 20:32:05.750273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:06.750370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:07.752026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:08.752679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:09.753090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:10.753191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:11.753611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:12.753824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:13.754275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:14.754635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:15.754723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:16.755084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:17.755917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:18.756532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:19.757342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:20.757740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:21.763647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:22.763798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:23.763940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:24.764009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:25.764551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:26.764736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:27.764953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:28.765124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:29.765241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:30.766167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:31.766317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:32.766833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:33.767018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:34.767159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:35.767623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:36.767985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:37.768111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 05/13/24 20:32:37.972
  E0513 20:32:38.769085      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:39.769231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:40.088746 21 utils.go:779] Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  I0513 20:32:40.088940 21 utils.go:472] Going to poll 10.42.1.127 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  I0513 20:32:40.093675 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.1.127 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9002 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:32:40.093721 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 20:32:40.094416 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:32:40.094523 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9002/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.1.127+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0513 20:32:40.770237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:41.190671 21 utils.go:489] Found all 1 expected endpoints: [netserver-0]
  I0513 20:32:41.190731 21 utils.go:472] Going to poll 10.42.3.160 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  I0513 20:32:41.198677 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.3.160 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9002 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:32:41.198730 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 20:32:41.199410 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:32:41.199548 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9002/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.3.160+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0513 20:32:41.770463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:42.303560 21 utils.go:489] Found all 1 expected endpoints: [netserver-1]
  I0513 20:32:42.303616 21 utils.go:472] Going to poll 10.42.0.108 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  I0513 20:32:42.307376 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.0.108 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9002 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:32:42.307428 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 20:32:42.308323 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:32:42.308406 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9002/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.0.108+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0513 20:32:42.770791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:43.423360 21 utils.go:489] Found all 1 expected endpoints: [netserver-2]
  I0513 20:32:43.423628 21 utils.go:472] Going to poll 10.42.4.222 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  I0513 20:32:43.427543 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.4.222 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9002 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:32:43.427701 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 20:32:43.428613 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:32:43.428976 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9002/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.4.222+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0513 20:32:43.771707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:44.531194 21 utils.go:489] Found all 1 expected endpoints: [netserver-3]
  I0513 20:32:44.531323 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9002" for this suite. @ 05/13/24 20:32:44.536
• [39.321 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 05/13/24 20:32:44.546
  I0513 20:32:44.546520 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename namespaces @ 05/13/24 20:32:44.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:32:44.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:32:44.57
  STEP: Creating namespace "e2e-ns-8nnjw" @ 05/13/24 20:32:44.573
  I0513 20:32:44.597666 21 namespace.go:411] Namespace "e2e-ns-8nnjw-6233" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-8nnjw-6233" @ 05/13/24 20:32:44.597
  I0513 20:32:44.609151 21 namespace.go:434] Namespace "e2e-ns-8nnjw-6233" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-8nnjw-6233" @ 05/13/24 20:32:44.609
  I0513 20:32:44.623690 21 namespace.go:463] Namespace "e2e-ns-8nnjw-6233" has []v1.FinalizerName{"kubernetes"}
  I0513 20:32:44.623828 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5131" for this suite. @ 05/13/24 20:32:44.628
  STEP: Destroying namespace "e2e-ns-8nnjw-6233" for this suite. @ 05/13/24 20:32:44.645
• [0.110 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 05/13/24 20:32:44.657
  I0513 20:32:44.657218 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename emptydir @ 05/13/24 20:32:44.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:32:44.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:32:44.699
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 05/13/24 20:32:44.708
  E0513 20:32:44.772372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:45.774677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:46.775400      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:47.775692      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:32:48.748
  I0513 20:32:48.752701 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-5f141ffc-4990-47ae-8002-9082dd362001 container test-container: <nil>
  STEP: delete the pod @ 05/13/24 20:32:48.761
  E0513 20:32:48.776418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:48.797600 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2232" for this suite. @ 05/13/24 20:32:48.802
• [4.156 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 05/13/24 20:32:48.814
  I0513 20:32:48.815825 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename endpointslice @ 05/13/24 20:32:48.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:32:48.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:32:48.862
  I0513 20:32:48.913567 21 endpointslice.go:1045] Endpoints addresses: [3.14.250.222 3.144.227.199 3.144.45.141] , ports: [6443]
  I0513 20:32:48.913635 21 endpointslice.go:1075] EndpointSlices addresses: [3.14.250.222 3.144.227.199 3.144.45.141] , ports: [6443]
  I0513 20:32:48.913883 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5126" for this suite. @ 05/13/24 20:32:48.921
• [0.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 05/13/24 20:32:48.945
  I0513 20:32:48.945785 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename webhook @ 05/13/24 20:32:48.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:32:48.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:32:48.979
  STEP: Setting up server cert @ 05/13/24 20:32:49.486
  E0513 20:32:49.777151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 20:32:50.582
  STEP: Deploying the webhook pod @ 05/13/24 20:32:50.597
  STEP: Wait for the deployment to be ready @ 05/13/24 20:32:50.638
  E0513 20:32:50.778106      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:50.882402 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0513 20:32:51.778227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:52.778365      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:52.894972 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 20, 32, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 32, 50, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 20, 32, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 32, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0513 20:32:53.778961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:54.779561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/13/24 20:32:54.9
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 20:32:55.137
  E0513 20:32:55.780499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:56.139071 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 05/13/24 20:32:56.488
  STEP: Creating a custom resource definition that should be denied by the webhook @ 05/13/24 20:32:56.528
  I0513 20:32:56.528326 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  I0513 20:32:56.657463 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5976" for this suite. @ 05/13/24 20:32:56.668
  STEP: Destroying namespace "webhook-markers-6488" for this suite. @ 05/13/24 20:32:56.68
• [7.746 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 05/13/24 20:32:56.692
  I0513 20:32:56.692212 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/13/24 20:32:56.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:32:56.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:32:56.723
  I0513 20:32:56.731543 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  E0513 20:32:56.781122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:57.288518 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5220" for this suite. @ 05/13/24 20:32:57.298
• [0.624 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 05/13/24 20:32:57.316
  I0513 20:32:57.316563 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename container-runtime @ 05/13/24 20:32:57.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:32:57.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:32:57.359
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 05/13/24 20:32:57.379
  E0513 20:32:57.782064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:58.782158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:59.782213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:00.782763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:01.783047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:02.783786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:03.784061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:04.784947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:05.785127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:06.786098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:07.786697      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:08.787587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:09.787831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:10.788233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:11.789207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:12.789947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:13.790286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:14.790406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:15.790568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:16.790715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:17.791778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:18.791974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 05/13/24 20:33:18.969
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 05/13/24 20:33:18.973
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 05/13/24 20:33:18.98
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 05/13/24 20:33:18.98
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 05/13/24 20:33:19.032
  E0513 20:33:19.792310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:20.792450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:21.792598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:22.792778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 05/13/24 20:33:23.075
  E0513 20:33:23.793794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 05/13/24 20:33:24.086
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 05/13/24 20:33:24.1
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 05/13/24 20:33:24.101
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 05/13/24 20:33:24.185
  E0513 20:33:24.795664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 05/13/24 20:33:25.203
  E0513 20:33:25.796162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:26.797021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:27.798051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 05/13/24 20:33:28.227
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 05/13/24 20:33:28.24
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 05/13/24 20:33:28.241
  I0513 20:33:28.321761 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4205" for this suite. @ 05/13/24 20:33:28.326
• [31.026 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 05/13/24 20:33:28.344
  I0513 20:33:28.344623 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename namespaces @ 05/13/24 20:33:28.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:33:28.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:33:28.405
  STEP: Updating Namespace "namespaces-8638" @ 05/13/24 20:33:28.412
  I0513 20:33:28.440845 21 namespace.go:389] Namespace "namespaces-8638" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"588a36b1-2f9c-463c-bdb4-1c9b60588518", "kubernetes.io/metadata.name":"namespaces-8638", "namespaces-8638":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0513 20:33:28.440988 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8638" for this suite. @ 05/13/24 20:33:28.448
• [0.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 05/13/24 20:33:28.465
  I0513 20:33:28.465989 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename kubectl-logs @ 05/13/24 20:33:28.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:33:28.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:33:28.511
  STEP: creating an pod @ 05/13/24 20:33:28.514
  I0513 20:33:28.514104 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-logs-6843 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0513 20:33:28.654304 21 builder.go:146] stderr: ""
  I0513 20:33:28.654627 21 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 05/13/24 20:33:28.654
  I0513 20:33:28.654781 21 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0513 20:33:28.799058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:29.799834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:30.801168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:31.801599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:33:32.680888 21 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 05/13/24 20:33:32.68
  I0513 20:33:32.681005 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-logs-6843 logs logs-generator logs-generator'
  E0513 20:33:32.805368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:33:32.869711 21 builder.go:146] stderr: ""
  I0513 20:33:32.869785 21 builder.go:147] stdout: "I0513 20:33:30.269572       1 logs_generator.go:76] 0 GET /api/v1/namespaces/ns/pods/96dh 264\nI0513 20:33:30.469691       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/zqw 400\nI0513 20:33:30.670394       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/ht7f 203\nI0513 20:33:30.870567       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/tvjx 202\nI0513 20:33:31.069945       1 logs_generator.go:76] 4 GET /api/v1/namespaces/kube-system/pods/l4w 378\nI0513 20:33:31.270370       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/kube-system/pods/wmtd 227\nI0513 20:33:31.469654       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/nxr2 262\nI0513 20:33:31.670076       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/wzgz 594\nI0513 20:33:31.870425       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/qgf4 253\nI0513 20:33:32.069675       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/ns/pods/6lv 222\nI0513 20:33:32.270057       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/default/pods/mpsb 290\nI0513 20:33:32.470463       1 logs_generator.go:76] 11 POST /api/v1/namespaces/kube-system/pods/sr82 566\nI0513 20:33:32.669711       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/kube-system/pods/f4d7 352\n"
  STEP: limiting log lines @ 05/13/24 20:33:32.869
  I0513 20:33:32.869894 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-logs-6843 logs logs-generator logs-generator --tail=1'
  I0513 20:33:32.990680 21 builder.go:146] stderr: ""
  I0513 20:33:32.990742 21 builder.go:147] stdout: "I0513 20:33:32.869727       1 logs_generator.go:76] 13 GET /api/v1/namespaces/ns/pods/zhj4 334\n"
  I0513 20:33:32.990760 21 logs.go:127] got output "I0513 20:33:32.869727       1 logs_generator.go:76] 13 GET /api/v1/namespaces/ns/pods/zhj4 334\n"
  STEP: limiting log bytes @ 05/13/24 20:33:32.99
  I0513 20:33:32.991011 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-logs-6843 logs logs-generator logs-generator --limit-bytes=1'
  I0513 20:33:33.095214 21 builder.go:146] stderr: ""
  I0513 20:33:33.095276 21 builder.go:147] stdout: "I"
  I0513 20:33:33.095297 21 logs.go:133] got output "I"
  STEP: exposing timestamps @ 05/13/24 20:33:33.095
  I0513 20:33:33.095403 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-logs-6843 logs logs-generator logs-generator --tail=1 --timestamps'
  I0513 20:33:33.189821 21 builder.go:146] stderr: ""
  I0513 20:33:33.189883 21 builder.go:147] stdout: "2024-05-13T20:33:33.071784167Z I0513 20:33:33.071599       1 logs_generator.go:76] 14 GET /api/v1/namespaces/default/pods/gpt 494\n"
  I0513 20:33:33.189904 21 logs.go:139] got output "2024-05-13T20:33:33.071784167Z I0513 20:33:33.071599       1 logs_generator.go:76] 14 GET /api/v1/namespaces/default/pods/gpt 494\n"
  STEP: restricting to a time range @ 05/13/24 20:33:33.189
  E0513 20:33:33.805441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:34.805654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:33:35.690564 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-logs-6843 logs logs-generator logs-generator --since=1s'
  I0513 20:33:35.790691 21 builder.go:146] stderr: ""
  I0513 20:33:35.790780 21 builder.go:147] stdout: "I0513 20:33:34.870400       1 logs_generator.go:76] 23 POST /api/v1/namespaces/default/pods/6mtx 391\nI0513 20:33:35.069926       1 logs_generator.go:76] 24 GET /api/v1/namespaces/default/pods/tj82 544\nI0513 20:33:35.270304       1 logs_generator.go:76] 25 GET /api/v1/namespaces/kube-system/pods/b97q 541\nI0513 20:33:35.470692       1 logs_generator.go:76] 26 GET /api/v1/namespaces/kube-system/pods/xnq 515\nI0513 20:33:35.670199       1 logs_generator.go:76] 27 PUT /api/v1/namespaces/default/pods/w72 592\n"
  I0513 20:33:35.790850 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-logs-6843 logs logs-generator logs-generator --since=24h'
  E0513 20:33:35.806424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:33:35.875543 21 builder.go:146] stderr: ""
  I0513 20:33:35.875635 21 builder.go:147] stdout: "I0513 20:33:30.269572       1 logs_generator.go:76] 0 GET /api/v1/namespaces/ns/pods/96dh 264\nI0513 20:33:30.469691       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/zqw 400\nI0513 20:33:30.670394       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/ht7f 203\nI0513 20:33:30.870567       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/tvjx 202\nI0513 20:33:31.069945       1 logs_generator.go:76] 4 GET /api/v1/namespaces/kube-system/pods/l4w 378\nI0513 20:33:31.270370       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/kube-system/pods/wmtd 227\nI0513 20:33:31.469654       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/nxr2 262\nI0513 20:33:31.670076       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/wzgz 594\nI0513 20:33:31.870425       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/qgf4 253\nI0513 20:33:32.069675       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/ns/pods/6lv 222\nI0513 20:33:32.270057       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/default/pods/mpsb 290\nI0513 20:33:32.470463       1 logs_generator.go:76] 11 POST /api/v1/namespaces/kube-system/pods/sr82 566\nI0513 20:33:32.669711       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/kube-system/pods/f4d7 352\nI0513 20:33:32.869727       1 logs_generator.go:76] 13 GET /api/v1/namespaces/ns/pods/zhj4 334\nI0513 20:33:33.071599       1 logs_generator.go:76] 14 GET /api/v1/namespaces/default/pods/gpt 494\nI0513 20:33:33.269967       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/kube-system/pods/wjmv 213\nI0513 20:33:33.470680       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/kube-system/pods/qckf 345\nI0513 20:33:33.670056       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/r56 387\nI0513 20:33:33.870435       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/kube-system/pods/b2gl 392\nI0513 20:33:34.069639       1 logs_generator.go:76] 19 GET /api/v1/namespaces/ns/pods/zpf4 582\nI0513 20:33:34.270116       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/rtc 499\nI0513 20:33:34.470619       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/ns/pods/5rv 293\nI0513 20:33:34.670016       1 logs_generator.go:76] 22 PUT /api/v1/namespaces/kube-system/pods/6pj 582\nI0513 20:33:34.870400       1 logs_generator.go:76] 23 POST /api/v1/namespaces/default/pods/6mtx 391\nI0513 20:33:35.069926       1 logs_generator.go:76] 24 GET /api/v1/namespaces/default/pods/tj82 544\nI0513 20:33:35.270304       1 logs_generator.go:76] 25 GET /api/v1/namespaces/kube-system/pods/b97q 541\nI0513 20:33:35.470692       1 logs_generator.go:76] 26 GET /api/v1/namespaces/kube-system/pods/xnq 515\nI0513 20:33:35.670199       1 logs_generator.go:76] 27 PUT /api/v1/namespaces/default/pods/w72 592\n"
  I0513 20:33:35.875757 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-958110459 --namespace=kubectl-logs-6843 delete pod logs-generator'
  E0513 20:33:36.807044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:33:37.268831 21 builder.go:146] stderr: ""
  I0513 20:33:37.268896 21 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0513 20:33:37.269023 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-6843" for this suite. @ 05/13/24 20:33:37.276
• [8.836 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 05/13/24 20:33:37.304
  I0513 20:33:37.304369 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename crd-watch @ 05/13/24 20:33:37.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:33:37.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:33:37.348
  I0513 20:33:37.354648 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  E0513 20:33:37.807976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:38.809116      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:39.809502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 05/13/24 20:33:39.919
  I0513 20:33:39.929790 21 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-13T20:33:39Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-13T20:33:39Z]] name:name1 resourceVersion:91572 uid:23c4c292-4d95-47e4-85ad-fae9bdf338cf] num:map[num1:9223372036854775807 num2:1000000]]}
  E0513 20:33:40.810261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:41.810382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:42.810651      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:43.811005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:44.811676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:45.812487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:46.812649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:47.813054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:48.813208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:49.814108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 05/13/24 20:33:49.93
  I0513 20:33:49.944715 21 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-13T20:33:49Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-13T20:33:49Z]] name:name2 resourceVersion:91620 uid:56956ee0-e423-4207-bff0-902149ce0d6a] num:map[num1:9223372036854775807 num2:1000000]]}
  E0513 20:33:50.814800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:51.814985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:52.815155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:53.815417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:54.815742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:55.816783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:56.817029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:57.817190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:58.817901      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:59.818528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 05/13/24 20:33:59.944
  I0513 20:33:59.952016 21 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-13T20:33:39Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-13T20:33:59Z]] name:name1 resourceVersion:91659 uid:23c4c292-4d95-47e4-85ad-fae9bdf338cf] num:map[num1:9223372036854775807 num2:1000000]]}
  E0513 20:34:00.819133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:01.819377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:02.819696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:03.820845      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:04.821019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:05.821672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:06.821923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:07.822034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:08.823285      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:09.823125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 05/13/24 20:34:09.952
  I0513 20:34:09.971293 21 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-13T20:33:49Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-13T20:34:09Z]] name:name2 resourceVersion:91699 uid:56956ee0-e423-4207-bff0-902149ce0d6a] num:map[num1:9223372036854775807 num2:1000000]]}
  E0513 20:34:10.823232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:11.823682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:12.824773      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:13.825283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:14.825412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:15.825745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:16.826049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:17.826582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:18.827196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:19.827552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 05/13/24 20:34:19.971
  I0513 20:34:19.979679 21 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-13T20:33:39Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-13T20:33:59Z]] name:name1 resourceVersion:91738 uid:23c4c292-4d95-47e4-85ad-fae9bdf338cf] num:map[num1:9223372036854775807 num2:1000000]]}
  E0513 20:34:20.827813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:21.828239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:22.828369      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:23.828516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:24.828655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:25.829535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:26.829806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:27.829977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:28.830314      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:29.830510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 05/13/24 20:34:29.979
  I0513 20:34:29.994635 21 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-13T20:33:49Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-13T20:34:09Z]] name:name2 resourceVersion:91775 uid:56956ee0-e423-4207-bff0-902149ce0d6a] num:map[num1:9223372036854775807 num2:1000000]]}
  E0513 20:34:30.831188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:31.831354      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:32.831627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:33.831698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:34.831813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:35.832960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:36.833078      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:37.833866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:38.834057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:39.834508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:34:40.514343 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-5810" for this suite. @ 05/13/24 20:34:40.519
• [63.227 seconds]
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 05/13/24 20:34:40.531
  I0513 20:34:40.531794 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename watch @ 05/13/24 20:34:40.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:34:40.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:34:40.574
  STEP: getting a starting resourceVersion @ 05/13/24 20:34:40.578
  STEP: starting a background goroutine to produce watch events @ 05/13/24 20:34:40.583
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 05/13/24 20:34:40.583
  E0513 20:34:40.834636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:41.835442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:42.835706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:34:43.358713 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5489" for this suite. @ 05/13/24 20:34:43.391
• [2.911 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 05/13/24 20:34:43.443
  I0513 20:34:43.443769 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename projected @ 05/13/24 20:34:43.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:34:43.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:34:43.474
  STEP: Creating a pod to test downward API volume plugin @ 05/13/24 20:34:43.479
  E0513 20:34:43.835962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:44.836021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:45.836178      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:46.836287      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:34:47.508
  I0513 20:34:47.512376 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod downwardapi-volume-ba20c511-69e8-4967-b950-b1cd37a0c4e5 container client-container: <nil>
  STEP: delete the pod @ 05/13/24 20:34:47.523
  I0513 20:34:47.572083 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-817" for this suite. @ 05/13/24 20:34:47.578
• [4.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 05/13/24 20:34:47.592
  I0513 20:34:47.592412 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename container-probe @ 05/13/24 20:34:47.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:34:47.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:34:47.629
  STEP: Creating pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178 @ 05/13/24 20:34:47.633
  E0513 20:34:47.836410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:48.836847      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/13/24 20:34:49.739
  I0513 20:34:49.743029 21 container_probe.go:1749] Initial restart count of pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 is 0
  I0513 20:34:49.746377 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:34:49.837581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:50.837662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:34:51.751790 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:34:51.838382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:52.838887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:34:53.755800 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:34:53.838994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:54.839252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:34:55.761701 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:34:55.839931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:56.840740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:57.841273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:34:57.937349 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:34:58.842254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:34:59.842432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:34:59.942286 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:35:00.842578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:35:01.842758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:35:01.949160 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:35:02.843377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:35:03.843699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:35:03.959965 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:35:04.844738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:35:05.845127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:35:05.964684 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:35:06.845859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:35:07.845999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:35:07.970586 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:35:08.846605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:35:09.846943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:35:09.975555 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:35:10.847064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:35:11.847270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:35:11.979936 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:35:12.848105      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:35:13.848879      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:35:13.985342 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:35:14.849046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:35:15.849571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:35:15.994611 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:35:16.849836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:35:17.850294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:35:18.000826 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:35:18.850478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:35:19.851112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:35:20.005709 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:35:20.851273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:35:21.851524      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:35:22.011530 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:35:22.852538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:35:23.852811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:35:24.017392 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:35:24.852979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:35:25.853921      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:35:26.022483 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:35:26.854376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:35:27.855048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:35:28.028066 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:35:28.855169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:35:29.855302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:35:30.035266 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:35:30.856223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:35:31.856360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:35:32.043499 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:35:32.857436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:35:33.857559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:35:34.048560 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:35:34.857950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:35:35.858192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:35:36.060067 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:35:36.858990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:35:37.859556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:35:38.066124 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:35:38.860256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:35:39.860791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:35:40.070685 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:35:40.861851      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:35:41.862163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:35:42.076039 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:35:42.862826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:35:43.862977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:35:44.080555 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:35:44.863527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:35:45.863677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:35:46.087884 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:35:46.864822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:35:47.865094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:35:48.092656 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:35:48.865706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:35:49.866733      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:35:50.098918 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:35:50.866856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:35:51.866934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:35:52.104757 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:35:52.867709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:35:53.868044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:35:54.109960 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:35:54.868772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:35:55.869502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:35:56.134735 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:35:56.869572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:35:57.869677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:35:58.140431 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:35:58.870317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:35:59.870858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:36:00.145811 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:36:00.871992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:36:01.872604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:36:02.151316 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:36:02.873785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:36:03.874011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:36:04.414621 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:36:04.874079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:36:05.874793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:36:06.418898 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:36:06.875124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:36:07.875527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:36:08.516103 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:36:08.875586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:36:09.876278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:36:10.666391 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:36:10.876663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:36:11.876831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:36:12.671405 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:36:12.877928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:36:13.878722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:36:14.676895 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:36:14.879351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:36:15.879664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:36:16.685074 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:36:16.880013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:36:17.880854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:36:18.690502 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:36:18.881953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:36:19.882079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:36:20.697041 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:36:20.882337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:36:21.882599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:36:22.701748 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:36:22.883185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:36:23.883662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:36:24.708663 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:36:24.884145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:36:25.884947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:36:26.713143 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:36:26.885539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:36:27.885902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:36:28.717630 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:36:28.886940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:36:29.887122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:36:30.722494 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:36:30.887839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:36:31.887951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:36:32.727201 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:36:32.888497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:36:33.888983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:36:34.731948 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:36:34.889524      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:36:35.890360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:36:36.736224 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:36:36.890685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:36:37.891369      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:36:38.892097      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:36:39.019249 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:36:39.892824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:36:40.892975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:36:41.024427 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:36:41.893119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:36:42.893288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:36:43.028715 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:36:43.893615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:36:44.893781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:36:45.217307 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:36:45.894122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:36:46.894286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:36:47.222323 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:36:47.894423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:36:48.894768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:36:49.226908 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:36:49.895030      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:36:50.896179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:36:51.236703 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:36:51.896440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:36:52.896718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:36:53.242757 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:36:53.897571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:36:54.897774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:36:55.248696 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:36:55.898044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:36:56.898105      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:36:57.254464 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:36:57.899013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:36:58.899816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:36:59.261107 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:36:59.900790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:37:00.901336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:37:01.408453 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:37:01.902163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:37:02.902356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:37:03.413886 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:37:03.902390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:37:04.902549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:37:05.418613 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:37:05.903460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:37:06.903783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:37:07.423883 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:37:07.903869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:37:08.904810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:37:09.430110 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:37:09.904960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:37:10.905040      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:37:11.435226 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:37:11.905775      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:37:12.906074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:37:13.440071 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:37:13.906739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:37:14.906860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:37:15.447984 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:37:15.907592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:37:16.908068      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:37:17.455437 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:37:17.908220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:37:18.909065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:37:19.462110 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:37:19.909702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:37:20.910277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:37:21.468506 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:37:21.911154      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:37:22.911293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:37:23.473461 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:37:23.912096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:37:24.912199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:37:25.484265 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:37:25.912788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:37:26.912912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:37:27.489360 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:37:27.913913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:37:28.914758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:37:29.584296 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:37:29.915848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:37:30.916551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:37:31.588876 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:37:31.917281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:37:32.917751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:37:33.593304 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:37:33.918194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:37:34.919395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:37:35.598792 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:37:35.920229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:37:36.920282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:37:37.604790 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:37:37.921517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:37:38.921774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:37:39.613288 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:37:39.923068      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:37:40.923698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:37:41.618512 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:37:41.924320      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:37:42.924468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:37:43.623689 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:37:43.925119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:37:44.925623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:37:45.629749 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:37:45.925624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:37:46.925914      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:37:47.635346 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:37:47.926774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:37:48.927297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:37:49.640084 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:37:49.928211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:37:50.931655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:37:51.649037 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:37:51.932462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:37:52.932738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:37:53.661028 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:37:53.933685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:37:54.933893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:37:55.676086 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:37:55.934459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:37:56.934736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:37:57.927328 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:37:57.935322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:37:58.935874      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:37:59.931930 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:37:59.936161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:38:00.936723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:38:01.936853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:38:01.937501 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:38:02.937880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:38:03.938004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:38:03.945625 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:38:04.938110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:38:05.938602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:38:05.957477 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:38:06.938409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:38:07.938450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:38:07.963071 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:38:08.939320      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:38:09.939684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:38:09.971356 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:38:10.940716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:38:11.941025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:38:11.976786 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:38:12.941224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:38:13.941482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:38:13.983553 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:38:14.941653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:38:15.942270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:38:15.993848 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:38:16.942428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:38:17.942754      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:38:17.999897 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:38:18.943751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:38:19.944614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:38:20.005484 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:38:20.945382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:38:21.945681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:38:22.010083 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:38:22.945860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:38:23.946016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:38:24.014428 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:38:24.946932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:38:25.947502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:38:26.022787 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:38:26.947660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:38:27.947832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:38:28.029581 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:38:28.948187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:38:29.948362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:38:30.034686 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:38:30.948491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:38:31.949533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:38:32.040146 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:38:32.949684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:38:33.949962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:38:34.046492 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:38:34.950090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:38:35.950229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:38:36.209311 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:38:36.951520      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:38:37.951657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:38:38.214479 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:38:38.952609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:38:39.952919      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:38:40.220113 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:38:40.954049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:38:41.954321      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:38:42.226128 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:38:42.955051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:38:43.955167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:38:44.230986 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:38:44.955736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:38:45.955918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:38:46.235999 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:38:46.956757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:38:47.957397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:38:48.242683 21 container_probe.go:1759] Get pod busybox-5129c0ee-4033-40ba-a3c5-f6e33c8f1046 in namespace container-probe-7178
  E0513 20:38:48.957900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:38:49.958056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 05/13/24 20:38:50.243
  I0513 20:38:50.895926 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7178" for this suite. @ 05/13/24 20:38:50.914
• [243.335 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 05/13/24 20:38:50.928
  I0513 20:38:50.928112 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/13/24 20:38:50.929
  E0513 20:38:50.958435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:38:50.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:38:50.973
  STEP: creating the policy @ 05/13/24 20:38:50.994
  STEP: waiting until the marker is denied @ 05/13/24 20:38:51.022
  E0513 20:38:51.959436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 05/13/24 20:38:51.978
  STEP: testing a non-replicated ReplicaSet not to be denied @ 05/13/24 20:38:52.024
  I0513 20:38:52.221341 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-1017" for this suite. @ 05/13/24 20:38:52.259
• [1.344 seconds]
------------------------------
SSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 05/13/24 20:38:52.271
  I0513 20:38:52.272031 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename taint-single-pod @ 05/13/24 20:38:52.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:38:52.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:38:52.335
  I0513 20:38:52.341484 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0513 20:38:52.959635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:38:53.959781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:38:54.960806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:38:55.961242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:38:56.961791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:38:57.961930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:38:58.962600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:38:59.963653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:00.964395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:01.964587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:02.965543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:03.965678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:04.965876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:05.966453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:06.966563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:07.966738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:08.967904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:09.968737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:10.969443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:11.969709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:12.969852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:13.970006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:14.970982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:15.971689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:16.972438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:17.972585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:18.972690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:19.972841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:20.973641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:21.973783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:22.973978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:23.974270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:24.975167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:25.975663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:26.976528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:27.976931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:28.977992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:29.978271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:30.978394      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:31.978508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:32.978712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:33.978822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:34.979006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:35.979660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:36.980700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:37.981001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:38.981667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:39.981746      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:40.981862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:41.982163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:42.982264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:43.982605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:44.982949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:45.983694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:46.984758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:47.984870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:48.985708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:49.985867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:50.986073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:51.986262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:39:52.342216 21 util.go:400] Waiting for terminating namespaces to be deleted...
  I0513 20:39:52.352096 21 taints.go:150] Starting informer...
  STEP: Starting pod... @ 05/13/24 20:39:52.352
  I0513 20:39:52.588668 21 taints.go:300] Pod is running on ip-172-31-7-107.us-east-2.compute.internal. Tainting Node
  STEP: Trying to apply a taint on the Node @ 05/13/24 20:39:52.588
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/13/24 20:39:52.609
  STEP: Waiting short time to make sure Pod is queued for deletion @ 05/13/24 20:39:52.62
  I0513 20:39:52.620555 21 taints.go:319] Pod wasn't evicted. Proceeding
  I0513 20:39:52.620577 21 taints.go:326] Removing taint from Node
  E0513 20:39:52.987136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/13/24 20:39:53.225
  STEP: Waiting some time to make sure that toleration time passed. @ 05/13/24 20:39:53.712
  E0513 20:39:53.988052      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:54.988139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:55.988301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:56.988375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:57.988516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:58.989102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:39:59.989369      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:00.989751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:01.989737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:02.989938      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:03.990059      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:04.990345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:05.990873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:06.991176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:07.991681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:08.992178      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:09.992323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:10.992830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:11.993106      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:12.993252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:13.993496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:14.993787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:15.994207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:16.994483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:17.994777      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:18.995313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:19.995622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:20.995764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:21.996092      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:22.996251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:23.996655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:24.997226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:25.997563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:26.998044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:27.998679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:28.998813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:29.999098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:30.999645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:31.999877      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:33.000948      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:34.001095      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:35.001373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:36.001496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:37.001981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:38.002293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:39.002886      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:40.003393      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:41.003682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:42.003853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:43.004020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:44.004144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:45.004836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:46.005486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:47.005960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:48.006238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:49.006805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:50.006953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:51.007067      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:52.007366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:53.007706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:54.008310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:55.009021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:56.009698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:57.010073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:58.012250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:40:59.012795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:41:00.013128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:41:01.013916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:41:02.014063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:41:03.015089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:41:04.015251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:41:05.015684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:41:06.016306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:41:07.016559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:41:08.016734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:41:08.713177 21 taints.go:335] Pod wasn't evicted. Test successful
  I0513 20:41:08.713471 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-5083" for this suite. @ 05/13/24 20:41:08.959
• [136.696 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 05/13/24 20:41:08.968
  I0513 20:41:08.968606 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename conformance-tests @ 05/13/24 20:41:08.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:41:08.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:41:08.995
  STEP: Getting node addresses @ 05/13/24 20:41:08.998
  I0513 20:41:08.998917 21 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0513 20:41:09.007757 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-8305" for this suite. @ 05/13/24 20:41:09.012
  E0513 20:41:09.017426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
• [0.063 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 05/13/24 20:41:09.031
  I0513 20:41:09.031950 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename projected @ 05/13/24 20:41:09.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:41:09.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:41:09.065
  STEP: Creating secret with name projected-secret-test-b52f9f37-347e-474f-87e6-15bc24d81fa3 @ 05/13/24 20:41:09.069
  STEP: Creating a pod to test consume secrets @ 05/13/24 20:41:09.083
  E0513 20:41:10.017531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:41:11.018600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:41:12.018752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:41:13.019491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:41:13.111
  I0513 20:41:13.115385 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-projected-secrets-db91dc96-dd11-40e5-bd6f-8a592ba104f6 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/13/24 20:41:13.134
  I0513 20:41:13.155823 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1007" for this suite. @ 05/13/24 20:41:13.16
• [4.141 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 05/13/24 20:41:13.172
  I0513 20:41:13.172806 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename subpath @ 05/13/24 20:41:13.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:41:13.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:41:13.213
  STEP: Setting up data @ 05/13/24 20:41:13.217
  STEP: Creating pod pod-subpath-test-projected-5dcb @ 05/13/24 20:41:13.234
  STEP: Creating a pod to test atomic-volume-subpath @ 05/13/24 20:41:13.234
  E0513 20:41:14.020511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:41:15.020665      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:41:16.021193      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:41:17.021295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:41:18.021292      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:41:19.021841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:41:20.022017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:41:21.022610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:41:22.022683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:41:23.022812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:41:24.022973      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:41:25.023156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:41:26.024130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:41:27.024283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:41:28.024357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:41:29.024747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:41:30.024952      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:41:31.025530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:41:32.026527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:41:33.027711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:41:34.028606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:41:35.033768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:41:36.033889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:41:37.034194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:41:37.656
  I0513 20:41:37.662302 21 output.go:196] Trying to get logs from node ip-172-31-7-107.us-east-2.compute.internal pod pod-subpath-test-projected-5dcb container test-container-subpath-projected-5dcb: <nil>
  STEP: delete the pod @ 05/13/24 20:41:37.675
  E0513 20:41:38.035121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pod pod-subpath-test-projected-5dcb @ 05/13/24 20:41:38.394
  I0513 20:41:38.394597 21 delete.go:62] Deleting pod "pod-subpath-test-projected-5dcb" in namespace "subpath-3408"
  I0513 20:41:38.398441 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3408" for this suite. @ 05/13/24 20:41:38.403
• [25.241 seconds]
------------------------------
SS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 05/13/24 20:41:38.413
  I0513 20:41:38.413981 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-958110459
  STEP: Building a namespace api object, basename subjectreview @ 05/13/24 20:41:38.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:41:38.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:41:38.44
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-8338" @ 05/13/24 20:41:38.446
  I0513 20:41:38.452040 21 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-8338:e2e"
  I0513 20:41:38.452108 21 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-8338"}
  I0513 20:41:38.452124 21 subjectreviews.go:71] saUID: "6f6efcf2-77d2-4ede-b61b-274026ee08ef"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-8338:e2e" @ 05/13/24 20:41:38.452
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-8338:e2e" @ 05/13/24 20:41:38.452
  I0513 20:41:38.455788 21 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-8338:e2e" api 'list' configmaps in "subjectreview-8338" namespace @ 05/13/24 20:41:38.456
  I0513 20:41:38.459404 21 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-8338:e2e" @ 05/13/24 20:41:38.46
  I0513 20:41:38.463036 21 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0513 20:41:38.463588 21 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0513 20:41:38.464385 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-8338" for this suite. @ 05/13/24 20:41:38.471
• [0.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0513 20:41:38.485690 21 suites.go:34] Running AfterSuite actions on node 1
  I0513 20:41:38.485813 21 util.go:614] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
[ReportAfterSuite] PASSED [0.073 seconds]
------------------------------

Ran 402 of 7197 Specs in 6428.085 seconds
SUCCESS! -- 402 Passed | 0 Failed | 0 Pending | 6795 Skipped
PASS

Ginkgo ran 1 suite in 1h47m9.71322691s
Test Suite Passed
