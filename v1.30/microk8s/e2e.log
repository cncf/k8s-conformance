  I0730 07:21:25.775325      19 e2e.go:109] Starting e2e run "0de2a537-bd84-4e5f-9cf4-2fe6d6c3e802" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1722324085 - will randomize all specs

Will run 402 of 7197 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0730 07:21:25.905968 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  I0730 07:21:25.906535 19 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0730 07:21:25.924320 19 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0730 07:21:25.927247 19 e2e.go:153] 2 / 2 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  I0730 07:21:25.927468 19 e2e.go:245] e2e test version: v1.30.3
  I0730 07:21:25.928166 19 e2e.go:254] kube-apiserver version: v1.30.3
  I0730 07:21:25.928400 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  I0730 07:21:25.931093 19 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.025 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 07/30/24 07:21:26.089
  I0730 07:21:26.089492 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename container-runtime @ 07/30/24 07:21:26.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:21:26.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:21:26.13
  STEP: create the container @ 07/30/24 07:21:26.141
  W0730 07:21:26.148022      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 07/30/24 07:21:26.148
  STEP: get the container status @ 07/30/24 07:21:37.198
  STEP: the container should be terminated @ 07/30/24 07:21:37.2
  STEP: the termination message should be set @ 07/30/24 07:21:37.2
  I0730 07:21:37.200629 19 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 07/30/24 07:21:37.2
  I0730 07:21:37.221218 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1859" for this suite. @ 07/30/24 07:21:37.222
• [11.138 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 07/30/24 07:21:37.228
  I0730 07:21:37.228629 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename pods @ 07/30/24 07:21:37.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:21:37.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:21:37.288
  STEP: Create set of pods @ 07/30/24 07:21:37.295
  I0730 07:21:37.303313 19 pods.go:871] created test-pod-1
  I0730 07:21:37.310405 19 pods.go:871] created test-pod-2
  I0730 07:21:37.316328 19 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 07/30/24 07:21:37.316
  STEP: waiting for all pods to be deleted @ 07/30/24 07:21:59.538
  I0730 07:21:59.559500 19 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0730 07:22:00.541528 19 pods.go:1140] Pod quantity 1 is different from expected quantity 0
  I0730 07:22:01.547358 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8636" for this suite. @ 07/30/24 07:22:01.551
• [24.335 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 07/30/24 07:22:01.563
  I0730 07:22:01.563976 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename namespaces @ 07/30/24 07:22:01.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:22:01.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:22:01.599
  STEP: Creating namespace "e2e-ns-4hswl" @ 07/30/24 07:22:01.602
  I0730 07:22:01.620827 19 namespace.go:411] Namespace "e2e-ns-4hswl-7007" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-4hswl-7007" @ 07/30/24 07:22:01.621
  I0730 07:22:01.628035 19 namespace.go:434] Namespace "e2e-ns-4hswl-7007" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-4hswl-7007" @ 07/30/24 07:22:01.628
  I0730 07:22:01.636429 19 namespace.go:463] Namespace "e2e-ns-4hswl-7007" has []v1.FinalizerName{"kubernetes"}
  I0730 07:22:01.636600 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9020" for this suite. @ 07/30/24 07:22:01.638
  STEP: Destroying namespace "e2e-ns-4hswl-7007" for this suite. @ 07/30/24 07:22:01.642
• [0.084 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 07/30/24 07:22:01.647
  I0730 07:22:01.647489 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename replication-controller @ 07/30/24 07:22:01.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:22:01.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:22:01.66
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 07/30/24 07:22:01.661
  STEP: When a replication controller with a matching selector is created @ 07/30/24 07:22:21.738
  STEP: Then the orphan pod is adopted @ 07/30/24 07:22:21.779
  I0730 07:22:22.790846 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7510" for this suite. @ 07/30/24 07:22:22.796
• [21.160 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 07/30/24 07:22:22.807
  I0730 07:22:22.807918 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename emptydir @ 07/30/24 07:22:22.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:22:22.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:22:22.892
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 07/30/24 07:22:22.896
  STEP: Saw pod success @ 07/30/24 07:22:26.928
  I0730 07:22:26.933094 19 output.go:196] Trying to get logs from node worker pod pod-cae85d92-cd64-465f-9d73-9e3f7513eca9 container test-container: <nil>
  STEP: delete the pod @ 07/30/24 07:22:26.947
  I0730 07:22:26.969531 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7933" for this suite. @ 07/30/24 07:22:26.972
• [4.173 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 07/30/24 07:22:26.982
  I0730 07:22:26.982200 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename svcaccounts @ 07/30/24 07:22:26.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:22:26.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:22:26.997
  STEP: creating a ServiceAccount @ 07/30/24 07:22:26.998
  STEP: watching for the ServiceAccount to be added @ 07/30/24 07:22:27.003
  STEP: patching the ServiceAccount @ 07/30/24 07:22:27.003
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 07/30/24 07:22:27.008
  STEP: deleting the ServiceAccount @ 07/30/24 07:22:27.01
  I0730 07:22:27.019860 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6767" for this suite. @ 07/30/24 07:22:27.021
• [0.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 07/30/24 07:22:27.026
  I0730 07:22:27.026783 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename downward-api @ 07/30/24 07:22:27.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:22:27.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:22:27.037
  STEP: Creating a pod to test downward API volume plugin @ 07/30/24 07:22:27.038
  STEP: Saw pod success @ 07/30/24 07:22:31.058
  I0730 07:22:31.063814 19 output.go:196] Trying to get logs from node jammy pod downwardapi-volume-8288dc34-c098-4762-af7f-1ee5b66dbdc7 container client-container: <nil>
  STEP: delete the pod @ 07/30/24 07:22:31.077
  I0730 07:22:31.107610 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6418" for this suite. @ 07/30/24 07:22:31.11
• [4.089 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 07/30/24 07:22:31.117
  I0730 07:22:31.117448 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename watch @ 07/30/24 07:22:31.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:22:31.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:22:31.144
  STEP: creating a new configmap @ 07/30/24 07:22:31.146
  STEP: modifying the configmap once @ 07/30/24 07:22:31.153
  STEP: modifying the configmap a second time @ 07/30/24 07:22:31.157
  STEP: deleting the configmap @ 07/30/24 07:22:31.162
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 07/30/24 07:22:31.167
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 07/30/24 07:22:31.168
  I0730 07:22:31.168453 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-5234  ce2c9f34-a788-40d0-8060-f1e1daa96bff 1086 0 2024-07-30 07:22:31 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-07-30 07:22:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0730 07:22:31.168532 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-5234  ce2c9f34-a788-40d0-8060-f1e1daa96bff 1087 0 2024-07-30 07:22:31 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-07-30 07:22:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0730 07:22:31.168581 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5234" for this suite. @ 07/30/24 07:22:31.17
• [0.057 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 07/30/24 07:22:31.174
  I0730 07:22:31.174229 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename projected @ 07/30/24 07:22:31.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:22:31.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:22:31.186
  STEP: Creating configMap with name cm-test-opt-del-2e496ccf-71cd-40df-8c70-78c4720f23c8 @ 07/30/24 07:22:31.189
  STEP: Creating configMap with name cm-test-opt-upd-e16ddcc7-8171-4158-bcc6-1ac99cd2fe8f @ 07/30/24 07:22:31.192
  STEP: Creating the pod @ 07/30/24 07:22:31.195
  STEP: Deleting configmap cm-test-opt-del-2e496ccf-71cd-40df-8c70-78c4720f23c8 @ 07/30/24 07:22:33.218
  STEP: Updating configmap cm-test-opt-upd-e16ddcc7-8171-4158-bcc6-1ac99cd2fe8f @ 07/30/24 07:22:33.223
  STEP: Creating configMap with name cm-test-opt-create-9c752bbc-fa21-425d-81f9-8149d81f67f0 @ 07/30/24 07:22:33.227
  STEP: waiting to observe update in volume @ 07/30/24 07:22:33.232
  I0730 07:22:35.259813 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4572" for this suite. @ 07/30/24 07:22:35.262
• [4.096 seconds]
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:348
  STEP: Creating a kubernetes client @ 07/30/24 07:22:35.271
  I0730 07:22:35.271070 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename disruption @ 07/30/24 07:22:35.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:22:35.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:22:35.299
  STEP: Creating a pdb that targets all three pods in a test replica set @ 07/30/24 07:22:35.301
  STEP: Waiting for the pdb to be processed @ 07/30/24 07:22:35.304
  STEP: First trying to evict a pod which shouldn't be evictable @ 07/30/24 07:22:37.326
  STEP: Waiting for all pods to be running @ 07/30/24 07:22:37.326
  I0730 07:22:37.334428 19 disruption.go:567] pods: 0 < 3
  I0730 07:22:39.332374 19 disruption.go:578] running pods: 0 < 3
  I0730 07:22:41.338330 19 disruption.go:578] running pods: 0 < 3
  I0730 07:22:43.334078 19 disruption.go:578] running pods: 0 < 3
  STEP: locating a running pod @ 07/30/24 07:22:45.333
  STEP: Updating the pdb to allow a pod to be evicted @ 07/30/24 07:22:45.347
  STEP: Waiting for the pdb to be processed @ 07/30/24 07:22:45.361
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 07/30/24 07:22:47.368
  STEP: Waiting for all pods to be running @ 07/30/24 07:22:47.368
  STEP: Waiting for the pdb to observed all healthy pods @ 07/30/24 07:22:47.373
  STEP: Patching the pdb to disallow a pod to be evicted @ 07/30/24 07:22:47.416
  STEP: Waiting for the pdb to be processed @ 07/30/24 07:22:47.442
  STEP: Waiting for all pods to be running @ 07/30/24 07:22:49.448
  STEP: locating a running pod @ 07/30/24 07:22:49.453
  STEP: Deleting the pdb to allow a pod to be evicted @ 07/30/24 07:22:49.467
  STEP: Waiting for the pdb to be deleted @ 07/30/24 07:22:49.478
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 07/30/24 07:22:49.481
  STEP: Waiting for all pods to be running @ 07/30/24 07:22:49.481
  I0730 07:22:49.496705 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9032" for this suite. @ 07/30/24 07:22:49.499
• [14.236 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 07/30/24 07:22:49.507
  I0730 07:22:49.507716 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename dns @ 07/30/24 07:22:49.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:22:49.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:22:49.531
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4701.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-4701.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 07/30/24 07:22:49.532
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4701.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-4701.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 07/30/24 07:22:49.532
  STEP: creating a pod to probe /etc/hosts @ 07/30/24 07:22:49.532
  STEP: submitting the pod to kubernetes @ 07/30/24 07:22:49.532
  STEP: retrieving the pod @ 07/30/24 07:23:17.623
  STEP: looking for the results for each expected name from probers @ 07/30/24 07:23:17.628
  I0730 07:23:17.644563 19 dns_common.go:478] Unable to read jessie_hosts@dns-querier-1 from pod dns-4701/dns-test-a215c95a-493c-41ed-a846-cd33cb1367f7: the server could not find the requested resource (get pods dns-test-a215c95a-493c-41ed-a846-cd33cb1367f7)
  I0730 07:23:17.644603 19 dns_common.go:489] Lookups using dns-4701/dns-test-a215c95a-493c-41ed-a846-cd33cb1367f7 failed for: [jessie_hosts@dns-querier-1]

  I0730 07:23:17.649725 19 dns_common.go:495] Pod client logs for webserver: 
  I0730 07:23:17.653576 19 dns_common.go:495] Pod client logs for querier: 
  I0730 07:23:17.656684 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I0730 07:23:22.649884 19 dns_common.go:527] DNS probes using dns-4701/dns-test-a215c95a-493c-41ed-a846-cd33cb1367f7 succeeded

  STEP: deleting the pod @ 07/30/24 07:23:22.65
  I0730 07:23:22.677181 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4701" for this suite. @ 07/30/24 07:23:22.68
• [33.179 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:668
  STEP: Creating a kubernetes client @ 07/30/24 07:23:22.688
  I0730 07:23:22.688564 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename job @ 07/30/24 07:23:22.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:23:22.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:23:22.705
  STEP: Creating a job @ 07/30/24 07:23:22.707
  STEP: Ensuring active pods == parallelism @ 07/30/24 07:23:22.723
  STEP: delete a job @ 07/30/24 07:23:24.727
  STEP: deleting Job.batch foo in namespace job-2795, will wait for the garbage collector to delete the pods @ 07/30/24 07:23:24.727
  I0730 07:23:24.786366 19 resources.go:139] Deleting Job.batch foo took: 5.534098ms
  I0730 07:23:24.886895 19 resources.go:163] Terminating Job.batch foo pods took: 100.522358ms
  STEP: Ensuring job was deleted @ 07/30/24 07:23:26.788
  I0730 07:23:26.793762 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2795" for this suite. @ 07/30/24 07:23:26.798
• [4.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 07/30/24 07:23:26.812
  I0730 07:23:26.812764 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename podtemplate @ 07/30/24 07:23:26.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:23:26.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:23:26.889
  STEP: Create a pod template @ 07/30/24 07:23:26.892
  STEP: Replace a pod template @ 07/30/24 07:23:26.899
  I0730 07:23:26.905856 19 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0730 07:23:26.905960 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3605" for this suite. @ 07/30/24 07:23:26.907
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:334
  STEP: Creating a kubernetes client @ 07/30/24 07:23:26.912
  I0730 07:23:26.912479 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename sched-pred @ 07/30/24 07:23:26.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:23:26.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:23:26.926
  I0730 07:23:26.927358 19 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0730 07:23:26.929798 19 util.go:400] Waiting for terminating namespaces to be deleted...
  I0730 07:23:26.931204 19 predicates.go:121] 
  Logging pods the apiserver thinks is on node jammy before test
  I0730 07:23:26.933712 19 predicates.go:887] calico-kube-controllers-796fb75cc-gxp4s from kube-system started at 2024-07-30 07:18:26 +0000 UTC (1 container statuses recorded)
  I0730 07:23:26.933725 19 predicates.go:889] 	Container calico-kube-controllers ready: true, restart count 0
  I0730 07:23:26.933730 19 predicates.go:887] calico-node-m8grj from kube-system started at 2024-07-30 07:18:40 +0000 UTC (1 container statuses recorded)
  I0730 07:23:26.933749 19 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0730 07:23:26.933778 19 predicates.go:887] coredns-5986966c54-jv7lr from kube-system started at 2024-07-30 07:18:26 +0000 UTC (1 container statuses recorded)
  I0730 07:23:26.933781 19 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0730 07:23:26.933785 19 predicates.go:887] sonobuoy-systemd-logs-daemon-set-d42ae569ae0c45bb-bfb6w from sonobuoy started at 2024-07-30 07:21:03 +0000 UTC (2 container statuses recorded)
  I0730 07:23:26.933787 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0730 07:23:26.933790 19 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0730 07:23:26.933793 19 predicates.go:121] 
  Logging pods the apiserver thinks is on node worker before test
  I0730 07:23:26.936137 19 predicates.go:887] calico-node-6gcmw from kube-system started at 2024-07-30 07:19:13 +0000 UTC (1 container statuses recorded)
  I0730 07:23:26.936148 19 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0730 07:23:26.936152 19 predicates.go:887] sonobuoy from sonobuoy started at 2024-07-30 07:20:51 +0000 UTC (1 container statuses recorded)
  I0730 07:23:26.936155 19 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0730 07:23:26.936160 19 predicates.go:887] sonobuoy-e2e-job-5d7978649fbd4f42 from sonobuoy started at 2024-07-30 07:21:03 +0000 UTC (2 container statuses recorded)
  I0730 07:23:26.936208 19 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0730 07:23:26.936212 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0730 07:23:26.936239 19 predicates.go:887] sonobuoy-systemd-logs-daemon-set-d42ae569ae0c45bb-kvn49 from sonobuoy started at 2024-07-30 07:21:03 +0000 UTC (2 container statuses recorded)
  I0730 07:23:26.936242 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0730 07:23:26.936257 19 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node jammy @ 07/30/24 07:23:26.943
  STEP: verifying the node has the label node worker @ 07/30/24 07:23:26.95
  I0730 07:23:26.960991 19 predicates.go:374] Pod calico-kube-controllers-796fb75cc-gxp4s requesting resource cpu=0m on Node jammy
  I0730 07:23:26.961065 19 predicates.go:374] Pod calico-node-6gcmw requesting resource cpu=250m on Node worker
  I0730 07:23:26.961086 19 predicates.go:374] Pod calico-node-m8grj requesting resource cpu=250m on Node jammy
  I0730 07:23:26.961114 19 predicates.go:374] Pod coredns-5986966c54-jv7lr requesting resource cpu=100m on Node jammy
  I0730 07:23:26.961148 19 predicates.go:374] Pod sonobuoy requesting resource cpu=0m on Node worker
  I0730 07:23:26.961169 19 predicates.go:374] Pod sonobuoy-e2e-job-5d7978649fbd4f42 requesting resource cpu=0m on Node worker
  I0730 07:23:26.961186 19 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-d42ae569ae0c45bb-bfb6w requesting resource cpu=0m on Node jammy
  I0730 07:23:26.961209 19 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-d42ae569ae0c45bb-kvn49 requesting resource cpu=0m on Node worker
  STEP: Starting Pods to consume most of the cluster CPU. @ 07/30/24 07:23:26.961
  I0730 07:23:26.961256 19 predicates.go:384] Creating a pod which consumes cpu=1155m on Node jammy
  I0730 07:23:26.969346 19 predicates.go:384] Creating a pod which consumes cpu=1225m on Node worker
  STEP: Creating another pod that requires unavailable amount of CPU. @ 07/30/24 07:23:28.989
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-433d7400-ea21-4818-aa9e-4c85cd57986e.17e6ecbdb46bef18], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5415/filler-pod-433d7400-ea21-4818-aa9e-4c85cd57986e to worker] @ 07/30/24 07:23:28.993
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-433d7400-ea21-4818-aa9e-4c85cd57986e.17e6ecbdcd2ad6fd], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 07/30/24 07:23:28.993
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-433d7400-ea21-4818-aa9e-4c85cd57986e.17e6ecbdcddbbf86], Reason = [Created], Message = [Created container filler-pod-433d7400-ea21-4818-aa9e-4c85cd57986e] @ 07/30/24 07:23:28.994
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-433d7400-ea21-4818-aa9e-4c85cd57986e.17e6ecbdcf85349d], Reason = [Started], Message = [Started container filler-pod-433d7400-ea21-4818-aa9e-4c85cd57986e] @ 07/30/24 07:23:28.994
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f0091b0c-51b8-40f6-b859-15321039208b.17e6ecbdb40e09f2], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5415/filler-pod-f0091b0c-51b8-40f6-b859-15321039208b to jammy] @ 07/30/24 07:23:28.994
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f0091b0c-51b8-40f6-b859-15321039208b.17e6ecbdcff80eea], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 07/30/24 07:23:28.994
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f0091b0c-51b8-40f6-b859-15321039208b.17e6ecbdd09591c3], Reason = [Created], Message = [Created container filler-pod-f0091b0c-51b8-40f6-b859-15321039208b] @ 07/30/24 07:23:28.994
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f0091b0c-51b8-40f6-b859-15321039208b.17e6ecbdd25eb750], Reason = [Started], Message = [Started container filler-pod-f0091b0c-51b8-40f6-b859-15321039208b] @ 07/30/24 07:23:28.994
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17e6ecbe2cf05e93], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 Insufficient cpu. preemption: 0/2 nodes are available: 2 No preemption victims found for incoming pod.] @ 07/30/24 07:23:29.023
  STEP: removing the label node off the node jammy @ 07/30/24 07:23:30.017
  STEP: verifying the node doesn't have the label node @ 07/30/24 07:23:30.036
  STEP: removing the label node off the node worker @ 07/30/24 07:23:30.057
  STEP: verifying the node doesn't have the label node @ 07/30/24 07:23:30.066
  I0730 07:23:30.068973 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5415" for this suite. @ 07/30/24 07:23:30.07
• [3.163 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 07/30/24 07:23:30.077
  I0730 07:23:30.077407 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename configmap @ 07/30/24 07:23:30.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:23:30.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:23:30.09
  STEP: creating a ConfigMap @ 07/30/24 07:23:30.091
  STEP: fetching the ConfigMap @ 07/30/24 07:23:30.095
  STEP: patching the ConfigMap @ 07/30/24 07:23:30.096
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 07/30/24 07:23:30.102
  STEP: deleting the ConfigMap by collection with a label selector @ 07/30/24 07:23:30.105
  STEP: listing all ConfigMaps in test namespace @ 07/30/24 07:23:30.109
  I0730 07:23:30.111453 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2836" for this suite. @ 07/30/24 07:23:30.113
• [0.041 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 07/30/24 07:23:30.118
  I0730 07:23:30.118212 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename gc @ 07/30/24 07:23:30.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:23:30.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:23:30.139
  I0730 07:23:30.199675 19 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"199388a4-3de0-4c65-ac65-132884cee6b1", Controller:(*bool)(0xc001f48f1e), BlockOwnerDeletion:(*bool)(0xc001f48f1f)}}
  I0730 07:23:30.207743 19 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"130203c5-4b57-45dd-8cab-6d2cc743b6b2", Controller:(*bool)(0xc00251fb36), BlockOwnerDeletion:(*bool)(0xc00251fb37)}}
  I0730 07:23:30.211635 19 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"2f094338-1bfe-430d-a5dd-2ecf80d29844", Controller:(*bool)(0xc001f491e6), BlockOwnerDeletion:(*bool)(0xc001f491e7)}}
  I0730 07:23:35.224585 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2745" for this suite. @ 07/30/24 07:23:35.226
• [5.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3572
  STEP: Creating a kubernetes client @ 07/30/24 07:23:35.24
  I0730 07:23:35.240486 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename services @ 07/30/24 07:23:35.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:23:35.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:23:35.271
  STEP: creating a collection of services @ 07/30/24 07:23:35.272
  I0730 07:23:35.272701 19 service.go:3608] Creating e2e-svc-a-ph26c
  I0730 07:23:35.290639 19 service.go:3608] Creating e2e-svc-b-99t2p
  I0730 07:23:35.307816 19 service.go:3608] Creating e2e-svc-c-5c44q
  STEP: deleting service collection @ 07/30/24 07:23:35.319
  I0730 07:23:35.356787 19 service.go:3643] Collection of services has been deleted
  I0730 07:23:35.356905 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3932" for this suite. @ 07/30/24 07:23:35.358
• [0.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1833
  STEP: Creating a kubernetes client @ 07/30/24 07:23:35.367
  I0730 07:23:35.367796 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename kubectl @ 07/30/24 07:23:35.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:23:35.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:23:35.396
  STEP: starting the proxy server @ 07/30/24 07:23:35.398
  I0730 07:23:35.398914 19 util.go:592] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-8317 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 07/30/24 07:23:35.429
  I0730 07:23:35.439084 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0730 07:23:35.441101 19 kubectl.go:2223] kubectl proxy stdout: Starting to serve on 127.0.0.1:42787

  I0730 07:23:35.441154 19 kubectl.go:2228] kubectl proxy stderr: W0730 07:23:35.429437      28 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-8317" for this suite. @ 07/30/24 07:23:35.443
• [0.088 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 07/30/24 07:23:35.456
  I0730 07:23:35.456284 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename endpointslice @ 07/30/24 07:23:35.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:23:35.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:23:35.503
  I0730 07:23:35.545318 19 endpointslice.go:1045] Endpoints addresses: [10.227.69.102] , ports: [16443]
  I0730 07:23:35.545361 19 endpointslice.go:1075] EndpointSlices addresses: [10.227.69.102] , ports: [16443]
  I0730 07:23:35.545446 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-988" for this suite. @ 07/30/24 07:23:35.548
• [0.102 seconds]
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 07/30/24 07:23:35.558
  I0730 07:23:35.558293 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename lease-test @ 07/30/24 07:23:35.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:23:35.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:23:35.578
  I0730 07:23:35.612757 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-326" for this suite. @ 07/30/24 07:23:35.614
• [0.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 07/30/24 07:23:35.619
  I0730 07:23:35.619018 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename replicaset @ 07/30/24 07:23:35.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:23:35.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:23:35.635
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 07/30/24 07:23:35.636
  I0730 07:23:35.643852 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0730 07:23:40.647071 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/30/24 07:23:40.647
  STEP: getting scale subresource @ 07/30/24 07:23:40.647
  STEP: updating a scale subresource @ 07/30/24 07:23:40.648
  STEP: verifying the replicaset Spec.Replicas was modified @ 07/30/24 07:23:40.659
  STEP: Patch a scale subresource @ 07/30/24 07:23:40.66
  I0730 07:23:40.715482 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2688" for this suite. @ 07/30/24 07:23:40.721
• [5.122 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 07/30/24 07:23:40.741
  I0730 07:23:40.741406 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename security-context-test @ 07/30/24 07:23:40.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:23:40.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:23:40.783
  I0730 07:23:44.809312 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-828" for this suite. @ 07/30/24 07:23:44.814
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 07/30/24 07:23:44.831
  I0730 07:23:44.831933 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename containers @ 07/30/24 07:23:44.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:23:44.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:23:44.858
  STEP: Creating a pod to test override command @ 07/30/24 07:23:44.861
  STEP: Saw pod success @ 07/30/24 07:23:48.878
  I0730 07:23:48.882640 19 output.go:196] Trying to get logs from node jammy pod client-containers-ea957d87-484a-4c4a-9b48-a03a088202dd container agnhost-container: <nil>
  STEP: delete the pod @ 07/30/24 07:23:48.889
  I0730 07:23:48.912556 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6218" for this suite. @ 07/30/24 07:23:48.914
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 07/30/24 07:23:48.919
  I0730 07:23:48.919605 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename pods @ 07/30/24 07:23:48.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:23:48.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:23:48.933
  STEP: creating a Pod with a static label @ 07/30/24 07:23:48.937
  STEP: watching for Pod to be ready @ 07/30/24 07:23:48.942
  I0730 07:23:48.944449 19 pods.go:945] observed Pod pod-test in namespace pods-3733 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0730 07:23:48.947693 19 pods.go:945] observed Pod pod-test in namespace pods-3733 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-30 07:23:48 +0000 UTC  }]
  I0730 07:23:48.955453 19 pods.go:945] observed Pod pod-test in namespace pods-3733 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-07-30 07:23:48 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-30 07:23:48 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-30 07:23:48 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-30 07:23:48 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-30 07:23:48 +0000 UTC  }]
  I0730 07:23:49.377252 19 pods.go:945] observed Pod pod-test in namespace pods-3733 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-07-30 07:23:48 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-30 07:23:48 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-30 07:23:48 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-30 07:23:48 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-30 07:23:48 +0000 UTC  }]
  I0730 07:23:49.840969 19 pods.go:948] Found Pod pod-test in namespace pods-3733 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-30 07:23:49 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-30 07:23:48 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-07-30 07:23:49 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-07-30 07:23:49 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-30 07:23:48 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 07/30/24 07:23:49.844
  STEP: getting the Pod and ensuring that it's patched @ 07/30/24 07:23:49.855
  STEP: replacing the Pod's status Ready condition to False @ 07/30/24 07:23:49.856
  STEP: check the Pod again to ensure its Ready conditions are False @ 07/30/24 07:23:49.863
  STEP: deleting the Pod via a Collection with a LabelSelector @ 07/30/24 07:23:49.863
  STEP: watching for the Pod to be deleted @ 07/30/24 07:23:49.873
  I0730 07:23:49.875600 19 pods.go:1058] observed event type MODIFIED
  I0730 07:23:51.851134 19 pods.go:1058] observed event type MODIFIED
  I0730 07:23:51.946171 19 pods.go:1058] observed event type MODIFIED
  I0730 07:23:52.046670 19 pods.go:1058] observed event type MODIFIED
  I0730 07:23:52.851229 19 pods.go:1058] observed event type MODIFIED
  I0730 07:23:52.860614 19 pods.go:1058] observed event type MODIFIED
  I0730 07:23:52.866926 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3733" for this suite. @ 07/30/24 07:23:52.868
• [3.954 seconds]
------------------------------
SS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 07/30/24 07:23:52.873
  I0730 07:23:52.873158 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename subjectreview @ 07/30/24 07:23:52.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:23:52.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:23:52.888
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-9652" @ 07/30/24 07:23:52.89
  I0730 07:23:52.894242 19 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-9652:e2e"
  I0730 07:23:52.894262 19 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-9652"}
  I0730 07:23:52.894267 19 subjectreviews.go:71] saUID: "6195af75-9914-457b-a742-38865f904338"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-9652:e2e" @ 07/30/24 07:23:52.894
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-9652:e2e" @ 07/30/24 07:23:52.894
  I0730 07:23:52.895997 19 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:true, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-9652:e2e" api 'list' configmaps in "subjectreview-9652" namespace @ 07/30/24 07:23:52.896
  I0730 07:23:52.897759 19 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-9652:e2e" @ 07/30/24 07:23:52.897
  I0730 07:23:52.898563 19 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:true, Denied:false, Reason:"", EvaluationError:""}
  I0730 07:23:52.898576 19 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0730 07:23:52.898657 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-9652" for this suite. @ 07/30/24 07:23:52.9
• [0.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 07/30/24 07:23:52.905
  I0730 07:23:52.905120 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename cronjob @ 07/30/24 07:23:52.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:23:52.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:23:52.916
  STEP: Creating a ReplaceConcurrent cronjob @ 07/30/24 07:23:52.918
  STEP: Ensuring a job is scheduled @ 07/30/24 07:23:52.921
  STEP: Ensuring exactly one is scheduled @ 07/30/24 07:24:00.928
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 07/30/24 07:24:00.932
  STEP: Ensuring the job is replaced with a new one @ 07/30/24 07:24:00.936
  STEP: Removing cronjob @ 07/30/24 07:25:00.942
  I0730 07:25:00.955254 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6072" for this suite. @ 07/30/24 07:25:00.96
• [68.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 07/30/24 07:25:00.971
  I0730 07:25:00.971918 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename disruption @ 07/30/24 07:25:00.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:25:00.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:25:00.996
  STEP: Waiting for the pdb to be processed @ 07/30/24 07:25:01.001
  STEP: Updating PodDisruptionBudget status @ 07/30/24 07:25:03.008
  STEP: Waiting for all pods to be running @ 07/30/24 07:25:03.025
  I0730 07:25:03.034188 19 disruption.go:578] running pods: 0 < 1
  STEP: locating a running pod @ 07/30/24 07:25:05.032
  STEP: Waiting for the pdb to be processed @ 07/30/24 07:25:05.053
  STEP: Patching PodDisruptionBudget status @ 07/30/24 07:25:05.06
  STEP: Waiting for the pdb to be processed @ 07/30/24 07:25:05.068
  I0730 07:25:05.071867 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7384" for this suite. @ 07/30/24 07:25:05.074
• [4.107 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 07/30/24 07:25:05.079
  I0730 07:25:05.079165 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename daemonsets @ 07/30/24 07:25:05.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:25:05.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:25:05.089
  I0730 07:25:05.103364 19 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0730 07:25:05.107635 19 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0730 07:25:05.111379 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0730 07:25:05.111397 19 fixtures.go:130] Node jammy is running 0 daemon pod, expected 1
  I0730 07:25:06.113250 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0730 07:25:06.113335 19 fixtures.go:130] Node worker is running 0 daemon pod, expected 1
  I0730 07:25:07.119225 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0730 07:25:07.119287 19 fixtures.go:130] Node worker is running 0 daemon pod, expected 1
  I0730 07:25:08.118643 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0730 07:25:08.118695 19 fixtures.go:130] Node worker is running 0 daemon pod, expected 1
  I0730 07:25:09.114272 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0730 07:25:09.114310 19 fixtures.go:130] Node worker is running 0 daemon pod, expected 1
  I0730 07:25:10.112772 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0730 07:25:10.112801 19 fixtures.go:130] Node worker is running 0 daemon pod, expected 1
  I0730 07:25:11.117973 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0730 07:25:11.118015 19 fixtures.go:130] Node worker is running 0 daemon pod, expected 1
  I0730 07:25:12.122323 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0730 07:25:12.122402 19 fixtures.go:130] Node worker is running 0 daemon pod, expected 1
  I0730 07:25:13.120050 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0730 07:25:13.120197 19 fixtures.go:130] Node worker is running 0 daemon pod, expected 1
  I0730 07:25:14.119173 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0730 07:25:14.119228 19 fixtures.go:130] Node worker is running 0 daemon pod, expected 1
  I0730 07:25:15.120453 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0730 07:25:15.120511 19 fixtures.go:130] Node worker is running 0 daemon pod, expected 1
  I0730 07:25:16.122304 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0730 07:25:16.122374 19 fixtures.go:130] Node worker is running 0 daemon pod, expected 1
  I0730 07:25:17.111964 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0730 07:25:17.111987 19 fixtures.go:130] Node worker is running 0 daemon pod, expected 1
  I0730 07:25:18.112006 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0730 07:25:18.112081 19 fixtures.go:130] Node worker is running 0 daemon pod, expected 1
  I0730 07:25:19.118097 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0730 07:25:19.118149 19 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  I0730 07:25:19.118171 19 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0730 07:25:19.148819 19 daemon_set.go:102] Updating DaemonSet daemon-set
  I0730 07:25:21.173436 19 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0730 07:25:21.184184 19 daemon_set.go:102] Updating DaemonSet daemon-set
  I0730 07:25:21.184237 19 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0730 07:25:21.188731 19 daemon_set.go:1178] Wrong image for pod: daemon-set-w9qxd. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I0730 07:25:21.188755 19 daemon_set.go:1183] Pod daemon-set-w9qxd is not available
  I0730 07:25:23.191367 19 daemon_set.go:1183] Pod daemon-set-bqc96 is not available
  STEP: Deleting DaemonSet "daemon-set" @ 07/30/24 07:25:23.206
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3332, will wait for the garbage collector to delete the pods @ 07/30/24 07:25:23.206
  I0730 07:25:23.269778 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.760087ms
  I0730 07:25:23.370775 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.981422ms
  I0730 07:25:24.679080 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0730 07:25:24.679289 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0730 07:25:24.685592 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"2335"},"items":null}

  I0730 07:25:24.691243 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"2335"},"items":null}

  I0730 07:25:24.706254 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3332" for this suite. @ 07/30/24 07:25:24.711
• [19.638 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 07/30/24 07:25:24.718
  I0730 07:25:24.718487 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename downward-api @ 07/30/24 07:25:24.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:25:24.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:25:24.736
  STEP: Creating a pod to test downward API volume plugin @ 07/30/24 07:25:24.737
  STEP: Saw pod success @ 07/30/24 07:25:28.757
  I0730 07:25:28.762223 19 output.go:196] Trying to get logs from node worker pod downwardapi-volume-5cb18eef-c379-4010-bd7b-f529500a4003 container client-container: <nil>
  STEP: delete the pod @ 07/30/24 07:25:28.779
  I0730 07:25:28.809427 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-309" for this suite. @ 07/30/24 07:25:28.814
• [4.108 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 07/30/24 07:25:28.828
  I0730 07:25:28.828999 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/30/24 07:25:28.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:25:28.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:25:28.866
  I0730 07:25:28.868909 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  I0730 07:25:31.934995 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-3590" for this suite. @ 07/30/24 07:25:31.941
• [3.129 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 07/30/24 07:25:31.96
  I0730 07:25:31.960806 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename projected @ 07/30/24 07:25:31.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:25:31.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:25:31.988
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-dffd5f54-5749-4bac-bcd1-b56e126a015e @ 07/30/24 07:25:31.993
  STEP: Creating the pod @ 07/30/24 07:25:32.001
  STEP: Updating configmap projected-configmap-test-upd-dffd5f54-5749-4bac-bcd1-b56e126a015e @ 07/30/24 07:25:34.035
  STEP: waiting to observe update in volume @ 07/30/24 07:25:34.045
  I0730 07:25:36.060275 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9152" for this suite. @ 07/30/24 07:25:36.065
• [4.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1537
  STEP: Creating a kubernetes client @ 07/30/24 07:25:36.081
  I0730 07:25:36.081430 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename services @ 07/30/24 07:25:36.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:25:36.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:25:36.098
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-8696 @ 07/30/24 07:25:36.1
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 07/30/24 07:25:36.111
  STEP: creating service externalsvc in namespace services-8696 @ 07/30/24 07:25:36.111
  STEP: creating replication controller externalsvc in namespace services-8696 @ 07/30/24 07:25:36.129
  I0730 07:25:36.139160      19 runners.go:198] Created replication controller with name: externalsvc, namespace: services-8696, replica count: 2
  I0730 07:25:39.189945      19 runners.go:198] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 07/30/24 07:25:39.196
  I0730 07:25:39.227865 19 resource.go:361] Creating new exec pod
  I0730 07:25:41.242432 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-8696 exec execpod82sbk -- /bin/sh -x -c nslookup nodeport-service.services-8696.svc.cluster.local'
  I0730 07:25:41.338688 19 builder.go:146] stderr: "+ nslookup nodeport-service.services-8696.svc.cluster.local\n"
  I0730 07:25:41.338722 19 builder.go:147] stdout: "Server:\t\t10.152.183.10\nAddress:\t10.152.183.10#53\n\nnodeport-service.services-8696.svc.cluster.local\tcanonical name = externalsvc.services-8696.svc.cluster.local.\nName:\texternalsvc.services-8696.svc.cluster.local\nAddress: 10.152.183.246\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-8696, will wait for the garbage collector to delete the pods @ 07/30/24 07:25:41.338
  I0730 07:25:41.406514 19 resources.go:139] Deleting ReplicationController externalsvc took: 14.511728ms
  I0730 07:25:41.506966 19 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.450028ms
  I0730 07:25:44.336651 19 service.go:1548] Cleaning up the NodePort to ExternalName test service
  I0730 07:25:44.346242 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8696" for this suite. @ 07/30/24 07:25:44.349
• [8.273 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 07/30/24 07:25:44.355
  I0730 07:25:44.355554 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename configmap @ 07/30/24 07:25:44.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:25:44.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:25:44.375
  STEP: Creating configMap configmap-9209/configmap-test-205ec214-2fd8-4f0e-8ade-ed84a2143409 @ 07/30/24 07:25:44.378
  STEP: Creating a pod to test consume configMaps @ 07/30/24 07:25:44.385
  STEP: Saw pod success @ 07/30/24 07:25:54.436
  I0730 07:25:54.438570 19 output.go:196] Trying to get logs from node worker pod pod-configmaps-67a58a07-d136-43b6-a7f7-6b8cdb25f726 container env-test: <nil>
  STEP: delete the pod @ 07/30/24 07:25:54.442
  I0730 07:25:54.455985 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9209" for this suite. @ 07/30/24 07:25:54.461
• [10.111 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 07/30/24 07:25:54.466
  I0730 07:25:54.466790 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/30/24 07:25:54.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:25:54.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:25:54.535
  I0730 07:25:54.537817 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/30/24 07:25:55.791
  I0730 07:25:55.791612 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=crd-publish-openapi-5457 --namespace=crd-publish-openapi-5457 create -f -'
  I0730 07:25:57.856519 19 builder.go:146] stderr: ""
  I0730 07:25:57.856578 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5883-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0730 07:25:57.856949 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=crd-publish-openapi-5457 --namespace=crd-publish-openapi-5457 delete e2e-test-crd-publish-openapi-5883-crds test-cr'
  I0730 07:25:57.902941 19 builder.go:146] stderr: ""
  I0730 07:25:57.903005 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5883-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0730 07:25:57.903180 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=crd-publish-openapi-5457 --namespace=crd-publish-openapi-5457 apply -f -'
  I0730 07:25:57.950274 19 builder.go:146] stderr: ""
  I0730 07:25:57.950316 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5883-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0730 07:25:57.950363 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=crd-publish-openapi-5457 --namespace=crd-publish-openapi-5457 delete e2e-test-crd-publish-openapi-5883-crds test-cr'
  I0730 07:25:57.985612 19 builder.go:146] stderr: ""
  I0730 07:25:57.985655 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5883-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 07/30/24 07:25:57.985
  I0730 07:25:57.985925 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=crd-publish-openapi-5457 explain e2e-test-crd-publish-openapi-5883-crds'
  I0730 07:25:58.019450 19 builder.go:146] stderr: ""
  I0730 07:25:58.019491 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-5883-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0730 07:25:59.165982 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5457" for this suite. @ 07/30/24 07:25:59.169
• [4.707 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1497
  STEP: Creating a kubernetes client @ 07/30/24 07:25:59.174
  I0730 07:25:59.174621 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename services @ 07/30/24 07:25:59.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:25:59.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:25:59.187
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-5562 @ 07/30/24 07:25:59.188
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 07/30/24 07:25:59.195
  STEP: creating service externalsvc in namespace services-5562 @ 07/30/24 07:25:59.195
  STEP: creating replication controller externalsvc in namespace services-5562 @ 07/30/24 07:25:59.208
  I0730 07:25:59.213453      19 runners.go:198] Created replication controller with name: externalsvc, namespace: services-5562, replica count: 2
  I0730 07:26:02.265420      19 runners.go:198] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 07/30/24 07:26:02.271
  I0730 07:26:02.294725 19 resource.go:361] Creating new exec pod
  I0730 07:26:04.311398 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-5562 exec execpod64bvg -- /bin/sh -x -c nslookup clusterip-service.services-5562.svc.cluster.local'
  I0730 07:26:04.412337 19 builder.go:146] stderr: "+ nslookup clusterip-service.services-5562.svc.cluster.local\n"
  I0730 07:26:04.412385 19 builder.go:147] stdout: "Server:\t\t10.152.183.10\nAddress:\t10.152.183.10#53\n\nclusterip-service.services-5562.svc.cluster.local\tcanonical name = externalsvc.services-5562.svc.cluster.local.\nName:\texternalsvc.services-5562.svc.cluster.local\nAddress: 10.152.183.55\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-5562, will wait for the garbage collector to delete the pods @ 07/30/24 07:26:04.412
  I0730 07:26:04.483615 19 resources.go:139] Deleting ReplicationController externalsvc took: 17.779697ms
  I0730 07:26:04.584350 19 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.719964ms
  I0730 07:26:07.812580 19 service.go:1506] Cleaning up the ClusterIP to ExternalName test service
  I0730 07:26:07.830026 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5562" for this suite. @ 07/30/24 07:26:07.832
• [8.662 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 07/30/24 07:26:07.836
  I0730 07:26:07.836935 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename webhook @ 07/30/24 07:26:07.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:26:07.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:26:07.849
  STEP: Setting up server cert @ 07/30/24 07:26:07.863
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/30/24 07:26:07.994
  STEP: Deploying the webhook pod @ 07/30/24 07:26:08.004
  STEP: Wait for the deployment to be ready @ 07/30/24 07:26:08.011
  I0730 07:26:08.018895 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/30/24 07:26:10.033
  STEP: Verifying the service has paired with the endpoint @ 07/30/24 07:26:10.052
  I0730 07:26:11.053254 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 07/30/24 07:26:11.11
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/30/24 07:26:11.128
  STEP: Deleting the collection of validation webhooks @ 07/30/24 07:26:11.145
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/30/24 07:26:11.18
  I0730 07:26:11.211204 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3836" for this suite. @ 07/30/24 07:26:11.213
  STEP: Destroying namespace "webhook-markers-8045" for this suite. @ 07/30/24 07:26:11.218
• [3.390 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 07/30/24 07:26:11.226
  I0730 07:26:11.227002 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename container-runtime @ 07/30/24 07:26:11.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:26:11.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:26:11.243
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 07/30/24 07:26:11.248
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 07/30/24 07:26:30.345
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 07/30/24 07:26:30.348
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 07/30/24 07:26:30.352
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 07/30/24 07:26:30.352
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 07/30/24 07:26:30.388
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 07/30/24 07:26:32.399
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 07/30/24 07:26:34.411
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 07/30/24 07:26:34.42
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 07/30/24 07:26:34.42
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 07/30/24 07:26:34.444
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 07/30/24 07:26:35.453
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 07/30/24 07:26:37.467
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 07/30/24 07:26:37.476
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 07/30/24 07:26:37.476
  I0730 07:26:37.500114 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5090" for this suite. @ 07/30/24 07:26:37.501
• [26.279 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 07/30/24 07:26:37.506
  I0730 07:26:37.506547 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/30/24 07:26:37.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:26:37.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:26:37.521
  STEP: getting /apis @ 07/30/24 07:26:37.526
  STEP: getting /apis/admissionregistration.k8s.io @ 07/30/24 07:26:37.528
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 07/30/24 07:26:37.529
  STEP: creating @ 07/30/24 07:26:37.53
  STEP: getting @ 07/30/24 07:26:37.563
  STEP: listing @ 07/30/24 07:26:37.567
  STEP: watching @ 07/30/24 07:26:37.568
  I0730 07:26:37.568571 19 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 07/30/24 07:26:37.569
  STEP: updating @ 07/30/24 07:26:37.576
  I0730 07:26:37.600457 19 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  I0730 07:26:37.600685 19 validatingadmissionpolicy.go:568] missing expected annotations, waiting: map[string]string(nil)
  I0730 07:26:37.600845 19 validatingadmissionpolicy.go:568] missing expected annotations, waiting: map[string]string(nil)
  I0730 07:26:37.600871 19 validatingadmissionpolicy.go:568] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 07/30/24 07:26:37.601
  STEP: patching /status @ 07/30/24 07:26:37.603
  STEP: updating /status @ 07/30/24 07:26:37.608
  STEP: deleting @ 07/30/24 07:26:37.631
  STEP: deleting a collection @ 07/30/24 07:26:37.64
  I0730 07:26:37.652199 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-1651" for this suite. @ 07/30/24 07:26:37.653
• [0.152 seconds]
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 07/30/24 07:26:37.658
  I0730 07:26:37.658760 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename dns @ 07/30/24 07:26:37.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:26:37.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:26:37.671
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 07/30/24 07:26:37.672
  I0730 07:26:37.677283 19 dns.go:419] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-443  c7bfeb38-84a3-42d9-8305-ddc8eff9a767 3052 0 2024-07-30 07:26:37 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-07-30 07:26:37 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-kn7pm,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-kn7pm,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 07/30/24 07:26:39.685
  I0730 07:26:39.685758 19 exec_util.go:55] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-443 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0730 07:26:39.685781 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  I0730 07:26:39.686568 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0730 07:26:39.686687 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-443/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 07/30/24 07:26:39.732
  I0730 07:26:39.732523 19 exec_util.go:55] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-443 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0730 07:26:39.732561 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  I0730 07:26:39.732887 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0730 07:26:39.732956 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-443/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0730 07:26:39.758122 19 dns.go:421] Deleting pod test-dns-nameservers...
  I0730 07:26:39.770888 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-443" for this suite. @ 07/30/24 07:26:39.773
• [2.119 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 07/30/24 07:26:39.778
  I0730 07:26:39.778126 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename downward-api @ 07/30/24 07:26:39.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:26:39.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:26:39.791
  STEP: Creating a pod to test downward API volume plugin @ 07/30/24 07:26:39.792
  STEP: Saw pod success @ 07/30/24 07:26:41.807
  I0730 07:26:41.811702 19 output.go:196] Trying to get logs from node jammy pod downwardapi-volume-fc328da2-de05-4c80-b3cd-6f5fcba9d218 container client-container: <nil>
  STEP: delete the pod @ 07/30/24 07:26:41.819
  I0730 07:26:41.839589 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7441" for this suite. @ 07/30/24 07:26:41.841
• [2.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 07/30/24 07:26:41.846
  I0730 07:26:41.846558 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename pod-network-test @ 07/30/24 07:26:41.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:26:41.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:26:41.861
  STEP: Performing setup for networking test in namespace pod-network-test-8423 @ 07/30/24 07:26:41.863
  STEP: creating a selector @ 07/30/24 07:26:41.863
  STEP: Creating the service pods in kubernetes @ 07/30/24 07:26:41.863
  I0730 07:26:41.863307 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 07/30/24 07:26:53.933
  I0730 07:26:55.981514 19 utils.go:779] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0730 07:26:55.981552 19 utils.go:472] Going to poll 10.1.163.32 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0730 07:26:55.983598 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.1.163.32 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8423 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0730 07:26:55.983623 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  I0730 07:26:55.984117 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0730 07:26:55.984196 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8423/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.1.163.32+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0730 07:26:57.031975 19 utils.go:489] Found all 1 expected endpoints: [netserver-0]
  I0730 07:26:57.032369 19 utils.go:472] Going to poll 10.1.171.80 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0730 07:26:57.038845 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.1.171.80 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8423 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0730 07:26:57.038908 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  I0730 07:26:57.040160 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0730 07:26:57.040301 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8423/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.1.171.80+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0730 07:26:58.073993 19 utils.go:489] Found all 1 expected endpoints: [netserver-1]
  I0730 07:26:58.074155 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8423" for this suite. @ 07/30/24 07:26:58.076
• [16.240 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 07/30/24 07:26:58.087
  I0730 07:26:58.088093 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename container-runtime @ 07/30/24 07:26:58.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:26:58.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:26:58.112
  STEP: create the container @ 07/30/24 07:26:58.113
  W0730 07:26:58.118833      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 07/30/24 07:26:58.118
  STEP: get the container status @ 07/30/24 07:27:00.129
  STEP: the container should be terminated @ 07/30/24 07:27:00.133
  STEP: the termination message should be set @ 07/30/24 07:27:00.134
  I0730 07:27:00.134044 19 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 07/30/24 07:27:00.134
  I0730 07:27:00.157478 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4418" for this suite. @ 07/30/24 07:27:00.159
• [2.077 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 07/30/24 07:27:00.164
  I0730 07:27:00.164981 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename projected @ 07/30/24 07:27:00.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:27:00.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:27:00.197
  STEP: Creating projection with secret that has name projected-secret-test-203036b4-6372-40e6-b767-657670d5a13a @ 07/30/24 07:27:00.199
  STEP: Creating a pod to test consume secrets @ 07/30/24 07:27:00.206
  STEP: Saw pod success @ 07/30/24 07:27:02.225
  I0730 07:27:02.227463 19 output.go:196] Trying to get logs from node worker pod pod-projected-secrets-685d7936-378a-4048-b265-37d73af6520a container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/30/24 07:27:02.232
  I0730 07:27:02.252133 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8227" for this suite. @ 07/30/24 07:27:02.254
• [2.096 seconds]
------------------------------
SS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 07/30/24 07:27:02.261
  I0730 07:27:02.261099 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename kubelet-test @ 07/30/24 07:27:02.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:27:02.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:27:02.275
  I0730 07:27:02.295291 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9546" for this suite. @ 07/30/24 07:27:02.297
• [0.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 07/30/24 07:27:02.302
  I0730 07:27:02.302409 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename var-expansion @ 07/30/24 07:27:02.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:27:02.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:27:02.32
  STEP: creating the pod @ 07/30/24 07:27:02.323
  STEP: waiting for pod running @ 07/30/24 07:27:02.338
  STEP: creating a file in subpath @ 07/30/24 07:27:04.351
  I0730 07:27:04.356586 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-9004 PodName:var-expansion-6b4b2028-8280-47df-a8e1-152fc58a2a70 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0730 07:27:04.356678 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  I0730 07:27:04.357491 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0730 07:27:04.357862 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-9004/pods/var-expansion-6b4b2028-8280-47df-a8e1-152fc58a2a70/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 07/30/24 07:27:04.417
  I0730 07:27:04.419391 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-9004 PodName:var-expansion-6b4b2028-8280-47df-a8e1-152fc58a2a70 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0730 07:27:04.419412 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  I0730 07:27:04.419850 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0730 07:27:04.419885 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-9004/pods/var-expansion-6b4b2028-8280-47df-a8e1-152fc58a2a70/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 07/30/24 07:27:04.447
  I0730 07:27:04.968410 19 pod_client.go:141] Successfully updated pod "var-expansion-6b4b2028-8280-47df-a8e1-152fc58a2a70"
  STEP: waiting for annotated pod running @ 07/30/24 07:27:04.969
  STEP: deleting the pod gracefully @ 07/30/24 07:27:04.974
  I0730 07:27:04.974428 19 delete.go:62] Deleting pod "var-expansion-6b4b2028-8280-47df-a8e1-152fc58a2a70" in namespace "var-expansion-9004"
  I0730 07:27:04.987239 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-6b4b2028-8280-47df-a8e1-152fc58a2a70" to be fully deleted
  I0730 07:27:37.103972 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9004" for this suite. @ 07/30/24 07:27:37.109
• [34.817 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1726
  STEP: Creating a kubernetes client @ 07/30/24 07:27:37.12
  I0730 07:27:37.120193 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename kubectl @ 07/30/24 07:27:37.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:27:37.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:27:37.136
  I0730 07:27:37.137948 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-7437 version'
  I0730 07:27:37.170898 19 builder.go:146] stderr: ""
  I0730 07:27:37.170930 19 builder.go:147] stdout: "Client Version: v1.30.3\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.30.3\n"
  I0730 07:27:37.171102 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7437" for this suite. @ 07/30/24 07:27:37.173
• [0.058 seconds]
------------------------------
SSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 07/30/24 07:27:37.178
  I0730 07:27:37.178055 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename ingress @ 07/30/24 07:27:37.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:27:37.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:27:37.19
  STEP: getting /apis @ 07/30/24 07:27:37.191
  STEP: getting /apis/networking.k8s.io @ 07/30/24 07:27:37.192
  STEP: getting /apis/networking.k8s.iov1 @ 07/30/24 07:27:37.192
  STEP: creating @ 07/30/24 07:27:37.193
  STEP: getting @ 07/30/24 07:27:37.205
  STEP: listing @ 07/30/24 07:27:37.209
  STEP: watching @ 07/30/24 07:27:37.213
  I0730 07:27:37.213076 19 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 07/30/24 07:27:37.214
  STEP: cluster-wide watching @ 07/30/24 07:27:37.216
  I0730 07:27:37.216709 19 ingress.go:198] starting watch
  STEP: patching @ 07/30/24 07:27:37.217
  STEP: updating @ 07/30/24 07:27:37.223
  I0730 07:27:37.228273 19 ingress.go:221] waiting for watch events with expected annotations
  I0730 07:27:37.228321 19 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 07/30/24 07:27:37.228
  STEP: updating /status @ 07/30/24 07:27:37.232
  STEP: get /status @ 07/30/24 07:27:37.236
  STEP: deleting @ 07/30/24 07:27:37.237
  STEP: deleting a collection @ 07/30/24 07:27:37.243
  I0730 07:27:37.251974 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-8411" for this suite. @ 07/30/24 07:27:37.253
• [0.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 07/30/24 07:27:37.257
  I0730 07:27:37.257897 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename svcaccounts @ 07/30/24 07:27:37.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:27:37.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:27:37.272
  I0730 07:27:37.275041 19 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-7991"
  I0730 07:27:37.278291 19 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-7991"
  STEP: waiting for a new root ca configmap created @ 07/30/24 07:27:37.779
  I0730 07:27:37.784864 19 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-7991"
  I0730 07:27:37.796902 19 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-7991"
  STEP: waiting for the root ca configmap reconciled @ 07/30/24 07:27:38.297
  I0730 07:27:38.304599 19 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-7991"
  I0730 07:27:38.304826 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7991" for this suite. @ 07/30/24 07:27:38.309
• [1.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 07/30/24 07:27:38.321
  I0730 07:27:38.321948 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename namespaces @ 07/30/24 07:27:38.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:27:38.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:27:38.351
  STEP: creating a Namespace @ 07/30/24 07:27:38.353
  STEP: patching the Namespace @ 07/30/24 07:27:38.369
  STEP: get the Namespace and ensuring it has the label @ 07/30/24 07:27:38.373
  I0730 07:27:38.377541 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4667" for this suite. @ 07/30/24 07:27:38.379
  STEP: Destroying namespace "nspatchtest-f8dafe08-2222-4e4f-a510-04dd615f805e-6465" for this suite. @ 07/30/24 07:27:38.383
• [0.066 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3136
  STEP: Creating a kubernetes client @ 07/30/24 07:27:38.388
  I0730 07:27:38.388512 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename services @ 07/30/24 07:27:38.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:27:38.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:27:38.401
  STEP: fetching services @ 07/30/24 07:27:38.402
  I0730 07:27:38.403652 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6184" for this suite. @ 07/30/24 07:27:38.405
• [0.026 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 07/30/24 07:27:38.414
  I0730 07:27:38.414626 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename replication-controller @ 07/30/24 07:27:38.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:27:38.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:27:38.427
  STEP: Creating replication controller my-hostname-basic-67e40bff-b396-4092-8e42-8cd851d426df @ 07/30/24 07:27:38.428
  I0730 07:27:38.433980 19 resource.go:87] Pod name my-hostname-basic-67e40bff-b396-4092-8e42-8cd851d426df: Found 0 pods out of 1
  I0730 07:27:43.436618 19 resource.go:87] Pod name my-hostname-basic-67e40bff-b396-4092-8e42-8cd851d426df: Found 1 pods out of 1
  I0730 07:27:43.436647 19 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-67e40bff-b396-4092-8e42-8cd851d426df" are running
  I0730 07:27:43.438874 19 rc.go:523] Pod "my-hostname-basic-67e40bff-b396-4092-8e42-8cd851d426df-5d8xb" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-30 07:27:39 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-30 07:27:38 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-30 07:27:39 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-30 07:27:39 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-30 07:27:38 +0000 UTC Reason: Message:}])
  I0730 07:27:43.438899 19 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 07/30/24 07:27:43.438
  I0730 07:27:43.451411 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7052" for this suite. @ 07/30/24 07:27:43.456
• [5.049 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 07/30/24 07:27:43.463
  I0730 07:27:43.463757 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename projected @ 07/30/24 07:27:43.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:27:43.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:27:43.485
  STEP: Creating a pod to test downward API volume plugin @ 07/30/24 07:27:43.486
  STEP: Saw pod success @ 07/30/24 07:27:47.518
  I0730 07:27:47.524390 19 output.go:196] Trying to get logs from node worker pod downwardapi-volume-cf0937e8-163b-448c-9a86-d004c078e188 container client-container: <nil>
  STEP: delete the pod @ 07/30/24 07:27:47.533
  I0730 07:27:47.567325 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5145" for this suite. @ 07/30/24 07:27:47.569
• [4.111 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2181
  STEP: Creating a kubernetes client @ 07/30/24 07:27:47.575
  I0730 07:27:47.575084 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename services @ 07/30/24 07:27:47.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:27:47.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:27:47.589
  STEP: creating service in namespace services-7646 @ 07/30/24 07:27:47.591
  STEP: creating service affinity-clusterip in namespace services-7646 @ 07/30/24 07:27:47.591
  STEP: creating replication controller affinity-clusterip in namespace services-7646 @ 07/30/24 07:27:47.598
  I0730 07:27:47.608429      19 runners.go:198] Created replication controller with name: affinity-clusterip, namespace: services-7646, replica count: 3
  I0730 07:27:50.659619      19 runners.go:198] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0730 07:27:50.662776 19 resource.go:361] Creating new exec pod
  I0730 07:27:53.675810 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-7646 exec execpod-affinity6d5pq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0730 07:27:53.768824 19 builder.go:146] stderr: "+ nc -v -t -w 2 affinity-clusterip 80\n+ echo hostName\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I0730 07:27:53.768856 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0730 07:27:53.768921 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-7646 exec execpod-affinity6d5pq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.114 80'
  I0730 07:27:53.821812 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.114 80\nConnection to 10.152.183.114 80 port [tcp/http] succeeded!\n"
  I0730 07:27:53.821841 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0730 07:27:53.821885 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-7646 exec execpod-affinity6d5pq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.114:80/ ; done'
  I0730 07:27:53.898115 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.114:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.114:80/\n"
  I0730 07:27:53.898146 19 builder.go:147] stdout: "\naffinity-clusterip-slmvt\naffinity-clusterip-slmvt\naffinity-clusterip-slmvt\naffinity-clusterip-slmvt\naffinity-clusterip-slmvt\naffinity-clusterip-slmvt\naffinity-clusterip-slmvt\naffinity-clusterip-slmvt\naffinity-clusterip-slmvt\naffinity-clusterip-slmvt\naffinity-clusterip-slmvt\naffinity-clusterip-slmvt\naffinity-clusterip-slmvt\naffinity-clusterip-slmvt\naffinity-clusterip-slmvt\naffinity-clusterip-slmvt"
  I0730 07:27:53.898160 19 service.go:242] Received response from host: affinity-clusterip-slmvt
  I0730 07:27:53.898165 19 service.go:242] Received response from host: affinity-clusterip-slmvt
  I0730 07:27:53.898172 19 service.go:242] Received response from host: affinity-clusterip-slmvt
  I0730 07:27:53.898175 19 service.go:242] Received response from host: affinity-clusterip-slmvt
  I0730 07:27:53.898179 19 service.go:242] Received response from host: affinity-clusterip-slmvt
  I0730 07:27:53.898182 19 service.go:242] Received response from host: affinity-clusterip-slmvt
  I0730 07:27:53.898185 19 service.go:242] Received response from host: affinity-clusterip-slmvt
  I0730 07:27:53.898188 19 service.go:242] Received response from host: affinity-clusterip-slmvt
  I0730 07:27:53.898192 19 service.go:242] Received response from host: affinity-clusterip-slmvt
  I0730 07:27:53.898195 19 service.go:242] Received response from host: affinity-clusterip-slmvt
  I0730 07:27:53.898198 19 service.go:242] Received response from host: affinity-clusterip-slmvt
  I0730 07:27:53.898205 19 service.go:242] Received response from host: affinity-clusterip-slmvt
  I0730 07:27:53.898209 19 service.go:242] Received response from host: affinity-clusterip-slmvt
  I0730 07:27:53.898212 19 service.go:242] Received response from host: affinity-clusterip-slmvt
  I0730 07:27:53.898215 19 service.go:242] Received response from host: affinity-clusterip-slmvt
  I0730 07:27:53.898218 19 service.go:242] Received response from host: affinity-clusterip-slmvt
  I0730 07:27:53.898256 19 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-7646, will wait for the garbage collector to delete the pods @ 07/30/24 07:27:53.912
  I0730 07:27:53.970574 19 resources.go:139] Deleting ReplicationController affinity-clusterip took: 6.144341ms
  I0730 07:27:54.071408 19 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.823767ms
  I0730 07:27:57.217789 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7646" for this suite. @ 07/30/24 07:27:57.223
• [9.654 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 07/30/24 07:27:57.229
  I0730 07:27:57.229388 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename deployment @ 07/30/24 07:27:57.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:27:57.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:27:57.244
  I0730 07:27:57.245847 19 deployment.go:1645] Creating simple deployment test-new-deployment
  I0730 07:27:57.255066 19 deployment.go:222] deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 07/30/24 07:27:59.278
  STEP: updating a scale subresource @ 07/30/24 07:27:59.282
  STEP: verifying the deployment Spec.Replicas was modified @ 07/30/24 07:27:59.291
  STEP: Patch a scale subresource @ 07/30/24 07:27:59.294
  I0730 07:27:59.330785 19 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2030",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "40e5f845-7b38-4983-9f96-25ebfb916ffa",
      ResourceVersion: (string) (len=4) "3743",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857921277,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857921277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857921278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857921278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857921278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857921278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857921277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-77db57d8df\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0730 07:27:59.335077 19 deployment.go:39] New ReplicaSet "test-new-deployment-77db57d8df" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-77db57d8df",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2030",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d6a7a963-18ca-456a-951d-3bdc34bea474",
      ResourceVersion: (string) (len=4) "3746",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857921277,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "40e5f845-7b38-4983-9f96-25ebfb916ffa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857921278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857921279,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 30 65 35 66 38  34 35 2d 37 62 33 38 2d  |\"40e5f845-7b38-|
              00000120  34 39 38 33 2d 39 66 39  36 2d 32 35 65 62 66 62  |4983-9f96-25ebfb|
              00000130  39 31 36 66 66 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |916ffa\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0730 07:27:59.341020 19 deployment.go:67] Pod "test-new-deployment-77db57d8df-446r9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-77db57d8df-446r9",
      GenerateName: (string) (len=31) "test-new-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-2030",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9d40aeb2-0c63-46d8-93d8-15825f70db43",
      ResourceVersion: (string) (len=4) "3736",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857921277,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f556cd85a95d02e98b29b6bf414c6d20b67f939157697e34aa672be52ce99d70",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.163.38/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.163.38/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-77db57d8df",
          UID: (types.UID) (len=36) "d6a7a963-18ca-456a-951d-3bdc34bea474",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857921277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857921277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  61 37 61 39 36 33 2d 31  |d\":\"d6a7a963-1|
              00000090  38 63 61 2d 34 35 36 61  2d 39 35 31 64 2d 33 62  |8ca-456a-951d-3b|
              000000a0  64 63 33 34 62 65 61 34  37 34 5c 22 7d 22 3a 7b  |dc34bea474\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857921278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 36 33 2e 33  38 5c 22 7d 22 3a 7b 22  |.1.163.38\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cx5b8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cx5b8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "jammy",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857921278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857921277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857921278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857921278,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857921277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.102",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.102"
        }
      },
      PodIP: (string) (len=11) "10.1.163.38",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.163.38"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857921277,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857921277,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0fdd141aa4a32120f846e2fd424065ed2d2db5ecb8fe11c002441796b401dff7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 07:27:59.342268 19 deployment.go:67] Pod "test-new-deployment-77db57d8df-djzqk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-77db57d8df-djzqk",
      GenerateName: (string) (len=31) "test-new-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-2030",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1fed223c-9995-49e9-99b4-334deb179e63",
      ResourceVersion: (string) (len=4) "3747",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857921279,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-77db57d8df",
          UID: (types.UID) (len=36) "d6a7a963-18ca-456a-951d-3bdc34bea474",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857921279,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 36  61 37 61 39 36 33 2d 31  |d\":\"d6a7a963-1|
              00000090  38 63 61 2d 34 35 36 61  2d 39 35 31 64 2d 33 62  |8ca-456a-951d-3b|
              000000a0  64 63 33 34 62 65 61 34  37 34 5c 22 7d 22 3a 7b  |dc34bea474\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bhhwh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bhhwh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "worker",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857921279,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 07:27:59.346875 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2030" for this suite. @ 07/30/24 07:27:59.35
• [2.132 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 07/30/24 07:27:59.361
  I0730 07:27:59.361569 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename emptydir @ 07/30/24 07:27:59.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:27:59.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:27:59.4
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 07/30/24 07:27:59.402
  STEP: Saw pod success @ 07/30/24 07:28:03.428
  I0730 07:28:03.433761 19 output.go:196] Trying to get logs from node jammy pod pod-3940dd03-e60b-4666-8cbb-892960d7341d container test-container: <nil>
  STEP: delete the pod @ 07/30/24 07:28:03.439
  I0730 07:28:03.463158 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7515" for this suite. @ 07/30/24 07:28:03.465
• [4.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 07/30/24 07:28:03.471
  I0730 07:28:03.471109 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename runtimeclass @ 07/30/24 07:28:03.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:28:03.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:28:03.488
  STEP: getting /apis @ 07/30/24 07:28:03.49
  STEP: getting /apis/node.k8s.io @ 07/30/24 07:28:03.493
  STEP: getting /apis/node.k8s.io/v1 @ 07/30/24 07:28:03.494
  STEP: creating @ 07/30/24 07:28:03.494
  STEP: watching @ 07/30/24 07:28:03.503
  I0730 07:28:03.503228 19 runtimeclass.go:275] starting watch
  STEP: getting @ 07/30/24 07:28:03.507
  STEP: listing @ 07/30/24 07:28:03.509
  STEP: patching @ 07/30/24 07:28:03.511
  STEP: updating @ 07/30/24 07:28:03.514
  I0730 07:28:03.518667 19 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 07/30/24 07:28:03.518
  STEP: deleting a collection @ 07/30/24 07:28:03.527
  I0730 07:28:03.535545 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8487" for this suite. @ 07/30/24 07:28:03.537
• [0.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 07/30/24 07:28:03.547
  I0730 07:28:03.548018 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename init-container @ 07/30/24 07:28:03.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:28:03.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:28:03.564
  STEP: creating the pod @ 07/30/24 07:28:03.565
  I0730 07:28:03.565505 19 init_container.go:499] PodSpec: initContainers in spec.initContainers
  I0730 07:28:07.283936 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-452" for this suite. @ 07/30/24 07:28:07.286
• [3.744 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:420
  STEP: Creating a kubernetes client @ 07/30/24 07:28:07.292
  I0730 07:28:07.292887 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename job @ 07/30/24 07:28:07.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:28:07.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:28:07.307
  STEP: Creating Indexed job @ 07/30/24 07:28:07.343
  STEP: Ensuring job reaches completions @ 07/30/24 07:28:07.358
  STEP: Ensuring pods with index for job exist @ 07/30/24 07:28:15.365
  I0730 07:28:15.371736 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3423" for this suite. @ 07/30/24 07:28:15.376
• [8.095 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 07/30/24 07:28:15.388
  I0730 07:28:15.388133 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename watch @ 07/30/24 07:28:15.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:28:15.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:28:15.407
  STEP: getting a starting resourceVersion @ 07/30/24 07:28:15.408
  STEP: starting a background goroutine to produce watch events @ 07/30/24 07:28:15.409
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 07/30/24 07:28:15.409
  I0730 07:28:18.200693 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9765" for this suite. @ 07/30/24 07:28:18.25
• [2.920 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 07/30/24 07:28:18.308
  I0730 07:28:18.308258 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename projected @ 07/30/24 07:28:18.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:28:18.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:28:18.338
  STEP: Creating a pod to test downward API volume plugin @ 07/30/24 07:28:18.393
  STEP: Saw pod success @ 07/30/24 07:28:22.43
  I0730 07:28:22.435975 19 output.go:196] Trying to get logs from node jammy pod downwardapi-volume-1728796c-a225-4514-a5d6-9ed428803e46 container client-container: <nil>
  STEP: delete the pod @ 07/30/24 07:28:22.443
  I0730 07:28:22.466386 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-193" for this suite. @ 07/30/24 07:28:22.469
• [4.166 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 07/30/24 07:28:22.474
  I0730 07:28:22.474139 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename webhook @ 07/30/24 07:28:22.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:28:22.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:28:22.486
  STEP: Setting up server cert @ 07/30/24 07:28:22.506
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/30/24 07:28:22.744
  STEP: Deploying the webhook pod @ 07/30/24 07:28:22.752
  STEP: Wait for the deployment to be ready @ 07/30/24 07:28:22.759
  I0730 07:28:22.764380 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 07/30/24 07:28:24.781
  STEP: Verifying the service has paired with the endpoint @ 07/30/24 07:28:24.798
  I0730 07:28:25.799058 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 07/30/24 07:28:25.918
  STEP: Creating a configMap that should be mutated @ 07/30/24 07:28:25.925
  STEP: Deleting the collection of validation webhooks @ 07/30/24 07:28:25.939
  STEP: Creating a configMap that should not be mutated @ 07/30/24 07:28:25.972
  I0730 07:28:26.009613 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7252" for this suite. @ 07/30/24 07:28:26.011
  STEP: Destroying namespace "webhook-markers-921" for this suite. @ 07/30/24 07:28:26.022
• [3.556 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 07/30/24 07:28:26.03
  I0730 07:28:26.030567 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename statefulset @ 07/30/24 07:28:26.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:28:26.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:28:26.043
  STEP: Creating service test in namespace statefulset-5431 @ 07/30/24 07:28:26.045
  STEP: Creating a new StatefulSet @ 07/30/24 07:28:26.048
  I0730 07:28:26.060412 19 wait.go:40] Found 0 stateful pods, waiting for 3
  I0730 07:28:36.065085 19 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0730 07:28:36.065127 19 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0730 07:28:36.065137 19 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0730 07:28:36.072774 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=statefulset-5431 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0730 07:28:36.139341 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0730 07:28:36.139381 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0730 07:28:36.139391 19 statefulset.go:2184] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 07/30/24 07:28:46.153
  I0730 07:28:46.181944 19 statefulset.go:2241] Updating stateful set ss2
  STEP: Creating a new revision @ 07/30/24 07:28:46.182
  STEP: Updating Pods in reverse ordinal order @ 07/30/24 07:28:56.196
  I0730 07:28:56.203823 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=statefulset-5431 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0730 07:28:56.282860 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0730 07:28:56.282888 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0730 07:28:56.282895 19 statefulset.go:2208] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0730 07:29:06.304380 19 wait.go:158] Waiting for StatefulSet statefulset-5431/ss2 to complete update
  I0730 07:29:06.304534 19 wait.go:165] Waiting for Pod statefulset-5431/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0730 07:29:06.304549 19 wait.go:165] Waiting for Pod statefulset-5431/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0730 07:29:16.302021 19 wait.go:158] Waiting for StatefulSet statefulset-5431/ss2 to complete update
  I0730 07:29:16.302092 19 wait.go:165] Waiting for Pod statefulset-5431/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0730 07:29:16.302103 19 wait.go:165] Waiting for Pod statefulset-5431/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0730 07:29:26.305467 19 wait.go:158] Waiting for StatefulSet statefulset-5431/ss2 to complete update
  I0730 07:29:26.305906 19 wait.go:165] Waiting for Pod statefulset-5431/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0730 07:29:36.302552 19 wait.go:158] Waiting for StatefulSet statefulset-5431/ss2 to complete update
  I0730 07:29:36.302601 19 wait.go:165] Waiting for Pod statefulset-5431/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Rolling back to a previous revision @ 07/30/24 07:29:46.305
  I0730 07:29:46.305252 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=statefulset-5431 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0730 07:29:46.380399 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0730 07:29:46.380435 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0730 07:29:46.380443 19 statefulset.go:2184] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0730 07:29:56.421378 19 statefulset.go:2241] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 07/30/24 07:30:06.425
  I0730 07:30:06.427303 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=statefulset-5431 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0730 07:30:06.479920 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0730 07:30:06.480054 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0730 07:30:06.480102 19 statefulset.go:2208] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0730 07:30:16.504101 19 statefulset.go:135] Deleting all statefulset in ns statefulset-5431
  I0730 07:30:16.507027 19 rest.go:150] Scaling statefulset ss2 to 0
  I0730 07:30:26.519393 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0730 07:30:26.522908 19 rest.go:88] Deleting statefulset ss2
  I0730 07:30:26.538737 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5431" for this suite. @ 07/30/24 07:30:26.543
• [120.518 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 07/30/24 07:30:26.548
  I0730 07:30:26.548725 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename configmap @ 07/30/24 07:30:26.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:30:26.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:30:26.565
  STEP: Creating configMap with name configmap-test-upd-98199fc2-a696-4820-b950-b77556402552 @ 07/30/24 07:30:26.569
  STEP: Creating the pod @ 07/30/24 07:30:26.573
  STEP: Waiting for pod with text data @ 07/30/24 07:30:28.588
  STEP: Waiting for pod with binary data @ 07/30/24 07:30:28.6
  I0730 07:30:28.605169 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1050" for this suite. @ 07/30/24 07:30:28.607
• [2.063 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1284
  STEP: Creating a kubernetes client @ 07/30/24 07:30:28.613
  I0730 07:30:28.613313 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename services @ 07/30/24 07:30:28.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:30:28.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:30:28.629
  STEP: creating service nodeport-test with type=NodePort in namespace services-9436 @ 07/30/24 07:30:28.631
  STEP: creating replication controller nodeport-test in namespace services-9436 @ 07/30/24 07:30:28.641
  I0730 07:30:28.648226      19 runners.go:198] Created replication controller with name: nodeport-test, namespace: services-9436, replica count: 2
  I0730 07:30:31.698978      19 runners.go:198] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0730 07:30:31.699014 19 resource.go:361] Creating new exec pod
  I0730 07:30:34.712431 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-9436 exec execpodcdbfd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0730 07:30:34.770158 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0730 07:30:34.770189 19 builder.go:147] stdout: ""
  I0730 07:30:35.713375 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-9436 exec execpodcdbfd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0730 07:30:35.786908 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0730 07:30:35.786942 19 builder.go:147] stdout: ""
  I0730 07:30:36.713023 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-9436 exec execpodcdbfd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0730 07:30:36.772733 19 builder.go:146] stderr: "+ + echonc hostName -v\n -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0730 07:30:36.772760 19 builder.go:147] stdout: ""
  I0730 07:30:37.713015 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-9436 exec execpodcdbfd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0730 07:30:37.791864 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0730 07:30:37.791895 19 builder.go:147] stdout: "nodeport-test-jjw2x"
  I0730 07:30:37.791960 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-9436 exec execpodcdbfd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.145 80'
  I0730 07:30:37.859499 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.145 80\nConnection to 10.152.183.145 80 port [tcp/http] succeeded!\n"
  I0730 07:30:37.859531 19 builder.go:147] stdout: "nodeport-test-jjw2x"
  I0730 07:30:37.859628 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-9436 exec execpodcdbfd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.227.69.102 30661'
  I0730 07:30:37.918596 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.227.69.102 30661\nConnection to 10.227.69.102 30661 port [tcp/*] succeeded!\n"
  I0730 07:30:37.918649 19 builder.go:147] stdout: ""
  I0730 07:30:38.860761 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-9436 exec execpodcdbfd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.227.69.102 30661'
  I0730 07:30:38.944797 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.227.69.102 30661\nConnection to 10.227.69.102 30661 port [tcp/*] succeeded!\n"
  I0730 07:30:38.944834 19 builder.go:147] stdout: ""
  I0730 07:30:39.859700 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-9436 exec execpodcdbfd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.227.69.102 30661'
  I0730 07:30:39.926755 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.227.69.102 30661\nConnection to 10.227.69.102 30661 port [tcp/*] succeeded!\n"
  I0730 07:30:39.926786 19 builder.go:147] stdout: "nodeport-test-jjw2x"
  I0730 07:30:39.926842 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-9436 exec execpodcdbfd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.227.69.245 30661'
  I0730 07:30:39.985418 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.227.69.245 30661\nConnection to 10.227.69.245 30661 port [tcp/*] succeeded!\n"
  I0730 07:30:39.985491 19 builder.go:147] stdout: ""
  I0730 07:30:40.927741 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-9436 exec execpodcdbfd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.227.69.245 30661'
  I0730 07:30:41.032248 19 builder.go:146] stderr: "+ + ncecho -v -t hostName -w\n 2 10.227.69.245 30661\nConnection to 10.227.69.245 30661 port [tcp/*] succeeded!\n"
  I0730 07:30:41.032285 19 builder.go:147] stdout: "nodeport-test-jjw2x"
  I0730 07:30:41.032346 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9436" for this suite. @ 07/30/24 07:30:41.034
• [12.426 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 07/30/24 07:30:41.039
  I0730 07:30:41.039317 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename dns @ 07/30/24 07:30:41.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:30:41.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:30:41.053
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 07/30/24 07:30:41.054
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 07/30/24 07:30:41.054
  STEP: creating a pod to probe DNS @ 07/30/24 07:30:41.054
  STEP: submitting the pod to kubernetes @ 07/30/24 07:30:41.054
  STEP: retrieving the pod @ 07/30/24 07:31:07.153
  STEP: looking for the results for each expected name from probers @ 07/30/24 07:31:07.157
  I0730 07:31:07.171652 19 dns_common.go:527] DNS probes using dns-7159/dns-test-d561eb73-042b-4c42-96f5-a8d7ae2a7e1d succeeded

  STEP: deleting the pod @ 07/30/24 07:31:07.171
  I0730 07:31:07.187763 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7159" for this suite. @ 07/30/24 07:31:07.193
• [26.161 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 07/30/24 07:31:07.2
  I0730 07:31:07.200779 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename configmap @ 07/30/24 07:31:07.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:31:07.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:31:07.214
  STEP: Creating configMap with name configmap-test-volume-ffacf34d-af6c-487c-8a46-a1ea47db814d @ 07/30/24 07:31:07.215
  STEP: Creating a pod to test consume configMaps @ 07/30/24 07:31:07.219
  STEP: Saw pod success @ 07/30/24 07:31:11.241
  I0730 07:31:11.245958 19 output.go:196] Trying to get logs from node jammy pod pod-configmaps-88fde9bc-99b1-4a94-a25f-b41e84265cfa container agnhost-container: <nil>
  STEP: delete the pod @ 07/30/24 07:31:11.254
  I0730 07:31:11.278343 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6396" for this suite. @ 07/30/24 07:31:11.281
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 07/30/24 07:31:11.288
  I0730 07:31:11.288159 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename secrets @ 07/30/24 07:31:11.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:31:11.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:31:11.302
  STEP: creating a secret @ 07/30/24 07:31:11.303
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 07/30/24 07:31:11.306
  STEP: patching the secret @ 07/30/24 07:31:11.307
  STEP: deleting the secret using a LabelSelector @ 07/30/24 07:31:11.312
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 07/30/24 07:31:11.315
  I0730 07:31:11.316873 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8638" for this suite. @ 07/30/24 07:31:11.318
• [0.034 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 07/30/24 07:31:11.322
  I0730 07:31:11.322472 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename projected @ 07/30/24 07:31:11.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:31:11.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:31:11.334
  STEP: Creating a pod to test downward API volume plugin @ 07/30/24 07:31:11.336
  STEP: Saw pod success @ 07/30/24 07:31:15.352
  I0730 07:31:15.357552 19 output.go:196] Trying to get logs from node jammy pod downwardapi-volume-fd339023-8819-42ce-af56-698ae1b53f7e container client-container: <nil>
  STEP: delete the pod @ 07/30/24 07:31:15.365
  I0730 07:31:15.402025 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8867" for this suite. @ 07/30/24 07:31:15.407
• [4.094 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 07/30/24 07:31:15.419
  I0730 07:31:15.419403 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename resourcequota @ 07/30/24 07:31:15.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:31:15.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:31:15.502
  STEP: Creating resourceQuota "e2e-rq-status-d6q5l" @ 07/30/24 07:31:15.509
  I0730 07:31:15.517497 19 resource_quota.go:1051] Resource quota "e2e-rq-status-d6q5l" reports spec: hard cpu limit of 500m
  I0730 07:31:15.517521 19 resource_quota.go:1053] Resource quota "e2e-rq-status-d6q5l" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-d6q5l" /status @ 07/30/24 07:31:15.517
  STEP: Confirm /status for "e2e-rq-status-d6q5l" resourceQuota via watch @ 07/30/24 07:31:15.54
  I0730 07:31:15.541460 19 resource_quota.go:1080] observed resourceQuota "e2e-rq-status-d6q5l" in namespace "resourcequota-6011" with hard status: v1.ResourceList(nil)
  I0730 07:31:15.541530 19 resource_quota.go:1083] Found resourceQuota "e2e-rq-status-d6q5l" in namespace "resourcequota-6011" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0730 07:31:15.541538 19 resource_quota.go:1090] ResourceQuota "e2e-rq-status-d6q5l" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 07/30/24 07:31:15.543
  I0730 07:31:15.547044 19 resource_quota.go:1101] Resource quota "e2e-rq-status-d6q5l" reports spec: hard cpu limit of 1
  I0730 07:31:15.547058 19 resource_quota.go:1102] Resource quota "e2e-rq-status-d6q5l" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-d6q5l" /status @ 07/30/24 07:31:15.547
  STEP: Confirm /status for "e2e-rq-status-d6q5l" resourceQuota via watch @ 07/30/24 07:31:15.552
  I0730 07:31:15.553880 19 resource_quota.go:1124] observed resourceQuota "e2e-rq-status-d6q5l" in namespace "resourcequota-6011" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0730 07:31:15.553901 19 resource_quota.go:1127] Found resourceQuota "e2e-rq-status-d6q5l" in namespace "resourcequota-6011" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0730 07:31:15.553906 19 resource_quota.go:1134] ResourceQuota "e2e-rq-status-d6q5l" /status was patched
  STEP: Get "e2e-rq-status-d6q5l" /status @ 07/30/24 07:31:15.553
  I0730 07:31:15.555644 19 resource_quota.go:1145] Resourcequota "e2e-rq-status-d6q5l" reports status: hard cpu of 1
  I0730 07:31:15.555665 19 resource_quota.go:1147] Resourcequota "e2e-rq-status-d6q5l" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-d6q5l" /status before checking Spec is unchanged @ 07/30/24 07:31:15.557
  I0730 07:31:15.561351 19 resource_quota.go:1167] Resourcequota "e2e-rq-status-d6q5l" reports status: hard cpu of 2
  I0730 07:31:15.561370 19 resource_quota.go:1169] Resourcequota "e2e-rq-status-d6q5l" reports status: hard memory of 2Gi
  I0730 07:31:15.562256 19 resource_quota.go:1181] Found resourceQuota "e2e-rq-status-d6q5l" in namespace "resourcequota-6011" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0730 07:31:15.563582 19 resource_quota.go:1212] ResourceQuota "e2e-rq-status-d6q5l" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-d6q5l", GenerateName:"", Namespace:"resourcequota-6011", SelfLink:"", UID:"c504f3fc-89f1-4725-a2b9-98904e598520", ResourceVersion:"5250", Generation:0, CreationTimestamp:time.Date(2024, time.July, 30, 7, 31, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-d6q5l"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 30, 7, 31, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003827470), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 30, 7, 31, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038274a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 30, 7, 31, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003827500), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList(nil)}}
  I0730 07:31:20.566492 19 resource_quota.go:1209] ResourceQuota "e2e-rq-status-d6q5l" Spec was unchanged and /status reset
  I0730 07:31:20.566625 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6011" for this suite. @ 07/30/24 07:31:20.568
• [5.153 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 07/30/24 07:31:20.573
  I0730 07:31:20.573267 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename field-validation @ 07/30/24 07:31:20.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:31:20.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:31:20.583
  I0730 07:31:20.585040 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  I0730 07:31:23.675992 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6642" for this suite. @ 07/30/24 07:31:23.678
• [3.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 07/30/24 07:31:23.686
  I0730 07:31:23.686894 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename container-probe @ 07/30/24 07:31:23.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:31:23.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:31:23.703
  STEP: Creating pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302 @ 07/30/24 07:31:23.704
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/30/24 07:31:25.724
  I0730 07:31:25.728285 19 container_probe.go:1749] Initial restart count of pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 is 0
  I0730 07:31:25.730387 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:31:27.739365 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:31:29.747384 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:31:31.756796 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:31:33.763552 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:31:35.771517 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:31:37.778484 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:31:39.786966 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:31:41.793375 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:31:43.801567 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:31:45.809770 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:31:47.818515 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:31:49.824052 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:31:51.831473 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:31:53.838833 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:31:55.846506 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:31:57.853009 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:31:59.859991 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:32:01.867839 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:32:03.875723 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:32:05.882735 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:32:07.888594 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:32:09.896524 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:32:11.904715 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:32:13.911731 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:32:15.917006 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:32:17.924968 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:32:19.934146 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:32:21.941804 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:32:23.947290 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:32:25.954777 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:32:27.964374 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:32:29.971008 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:32:31.980934 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:32:33.989716 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:32:35.997465 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:32:38.002846 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:32:40.011434 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:32:42.019638 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:32:44.026753 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:32:46.034217 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:32:48.042039 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:32:50.049752 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:32:52.056914 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:32:54.062245 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:32:56.069832 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:32:58.075244 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:33:00.084192 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:33:02.088541 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:33:04.097039 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:33:06.102691 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:33:08.107939 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:33:10.115940 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:33:12.124496 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:33:14.132254 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:33:16.138460 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:33:18.148209 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:33:20.153899 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:33:22.161511 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:33:24.166819 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:33:26.172992 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:33:28.177693 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:33:30.181204 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:33:32.186203 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:33:34.191810 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:33:36.194899 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:33:38.200047 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:33:40.205813 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:33:42.209036 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:33:44.215661 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:33:46.219321 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:33:48.222809 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:33:50.226350 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:33:52.229662 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:33:54.237171 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:33:56.246875 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:33:58.257699 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:34:00.270903 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:34:02.279036 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:34:04.283358 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:34:06.290750 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:34:08.297554 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:34:10.305207 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:34:12.312356 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:34:14.320218 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:34:16.328973 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:34:18.336795 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:34:20.342705 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:34:22.347124 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:34:24.356122 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:34:26.365464 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:34:28.375945 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:34:30.384285 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:34:32.393263 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:34:34.401142 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:34:36.405786 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:34:38.414848 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:34:40.419315 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:34:42.427085 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:34:44.433686 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:34:46.441068 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:34:48.446848 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:34:50.453867 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:34:52.464295 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:34:54.471282 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:34:56.480052 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:34:58.487781 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:35:00.495002 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:35:02.503884 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:35:04.512183 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:35:06.515725 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:35:08.525186 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:35:10.532596 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:35:12.540205 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:35:14.546457 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:35:16.554714 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:35:18.562532 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:35:20.570641 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:35:22.580151 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  I0730 07:35:24.589611 19 container_probe.go:1759] Get pod busybox-bee09cbc-6f49-4f5f-907b-48efc4f31ab7 in namespace container-probe-8302
  STEP: deleting the pod @ 07/30/24 07:35:26.59
  I0730 07:35:26.626417 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8302" for this suite. @ 07/30/24 07:35:26.628
• [242.948 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 07/30/24 07:35:26.634
  I0730 07:35:26.634969 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename kubelet-test @ 07/30/24 07:35:26.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:35:26.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:35:26.647
  I0730 07:35:28.682223 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6260" for this suite. @ 07/30/24 07:35:28.686
• [2.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 07/30/24 07:35:28.702
  I0730 07:35:28.702557 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename replication-controller @ 07/30/24 07:35:28.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:35:28.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:35:28.728
  STEP: creating a ReplicationController @ 07/30/24 07:35:28.732
  STEP: waiting for RC to be added @ 07/30/24 07:35:28.737
  STEP: waiting for available Replicas @ 07/30/24 07:35:28.737
  STEP: patching ReplicationController @ 07/30/24 07:35:41.194
  STEP: waiting for RC to be modified @ 07/30/24 07:35:41.202
  STEP: patching ReplicationController status @ 07/30/24 07:35:41.203
  STEP: waiting for RC to be modified @ 07/30/24 07:35:41.21
  STEP: waiting for available Replicas @ 07/30/24 07:35:41.21
  STEP: fetching ReplicationController status @ 07/30/24 07:35:41.213
  STEP: patching ReplicationController scale @ 07/30/24 07:35:41.214
  STEP: waiting for RC to be modified @ 07/30/24 07:35:41.218
  STEP: waiting for ReplicationController's scale to be the max amount @ 07/30/24 07:35:41.219
  STEP: fetching ReplicationController; ensuring that it's patched @ 07/30/24 07:35:51.445
  STEP: updating ReplicationController status @ 07/30/24 07:35:51.448
  STEP: waiting for RC to be modified @ 07/30/24 07:35:51.461
  STEP: listing all ReplicationControllers @ 07/30/24 07:35:51.461
  STEP: checking that ReplicationController has expected values @ 07/30/24 07:35:51.464
  STEP: deleting ReplicationControllers by collection @ 07/30/24 07:35:51.464
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 07/30/24 07:35:51.471
  I0730 07:35:51.512127 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0730 07:35:51.512184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-1978" for this suite. @ 07/30/24 07:35:51.514
• [22.816 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 07/30/24 07:35:51.518
  I0730 07:35:51.518588 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename var-expansion @ 07/30/24 07:35:51.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:35:51.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:35:51.528
  E0730 07:35:52.512743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:35:53.513026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:35:53.544880 19 delete.go:62] Deleting pod "var-expansion-a9f41afe-49d5-499c-b564-cf2bafff232e" in namespace "var-expansion-8851"
  I0730 07:35:53.561764 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-a9f41afe-49d5-499c-b564-cf2bafff232e" to be fully deleted
  E0730 07:35:54.513495      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:35:55.513738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:35:55.571611 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8851" for this suite. @ 07/30/24 07:35:55.576
• [4.072 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 07/30/24 07:35:55.593
  I0730 07:35:55.593550 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename limitrange @ 07/30/24 07:35:55.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:35:55.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:35:55.621
  STEP: Creating a LimitRange @ 07/30/24 07:35:55.623
  STEP: Setting up watch @ 07/30/24 07:35:55.623
  STEP: Submitting a LimitRange @ 07/30/24 07:35:55.725
  STEP: Verifying LimitRange creation was observed @ 07/30/24 07:35:55.739
  STEP: Fetching the LimitRange to ensure it has proper values @ 07/30/24 07:35:55.739
  I0730 07:35:55.743764 19 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0730 07:35:55.744123 19 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 07/30/24 07:35:55.744
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 07/30/24 07:35:55.752
  I0730 07:35:55.757228 19 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0730 07:35:55.757265 19 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 07/30/24 07:35:55.757
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 07/30/24 07:35:55.773
  I0730 07:35:55.775534 19 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0730 07:35:55.775703 19 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 07/30/24 07:35:55.775
  STEP: Failing to create a Pod with more than max resources @ 07/30/24 07:35:55.777
  STEP: Updating a LimitRange @ 07/30/24 07:35:55.778
  STEP: Verifying LimitRange updating is effective @ 07/30/24 07:35:55.781
  E0730 07:35:56.513766      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:35:57.514363      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 07/30/24 07:35:57.79
  STEP: Failing to create a Pod with more than max resources @ 07/30/24 07:35:57.801
  STEP: Deleting a LimitRange @ 07/30/24 07:35:57.804
  STEP: Verifying the LimitRange was deleted @ 07/30/24 07:35:57.821
  E0730 07:35:58.514498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:35:59.514833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:00.515175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:01.515877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:02.516127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:36:02.829761 19 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 07/30/24 07:36:02.829
  I0730 07:36:02.846906 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-9488" for this suite. @ 07/30/24 07:36:02.862
• [7.278 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3345
  STEP: Creating a kubernetes client @ 07/30/24 07:36:02.87
  I0730 07:36:02.870761 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename services @ 07/30/24 07:36:02.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:36:02.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:36:02.883
  STEP: creating a Service @ 07/30/24 07:36:02.886
  STEP: watching for the Service to be added @ 07/30/24 07:36:02.896
  I0730 07:36:02.898861 19 service.go:3397] Found Service test-service-qk5pf in namespace services-4396 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32554}]
  I0730 07:36:02.899024 19 service.go:3404] Service test-service-qk5pf created
  STEP: Getting /status @ 07/30/24 07:36:02.899
  I0730 07:36:02.902430 19 service.go:3415] Service test-service-qk5pf has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 07/30/24 07:36:02.902
  STEP: watching for the Service to be patched @ 07/30/24 07:36:02.907
  I0730 07:36:02.909230 19 service.go:3438] observed Service test-service-qk5pf in namespace services-4396 with annotations: map[] & LoadBalancer: {[]}
  I0730 07:36:02.909527 19 service.go:3441] Found Service test-service-qk5pf in namespace services-4396 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc003afa540 []}]}
  I0730 07:36:02.909619 19 service.go:3448] Service test-service-qk5pf has service status patched
  STEP: updating the ServiceStatus @ 07/30/24 07:36:02.909
  I0730 07:36:02.915807 19 service.go:3468] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 07/30/24 07:36:02.915
  I0730 07:36:02.916973 19 service.go:3479] Observed Service test-service-qk5pf in namespace services-4396 with annotations: map[] & Conditions: {[]}
  I0730 07:36:02.917165 19 service.go:3494] Observed event: &Service{ObjectMeta:{test-service-qk5pf  services-4396  145c57fb-5342-484b-b6ee-4d0eb673631d 5906 0 2024-07-30 07:36:02 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-07-30 07:36:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-07-30 07:36:02 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:32554,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.152.183.149,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.152.183.149],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,TrafficDistribution:nil,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:*VIP,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  I0730 07:36:02.917197 19 service.go:3486] Found Service test-service-qk5pf in namespace services-4396 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0730 07:36:02.917210 19 service.go:3498] Service test-service-qk5pf has service status updated
  STEP: patching the service @ 07/30/24 07:36:02.917
  STEP: watching for the Service to be patched @ 07/30/24 07:36:02.923
  I0730 07:36:02.924430 19 service.go:3521] observed Service test-service-qk5pf in namespace services-4396 with labels: map[test-service-static:true]
  I0730 07:36:02.924478 19 service.go:3521] observed Service test-service-qk5pf in namespace services-4396 with labels: map[test-service-static:true]
  I0730 07:36:02.924515 19 service.go:3521] observed Service test-service-qk5pf in namespace services-4396 with labels: map[test-service-static:true]
  I0730 07:36:02.924557 19 service.go:3524] Found Service test-service-qk5pf in namespace services-4396 with labels: map[test-service:patched test-service-static:true]
  I0730 07:36:02.924587 19 service.go:3531] Service test-service-qk5pf patched
  STEP: deleting the service @ 07/30/24 07:36:02.924
  STEP: watching for the Service to be deleted @ 07/30/24 07:36:02.936
  I0730 07:36:02.937530 19 service.go:3555] Observed event: ADDED
  I0730 07:36:02.937583 19 service.go:3555] Observed event: MODIFIED
  I0730 07:36:02.937628 19 service.go:3555] Observed event: MODIFIED
  I0730 07:36:02.937720 19 service.go:3555] Observed event: MODIFIED
  I0730 07:36:02.937731 19 service.go:3551] Found Service test-service-qk5pf in namespace services-4396 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0730 07:36:02.937735 19 service.go:3560] Service test-service-qk5pf deleted
  I0730 07:36:02.937790 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4396" for this suite. @ 07/30/24 07:36:02.939
• [0.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 07/30/24 07:36:02.943
  I0730 07:36:02.943421 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename emptydir @ 07/30/24 07:36:02.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:36:02.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:36:02.954
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 07/30/24 07:36:02.955
  E0730 07:36:03.517262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:04.517308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:05.517437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:06.518553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 07:36:06.979
  I0730 07:36:06.983596 19 output.go:196] Trying to get logs from node jammy pod pod-f5d7afaf-360e-4362-99d7-8a29db3f8caa container test-container: <nil>
  STEP: delete the pod @ 07/30/24 07:36:06.991
  I0730 07:36:07.016330 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-65" for this suite. @ 07/30/24 07:36:07.02
• [4.081 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 07/30/24 07:36:07.024
  I0730 07:36:07.024291 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename statefulset @ 07/30/24 07:36:07.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:36:07.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:36:07.037
  STEP: Creating service test in namespace statefulset-287 @ 07/30/24 07:36:07.038
  STEP: Creating a new StatefulSet @ 07/30/24 07:36:07.042
  I0730 07:36:07.052504 19 wait.go:40] Found 0 stateful pods, waiting for 3
  E0730 07:36:07.518509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:08.518907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:09.518864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:10.519371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:11.519481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:12.519870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:13.520241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:14.520690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:15.521909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:16.522402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:36:17.054111 19 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0730 07:36:17.054136 19 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0730 07:36:17.054140 19 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 07/30/24 07:36:17.058
  I0730 07:36:17.074010 19 statefulset.go:2241] Updating stateful set ss2
  STEP: Creating a new revision @ 07/30/24 07:36:17.074
  E0730 07:36:17.523453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:18.523616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:19.524735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:20.525008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:21.525300      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:22.525700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:23.525922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:24.526175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:25.526950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:26.527676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 07/30/24 07:36:27.085
  STEP: Performing a canary update @ 07/30/24 07:36:27.085
  I0730 07:36:27.115252 19 statefulset.go:2241] Updating stateful set ss2
  I0730 07:36:27.123792 19 wait.go:74] Waiting for Pod statefulset-287/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0730 07:36:27.528349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:28.529388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:29.529233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:30.529745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:31.530640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:32.531102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:33.532138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:34.532583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:35.533971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:36.534507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 07/30/24 07:36:37.127
  I0730 07:36:37.206056 19 wait.go:40] Found 2 stateful pods, waiting for 3
  E0730 07:36:37.535473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:38.535918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:39.537133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:40.537356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:41.538051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:42.538962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:43.539909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:44.540227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:45.540495      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:46.540849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:36:47.197163 19 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0730 07:36:47.197190 19 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0730 07:36:47.197195 19 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 07/30/24 07:36:47.201
  I0730 07:36:47.217446 19 statefulset.go:2241] Updating stateful set ss2
  I0730 07:36:47.226278 19 wait.go:74] Waiting for Pod statefulset-287/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0730 07:36:47.541711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:48.541836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:49.542187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:50.543230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:51.543306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:52.543885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:53.544366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:54.545340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:55.545595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:56.545809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:36:57.285528 19 statefulset.go:2241] Updating stateful set ss2
  I0730 07:36:57.308041 19 wait.go:56] Waiting for StatefulSet statefulset-287/ss2 to complete update
  I0730 07:36:57.308264 19 wait.go:63] Waiting for Pod statefulset-287/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0730 07:36:57.546412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:58.546688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:36:59.547093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:00.547651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:01.548337      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:02.548512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:03.548680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:04.549302      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:05.549725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:06.549927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:37:07.290189 19 statefulset.go:135] Deleting all statefulset in ns statefulset-287
  I0730 07:37:07.291848 19 rest.go:150] Scaling statefulset ss2 to 0
  E0730 07:37:07.549881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:08.549953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:09.550156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:10.550248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:11.550346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:12.550442      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:13.550641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:14.551803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:15.552872      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:16.553748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:37:17.300191 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0730 07:37:17.301871 19 rest.go:88] Deleting statefulset ss2
  I0730 07:37:17.313323 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-287" for this suite. @ 07/30/24 07:37:17.315
• [70.296 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 07/30/24 07:37:17.32
  I0730 07:37:17.320454 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename resourcequota @ 07/30/24 07:37:17.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:37:17.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:37:17.337
  STEP: Creating a ResourceQuota @ 07/30/24 07:37:17.34
  STEP: Getting a ResourceQuota @ 07/30/24 07:37:17.345
  STEP: Listing all ResourceQuotas with LabelSelector @ 07/30/24 07:37:17.348
  STEP: Patching the ResourceQuota @ 07/30/24 07:37:17.35
  STEP: Deleting a Collection of ResourceQuotas @ 07/30/24 07:37:17.354
  STEP: Verifying the deleted ResourceQuota @ 07/30/24 07:37:17.362
  I0730 07:37:17.363785 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7363" for this suite. @ 07/30/24 07:37:17.365
• [0.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 07/30/24 07:37:17.371
  I0730 07:37:17.371817 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename replication-controller @ 07/30/24 07:37:17.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:37:17.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:37:17.387
  STEP: Given a ReplicationController is created @ 07/30/24 07:37:17.389
  STEP: When the matched label of one of its pods change @ 07/30/24 07:37:17.392
  I0730 07:37:17.394920 19 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  E0730 07:37:17.554436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:18.554712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:19.555027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:20.555950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:21.556320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:37:22.397954 19 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 07/30/24 07:37:22.413
  E0730 07:37:22.557327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:37:23.418881 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1565" for this suite. @ 07/30/24 07:37:23.421
• [6.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 07/30/24 07:37:23.426
  I0730 07:37:23.426195 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename emptydir @ 07/30/24 07:37:23.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:37:23.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:37:23.44
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 07/30/24 07:37:23.442
  E0730 07:37:23.558354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:24.558692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:25.559038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:26.559688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 07:37:27.463
  I0730 07:37:27.469259 19 output.go:196] Trying to get logs from node jammy pod pod-7d8209bc-03a1-4afa-9709-8cb5be95e232 container test-container: <nil>
  STEP: delete the pod @ 07/30/24 07:37:27.48
  I0730 07:37:27.498447 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5264" for this suite. @ 07/30/24 07:37:27.499
• [4.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:446
  STEP: Creating a kubernetes client @ 07/30/24 07:37:27.553
  I0730 07:37:27.553664 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename sched-pred @ 07/30/24 07:37:27.554
  E0730 07:37:27.560508      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:37:27.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:37:27.578
  I0730 07:37:27.579217 19 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0730 07:37:27.582490 19 util.go:400] Waiting for terminating namespaces to be deleted...
  I0730 07:37:27.583849 19 predicates.go:121] 
  Logging pods the apiserver thinks is on node jammy before test
  I0730 07:37:27.586859 19 predicates.go:887] calico-kube-controllers-796fb75cc-gxp4s from kube-system started at 2024-07-30 07:18:26 +0000 UTC (1 container statuses recorded)
  I0730 07:37:27.586876 19 predicates.go:889] 	Container calico-kube-controllers ready: true, restart count 0
  I0730 07:37:27.586883 19 predicates.go:887] calico-node-m8grj from kube-system started at 2024-07-30 07:18:40 +0000 UTC (1 container statuses recorded)
  I0730 07:37:27.586887 19 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0730 07:37:27.586891 19 predicates.go:887] coredns-5986966c54-jv7lr from kube-system started at 2024-07-30 07:18:26 +0000 UTC (1 container statuses recorded)
  I0730 07:37:27.586906 19 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0730 07:37:27.586914 19 predicates.go:887] pod-release-d56p8 from replication-controller-1565 started at 2024-07-30 07:37:17 +0000 UTC (1 container statuses recorded)
  I0730 07:37:27.586917 19 predicates.go:889] 	Container pod-release ready: true, restart count 0
  I0730 07:37:27.586920 19 predicates.go:887] sonobuoy-systemd-logs-daemon-set-d42ae569ae0c45bb-bfb6w from sonobuoy started at 2024-07-30 07:21:03 +0000 UTC (2 container statuses recorded)
  I0730 07:37:27.586922 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0730 07:37:27.586924 19 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0730 07:37:27.586927 19 predicates.go:121] 
  Logging pods the apiserver thinks is on node worker before test
  I0730 07:37:27.589532 19 predicates.go:887] calico-node-6gcmw from kube-system started at 2024-07-30 07:19:13 +0000 UTC (1 container statuses recorded)
  I0730 07:37:27.589545 19 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0730 07:37:27.589549 19 predicates.go:887] pod-release-jlng4 from replication-controller-1565 started at 2024-07-30 07:37:22 +0000 UTC (1 container statuses recorded)
  I0730 07:37:27.589602 19 predicates.go:889] 	Container pod-release ready: true, restart count 0
  I0730 07:37:27.589643 19 predicates.go:887] sonobuoy from sonobuoy started at 2024-07-30 07:20:51 +0000 UTC (1 container statuses recorded)
  I0730 07:37:27.589668 19 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0730 07:37:27.589673 19 predicates.go:887] sonobuoy-e2e-job-5d7978649fbd4f42 from sonobuoy started at 2024-07-30 07:21:03 +0000 UTC (2 container statuses recorded)
  I0730 07:37:27.589676 19 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0730 07:37:27.589702 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0730 07:37:27.589706 19 predicates.go:887] sonobuoy-systemd-logs-daemon-set-d42ae569ae0c45bb-kvn49 from sonobuoy started at 2024-07-30 07:21:03 +0000 UTC (2 container statuses recorded)
  I0730 07:37:27.589735 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0730 07:37:27.589780 19 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 07/30/24 07:37:27.589
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17e6ed81680ed96f], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.] @ 07/30/24 07:37:27.608
  E0730 07:37:28.560561      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:37:28.606746 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1304" for this suite. @ 07/30/24 07:37:28.613
• [1.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 07/30/24 07:37:28.628
  I0730 07:37:28.628074 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename kubelet-test @ 07/30/24 07:37:28.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:37:28.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:37:28.653
  E0730 07:37:29.560852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:30.561275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:37:30.697006 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2469" for this suite. @ 07/30/24 07:37:30.703
• [2.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 07/30/24 07:37:30.722
  I0730 07:37:30.722124 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/30/24 07:37:30.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:37:30.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:37:30.757
  STEP: getting /apis @ 07/30/24 07:37:30.768
  STEP: getting /apis/admissionregistration.k8s.io @ 07/30/24 07:37:30.774
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 07/30/24 07:37:30.775
  STEP: creating @ 07/30/24 07:37:30.776
  STEP: getting @ 07/30/24 07:37:30.788
  STEP: listing @ 07/30/24 07:37:30.791
  STEP: watching @ 07/30/24 07:37:30.793
  I0730 07:37:30.793837 19 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 07/30/24 07:37:30.794
  STEP: updating @ 07/30/24 07:37:30.798
  I0730 07:37:30.804306 19 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 07/30/24 07:37:30.804
  STEP: deleting a collection @ 07/30/24 07:37:30.812
  I0730 07:37:30.829922 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3752" for this suite. @ 07/30/24 07:37:30.837
• [0.128 seconds]
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 07/30/24 07:37:30.85
  I0730 07:37:30.850429 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename podtemplate @ 07/30/24 07:37:30.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:37:30.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:37:30.865
  STEP: Create set of pod templates @ 07/30/24 07:37:30.867
  I0730 07:37:30.875137 19 podtemplates.go:143] created test-podtemplate-1
  I0730 07:37:30.879257 19 podtemplates.go:143] created test-podtemplate-2
  I0730 07:37:30.888038 19 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 07/30/24 07:37:30.888
  STEP: delete collection of pod templates @ 07/30/24 07:37:30.889
  I0730 07:37:30.889923 19 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 07/30/24 07:37:30.9
  I0730 07:37:30.900568 19 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0730 07:37:30.901977 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1253" for this suite. @ 07/30/24 07:37:30.903
• [0.057 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:766
  STEP: Creating a kubernetes client @ 07/30/24 07:37:30.907
  I0730 07:37:30.907800 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename webhook @ 07/30/24 07:37:30.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:37:30.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:37:30.919
  STEP: Setting up server cert @ 07/30/24 07:37:30.936
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/30/24 07:37:31.093
  STEP: Deploying the webhook pod @ 07/30/24 07:37:31.103
  STEP: Wait for the deployment to be ready @ 07/30/24 07:37:31.115
  I0730 07:37:31.121168 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0730 07:37:31.561342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:32.561799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/30/24 07:37:33.136
  STEP: Verifying the service has paired with the endpoint @ 07/30/24 07:37:33.154
  E0730 07:37:33.562581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:37:34.155016 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 07/30/24 07:37:34.164
  STEP: verifying the mutating webhook match conditions @ 07/30/24 07:37:34.178
  STEP: updating the mutating webhook match conditions @ 07/30/24 07:37:34.182
  STEP: verifying the mutating webhook match conditions @ 07/30/24 07:37:34.192
  I0730 07:37:34.254999 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1636" for this suite. @ 07/30/24 07:37:34.258
  STEP: Destroying namespace "webhook-markers-8908" for this suite. @ 07/30/24 07:37:34.271
• [3.371 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 07/30/24 07:37:34.278
  I0730 07:37:34.278921 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/30/24 07:37:34.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:37:34.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:37:34.297
  I0730 07:37:34.299269 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  E0730 07:37:34.563485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/30/24 07:37:35.46
  I0730 07:37:35.460194 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=crd-publish-openapi-4495 --namespace=crd-publish-openapi-4495 create -f -'
  E0730 07:37:35.564554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:36.564753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:37:37.510027 19 builder.go:146] stderr: ""
  I0730 07:37:37.510281 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6006-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0730 07:37:37.510697 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=crd-publish-openapi-4495 --namespace=crd-publish-openapi-4495 delete e2e-test-crd-publish-openapi-6006-crds test-cr'
  E0730 07:37:37.565274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:37:37.575603 19 builder.go:146] stderr: ""
  I0730 07:37:37.575634 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6006-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0730 07:37:37.575664 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=crd-publish-openapi-4495 --namespace=crd-publish-openapi-4495 apply -f -'
  I0730 07:37:37.624372 19 builder.go:146] stderr: ""
  I0730 07:37:37.624690 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6006-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0730 07:37:37.624767 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=crd-publish-openapi-4495 --namespace=crd-publish-openapi-4495 delete e2e-test-crd-publish-openapi-6006-crds test-cr'
  I0730 07:37:37.666068 19 builder.go:146] stderr: ""
  I0730 07:37:37.666098 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6006-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 07/30/24 07:37:37.666
  I0730 07:37:37.666197 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=crd-publish-openapi-4495 explain e2e-test-crd-publish-openapi-6006-crds'
  I0730 07:37:37.718424 19 builder.go:146] stderr: ""
  I0730 07:37:37.718466 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-6006-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0730 07:37:38.566022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:37:38.909964 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4495" for this suite. @ 07/30/24 07:37:38.913
• [4.641 seconds]
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 07/30/24 07:37:38.92
  I0730 07:37:38.920358 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename discovery @ 07/30/24 07:37:38.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:37:38.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:37:38.936
  STEP: Setting up server cert @ 07/30/24 07:37:38.938
  STEP: Requesting APIResourceList from "/api/v1" @ 07/30/24 07:37:39.087
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 07/30/24 07:37:39.089
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 07/30/24 07:37:39.089
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 07/30/24 07:37:39.09
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 07/30/24 07:37:39.09
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 07/30/24 07:37:39.09
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 07/30/24 07:37:39.091
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 07/30/24 07:37:39.091
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 07/30/24 07:37:39.092
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 07/30/24 07:37:39.092
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 07/30/24 07:37:39.092
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 07/30/24 07:37:39.093
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 07/30/24 07:37:39.093
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 07/30/24 07:37:39.093
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 07/30/24 07:37:39.093
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 07/30/24 07:37:39.094
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 07/30/24 07:37:39.094
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 07/30/24 07:37:39.094
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 07/30/24 07:37:39.095
  I0730 07:37:39.095745 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-3044" for this suite. @ 07/30/24 07:37:39.097
• [0.183 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 07/30/24 07:37:39.104
  I0730 07:37:39.104218 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename pv @ 07/30/24 07:37:39.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:37:39.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:37:39.117
  STEP: Creating initial PV and PVC @ 07/30/24 07:37:39.118
  I0730 07:37:39.118234 19 pv.go:390] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-9384" @ 07/30/24 07:37:39.126
  STEP: Listing PVCs in namespace "pv-9384" @ 07/30/24 07:37:39.128
  STEP: Reading "pvc-z8m79" Status @ 07/30/24 07:37:39.129
  STEP: Reading "pv-9384-ptwlk" Status @ 07/30/24 07:37:39.131
  STEP: Patching "pvc-z8m79" Status @ 07/30/24 07:37:39.133
  STEP: Patching "pv-9384-ptwlk" Status @ 07/30/24 07:37:39.136
  STEP: Updating "pvc-z8m79" Status @ 07/30/24 07:37:39.148
  STEP: Updating "pv-9384-ptwlk" Status @ 07/30/24 07:37:39.167
  I0730 07:37:39.172871 19 persistent_volumes.go:407] AfterEach: deleting 1 PVCs and 1 PVs...
  I0730 07:37:39.172887 19 pv.go:201] Deleting PersistentVolumeClaim "pvc-z8m79"
  I0730 07:37:39.176453 19 pv.go:189] Deleting PersistentVolume "pv-9384-ptwlk"
  I0730 07:37:39.180972 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-9384" for this suite. @ 07/30/24 07:37:39.183
• [0.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 07/30/24 07:37:39.188
  I0730 07:37:39.188919 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename projected @ 07/30/24 07:37:39.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:37:39.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:37:39.204
  STEP: Creating a pod to test downward API volume plugin @ 07/30/24 07:37:39.205
  E0730 07:37:39.566155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:40.566585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:41.566745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:42.567309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 07:37:43.223
  I0730 07:37:43.228889 19 output.go:196] Trying to get logs from node jammy pod downwardapi-volume-1c34ad4d-35ee-41e3-98ee-ea339a7fe9ee container client-container: <nil>
  STEP: delete the pod @ 07/30/24 07:37:43.236
  I0730 07:37:43.265515 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1924" for this suite. @ 07/30/24 07:37:43.268
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 07/30/24 07:37:43.274
  I0730 07:37:43.274492 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename projected @ 07/30/24 07:37:43.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:37:43.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:37:43.354
  STEP: Creating configMap with name projected-configmap-test-volume-map-b7c6d255-0958-45cd-ab4b-fb41f70e985e @ 07/30/24 07:37:43.358
  STEP: Creating a pod to test consume configMaps @ 07/30/24 07:37:43.368
  E0730 07:37:43.568388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:44.569179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:45.570319      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:46.570161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 07:37:47.4
  I0730 07:37:47.404451 19 output.go:196] Trying to get logs from node jammy pod pod-projected-configmaps-be7bf5c9-5536-4e34-bfe7-23def8298b41 container agnhost-container: <nil>
  STEP: delete the pod @ 07/30/24 07:37:47.411
  I0730 07:37:47.436065 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2688" for this suite. @ 07/30/24 07:37:47.439
• [4.169 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 07/30/24 07:37:47.443
  I0730 07:37:47.443677 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename subpath @ 07/30/24 07:37:47.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:37:47.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:37:47.456
  STEP: Setting up data @ 07/30/24 07:37:47.458
  STEP: Creating pod pod-subpath-test-configmap-kqf8 @ 07/30/24 07:37:47.466
  STEP: Creating a pod to test atomic-volume-subpath @ 07/30/24 07:37:47.466
  E0730 07:37:47.571069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:48.571259      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:49.571336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:50.571817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:51.572753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:52.573479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:53.573916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:54.574278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:55.574901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:56.575875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:57.576162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:58.576388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:37:59.577291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:00.577537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:01.578719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:02.579243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:03.579905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:04.580401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:05.580668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:06.581257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:07.582486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:08.582704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:09.582830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:10.583245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 07:38:11.554
  I0730 07:38:11.558521 19 output.go:196] Trying to get logs from node jammy pod pod-subpath-test-configmap-kqf8 container test-container-subpath-configmap-kqf8: <nil>
  STEP: delete the pod @ 07/30/24 07:38:11.566
  E0730 07:38:11.583512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pod pod-subpath-test-configmap-kqf8 @ 07/30/24 07:38:11.585
  I0730 07:38:11.585626 19 delete.go:62] Deleting pod "pod-subpath-test-configmap-kqf8" in namespace "subpath-3443"
  I0730 07:38:11.587273 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3443" for this suite. @ 07/30/24 07:38:11.588
• [24.149 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 07/30/24 07:38:11.592
  I0730 07:38:11.592679 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename secrets @ 07/30/24 07:38:11.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:38:11.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:38:11.605
  STEP: Creating projection with secret that has name secret-emptykey-test-db6c9a44-1ef8-4ab0-bb2c-3704d67ea28d @ 07/30/24 07:38:11.606
  I0730 07:38:11.606756 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-12" for this suite. @ 07/30/24 07:38:11.608
• [0.019 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 07/30/24 07:38:11.612
  I0730 07:38:11.612111 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename emptydir @ 07/30/24 07:38:11.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:38:11.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:38:11.626
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 07/30/24 07:38:11.627
  E0730 07:38:12.583904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:13.584196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:14.584253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:15.584754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 07:38:15.649
  I0730 07:38:15.653768 19 output.go:196] Trying to get logs from node jammy pod pod-ae21cbcc-6172-421e-ade4-1e694f987235 container test-container: <nil>
  STEP: delete the pod @ 07/30/24 07:38:15.659
  I0730 07:38:15.682418 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1789" for this suite. @ 07/30/24 07:38:15.684
• [4.077 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 07/30/24 07:38:15.689
  I0730 07:38:15.689753 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename tables @ 07/30/24 07:38:15.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:38:15.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:38:15.703
  I0730 07:38:15.705390 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-9459" for this suite. @ 07/30/24 07:38:15.707
• [0.022 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 07/30/24 07:38:15.711
  I0730 07:38:15.711462 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename field-validation @ 07/30/24 07:38:15.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:38:15.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:38:15.726
  STEP: apply creating a deployment @ 07/30/24 07:38:15.727
  I0730 07:38:15.737059 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-645" for this suite. @ 07/30/24 07:38:15.738
• [0.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 07/30/24 07:38:15.742
  I0730 07:38:15.742372 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename secrets @ 07/30/24 07:38:15.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:38:15.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:38:15.753
  STEP: Creating secret with name secret-test-map-a1150e28-0050-49f9-bcf3-264909b90669 @ 07/30/24 07:38:15.754
  STEP: Creating a pod to test consume secrets @ 07/30/24 07:38:15.757
  E0730 07:38:16.584886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:17.585325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:18.585750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:19.585970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 07:38:19.77
  I0730 07:38:19.772062 19 output.go:196] Trying to get logs from node jammy pod pod-secrets-4019a061-a3d7-4b38-b6ce-ac3a3b2ff341 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/30/24 07:38:19.774
  I0730 07:38:19.783951 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9603" for this suite. @ 07/30/24 07:38:19.785
• [4.047 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 07/30/24 07:38:19.789
  I0730 07:38:19.789315 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename csiinlinevolumes @ 07/30/24 07:38:19.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:38:19.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:38:19.813
  STEP: Creating two CSIDrivers @ 07/30/24 07:38:19.818
  STEP: Getting "inline-driver-cb4661ca-c015-480b-b219-45ca59025ee4" & "inline-driver-bf640793-23e0-407b-9332-490000518767" @ 07/30/24 07:38:19.847
  STEP: Patching the CSIDriver "inline-driver-bf640793-23e0-407b-9332-490000518767" @ 07/30/24 07:38:19.856
  STEP: Updating the CSIDriver "inline-driver-bf640793-23e0-407b-9332-490000518767" @ 07/30/24 07:38:19.866
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-8300" @ 07/30/24 07:38:19.875
  STEP: Deleting CSIDriver "inline-driver-cb4661ca-c015-480b-b219-45ca59025ee4" @ 07/30/24 07:38:19.877
  STEP: Confirm deletion of CSIDriver "inline-driver-cb4661ca-c015-480b-b219-45ca59025ee4" @ 07/30/24 07:38:19.882
  STEP: Deleting CSIDriver "inline-driver-bf640793-23e0-407b-9332-490000518767" via DeleteCollection @ 07/30/24 07:38:19.885
  STEP: Confirm deletion of CSIDriver "inline-driver-bf640793-23e0-407b-9332-490000518767" @ 07/30/24 07:38:19.89
  I0730 07:38:19.893053 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-8300" for this suite. @ 07/30/24 07:38:19.894
• [0.111 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:707
  STEP: Creating a kubernetes client @ 07/30/24 07:38:19.9
  I0730 07:38:19.900776 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename sched-pred @ 07/30/24 07:38:19.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:38:19.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:38:19.917
  I0730 07:38:19.918603 19 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0730 07:38:19.922784 19 util.go:400] Waiting for terminating namespaces to be deleted...
  I0730 07:38:19.926491 19 predicates.go:121] 
  Logging pods the apiserver thinks is on node jammy before test
  I0730 07:38:19.930662 19 predicates.go:887] calico-kube-controllers-796fb75cc-gxp4s from kube-system started at 2024-07-30 07:18:26 +0000 UTC (1 container statuses recorded)
  I0730 07:38:19.930679 19 predicates.go:889] 	Container calico-kube-controllers ready: true, restart count 0
  I0730 07:38:19.930689 19 predicates.go:887] calico-node-m8grj from kube-system started at 2024-07-30 07:18:40 +0000 UTC (1 container statuses recorded)
  I0730 07:38:19.930694 19 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0730 07:38:19.930698 19 predicates.go:887] coredns-5986966c54-jv7lr from kube-system started at 2024-07-30 07:18:26 +0000 UTC (1 container statuses recorded)
  I0730 07:38:19.930702 19 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0730 07:38:19.930706 19 predicates.go:887] sonobuoy-systemd-logs-daemon-set-d42ae569ae0c45bb-bfb6w from sonobuoy started at 2024-07-30 07:21:03 +0000 UTC (2 container statuses recorded)
  I0730 07:38:19.930710 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0730 07:38:19.930714 19 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0730 07:38:19.930719 19 predicates.go:121] 
  Logging pods the apiserver thinks is on node worker before test
  I0730 07:38:19.934226 19 predicates.go:887] calico-node-6gcmw from kube-system started at 2024-07-30 07:19:13 +0000 UTC (1 container statuses recorded)
  I0730 07:38:19.934294 19 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0730 07:38:19.934330 19 predicates.go:887] sonobuoy from sonobuoy started at 2024-07-30 07:20:51 +0000 UTC (1 container statuses recorded)
  I0730 07:38:19.934394 19 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0730 07:38:19.934453 19 predicates.go:887] sonobuoy-e2e-job-5d7978649fbd4f42 from sonobuoy started at 2024-07-30 07:21:03 +0000 UTC (2 container statuses recorded)
  I0730 07:38:19.934509 19 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0730 07:38:19.934559 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0730 07:38:19.934628 19 predicates.go:887] sonobuoy-systemd-logs-daemon-set-d42ae569ae0c45bb-kvn49 from sonobuoy started at 2024-07-30 07:21:03 +0000 UTC (2 container statuses recorded)
  I0730 07:38:19.934680 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0730 07:38:19.934738 19 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/30/24 07:38:19.934
  E0730 07:38:20.586206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:21.586521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/30/24 07:38:21.954
  STEP: Trying to apply a random label on the found node. @ 07/30/24 07:38:21.988
  STEP: verifying the node has the label kubernetes.io/e2e-0f87f5fe-aaec-47aa-b0e8-d461238d8672 95 @ 07/30/24 07:38:21.997
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 07/30/24 07:38:22.012
  E0730 07:38:22.586881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:23.587062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 10.227.69.102 on the node which pod4 resides and expect not scheduled @ 07/30/24 07:38:24.027
  E0730 07:38:24.587474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:25.587815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:26.587833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:27.588069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:28.588357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:29.589363      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:30.589679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:31.590621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:32.591816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:33.591888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:34.592123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:35.593108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:36.593841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:37.594323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:38.594514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:39.594973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:40.595982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:41.596716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:42.597103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:43.597482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:44.597686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:45.598737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:46.599920      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:47.600582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:48.600725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:49.600953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:50.601094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:51.602110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:52.602994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:53.603775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:54.604493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:55.604962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:56.605573      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:57.605839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:58.606780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:38:59.607386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:00.607924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:01.607946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:02.608941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:03.609899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:04.610853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:05.610945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:06.611931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:07.612811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:08.612835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:09.613677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:10.613621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:11.614060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:12.614687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:13.615842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:14.616152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:15.617295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:16.618435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:17.618563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:18.619293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:19.620109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:20.620724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:21.621731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:22.622901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:23.623686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:24.623881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:25.624699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:26.625748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:27.626599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:28.627515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:29.627778      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:30.628650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:31.629768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:32.629964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:33.630781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:34.631896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:35.632620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:36.632804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:37.633098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:38.634083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:39.634971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:40.634803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:41.635701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:42.636846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:43.637637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:44.638352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:45.639220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:46.639232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:47.640042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:48.640947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:49.641540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:50.641583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:51.642819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:52.642919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:53.643271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:54.643895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:55.644614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:56.645686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:57.646026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:58.645935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:39:59.646281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:00.646668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:01.647324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:02.648303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:03.648547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:04.649398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:05.649503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:06.650221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:07.650431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:08.651504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:09.651960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:10.653197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:11.653560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:12.654866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:13.655201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:14.655617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:15.656052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:16.655997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:17.656325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:18.656638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:19.657001      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:20.657317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:21.657285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:22.658443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:23.658658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:24.659661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:25.660011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:26.660510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:27.661170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:28.661845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:29.662469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:30.662469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:31.663006      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:32.664273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:33.664615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:34.664636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:35.665453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:36.665421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:37.665764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:38.665828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:39.667056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:40.668226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:41.669395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:42.670311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:43.671177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:44.672278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:45.672829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:46.673153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:47.673716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:48.674551      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:49.675087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:50.676194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:51.676737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:52.677152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:53.677449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:54.677662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:55.677892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:56.678823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:57.678892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:58.679355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:40:59.679663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:00.680644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:01.681796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:02.682772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:03.682984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:04.683080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:05.684153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:06.684238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:07.684976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:08.686072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:09.686553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:10.686653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:11.687521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:12.688074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:13.688606      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:14.689314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:15.690320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:16.690533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:17.690959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:18.691014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:19.691311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:20.692600      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:21.693391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:22.694128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:23.694534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:24.695655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:25.696595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:26.696895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:27.697704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:28.697650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:29.698105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:30.698972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:31.699296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:32.699823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:33.700491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:34.701271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:35.702361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:36.702441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:37.702718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:38.703117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:39.704094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:40.704389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:41.705287      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:42.705670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:43.705897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:44.706688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:45.706858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:46.707105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:47.707931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:48.708173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:49.709186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:50.709889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:51.709933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:52.710241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:53.711112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:54.711377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:55.711887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:56.712101      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:57.712869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:58.713599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:41:59.713970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:00.714469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:01.715499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:02.715868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:03.716261      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:04.716793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:05.717071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:06.717865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:07.718130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:08.718661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:09.719452      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:10.720031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:11.721147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:12.721679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:13.721747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:14.722379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:15.722849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:16.723361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:17.723675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:18.724048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:19.724553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:20.724819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:21.724871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:22.725182      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:23.725055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:24.725358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:25.725659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:26.726059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:27.726249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:28.727046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:29.727509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:30.727854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:31.728806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:32.729174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:33.729557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:34.730209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:35.731356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:36.731871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:37.732214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:38.732218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:39.733155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:40.733765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:41.734014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:42.734596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:43.735603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:44.735962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:45.736761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:46.737794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:47.738669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:48.738574      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:49.739514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:50.740567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:51.740922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:52.741124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:53.741390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:54.741970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:55.743213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:56.743813      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:57.744043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:58.744471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:42:59.744590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:00.744946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:01.745093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:02.746023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:03.746097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:04.746794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:05.747326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:06.747381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:07.747863      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:08.748544      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:09.749240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:10.749714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:11.750931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:12.751121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:13.751483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:14.751937      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:15.752933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:16.753069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:17.754102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:18.755047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:19.755244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:20.755837      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:21.756040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:22.756078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:23.756263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-0f87f5fe-aaec-47aa-b0e8-d461238d8672 off the node jammy @ 07/30/24 07:43:24.051
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-0f87f5fe-aaec-47aa-b0e8-d461238d8672 @ 07/30/24 07:43:24.071
  I0730 07:43:24.104616 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2599" for this suite. @ 07/30/24 07:43:24.107
• [304.212 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 07/30/24 07:43:24.113
  I0730 07:43:24.113143 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename subpath @ 07/30/24 07:43:24.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:43:24.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:43:24.125
  STEP: Setting up data @ 07/30/24 07:43:24.126
  STEP: Creating pod pod-subpath-test-downwardapi-n8mz @ 07/30/24 07:43:24.133
  STEP: Creating a pod to test atomic-volume-subpath @ 07/30/24 07:43:24.133
  E0730 07:43:24.757168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:25.757341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:26.758433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:27.758897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:28.760304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:29.760614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:30.761088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:31.761665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:32.762044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:33.762567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:34.762672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:35.762984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:36.762916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:37.763356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:38.763449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:39.763883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:40.764131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:41.764367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:42.765462      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:43.766071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:44.766462      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:45.766939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:46.767234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:47.767430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 07:43:48.215
  I0730 07:43:48.220471 19 output.go:196] Trying to get logs from node jammy pod pod-subpath-test-downwardapi-n8mz container test-container-subpath-downwardapi-n8mz: <nil>
  STEP: delete the pod @ 07/30/24 07:43:48.235
  STEP: Deleting pod pod-subpath-test-downwardapi-n8mz @ 07/30/24 07:43:48.258
  I0730 07:43:48.258706 19 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-n8mz" in namespace "subpath-7085"
  I0730 07:43:48.260922 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7085" for this suite. @ 07/30/24 07:43:48.263
• [24.155 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 07/30/24 07:43:48.269
  I0730 07:43:48.269761 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename pod-network-test @ 07/30/24 07:43:48.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:43:48.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:43:48.334
  STEP: Performing setup for networking test in namespace pod-network-test-129 @ 07/30/24 07:43:48.335
  STEP: creating a selector @ 07/30/24 07:43:48.335
  STEP: Creating the service pods in kubernetes @ 07/30/24 07:43:48.335
  I0730 07:43:48.335963 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0730 07:43:48.767499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:49.768019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:50.768812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:51.769543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:52.769767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:53.770338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:54.771097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:55.772187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:56.772475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:57.772975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:58.773738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:43:59.774252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 07/30/24 07:44:00.407
  E0730 07:44:00.775203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:44:01.776001      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:44:02.436134 19 utils.go:779] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0730 07:44:02.436223 19 networking.go:42] Breadth first check of 10.1.163.20 on host 10.227.69.102...
  I0730 07:44:02.441994 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.1.163.18:9080/dial?request=hostname&protocol=http&host=10.1.163.20&port=8083&tries=1'] Namespace:pod-network-test-129 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0730 07:44:02.442055 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  I0730 07:44:02.442948 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0730 07:44:02.443138 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-129/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.1.163.18%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.1.163.20%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0730 07:44:02.472536 19 utils.go:331] Waiting for responses: map[]
  I0730 07:44:02.472565 19 utils.go:335] reached 10.1.163.20 after 0/1 tries
  I0730 07:44:02.472571 19 networking.go:42] Breadth first check of 10.1.171.97 on host 10.227.69.245...
  I0730 07:44:02.474352 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.1.163.18:9080/dial?request=hostname&protocol=http&host=10.1.171.97&port=8083&tries=1'] Namespace:pod-network-test-129 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0730 07:44:02.474375 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  I0730 07:44:02.474827 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0730 07:44:02.474908 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-129/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.1.163.18%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.1.171.97%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0730 07:44:02.494295 19 utils.go:331] Waiting for responses: map[]
  I0730 07:44:02.494327 19 utils.go:335] reached 10.1.171.97 after 0/1 tries
  I0730 07:44:02.494334 19 networking.go:53] Going to retry 0 out of 2 pods....
  I0730 07:44:02.494421 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-129" for this suite. @ 07/30/24 07:44:02.496
• [14.230 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 07/30/24 07:44:02.499
  I0730 07:44:02.499868 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename downward-api @ 07/30/24 07:44:02.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:44:02.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:44:02.513
  STEP: Creating a pod to test downward api env vars @ 07/30/24 07:44:02.514
  E0730 07:44:02.776787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:44:03.777888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:44:04.777979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:44:05.779089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 07:44:06.532
  I0730 07:44:06.537927 19 output.go:196] Trying to get logs from node jammy pod downward-api-39ec45fd-2d72-4057-8d82-184130a3fc9f container dapi-container: <nil>
  STEP: delete the pod @ 07/30/24 07:44:06.546
  I0730 07:44:06.574529 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8155" for this suite. @ 07/30/24 07:44:06.577
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 07/30/24 07:44:06.582
  I0730 07:44:06.582845 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename secrets @ 07/30/24 07:44:06.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:44:06.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:44:06.599
  STEP: Creating secret with name secret-test-fa2410cf-ab38-49ca-a65c-db8e83fef7cc @ 07/30/24 07:44:06.601
  STEP: Creating a pod to test consume secrets @ 07/30/24 07:44:06.606
  E0730 07:44:06.779695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:44:07.779751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:44:08.780589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:44:09.781105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 07:44:10.632
  I0730 07:44:10.636821 19 output.go:196] Trying to get logs from node jammy pod pod-secrets-b64fb8c6-b7c8-413d-93ce-f0aaf1538eea container secret-volume-test: <nil>
  STEP: delete the pod @ 07/30/24 07:44:10.643
  I0730 07:44:10.665627 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7788" for this suite. @ 07/30/24 07:44:10.669
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 07/30/24 07:44:10.676
  I0730 07:44:10.676937 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename webhook @ 07/30/24 07:44:10.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:44:10.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:44:10.696
  STEP: Setting up server cert @ 07/30/24 07:44:10.719
  E0730 07:44:10.781586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/30/24 07:44:10.909
  STEP: Deploying the webhook pod @ 07/30/24 07:44:10.914
  STEP: Wait for the deployment to be ready @ 07/30/24 07:44:10.922
  I0730 07:44:10.925952 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0730 07:44:11.781757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:44:12.781965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/30/24 07:44:12.931
  STEP: Verifying the service has paired with the endpoint @ 07/30/24 07:44:12.94
  E0730 07:44:13.782089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:44:13.942034 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 07/30/24 07:44:13.951
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/30/24 07:44:13.951
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 07/30/24 07:44:13.971
  E0730 07:44:14.782813      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 07/30/24 07:44:14.981
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/30/24 07:44:14.981
  E0730 07:44:15.783431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 07/30/24 07:44:16.021
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/30/24 07:44:16.021
  E0730 07:44:16.783823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:44:17.784138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:44:18.784665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:44:19.785962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:44:20.786586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 07/30/24 07:44:21.064
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/30/24 07:44:21.065
  E0730 07:44:21.787477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:44:22.787876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:44:23.788530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:44:24.789431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:44:25.789993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:44:26.154312 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4504" for this suite. @ 07/30/24 07:44:26.164
  STEP: Destroying namespace "webhook-markers-8372" for this suite. @ 07/30/24 07:44:26.183
• [15.512 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:882
  STEP: Creating a kubernetes client @ 07/30/24 07:44:26.191
  I0730 07:44:26.191324 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename kubectl @ 07/30/24 07:44:26.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:44:26.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:44:26.202
  STEP: validating api versions @ 07/30/24 07:44:26.203
  I0730 07:44:26.203997 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-7062 api-versions'
  I0730 07:44:26.239667 19 builder.go:146] stderr: ""
  I0730 07:44:26.239765 19 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0730 07:44:26.239850 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7062" for this suite. @ 07/30/24 07:44:26.241
• [0.055 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 07/30/24 07:44:26.246
  I0730 07:44:26.246809 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename pods @ 07/30/24 07:44:26.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:44:26.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:44:26.261
  STEP: creating the pod @ 07/30/24 07:44:26.263
  STEP: submitting the pod to kubernetes @ 07/30/24 07:44:26.263
  E0730 07:44:26.790008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:44:27.790365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 07/30/24 07:44:28.29
  STEP: updating the pod @ 07/30/24 07:44:28.294
  E0730 07:44:28.790587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:44:28.817265 19 pod_client.go:141] Successfully updated pod "pod-update-61af16b6-de03-4028-944a-0ef71928c635"
  STEP: verifying the updated pod is in kubernetes @ 07/30/24 07:44:28.823
  I0730 07:44:28.825533 19 pods.go:391] Pod update OK
  I0730 07:44:28.825740 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3513" for this suite. @ 07/30/24 07:44:28.827
• [2.585 seconds]
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 07/30/24 07:44:28.832
  I0730 07:44:28.832166 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename endpointslice @ 07/30/24 07:44:28.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:44:28.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:44:28.845
  E0730 07:44:29.790746      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:44:30.790963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:44:30.902649 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3192" for this suite. @ 07/30/24 07:44:30.904
• [2.077 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 07/30/24 07:44:30.909
  I0730 07:44:30.909081 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename dns @ 07/30/24 07:44:30.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:44:30.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:44:30.928
  STEP: Creating a test headless service @ 07/30/24 07:44:30.931
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8450.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8450.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8450.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8450.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8450.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-8450.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8450.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-8450.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8450.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-8450.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8450.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-8450.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 238.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.238_udp@PTR;check="$$(dig +tcp +noall +answer +search 238.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.238_tcp@PTR;sleep 1; done
   @ 07/30/24 07:44:30.951
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8450.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8450.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8450.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8450.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8450.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8450.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8450.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8450.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8450.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8450.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8450.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8450.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 238.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.238_udp@PTR;check="$$(dig +tcp +noall +answer +search 238.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.238_tcp@PTR;sleep 1; done
   @ 07/30/24 07:44:30.951
  STEP: creating a pod to probe DNS @ 07/30/24 07:44:30.951
  STEP: submitting the pod to kubernetes @ 07/30/24 07:44:30.951
  E0730 07:44:31.791712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:44:32.791810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/30/24 07:44:32.969
  STEP: looking for the results for each expected name from probers @ 07/30/24 07:44:32.973
  I0730 07:44:32.978301 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-8450.svc.cluster.local from pod dns-8450/dns-test-de1a737e-05db-4991-9800-a21c7c958e9d: the server could not find the requested resource (get pods dns-test-de1a737e-05db-4991-9800-a21c7c958e9d)
  I0730 07:44:32.982565 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-8450.svc.cluster.local from pod dns-8450/dns-test-de1a737e-05db-4991-9800-a21c7c958e9d: the server could not find the requested resource (get pods dns-test-de1a737e-05db-4991-9800-a21c7c958e9d)
  I0730 07:44:32.986565 19 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8450.svc.cluster.local from pod dns-8450/dns-test-de1a737e-05db-4991-9800-a21c7c958e9d: the server could not find the requested resource (get pods dns-test-de1a737e-05db-4991-9800-a21c7c958e9d)
  I0730 07:44:32.989726 19 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8450.svc.cluster.local from pod dns-8450/dns-test-de1a737e-05db-4991-9800-a21c7c958e9d: the server could not find the requested resource (get pods dns-test-de1a737e-05db-4991-9800-a21c7c958e9d)
  I0730 07:44:33.002836 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-8450.svc.cluster.local from pod dns-8450/dns-test-de1a737e-05db-4991-9800-a21c7c958e9d: the server could not find the requested resource (get pods dns-test-de1a737e-05db-4991-9800-a21c7c958e9d)
  I0730 07:44:33.004983 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-8450.svc.cluster.local from pod dns-8450/dns-test-de1a737e-05db-4991-9800-a21c7c958e9d: the server could not find the requested resource (get pods dns-test-de1a737e-05db-4991-9800-a21c7c958e9d)
  I0730 07:44:33.006898 19 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8450.svc.cluster.local from pod dns-8450/dns-test-de1a737e-05db-4991-9800-a21c7c958e9d: the server could not find the requested resource (get pods dns-test-de1a737e-05db-4991-9800-a21c7c958e9d)
  I0730 07:44:33.008699 19 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8450.svc.cluster.local from pod dns-8450/dns-test-de1a737e-05db-4991-9800-a21c7c958e9d: the server could not find the requested resource (get pods dns-test-de1a737e-05db-4991-9800-a21c7c958e9d)
  I0730 07:44:33.013934 19 dns_common.go:489] Lookups using dns-8450/dns-test-de1a737e-05db-4991-9800-a21c7c958e9d failed for: [wheezy_udp@dns-test-service.dns-8450.svc.cluster.local wheezy_tcp@dns-test-service.dns-8450.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-8450.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-8450.svc.cluster.local jessie_udp@dns-test-service.dns-8450.svc.cluster.local jessie_tcp@dns-test-service.dns-8450.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-8450.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-8450.svc.cluster.local]

  I0730 07:44:33.015903 19 dns_common.go:495] Pod client logs for webserver: 
  I0730 07:44:33.017941 19 dns_common.go:495] Pod client logs for querier: 
  I0730 07:44:33.019671 19 dns_common.go:495] Pod client logs for jessie-querier: 
  E0730 07:44:33.792970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:44:34.793380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:44:35.793460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:44:36.793873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:44:37.794323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:44:38.075490 19 dns_common.go:527] DNS probes using dns-8450/dns-test-de1a737e-05db-4991-9800-a21c7c958e9d succeeded

  STEP: deleting the pod @ 07/30/24 07:44:38.075
  STEP: deleting the test service @ 07/30/24 07:44:38.104
  STEP: deleting the test headless service @ 07/30/24 07:44:38.151
  I0730 07:44:38.159104 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8450" for this suite. @ 07/30/24 07:44:38.16
• [7.256 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3161
  STEP: Creating a kubernetes client @ 07/30/24 07:44:38.165
  I0730 07:44:38.165366 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename services @ 07/30/24 07:44:38.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:44:38.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:44:38.174
  STEP: creating an Endpoint @ 07/30/24 07:44:38.176
  STEP: waiting for available Endpoint @ 07/30/24 07:44:38.179
  STEP: listing all Endpoints @ 07/30/24 07:44:38.18
  STEP: updating the Endpoint @ 07/30/24 07:44:38.181
  STEP: fetching the Endpoint @ 07/30/24 07:44:38.184
  STEP: patching the Endpoint @ 07/30/24 07:44:38.191
  STEP: fetching the Endpoint @ 07/30/24 07:44:38.197
  STEP: deleting the Endpoint by Collection @ 07/30/24 07:44:38.198
  STEP: waiting for Endpoint deletion @ 07/30/24 07:44:38.208
  STEP: fetching the Endpoint @ 07/30/24 07:44:38.21
  I0730 07:44:38.211308 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2801" for this suite. @ 07/30/24 07:44:38.212
• [0.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 07/30/24 07:44:38.217
  I0730 07:44:38.217809 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename volumeattachment @ 07/30/24 07:44:38.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:44:38.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:44:38.292
  STEP: Create VolumeAttachment "va-e2e-ndm2n" on node "jammy" @ 07/30/24 07:44:38.299
  STEP: Get VolumeAttachment "va-e2e-ndm2n" on node "jammy" @ 07/30/24 07:44:38.306
  STEP: Patch VolumeAttachment "va-e2e-ndm2n" on node "jammy" @ 07/30/24 07:44:38.308
  STEP: List VolumeAttachments with "va-e2e-ndm2n=patched" label @ 07/30/24 07:44:38.314
  STEP: Delete VolumeAttachment "va-e2e-ndm2n" on node "jammy" @ 07/30/24 07:44:38.317
  STEP: Confirm deletion of VolumeAttachment "va-e2e-ndm2n" on node "jammy" @ 07/30/24 07:44:38.322
  STEP: Create VolumeAttachment "va-e2e-mfhrl" on node "jammy" @ 07/30/24 07:44:38.326
  STEP: Update the VolumeAttachment "va-e2e-mfhrl" on node "jammy" with label "va-e2e=updated" @ 07/30/24 07:44:38.33
  STEP: Create VolumeAttachment "va-e2e-76nbn" on node "jammy" @ 07/30/24 07:44:38.338
  STEP: Update the VolumeAttachment "va-e2e-76nbn" on node "jammy" with label "va-e2e=updated" @ 07/30/24 07:44:38.34
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 07/30/24 07:44:38.345
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 07/30/24 07:44:38.352
  I0730 07:44:38.354849 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-8525" for this suite. @ 07/30/24 07:44:38.356
• [0.143 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 07/30/24 07:44:38.361
  I0730 07:44:38.361385 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/30/24 07:44:38.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:44:38.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:44:38.38
  STEP: set up a multi version CRD @ 07/30/24 07:44:38.382
  I0730 07:44:38.382792 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  E0730 07:44:38.794958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:44:39.796144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:44:40.795919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: rename a version @ 07/30/24 07:44:41.406
  STEP: check the new version name is served @ 07/30/24 07:44:41.423
  E0730 07:44:41.797199      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 07/30/24 07:44:42.067
  STEP: check the other version is not changed @ 07/30/24 07:44:42.647
  E0730 07:44:42.797365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:44:43.797373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:44:44.798393      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:44:45.046343 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2372" for this suite. @ 07/30/24 07:44:45.049
• [6.694 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 07/30/24 07:44:45.055
  I0730 07:44:45.055240 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename svc-latency @ 07/30/24 07:44:45.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:44:45.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:44:45.068
  I0730 07:44:45.069034 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-7808 @ 07/30/24 07:44:45.069
  I0730 07:44:45.073703      19 runners.go:198] Created replication controller with name: svc-latency-rc, namespace: svc-latency-7808, replica count: 1
  E0730 07:44:45.799281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:44:46.124897      19 runners.go:198] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0730 07:44:46.245779 19 service_latency.go:356] Created: latency-svc-j54p8
  I0730 07:44:46.256354 19 service_latency.go:363] Got endpoints: latency-svc-j54p8 [30.003937ms]
  I0730 07:44:46.269786 19 service_latency.go:356] Created: latency-svc-b74rr
  I0730 07:44:46.273773 19 service_latency.go:356] Created: latency-svc-78psx
  I0730 07:44:46.275233 19 service_latency.go:363] Got endpoints: latency-svc-b74rr [18.564374ms]
  I0730 07:44:46.280399 19 service_latency.go:363] Got endpoints: latency-svc-78psx [23.925954ms]
  I0730 07:44:46.283298 19 service_latency.go:356] Created: latency-svc-56gsb
  I0730 07:44:46.289522 19 service_latency.go:363] Got endpoints: latency-svc-56gsb [32.695136ms]
  I0730 07:44:46.291777 19 service_latency.go:356] Created: latency-svc-2th7n
  I0730 07:44:46.299845 19 service_latency.go:363] Got endpoints: latency-svc-2th7n [42.976332ms]
  I0730 07:44:46.301384 19 service_latency.go:356] Created: latency-svc-tnfl9
  I0730 07:44:46.307367 19 service_latency.go:363] Got endpoints: latency-svc-tnfl9 [50.462701ms]
  I0730 07:44:46.309740 19 service_latency.go:356] Created: latency-svc-t9cfx
  I0730 07:44:46.321328 19 service_latency.go:363] Got endpoints: latency-svc-t9cfx [64.57005ms]
  I0730 07:44:46.323925 19 service_latency.go:356] Created: latency-svc-hb6rf
  I0730 07:44:46.329419 19 service_latency.go:363] Got endpoints: latency-svc-hb6rf [72.472407ms]
  I0730 07:44:46.333757 19 service_latency.go:356] Created: latency-svc-99bxl
  I0730 07:44:46.341913 19 service_latency.go:363] Got endpoints: latency-svc-99bxl [84.938296ms]
  I0730 07:44:46.343706 19 service_latency.go:356] Created: latency-svc-mvd5p
  I0730 07:44:46.349974 19 service_latency.go:363] Got endpoints: latency-svc-mvd5p [92.946581ms]
  I0730 07:44:46.351605 19 service_latency.go:356] Created: latency-svc-j7dm6
  I0730 07:44:46.357522 19 service_latency.go:356] Created: latency-svc-rjbgp
  I0730 07:44:46.361280 19 service_latency.go:363] Got endpoints: latency-svc-j7dm6 [104.160266ms]
  I0730 07:44:46.365129 19 service_latency.go:363] Got endpoints: latency-svc-rjbgp [107.973492ms]
  I0730 07:44:46.366956 19 service_latency.go:356] Created: latency-svc-slbw6
  I0730 07:44:46.372743 19 service_latency.go:363] Got endpoints: latency-svc-slbw6 [115.55355ms]
  I0730 07:44:46.374537 19 service_latency.go:356] Created: latency-svc-xsgjl
  I0730 07:44:46.380927 19 service_latency.go:356] Created: latency-svc-2gthw
  I0730 07:44:46.383299 19 service_latency.go:363] Got endpoints: latency-svc-xsgjl [126.060168ms]
  I0730 07:44:46.388933 19 service_latency.go:363] Got endpoints: latency-svc-2gthw [131.838776ms]
  I0730 07:44:46.390810 19 service_latency.go:356] Created: latency-svc-npghz
  I0730 07:44:46.396890 19 service_latency.go:363] Got endpoints: latency-svc-npghz [139.835363ms]
  I0730 07:44:46.399377 19 service_latency.go:356] Created: latency-svc-jzx2p
  I0730 07:44:46.405533 19 service_latency.go:356] Created: latency-svc-jhjhs
  I0730 07:44:46.409858 19 service_latency.go:363] Got endpoints: latency-svc-jzx2p [134.414616ms]
  I0730 07:44:46.416360 19 service_latency.go:363] Got endpoints: latency-svc-jhjhs [135.934536ms]
  I0730 07:44:46.421118 19 service_latency.go:356] Created: latency-svc-4dslz
  I0730 07:44:46.430008 19 service_latency.go:363] Got endpoints: latency-svc-4dslz [140.454357ms]
  I0730 07:44:46.432130 19 service_latency.go:356] Created: latency-svc-bs4n6
  I0730 07:44:46.440848 19 service_latency.go:356] Created: latency-svc-bfl8x
  I0730 07:44:46.446272 19 service_latency.go:363] Got endpoints: latency-svc-bs4n6 [146.265965ms]
  I0730 07:44:46.456138 19 service_latency.go:363] Got endpoints: latency-svc-bfl8x [148.744976ms]
  I0730 07:44:46.458215 19 service_latency.go:356] Created: latency-svc-kg2tv
  I0730 07:44:46.466110 19 service_latency.go:363] Got endpoints: latency-svc-kg2tv [144.748686ms]
  I0730 07:44:46.467811 19 service_latency.go:356] Created: latency-svc-xmndn
  I0730 07:44:46.475517 19 service_latency.go:363] Got endpoints: latency-svc-xmndn [146.067211ms]
  I0730 07:44:46.477563 19 service_latency.go:356] Created: latency-svc-p8jj4
  I0730 07:44:46.483597 19 service_latency.go:363] Got endpoints: latency-svc-p8jj4 [141.656407ms]
  I0730 07:44:46.486742 19 service_latency.go:356] Created: latency-svc-58dw7
  I0730 07:44:46.492954 19 service_latency.go:363] Got endpoints: latency-svc-58dw7 [142.956083ms]
  I0730 07:44:46.494885 19 service_latency.go:356] Created: latency-svc-9tcvc
  I0730 07:44:46.501921 19 service_latency.go:363] Got endpoints: latency-svc-9tcvc [140.599481ms]
  I0730 07:44:46.503969 19 service_latency.go:356] Created: latency-svc-dhbps
  I0730 07:44:46.511290 19 service_latency.go:363] Got endpoints: latency-svc-dhbps [146.131449ms]
  I0730 07:44:46.513204 19 service_latency.go:356] Created: latency-svc-wlxg9
  I0730 07:44:46.523315 19 service_latency.go:363] Got endpoints: latency-svc-wlxg9 [150.545232ms]
  I0730 07:44:46.525514 19 service_latency.go:356] Created: latency-svc-gvzdb
  I0730 07:44:46.532028 19 service_latency.go:363] Got endpoints: latency-svc-gvzdb [148.704596ms]
  I0730 07:44:46.535978 19 service_latency.go:356] Created: latency-svc-s7q7s
  I0730 07:44:46.540273 19 service_latency.go:363] Got endpoints: latency-svc-s7q7s [151.311955ms]
  I0730 07:44:46.542323 19 service_latency.go:356] Created: latency-svc-jf5kb
  I0730 07:44:46.546983 19 service_latency.go:356] Created: latency-svc-w6zl9
  I0730 07:44:46.553279 19 service_latency.go:363] Got endpoints: latency-svc-jf5kb [156.365284ms]
  I0730 07:44:46.557055 19 service_latency.go:363] Got endpoints: latency-svc-w6zl9 [147.139469ms]
  I0730 07:44:46.559614 19 service_latency.go:356] Created: latency-svc-6fs2b
  I0730 07:44:46.565259 19 service_latency.go:363] Got endpoints: latency-svc-6fs2b [148.873074ms]
  I0730 07:44:46.566577 19 service_latency.go:356] Created: latency-svc-bn5zj
  I0730 07:44:46.572196 19 service_latency.go:356] Created: latency-svc-sxfbm
  I0730 07:44:46.574870 19 service_latency.go:363] Got endpoints: latency-svc-bn5zj [144.830688ms]
  I0730 07:44:46.580433 19 service_latency.go:363] Got endpoints: latency-svc-sxfbm [134.132559ms]
  I0730 07:44:46.581804 19 service_latency.go:356] Created: latency-svc-9x8q9
  I0730 07:44:46.586593 19 service_latency.go:363] Got endpoints: latency-svc-9x8q9 [130.334289ms]
  I0730 07:44:46.590495 19 service_latency.go:356] Created: latency-svc-kxzbw
  I0730 07:44:46.597576 19 service_latency.go:356] Created: latency-svc-s4764
  I0730 07:44:46.601729 19 service_latency.go:356] Created: latency-svc-xnz7c
  I0730 07:44:46.604712 19 service_latency.go:363] Got endpoints: latency-svc-kxzbw [138.573994ms]
  I0730 07:44:46.608574 19 service_latency.go:356] Created: latency-svc-26b82
  I0730 07:44:46.615132 19 service_latency.go:356] Created: latency-svc-s4ppx
  I0730 07:44:46.620595 19 service_latency.go:356] Created: latency-svc-htvkg
  I0730 07:44:46.626809 19 service_latency.go:356] Created: latency-svc-v84mw
  I0730 07:44:46.632055 19 service_latency.go:356] Created: latency-svc-8ht2w
  I0730 07:44:46.637040 19 service_latency.go:356] Created: latency-svc-dtfbf
  I0730 07:44:46.643723 19 service_latency.go:356] Created: latency-svc-zfdlb
  I0730 07:44:46.648717 19 service_latency.go:356] Created: latency-svc-4rvvq
  I0730 07:44:46.657109 19 service_latency.go:363] Got endpoints: latency-svc-s4764 [181.563246ms]
  I0730 07:44:46.659858 19 service_latency.go:356] Created: latency-svc-mb96d
  I0730 07:44:46.663578 19 service_latency.go:356] Created: latency-svc-kn5gk
  I0730 07:44:46.668355 19 service_latency.go:356] Created: latency-svc-9chqc
  I0730 07:44:46.674143 19 service_latency.go:356] Created: latency-svc-hc28h
  I0730 07:44:46.679603 19 service_latency.go:356] Created: latency-svc-cllm8
  I0730 07:44:46.684597 19 service_latency.go:356] Created: latency-svc-rxsbf
  I0730 07:44:46.705525 19 service_latency.go:363] Got endpoints: latency-svc-xnz7c [221.900813ms]
  I0730 07:44:46.715759 19 service_latency.go:356] Created: latency-svc-fjm7g
  I0730 07:44:46.756130 19 service_latency.go:363] Got endpoints: latency-svc-26b82 [263.135365ms]
  I0730 07:44:46.764172 19 service_latency.go:356] Created: latency-svc-tqw7r
  E0730 07:44:46.799431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:44:46.815698 19 service_latency.go:363] Got endpoints: latency-svc-s4ppx [313.745132ms]
  I0730 07:44:46.828780 19 service_latency.go:356] Created: latency-svc-pgt57
  I0730 07:44:46.864814 19 service_latency.go:363] Got endpoints: latency-svc-htvkg [353.48642ms]
  I0730 07:44:46.875135 19 service_latency.go:356] Created: latency-svc-7v6zh
  I0730 07:44:46.911899 19 service_latency.go:363] Got endpoints: latency-svc-v84mw [388.464538ms]
  I0730 07:44:46.928055 19 service_latency.go:356] Created: latency-svc-wmntx
  I0730 07:44:46.960000 19 service_latency.go:363] Got endpoints: latency-svc-8ht2w [427.936107ms]
  I0730 07:44:46.976068 19 service_latency.go:356] Created: latency-svc-srz8p
  I0730 07:44:47.012968 19 service_latency.go:363] Got endpoints: latency-svc-dtfbf [472.668683ms]
  I0730 07:44:47.023526 19 service_latency.go:356] Created: latency-svc-2wc6w
  I0730 07:44:47.059244 19 service_latency.go:363] Got endpoints: latency-svc-zfdlb [505.928438ms]
  I0730 07:44:47.076114 19 service_latency.go:356] Created: latency-svc-pklt7
  I0730 07:44:47.106763 19 service_latency.go:363] Got endpoints: latency-svc-4rvvq [549.676358ms]
  I0730 07:44:47.118032 19 service_latency.go:356] Created: latency-svc-cx4s4
  I0730 07:44:47.160879 19 service_latency.go:363] Got endpoints: latency-svc-mb96d [595.588873ms]
  I0730 07:44:47.176454 19 service_latency.go:356] Created: latency-svc-cjw7c
  I0730 07:44:47.214524 19 service_latency.go:363] Got endpoints: latency-svc-kn5gk [639.619278ms]
  I0730 07:44:47.230303 19 service_latency.go:356] Created: latency-svc-9xsqf
  I0730 07:44:47.277766 19 service_latency.go:363] Got endpoints: latency-svc-9chqc [697.303559ms]
  I0730 07:44:47.292033 19 service_latency.go:356] Created: latency-svc-cmn82
  I0730 07:44:47.303606 19 service_latency.go:363] Got endpoints: latency-svc-hc28h [716.987683ms]
  I0730 07:44:47.313447 19 service_latency.go:356] Created: latency-svc-t4f27
  I0730 07:44:47.363383 19 service_latency.go:363] Got endpoints: latency-svc-cllm8 [758.643345ms]
  I0730 07:44:47.372841 19 service_latency.go:356] Created: latency-svc-j46v9
  I0730 07:44:47.413551 19 service_latency.go:363] Got endpoints: latency-svc-rxsbf [756.407339ms]
  I0730 07:44:47.427607 19 service_latency.go:356] Created: latency-svc-pwmfp
  I0730 07:44:47.458700 19 service_latency.go:363] Got endpoints: latency-svc-fjm7g [753.128485ms]
  I0730 07:44:47.468971 19 service_latency.go:356] Created: latency-svc-pv8s8
  I0730 07:44:47.508252 19 service_latency.go:363] Got endpoints: latency-svc-tqw7r [752.08955ms]
  I0730 07:44:47.518293 19 service_latency.go:356] Created: latency-svc-4nbkp
  I0730 07:44:47.561237 19 service_latency.go:363] Got endpoints: latency-svc-pgt57 [745.477284ms]
  I0730 07:44:47.581818 19 service_latency.go:356] Created: latency-svc-gmrt2
  I0730 07:44:47.608496 19 service_latency.go:363] Got endpoints: latency-svc-7v6zh [743.62973ms]
  I0730 07:44:47.621598 19 service_latency.go:356] Created: latency-svc-4pgmj
  I0730 07:44:47.662958 19 service_latency.go:363] Got endpoints: latency-svc-wmntx [750.98772ms]
  I0730 07:44:47.677386 19 service_latency.go:356] Created: latency-svc-mzm5w
  I0730 07:44:47.708943 19 service_latency.go:363] Got endpoints: latency-svc-srz8p [748.736903ms]
  I0730 07:44:47.723539 19 service_latency.go:356] Created: latency-svc-xv8rz
  I0730 07:44:47.763781 19 service_latency.go:363] Got endpoints: latency-svc-2wc6w [750.74573ms]
  I0730 07:44:47.779611 19 service_latency.go:356] Created: latency-svc-8fgsv
  E0730 07:44:47.800091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:44:47.808078 19 service_latency.go:363] Got endpoints: latency-svc-pklt7 [748.753065ms]
  I0730 07:44:47.819282 19 service_latency.go:356] Created: latency-svc-cf5f4
  I0730 07:44:47.861396 19 service_latency.go:363] Got endpoints: latency-svc-cx4s4 [754.578802ms]
  I0730 07:44:47.878424 19 service_latency.go:356] Created: latency-svc-cw5v4
  I0730 07:44:47.911934 19 service_latency.go:363] Got endpoints: latency-svc-cjw7c [750.984424ms]
  I0730 07:44:47.930255 19 service_latency.go:356] Created: latency-svc-dthlv
  I0730 07:44:47.960731 19 service_latency.go:363] Got endpoints: latency-svc-9xsqf [746.13155ms]
  I0730 07:44:47.974717 19 service_latency.go:356] Created: latency-svc-njx67
  I0730 07:44:48.012215 19 service_latency.go:363] Got endpoints: latency-svc-cmn82 [734.40995ms]
  I0730 07:44:48.025410 19 service_latency.go:356] Created: latency-svc-tg5r8
  I0730 07:44:48.059997 19 service_latency.go:363] Got endpoints: latency-svc-t4f27 [756.352743ms]
  I0730 07:44:48.076034 19 service_latency.go:356] Created: latency-svc-8w5vw
  I0730 07:44:48.111742 19 service_latency.go:363] Got endpoints: latency-svc-j46v9 [748.310606ms]
  I0730 07:44:48.130765 19 service_latency.go:356] Created: latency-svc-qk729
  I0730 07:44:48.163102 19 service_latency.go:363] Got endpoints: latency-svc-pwmfp [749.331112ms]
  I0730 07:44:48.181730 19 service_latency.go:356] Created: latency-svc-kw9g5
  I0730 07:44:48.210471 19 service_latency.go:363] Got endpoints: latency-svc-pv8s8 [751.717729ms]
  I0730 07:44:48.225278 19 service_latency.go:356] Created: latency-svc-hfkkq
  I0730 07:44:48.261805 19 service_latency.go:363] Got endpoints: latency-svc-4nbkp [753.500555ms]
  I0730 07:44:48.283750 19 service_latency.go:356] Created: latency-svc-487rq
  I0730 07:44:48.309952 19 service_latency.go:363] Got endpoints: latency-svc-gmrt2 [748.650337ms]
  I0730 07:44:48.319616 19 service_latency.go:356] Created: latency-svc-f82sx
  I0730 07:44:48.367144 19 service_latency.go:363] Got endpoints: latency-svc-4pgmj [758.564767ms]
  I0730 07:44:48.385712 19 service_latency.go:356] Created: latency-svc-pk2bg
  I0730 07:44:48.420658 19 service_latency.go:363] Got endpoints: latency-svc-mzm5w [757.172197ms]
  I0730 07:44:48.438417 19 service_latency.go:356] Created: latency-svc-mxx9g
  I0730 07:44:48.456281 19 service_latency.go:363] Got endpoints: latency-svc-xv8rz [747.251545ms]
  I0730 07:44:48.471055 19 service_latency.go:356] Created: latency-svc-xrm7r
  I0730 07:44:48.509574 19 service_latency.go:363] Got endpoints: latency-svc-8fgsv [745.741066ms]
  I0730 07:44:48.525728 19 service_latency.go:356] Created: latency-svc-qthfs
  I0730 07:44:48.568887 19 service_latency.go:363] Got endpoints: latency-svc-cf5f4 [760.764208ms]
  I0730 07:44:48.585862 19 service_latency.go:356] Created: latency-svc-skz8b
  I0730 07:44:48.612312 19 service_latency.go:363] Got endpoints: latency-svc-cw5v4 [750.835804ms]
  I0730 07:44:48.629743 19 service_latency.go:356] Created: latency-svc-6bh2s
  I0730 07:44:48.658763 19 service_latency.go:363] Got endpoints: latency-svc-dthlv [746.743499ms]
  I0730 07:44:48.674757 19 service_latency.go:356] Created: latency-svc-zmgrc
  I0730 07:44:48.712350 19 service_latency.go:363] Got endpoints: latency-svc-njx67 [751.556322ms]
  I0730 07:44:48.725197 19 service_latency.go:356] Created: latency-svc-7f69m
  I0730 07:44:48.763365 19 service_latency.go:363] Got endpoints: latency-svc-tg5r8 [750.733351ms]
  I0730 07:44:48.774861 19 service_latency.go:356] Created: latency-svc-kdhpp
  E0730 07:44:48.800312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:44:48.803666 19 service_latency.go:363] Got endpoints: latency-svc-8w5vw [743.597516ms]
  I0730 07:44:48.811212 19 service_latency.go:356] Created: latency-svc-cggjx
  I0730 07:44:48.860645 19 service_latency.go:363] Got endpoints: latency-svc-qk729 [748.830732ms]
  I0730 07:44:48.877071 19 service_latency.go:356] Created: latency-svc-9zgsm
  I0730 07:44:48.915906 19 service_latency.go:363] Got endpoints: latency-svc-kw9g5 [752.730355ms]
  I0730 07:44:48.934006 19 service_latency.go:356] Created: latency-svc-gcsmf
  I0730 07:44:48.963353 19 service_latency.go:363] Got endpoints: latency-svc-hfkkq [752.807666ms]
  I0730 07:44:48.976912 19 service_latency.go:356] Created: latency-svc-f6pm8
  I0730 07:44:49.008979 19 service_latency.go:363] Got endpoints: latency-svc-487rq [747.1048ms]
  I0730 07:44:49.063945 19 service_latency.go:363] Got endpoints: latency-svc-f82sx [753.939804ms]
  I0730 07:44:49.069982 19 service_latency.go:356] Created: latency-svc-97qrj
  I0730 07:44:49.078938 19 service_latency.go:356] Created: latency-svc-7x4kn
  I0730 07:44:49.113654 19 service_latency.go:363] Got endpoints: latency-svc-pk2bg [746.296292ms]
  I0730 07:44:49.133877 19 service_latency.go:356] Created: latency-svc-rn4s9
  I0730 07:44:49.158663 19 service_latency.go:363] Got endpoints: latency-svc-mxx9g [737.925819ms]
  I0730 07:44:49.169020 19 service_latency.go:356] Created: latency-svc-rpqpt
  I0730 07:44:49.210049 19 service_latency.go:363] Got endpoints: latency-svc-xrm7r [753.700118ms]
  I0730 07:44:49.230551 19 service_latency.go:356] Created: latency-svc-7hfnk
  I0730 07:44:49.266040 19 service_latency.go:363] Got endpoints: latency-svc-qthfs [756.400579ms]
  I0730 07:44:49.276504 19 service_latency.go:356] Created: latency-svc-nntj7
  I0730 07:44:49.311530 19 service_latency.go:363] Got endpoints: latency-svc-skz8b [742.565669ms]
  I0730 07:44:49.329176 19 service_latency.go:356] Created: latency-svc-xr9l9
  I0730 07:44:49.355871 19 service_latency.go:363] Got endpoints: latency-svc-6bh2s [743.501168ms]
  I0730 07:44:49.367270 19 service_latency.go:356] Created: latency-svc-8kdlk
  I0730 07:44:49.412678 19 service_latency.go:363] Got endpoints: latency-svc-zmgrc [753.860246ms]
  I0730 07:44:49.427031 19 service_latency.go:356] Created: latency-svc-xkwv4
  I0730 07:44:49.460828 19 service_latency.go:363] Got endpoints: latency-svc-7f69m [748.410585ms]
  I0730 07:44:49.480087 19 service_latency.go:356] Created: latency-svc-6lbwj
  I0730 07:44:49.513994 19 service_latency.go:363] Got endpoints: latency-svc-kdhpp [750.57771ms]
  I0730 07:44:49.530042 19 service_latency.go:356] Created: latency-svc-kwvg2
  I0730 07:44:49.563641 19 service_latency.go:363] Got endpoints: latency-svc-cggjx [759.942335ms]
  I0730 07:44:49.579929 19 service_latency.go:356] Created: latency-svc-b2xs4
  I0730 07:44:49.608622 19 service_latency.go:363] Got endpoints: latency-svc-9zgsm [747.894782ms]
  I0730 07:44:49.620350 19 service_latency.go:356] Created: latency-svc-n5qst
  I0730 07:44:49.662827 19 service_latency.go:363] Got endpoints: latency-svc-gcsmf [746.835187ms]
  I0730 07:44:49.677525 19 service_latency.go:356] Created: latency-svc-x7gxt
  I0730 07:44:49.713570 19 service_latency.go:363] Got endpoints: latency-svc-f6pm8 [750.158616ms]
  I0730 07:44:49.726352 19 service_latency.go:356] Created: latency-svc-pm6kc
  I0730 07:44:49.762673 19 service_latency.go:363] Got endpoints: latency-svc-97qrj [753.59232ms]
  I0730 07:44:49.778696 19 service_latency.go:356] Created: latency-svc-lwjvk
  E0730 07:44:49.801023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:44:49.811223 19 service_latency.go:363] Got endpoints: latency-svc-7x4kn [747.212136ms]
  I0730 07:44:49.826885 19 service_latency.go:356] Created: latency-svc-dwd76
  I0730 07:44:49.861053 19 service_latency.go:363] Got endpoints: latency-svc-rn4s9 [747.299535ms]
  I0730 07:44:49.875169 19 service_latency.go:356] Created: latency-svc-dtrr9
  I0730 07:44:49.916726 19 service_latency.go:363] Got endpoints: latency-svc-rpqpt [758.009104ms]
  I0730 07:44:49.932593 19 service_latency.go:356] Created: latency-svc-f7q97
  I0730 07:44:49.962163 19 service_latency.go:363] Got endpoints: latency-svc-7hfnk [752.035247ms]
  I0730 07:44:49.976425 19 service_latency.go:356] Created: latency-svc-4w2wd
  I0730 07:44:50.013136 19 service_latency.go:363] Got endpoints: latency-svc-nntj7 [746.44792ms]
  I0730 07:44:50.028967 19 service_latency.go:356] Created: latency-svc-kzjcb
  I0730 07:44:50.055997 19 service_latency.go:363] Got endpoints: latency-svc-xr9l9 [744.020775ms]
  I0730 07:44:50.065570 19 service_latency.go:356] Created: latency-svc-9vvlz
  I0730 07:44:50.103306 19 service_latency.go:363] Got endpoints: latency-svc-8kdlk [747.35385ms]
  I0730 07:44:50.110985 19 service_latency.go:356] Created: latency-svc-z9qvf
  I0730 07:44:50.153378 19 service_latency.go:363] Got endpoints: latency-svc-xkwv4 [740.513187ms]
  I0730 07:44:50.159493 19 service_latency.go:356] Created: latency-svc-bdps5
  I0730 07:44:50.215755 19 service_latency.go:363] Got endpoints: latency-svc-6lbwj [754.810994ms]
  I0730 07:44:50.231020 19 service_latency.go:356] Created: latency-svc-2tfhq
  I0730 07:44:50.265257 19 service_latency.go:363] Got endpoints: latency-svc-kwvg2 [750.875801ms]
  I0730 07:44:50.279824 19 service_latency.go:356] Created: latency-svc-ldsgg
  I0730 07:44:50.310413 19 service_latency.go:363] Got endpoints: latency-svc-b2xs4 [746.525568ms]
  I0730 07:44:50.327819 19 service_latency.go:356] Created: latency-svc-q42vj
  I0730 07:44:50.368784 19 service_latency.go:363] Got endpoints: latency-svc-n5qst [759.958669ms]
  I0730 07:44:50.385172 19 service_latency.go:356] Created: latency-svc-hpp2h
  I0730 07:44:50.414366 19 service_latency.go:363] Got endpoints: latency-svc-x7gxt [751.476884ms]
  I0730 07:44:50.434593 19 service_latency.go:356] Created: latency-svc-gpn46
  I0730 07:44:50.464708 19 service_latency.go:363] Got endpoints: latency-svc-pm6kc [751.065384ms]
  I0730 07:44:50.485954 19 service_latency.go:356] Created: latency-svc-bkpq9
  I0730 07:44:50.514107 19 service_latency.go:363] Got endpoints: latency-svc-lwjvk [751.350922ms]
  I0730 07:44:50.528026 19 service_latency.go:356] Created: latency-svc-wxzbp
  I0730 07:44:50.562176 19 service_latency.go:363] Got endpoints: latency-svc-dwd76 [750.892594ms]
  I0730 07:44:50.582935 19 service_latency.go:356] Created: latency-svc-pw267
  I0730 07:44:50.611239 19 service_latency.go:363] Got endpoints: latency-svc-dtrr9 [750.112502ms]
  I0730 07:44:50.625562 19 service_latency.go:356] Created: latency-svc-wlngh
  I0730 07:44:50.663346 19 service_latency.go:363] Got endpoints: latency-svc-f7q97 [746.013205ms]
  I0730 07:44:50.678802 19 service_latency.go:356] Created: latency-svc-8qtzd
  I0730 07:44:50.712567 19 service_latency.go:363] Got endpoints: latency-svc-4w2wd [750.322077ms]
  I0730 07:44:50.727891 19 service_latency.go:356] Created: latency-svc-nkjxh
  I0730 07:44:50.766876 19 service_latency.go:363] Got endpoints: latency-svc-kzjcb [753.342797ms]
  I0730 07:44:50.775463 19 service_latency.go:356] Created: latency-svc-zbl54
  E0730 07:44:50.801697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:44:50.805653 19 service_latency.go:363] Got endpoints: latency-svc-9vvlz [749.480236ms]
  I0730 07:44:50.818868 19 service_latency.go:356] Created: latency-svc-j77fd
  I0730 07:44:50.857706 19 service_latency.go:363] Got endpoints: latency-svc-z9qvf [754.355156ms]
  I0730 07:44:50.865029 19 service_latency.go:356] Created: latency-svc-4m47t
  I0730 07:44:50.911286 19 service_latency.go:363] Got endpoints: latency-svc-bdps5 [757.842758ms]
  I0730 07:44:50.925000 19 service_latency.go:356] Created: latency-svc-dmkk4
  I0730 07:44:50.967253 19 service_latency.go:363] Got endpoints: latency-svc-2tfhq [751.431767ms]
  I0730 07:44:50.981211 19 service_latency.go:356] Created: latency-svc-8vl5t
  I0730 07:44:51.013262 19 service_latency.go:363] Got endpoints: latency-svc-ldsgg [747.943093ms]
  I0730 07:44:51.034442 19 service_latency.go:356] Created: latency-svc-bf7dw
  I0730 07:44:51.053924 19 service_latency.go:363] Got endpoints: latency-svc-q42vj [743.443973ms]
  I0730 07:44:51.062891 19 service_latency.go:356] Created: latency-svc-lf9xg
  I0730 07:44:51.104807 19 service_latency.go:363] Got endpoints: latency-svc-hpp2h [735.951595ms]
  I0730 07:44:51.113468 19 service_latency.go:356] Created: latency-svc-pgzzt
  I0730 07:44:51.163236 19 service_latency.go:363] Got endpoints: latency-svc-gpn46 [748.794726ms]
  I0730 07:44:51.178000 19 service_latency.go:356] Created: latency-svc-v29rt
  I0730 07:44:51.215757 19 service_latency.go:363] Got endpoints: latency-svc-bkpq9 [750.814425ms]
  I0730 07:44:51.231485 19 service_latency.go:356] Created: latency-svc-rw74d
  I0730 07:44:51.265826 19 service_latency.go:363] Got endpoints: latency-svc-wxzbp [751.629411ms]
  I0730 07:44:51.277645 19 service_latency.go:356] Created: latency-svc-d9jdd
  I0730 07:44:51.312105 19 service_latency.go:363] Got endpoints: latency-svc-pw267 [749.863205ms]
  I0730 07:44:51.325224 19 service_latency.go:356] Created: latency-svc-xv6t8
  I0730 07:44:51.364434 19 service_latency.go:363] Got endpoints: latency-svc-wlngh [752.911118ms]
  I0730 07:44:51.385521 19 service_latency.go:356] Created: latency-svc-hlz7h
  I0730 07:44:51.414249 19 service_latency.go:363] Got endpoints: latency-svc-8qtzd [750.819888ms]
  I0730 07:44:51.430724 19 service_latency.go:356] Created: latency-svc-59trm
  I0730 07:44:51.466483 19 service_latency.go:363] Got endpoints: latency-svc-nkjxh [753.835554ms]
  I0730 07:44:51.478838 19 service_latency.go:356] Created: latency-svc-jz6tq
  I0730 07:44:51.511300 19 service_latency.go:363] Got endpoints: latency-svc-zbl54 [744.377412ms]
  I0730 07:44:51.522269 19 service_latency.go:356] Created: latency-svc-f2btg
  I0730 07:44:51.566493 19 service_latency.go:363] Got endpoints: latency-svc-j77fd [760.808946ms]
  I0730 07:44:51.584617 19 service_latency.go:356] Created: latency-svc-tlhxz
  I0730 07:44:51.614246 19 service_latency.go:363] Got endpoints: latency-svc-4m47t [756.498342ms]
  I0730 07:44:51.625659 19 service_latency.go:356] Created: latency-svc-9pghs
  I0730 07:44:51.661541 19 service_latency.go:363] Got endpoints: latency-svc-dmkk4 [750.191967ms]
  I0730 07:44:51.678523 19 service_latency.go:356] Created: latency-svc-7m6w8
  I0730 07:44:51.711047 19 service_latency.go:363] Got endpoints: latency-svc-8vl5t [743.720386ms]
  I0730 07:44:51.728932 19 service_latency.go:356] Created: latency-svc-29rht
  I0730 07:44:51.765268 19 service_latency.go:363] Got endpoints: latency-svc-bf7dw [751.930026ms]
  I0730 07:44:51.774433 19 service_latency.go:356] Created: latency-svc-lxlm5
  E0730 07:44:51.802713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:44:51.811608 19 service_latency.go:363] Got endpoints: latency-svc-lf9xg [757.647631ms]
  I0730 07:44:51.829576 19 service_latency.go:356] Created: latency-svc-fqpmp
  I0730 07:44:51.860413 19 service_latency.go:363] Got endpoints: latency-svc-pgzzt [755.567041ms]
  I0730 07:44:51.872665 19 service_latency.go:356] Created: latency-svc-klwgt
  I0730 07:44:51.917694 19 service_latency.go:363] Got endpoints: latency-svc-v29rt [754.372922ms]
  I0730 07:44:51.930205 19 service_latency.go:356] Created: latency-svc-xsgpt
  I0730 07:44:51.961642 19 service_latency.go:363] Got endpoints: latency-svc-rw74d [745.830106ms]
  I0730 07:44:51.978859 19 service_latency.go:356] Created: latency-svc-78vzv
  I0730 07:44:52.016109 19 service_latency.go:363] Got endpoints: latency-svc-d9jdd [749.721508ms]
  I0730 07:44:52.032986 19 service_latency.go:356] Created: latency-svc-whrgv
  I0730 07:44:52.068548 19 service_latency.go:363] Got endpoints: latency-svc-xv6t8 [756.380428ms]
  I0730 07:44:52.083766 19 service_latency.go:356] Created: latency-svc-2js2w
  I0730 07:44:52.111701 19 service_latency.go:363] Got endpoints: latency-svc-hlz7h [746.137788ms]
  I0730 07:44:52.121305 19 service_latency.go:356] Created: latency-svc-qxt8b
  I0730 07:44:52.163660 19 service_latency.go:363] Got endpoints: latency-svc-59trm [749.327237ms]
  I0730 07:44:52.180294 19 service_latency.go:356] Created: latency-svc-mg9bb
  I0730 07:44:52.211850 19 service_latency.go:363] Got endpoints: latency-svc-jz6tq [745.054884ms]
  I0730 07:44:52.222862 19 service_latency.go:356] Created: latency-svc-fqkq7
  I0730 07:44:52.258038 19 service_latency.go:363] Got endpoints: latency-svc-f2btg [746.671871ms]
  I0730 07:44:52.269853 19 service_latency.go:356] Created: latency-svc-t9j8z
  I0730 07:44:52.313061 19 service_latency.go:363] Got endpoints: latency-svc-tlhxz [746.253468ms]
  I0730 07:44:52.325452 19 service_latency.go:356] Created: latency-svc-f49j4
  I0730 07:44:52.363525 19 service_latency.go:363] Got endpoints: latency-svc-9pghs [749.21297ms]
  I0730 07:44:52.381428 19 service_latency.go:356] Created: latency-svc-xfwfp
  I0730 07:44:52.411507 19 service_latency.go:363] Got endpoints: latency-svc-7m6w8 [749.876481ms]
  I0730 07:44:52.426803 19 service_latency.go:356] Created: latency-svc-7dtz7
  I0730 07:44:52.460356 19 service_latency.go:363] Got endpoints: latency-svc-29rht [749.231102ms]
  I0730 07:44:52.469789 19 service_latency.go:356] Created: latency-svc-2xh97
  I0730 07:44:52.518666 19 service_latency.go:363] Got endpoints: latency-svc-lxlm5 [753.344839ms]
  I0730 07:44:52.534088 19 service_latency.go:356] Created: latency-svc-jvkvx
  I0730 07:44:52.563806 19 service_latency.go:363] Got endpoints: latency-svc-fqpmp [752.130543ms]
  I0730 07:44:52.573045 19 service_latency.go:356] Created: latency-svc-vztjh
  I0730 07:44:52.611688 19 service_latency.go:363] Got endpoints: latency-svc-klwgt [751.214336ms]
  I0730 07:44:52.630615 19 service_latency.go:356] Created: latency-svc-96q2w
  I0730 07:44:52.660286 19 service_latency.go:363] Got endpoints: latency-svc-xsgpt [742.518046ms]
  I0730 07:44:52.676748 19 service_latency.go:356] Created: latency-svc-4gdfr
  I0730 07:44:52.713546 19 service_latency.go:363] Got endpoints: latency-svc-78vzv [751.832441ms]
  I0730 07:44:52.734973 19 service_latency.go:356] Created: latency-svc-6trsd
  I0730 07:44:52.761222 19 service_latency.go:363] Got endpoints: latency-svc-whrgv [745.02841ms]
  I0730 07:44:52.779274 19 service_latency.go:356] Created: latency-svc-s7l4d
  E0730 07:44:52.803896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:44:52.814792 19 service_latency.go:363] Got endpoints: latency-svc-2js2w [745.954013ms]
  I0730 07:44:52.829728 19 service_latency.go:356] Created: latency-svc-xs4ct
  I0730 07:44:52.856963 19 service_latency.go:363] Got endpoints: latency-svc-qxt8b [745.214483ms]
  I0730 07:44:52.868527 19 service_latency.go:356] Created: latency-svc-6z9st
  I0730 07:44:52.913770 19 service_latency.go:363] Got endpoints: latency-svc-mg9bb [750.034231ms]
  I0730 07:44:52.925536 19 service_latency.go:356] Created: latency-svc-8pp5g
  I0730 07:44:52.967368 19 service_latency.go:363] Got endpoints: latency-svc-fqkq7 [755.420161ms]
  I0730 07:44:52.980085 19 service_latency.go:356] Created: latency-svc-l8j5p
  I0730 07:44:53.010655 19 service_latency.go:363] Got endpoints: latency-svc-t9j8z [752.557983ms]
  I0730 07:44:53.025390 19 service_latency.go:356] Created: latency-svc-ztk7n
  I0730 07:44:53.059191 19 service_latency.go:363] Got endpoints: latency-svc-f49j4 [746.014159ms]
  I0730 07:44:53.071002 19 service_latency.go:356] Created: latency-svc-4vq7b
  I0730 07:44:53.116166 19 service_latency.go:363] Got endpoints: latency-svc-xfwfp [752.549582ms]
  I0730 07:44:53.126866 19 service_latency.go:356] Created: latency-svc-gczwm
  I0730 07:44:53.163818 19 service_latency.go:363] Got endpoints: latency-svc-7dtz7 [751.988128ms]
  I0730 07:44:53.179237 19 service_latency.go:356] Created: latency-svc-zxlsz
  I0730 07:44:53.209184 19 service_latency.go:363] Got endpoints: latency-svc-2xh97 [748.774938ms]
  I0730 07:44:53.225540 19 service_latency.go:356] Created: latency-svc-bjq8x
  I0730 07:44:53.265230 19 service_latency.go:363] Got endpoints: latency-svc-jvkvx [746.418119ms]
  I0730 07:44:53.280207 19 service_latency.go:356] Created: latency-svc-vzdq2
  I0730 07:44:53.309995 19 service_latency.go:363] Got endpoints: latency-svc-vztjh [746.078781ms]
  I0730 07:44:53.324122 19 service_latency.go:356] Created: latency-svc-5pg9f
  I0730 07:44:53.366596 19 service_latency.go:363] Got endpoints: latency-svc-96q2w [754.826173ms]
  I0730 07:44:53.383244 19 service_latency.go:356] Created: latency-svc-j5hvf
  I0730 07:44:53.411203 19 service_latency.go:363] Got endpoints: latency-svc-4gdfr [750.822688ms]
  I0730 07:44:53.423189 19 service_latency.go:356] Created: latency-svc-bz6dg
  I0730 07:44:53.465116 19 service_latency.go:363] Got endpoints: latency-svc-6trsd [751.493538ms]
  I0730 07:44:53.478204 19 service_latency.go:356] Created: latency-svc-6p24l
  I0730 07:44:53.517400 19 service_latency.go:363] Got endpoints: latency-svc-s7l4d [756.076188ms]
  I0730 07:44:53.534767 19 service_latency.go:356] Created: latency-svc-r8t7s
  I0730 07:44:53.563310 19 service_latency.go:363] Got endpoints: latency-svc-xs4ct [748.437894ms]
  I0730 07:44:53.585277 19 service_latency.go:356] Created: latency-svc-mdvxw
  I0730 07:44:53.612649 19 service_latency.go:363] Got endpoints: latency-svc-6z9st [755.641656ms]
  I0730 07:44:53.629132 19 service_latency.go:356] Created: latency-svc-lw9d6
  I0730 07:44:53.661615 19 service_latency.go:363] Got endpoints: latency-svc-8pp5g [747.78803ms]
  I0730 07:44:53.713617 19 service_latency.go:363] Got endpoints: latency-svc-l8j5p [746.165437ms]
  I0730 07:44:53.716616 19 service_latency.go:356] Created: latency-svc-452cx
  I0730 07:44:53.726365 19 service_latency.go:356] Created: latency-svc-2v2wh
  I0730 07:44:53.756219 19 service_latency.go:363] Got endpoints: latency-svc-ztk7n [745.495317ms]
  I0730 07:44:53.768106 19 service_latency.go:356] Created: latency-svc-pxzwt
  E0730 07:44:53.804317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:44:53.816743 19 service_latency.go:363] Got endpoints: latency-svc-4vq7b [757.260333ms]
  I0730 07:44:53.834397 19 service_latency.go:356] Created: latency-svc-whvm9
  I0730 07:44:53.862736 19 service_latency.go:363] Got endpoints: latency-svc-gczwm [746.483041ms]
  I0730 07:44:53.883336 19 service_latency.go:356] Created: latency-svc-xmdpt
  I0730 07:44:53.907698 19 service_latency.go:363] Got endpoints: latency-svc-zxlsz [743.807437ms]
  I0730 07:44:53.919975 19 service_latency.go:356] Created: latency-svc-brp7x
  I0730 07:44:53.968073 19 service_latency.go:363] Got endpoints: latency-svc-bjq8x [758.821871ms]
  I0730 07:44:53.986816 19 service_latency.go:356] Created: latency-svc-jqbrs
  I0730 07:44:54.009912 19 service_latency.go:363] Got endpoints: latency-svc-vzdq2 [744.218803ms]
  I0730 07:44:54.025322 19 service_latency.go:356] Created: latency-svc-9cpqq
  I0730 07:44:54.058681 19 service_latency.go:363] Got endpoints: latency-svc-5pg9f [748.616622ms]
  I0730 07:44:54.068138 19 service_latency.go:356] Created: latency-svc-nj9jh
  I0730 07:44:54.115660 19 service_latency.go:363] Got endpoints: latency-svc-j5hvf [748.990933ms]
  I0730 07:44:54.163835 19 service_latency.go:363] Got endpoints: latency-svc-bz6dg [752.564115ms]
  I0730 07:44:54.214864 19 service_latency.go:363] Got endpoints: latency-svc-6p24l [749.572248ms]
  I0730 07:44:54.268004 19 service_latency.go:363] Got endpoints: latency-svc-r8t7s [750.529554ms]
  I0730 07:44:54.313096 19 service_latency.go:363] Got endpoints: latency-svc-mdvxw [749.703205ms]
  I0730 07:44:54.362331 19 service_latency.go:363] Got endpoints: latency-svc-lw9d6 [749.619295ms]
  I0730 07:44:54.412376 19 service_latency.go:363] Got endpoints: latency-svc-452cx [750.679831ms]
  I0730 07:44:54.464024 19 service_latency.go:363] Got endpoints: latency-svc-2v2wh [750.110134ms]
  I0730 07:44:54.512401 19 service_latency.go:363] Got endpoints: latency-svc-pxzwt [756.120615ms]
  I0730 07:44:54.564906 19 service_latency.go:363] Got endpoints: latency-svc-whvm9 [748.074292ms]
  I0730 07:44:54.611534 19 service_latency.go:363] Got endpoints: latency-svc-xmdpt [748.70304ms]
  I0730 07:44:54.658727 19 service_latency.go:363] Got endpoints: latency-svc-brp7x [750.980832ms]
  I0730 07:44:54.716481 19 service_latency.go:363] Got endpoints: latency-svc-jqbrs [748.336764ms]
  I0730 07:44:54.757141 19 service_latency.go:363] Got endpoints: latency-svc-9cpqq [747.154976ms]
  E0730 07:44:54.805303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:44:54.810439 19 service_latency.go:363] Got endpoints: latency-svc-nj9jh [751.704769ms]
  I0730 07:44:54.810763 19 service_latency.go:114] Latencies: [18.564374ms 23.925954ms 32.695136ms 42.976332ms 50.462701ms 64.57005ms 72.472407ms 84.938296ms 92.946581ms 104.160266ms 107.973492ms 115.55355ms 126.060168ms 130.334289ms 131.838776ms 134.132559ms 134.414616ms 135.934536ms 138.573994ms 139.835363ms 140.454357ms 140.599481ms 141.656407ms 142.956083ms 144.748686ms 144.830688ms 146.067211ms 146.131449ms 146.265965ms 147.139469ms 148.704596ms 148.744976ms 148.873074ms 150.545232ms 151.311955ms 156.365284ms 181.563246ms 221.900813ms 263.135365ms 313.745132ms 353.48642ms 388.464538ms 427.936107ms 472.668683ms 505.928438ms 549.676358ms 595.588873ms 639.619278ms 697.303559ms 716.987683ms 734.40995ms 735.951595ms 737.925819ms 740.513187ms 742.518046ms 742.565669ms 743.443973ms 743.501168ms 743.597516ms 743.62973ms 743.720386ms 743.807437ms 744.020775ms 744.218803ms 744.377412ms 745.02841ms 745.054884ms 745.214483ms 745.477284ms 745.495317ms 745.741066ms 745.830106ms 745.954013ms 746.013205ms 746.014159ms 746.078781ms 746.13155ms 746.137788ms 746.165437ms 746.253468ms 746.296292ms 746.418119ms 746.44792ms 746.483041ms 746.525568ms 746.671871ms 746.743499ms 746.835187ms 747.1048ms 747.154976ms 747.212136ms 747.251545ms 747.299535ms 747.35385ms 747.78803ms 747.894782ms 747.943093ms 748.074292ms 748.310606ms 748.336764ms 748.410585ms 748.437894ms 748.616622ms 748.650337ms 748.70304ms 748.736903ms 748.753065ms 748.774938ms 748.794726ms 748.830732ms 748.990933ms 749.21297ms 749.231102ms 749.327237ms 749.331112ms 749.480236ms 749.572248ms 749.619295ms 749.703205ms 749.721508ms 749.863205ms 749.876481ms 750.034231ms 750.110134ms 750.112502ms 750.158616ms 750.191967ms 750.322077ms 750.529554ms 750.57771ms 750.679831ms 750.733351ms 750.74573ms 750.814425ms 750.819888ms 750.822688ms 750.835804ms 750.875801ms 750.892594ms 750.980832ms 750.984424ms 750.98772ms 751.065384ms 751.214336ms 751.350922ms 751.431767ms 751.476884ms 751.493538ms 751.556322ms 751.629411ms 751.704769ms 751.717729ms 751.832441ms 751.930026ms 751.988128ms 752.035247ms 752.08955ms 752.130543ms 752.549582ms 752.557983ms 752.564115ms 752.730355ms 752.807666ms 752.911118ms 753.128485ms 753.342797ms 753.344839ms 753.500555ms 753.59232ms 753.700118ms 753.835554ms 753.860246ms 753.939804ms 754.355156ms 754.372922ms 754.578802ms 754.810994ms 754.826173ms 755.420161ms 755.567041ms 755.641656ms 756.076188ms 756.120615ms 756.352743ms 756.380428ms 756.400579ms 756.407339ms 756.498342ms 757.172197ms 757.260333ms 757.647631ms 757.842758ms 758.009104ms 758.564767ms 758.643345ms 758.821871ms 759.942335ms 759.958669ms 760.764208ms 760.808946ms]
  I0730 07:44:54.810797 19 service_latency.go:118] 50 %ile: 748.410585ms
  I0730 07:44:54.810833 19 service_latency.go:119] 90 %ile: 755.641656ms
  I0730 07:44:54.810846 19 service_latency.go:120] 99 %ile: 760.764208ms
  I0730 07:44:54.810875 19 service_latency.go:121] Total sample count: 200
  I0730 07:44:54.811070 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-7808" for this suite. @ 07/30/24 07:44:54.818
• [9.774 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 07/30/24 07:44:54.829
  I0730 07:44:54.829556 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename init-container @ 07/30/24 07:44:54.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:44:54.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:44:54.844
  STEP: creating the pod @ 07/30/24 07:44:54.846
  I0730 07:44:54.846448 19 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E0730 07:44:55.806150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:44:56.806885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:44:57.807763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:44:58.808887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:44:59.809012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:00.809262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:01.809473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:02.809784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:03.809982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:04.810215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:05.811183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:06.811634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:07.811830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:08.812753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:09.812864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:10.813623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:11.814266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:12.814461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:13.814715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:14.815311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:15.816123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:16.817014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:17.817531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:18.818008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:19.818240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:20.818991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:21.819223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:22.819657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:23.820122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:24.820565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:25.820693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:26.821650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:27.822189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:28.822410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:29.822665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:30.823043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:31.823305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:32.823703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:33.824459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:34.825181      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:35.825941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:45:36.112804 19 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-9864b8a6-fc15-40e2-8c49-dcd06b64a714", GenerateName:"", Namespace:"init-container-1534", SelfLink:"", UID:"6f108e97-2058-4142-8b48-7ab2848e344d", ResourceVersion:"9943", Generation:0, CreationTimestamp:time.Date(2024, time.July, 30, 7, 44, 54, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"846408235"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"527616b6c6ac57af17e4d7b63c2e1e1aafb8858ae739b511ca17221b8c24633b", "cni.projectcalico.org/podIP":"10.1.171.98/32", "cni.projectcalico.org/podIPs":"10.1.171.98/32"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 30, 7, 44, 54, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004872690), Subresource:""}, v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 30, 7, 44, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004872708), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 30, 7, 45, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004872768), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-4z88q", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc000f05ec0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-4z88q", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-4z88q", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-4z88q", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc004101c70), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"worker", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0001d1f00), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004101cf0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004101d10)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc004101d18), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc004101d1c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc004df74f0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.July, 30, 7, 44, 55, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.July, 30, 7, 44, 54, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.July, 30, 7, 44, 54, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.July, 30, 7, 44, 54, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.July, 30, 7, 44, 54, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"10.227.69.245", HostIPs:[]v1.HostIP{v1.HostIP{IP:"10.227.69.245"}}, PodIP:"10.1.171.98", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.1.171.98"}}, StartTime:time.Date(2024, time.July, 30, 7, 44, 54, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000306d90)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000306e00)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://2b33c52ce2f3274e413f13d53a046f4efa375fbb505f67d999df0e181c9b048e", Started:(*bool)(0xc004101dba), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc000f05f40), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc004101dcf), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc000f05f20), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc004101d9f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0730 07:45:36.113112 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1534" for this suite. @ 07/30/24 07:45:36.116
• [41.295 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 07/30/24 07:45:36.125
  I0730 07:45:36.125203 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename configmap @ 07/30/24 07:45:36.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:45:36.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:45:36.15
  STEP: Creating configMap with name configmap-test-volume-6bcefb76-bf9e-4b18-8eb1-2e5a14686063 @ 07/30/24 07:45:36.152
  STEP: Creating a pod to test consume configMaps @ 07/30/24 07:45:36.157
  E0730 07:45:36.826823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:37.827379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:38.827713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:39.827770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 07:45:40.178
  I0730 07:45:40.183730 19 output.go:196] Trying to get logs from node jammy pod pod-configmaps-8c26d5ff-1ec8-4dc6-a161-d27f82e2b15e container configmap-volume-test: <nil>
  STEP: delete the pod @ 07/30/24 07:45:40.19
  I0730 07:45:40.222798 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5260" for this suite. @ 07/30/24 07:45:40.224
• [4.105 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 07/30/24 07:45:40.23
  I0730 07:45:40.230824 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename resourcequota @ 07/30/24 07:45:40.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:45:40.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:45:40.242
  STEP: Counting existing ResourceQuota @ 07/30/24 07:45:40.244
  E0730 07:45:40.828356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:41.829359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:42.829723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:43.830239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:44.830742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/30/24 07:45:45.257
  STEP: Ensuring resource quota status is calculated @ 07/30/24 07:45:45.264
  E0730 07:45:45.831207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:46.831823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 07/30/24 07:45:47.275
  STEP: Ensuring resource quota status captures replicaset creation @ 07/30/24 07:45:47.294
  E0730 07:45:47.832881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:48.833295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 07/30/24 07:45:49.301
  STEP: Ensuring resource quota status released usage @ 07/30/24 07:45:49.316
  E0730 07:45:49.833415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:50.833942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:45:51.324276 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3424" for this suite. @ 07/30/24 07:45:51.329
• [11.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 07/30/24 07:45:51.341
  I0730 07:45:51.341758 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename emptydir @ 07/30/24 07:45:51.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:45:51.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:45:51.369
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 07/30/24 07:45:51.371
  E0730 07:45:51.834537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:52.835694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 07:45:53.385
  I0730 07:45:53.390842 19 output.go:196] Trying to get logs from node jammy pod pod-e1f90ab7-f7bf-4a2b-9c43-e4ed97642eeb container test-container: <nil>
  STEP: delete the pod @ 07/30/24 07:45:53.398
  I0730 07:45:53.419676 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3676" for this suite. @ 07/30/24 07:45:53.421
• [2.084 seconds]
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 07/30/24 07:45:53.426
  I0730 07:45:53.426255 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename csi-storageclass @ 07/30/24 07:45:53.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:45:53.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:45:53.439
  STEP: Creating a StorageClass @ 07/30/24 07:45:53.44
  STEP: Get StorageClass "e2e-qhj7d" @ 07/30/24 07:45:53.443
  STEP: Patching the StorageClass "e2e-qhj7d" @ 07/30/24 07:45:53.444
  STEP: Delete StorageClass "e2e-qhj7d" @ 07/30/24 07:45:53.448
  STEP: Confirm deletion of StorageClass "e2e-qhj7d" @ 07/30/24 07:45:53.452
  STEP: Create a replacement StorageClass @ 07/30/24 07:45:53.454
  STEP: Updating StorageClass "e2e-v2-5nrrp" @ 07/30/24 07:45:53.456
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-5nrrp=updated" @ 07/30/24 07:45:53.461
  STEP: Deleting StorageClass "e2e-v2-5nrrp" via DeleteCollection @ 07/30/24 07:45:53.462
  STEP: Confirm deletion of StorageClass "e2e-v2-5nrrp" @ 07/30/24 07:45:53.466
  I0730 07:45:53.467748 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-9110" for this suite. @ 07/30/24 07:45:53.469
• [0.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 07/30/24 07:45:53.473
  I0730 07:45:53.473577 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename cronjob @ 07/30/24 07:45:53.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:45:53.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:45:53.487
  STEP: Creating a cronjob @ 07/30/24 07:45:53.488
  STEP: Ensuring more than one job is running at a time @ 07/30/24 07:45:53.492
  E0730 07:45:53.835905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:54.836340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:55.836950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:56.837459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:57.838718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:58.839023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:45:59.839645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:00.839849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:01.840725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:02.841405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:03.842497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:04.843061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:05.844032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:06.844487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:07.844807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:08.845800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:09.846057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:10.847019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:11.847174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:12.847904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:13.848178      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:14.848567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:15.849202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:16.849378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:17.850144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:18.851434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:19.852548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:20.853059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:21.853134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:22.854082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:23.854185      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:24.854586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:25.855188      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:26.855422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:27.855792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:28.856412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:29.857280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:30.858046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:31.858527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:32.858466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:33.859263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:34.860000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:35.860870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:36.861403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:37.862377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:38.862925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:39.863185      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:40.863276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:41.864136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:42.864661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:43.865779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:44.866630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:45.867223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:46.868033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:47.868984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:48.869474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:49.869696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:50.870052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:51.870837      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:52.871325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:53.871529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:54.872504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:55.873092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:56.873743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:57.874462      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:58.875746      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:46:59.875921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:00.876042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 07/30/24 07:47:01.498
  STEP: Removing cronjob @ 07/30/24 07:47:01.503
  I0730 07:47:01.514562 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7854" for this suite. @ 07/30/24 07:47:01.517
• [68.054 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2203
  STEP: Creating a kubernetes client @ 07/30/24 07:47:01.527
  I0730 07:47:01.527683 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename services @ 07/30/24 07:47:01.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:47:01.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:47:01.572
  STEP: creating service in namespace services-6727 @ 07/30/24 07:47:01.574
  STEP: creating service affinity-clusterip-transition in namespace services-6727 @ 07/30/24 07:47:01.574
  STEP: creating replication controller affinity-clusterip-transition in namespace services-6727 @ 07/30/24 07:47:01.582
  I0730 07:47:01.594621      19 runners.go:198] Created replication controller with name: affinity-clusterip-transition, namespace: services-6727, replica count: 3
  E0730 07:47:01.876443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:02.876942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:03.877322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:47:04.645436      19 runners.go:198] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0730 07:47:04.657827 19 resource.go:361] Creating new exec pod
  E0730 07:47:04.878101      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:05.878451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:06.879398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:47:07.689427 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-6727 exec execpod-affinity4px82 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0730 07:47:07.738759 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I0730 07:47:07.738790 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0730 07:47:07.738843 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-6727 exec execpod-affinity4px82 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.172 80'
  I0730 07:47:07.788750 19 builder.go:146] stderr: "+ + echonc hostName -v\n -t -w 2 10.152.183.172 80\nConnection to 10.152.183.172 80 port [tcp/http] succeeded!\n"
  I0730 07:47:07.788778 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0730 07:47:07.794568 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-6727 exec execpod-affinity4px82 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.172:80/ ; done'
  I0730 07:47:07.873169 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.172:80/\n"
  I0730 07:47:07.873203 19 builder.go:147] stdout: "\naffinity-clusterip-transition-lwftx\naffinity-clusterip-transition-khzn6\naffinity-clusterip-transition-lwftx\naffinity-clusterip-transition-khzn6\naffinity-clusterip-transition-hmszj\naffinity-clusterip-transition-hmszj\naffinity-clusterip-transition-khzn6\naffinity-clusterip-transition-lwftx\naffinity-clusterip-transition-khzn6\naffinity-clusterip-transition-khzn6\naffinity-clusterip-transition-hmszj\naffinity-clusterip-transition-lwftx\naffinity-clusterip-transition-hmszj\naffinity-clusterip-transition-hmszj\naffinity-clusterip-transition-hmszj\naffinity-clusterip-transition-lwftx"
  I0730 07:47:07.873210 19 service.go:242] Received response from host: affinity-clusterip-transition-lwftx
  I0730 07:47:07.873215 19 service.go:242] Received response from host: affinity-clusterip-transition-khzn6
  I0730 07:47:07.873218 19 service.go:242] Received response from host: affinity-clusterip-transition-lwftx
  I0730 07:47:07.873222 19 service.go:242] Received response from host: affinity-clusterip-transition-khzn6
  I0730 07:47:07.873228 19 service.go:242] Received response from host: affinity-clusterip-transition-hmszj
  I0730 07:47:07.873233 19 service.go:242] Received response from host: affinity-clusterip-transition-hmszj
  I0730 07:47:07.873238 19 service.go:242] Received response from host: affinity-clusterip-transition-khzn6
  I0730 07:47:07.873242 19 service.go:242] Received response from host: affinity-clusterip-transition-lwftx
  I0730 07:47:07.873246 19 service.go:242] Received response from host: affinity-clusterip-transition-khzn6
  I0730 07:47:07.873251 19 service.go:242] Received response from host: affinity-clusterip-transition-khzn6
  I0730 07:47:07.873255 19 service.go:242] Received response from host: affinity-clusterip-transition-hmszj
  I0730 07:47:07.873261 19 service.go:242] Received response from host: affinity-clusterip-transition-lwftx
  I0730 07:47:07.873265 19 service.go:242] Received response from host: affinity-clusterip-transition-hmszj
  I0730 07:47:07.873270 19 service.go:242] Received response from host: affinity-clusterip-transition-hmszj
  I0730 07:47:07.873274 19 service.go:242] Received response from host: affinity-clusterip-transition-hmszj
  I0730 07:47:07.873278 19 service.go:242] Received response from host: affinity-clusterip-transition-lwftx
  I0730 07:47:07.880175 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-6727 exec execpod-affinity4px82 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.172:80/ ; done'
  E0730 07:47:07.880365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:47:07.966234 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.172:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.172:80/\n"
  I0730 07:47:07.966265 19 builder.go:147] stdout: "\naffinity-clusterip-transition-khzn6\naffinity-clusterip-transition-khzn6\naffinity-clusterip-transition-khzn6\naffinity-clusterip-transition-khzn6\naffinity-clusterip-transition-khzn6\naffinity-clusterip-transition-khzn6\naffinity-clusterip-transition-khzn6\naffinity-clusterip-transition-khzn6\naffinity-clusterip-transition-khzn6\naffinity-clusterip-transition-khzn6\naffinity-clusterip-transition-khzn6\naffinity-clusterip-transition-khzn6\naffinity-clusterip-transition-khzn6\naffinity-clusterip-transition-khzn6\naffinity-clusterip-transition-khzn6\naffinity-clusterip-transition-khzn6"
  I0730 07:47:07.966276 19 service.go:242] Received response from host: affinity-clusterip-transition-khzn6
  I0730 07:47:07.966283 19 service.go:242] Received response from host: affinity-clusterip-transition-khzn6
  I0730 07:47:07.966287 19 service.go:242] Received response from host: affinity-clusterip-transition-khzn6
  I0730 07:47:07.966292 19 service.go:242] Received response from host: affinity-clusterip-transition-khzn6
  I0730 07:47:07.966296 19 service.go:242] Received response from host: affinity-clusterip-transition-khzn6
  I0730 07:47:07.966300 19 service.go:242] Received response from host: affinity-clusterip-transition-khzn6
  I0730 07:47:07.966305 19 service.go:242] Received response from host: affinity-clusterip-transition-khzn6
  I0730 07:47:07.966309 19 service.go:242] Received response from host: affinity-clusterip-transition-khzn6
  I0730 07:47:07.966313 19 service.go:242] Received response from host: affinity-clusterip-transition-khzn6
  I0730 07:47:07.966317 19 service.go:242] Received response from host: affinity-clusterip-transition-khzn6
  I0730 07:47:07.966321 19 service.go:242] Received response from host: affinity-clusterip-transition-khzn6
  I0730 07:47:07.966325 19 service.go:242] Received response from host: affinity-clusterip-transition-khzn6
  I0730 07:47:07.966329 19 service.go:242] Received response from host: affinity-clusterip-transition-khzn6
  I0730 07:47:07.966333 19 service.go:242] Received response from host: affinity-clusterip-transition-khzn6
  I0730 07:47:07.966386 19 service.go:242] Received response from host: affinity-clusterip-transition-khzn6
  I0730 07:47:07.966392 19 service.go:242] Received response from host: affinity-clusterip-transition-khzn6
  I0730 07:47:07.966437 19 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-6727, will wait for the garbage collector to delete the pods @ 07/30/24 07:47:07.982
  I0730 07:47:08.040489 19 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 5.083288ms
  I0730 07:47:08.141663 19 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 101.170813ms
  E0730 07:47:08.880638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:09.881549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:47:10.454825 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6727" for this suite. @ 07/30/24 07:47:10.456
• [8.933 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 07/30/24 07:47:10.46
  I0730 07:47:10.460770 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename statefulset @ 07/30/24 07:47:10.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:47:10.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:47:10.472
  STEP: Creating service test in namespace statefulset-3205 @ 07/30/24 07:47:10.473
  I0730 07:47:10.488295 19 wait.go:40] Found 0 stateful pods, waiting for 1
  E0730 07:47:10.882111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:11.882507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:12.882810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:13.883052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:14.883819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:15.884688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:16.884723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:17.884853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:18.885355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:19.886024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:47:20.492535 19 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 07/30/24 07:47:20.502
  W0730 07:47:20.519618      19 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  I0730 07:47:20.526071 19 wait.go:40] Found 1 stateful pods, waiting for 2
  E0730 07:47:20.886749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:21.887494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:22.888232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:23.888731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:24.889673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:25.890201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:26.890709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:27.890919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:28.891281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:29.891811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:47:30.532206 19 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0730 07:47:30.532254 19 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 07/30/24 07:47:30.54
  STEP: Delete all of the StatefulSets @ 07/30/24 07:47:30.544
  STEP: Verify that StatefulSets have been deleted @ 07/30/24 07:47:30.559
  I0730 07:47:30.567033 19 statefulset.go:135] Deleting all statefulset in ns statefulset-3205
  I0730 07:47:30.581740 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3205" for this suite. @ 07/30/24 07:47:30.583
• [20.145 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:697
  STEP: Creating a kubernetes client @ 07/30/24 07:47:30.611
  I0730 07:47:30.611206 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename job @ 07/30/24 07:47:30.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:47:30.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:47:30.634
  STEP: Creating a job @ 07/30/24 07:47:30.636
  STEP: Ensuring active pods == parallelism @ 07/30/24 07:47:30.643
  E0730 07:47:30.892704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:31.893081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 07/30/24 07:47:32.652
  E0730 07:47:32.894175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:47:33.186759 19 pod_client.go:141] Successfully updated pod "adopt-release-6clt8"
  STEP: Checking that the Job readopts the Pod @ 07/30/24 07:47:33.187
  E0730 07:47:33.894380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:34.894558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 07/30/24 07:47:35.202
  I0730 07:47:35.711535 19 pod_client.go:141] Successfully updated pod "adopt-release-6clt8"
  STEP: Checking that the Job releases the Pod @ 07/30/24 07:47:35.711
  E0730 07:47:35.895346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:36.896453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:47:37.722532 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9809" for this suite. @ 07/30/24 07:47:37.729
• [7.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 07/30/24 07:47:37.738
  I0730 07:47:37.738973 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename taint-multiple-pods @ 07/30/24 07:47:37.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:47:37.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:47:37.759
  I0730 07:47:37.760242 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0730 07:47:37.897246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:38.897901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:39.898535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:40.899118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:41.900015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:42.899859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:43.901014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:44.901399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:45.902064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:46.902569      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:47.903129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:48.903137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:49.903743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:50.904710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:51.905376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:52.905630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:53.906353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:54.906913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:55.907386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:56.908133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:57.908193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:58.908929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:47:59.909250      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:00.910114      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:01.911298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:02.911680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:03.912338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:04.912588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:05.912512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:06.912772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:07.913749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:08.914265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:09.915291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:10.915302      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:11.916435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:12.916721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:13.916754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:14.917364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:15.917498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:16.917679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:17.918557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:18.918768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:19.919898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:20.920293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:21.921458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:22.922082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:23.922762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:24.923253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:25.923625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:26.923773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:27.924706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:28.925284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:29.925319      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:30.925392      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:31.925895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:32.926326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:33.927534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:34.927807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:35.928724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:36.929232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:48:37.760599 19 util.go:400] Waiting for terminating namespaces to be deleted...
  I0730 07:48:37.764474 19 taints.go:150] Starting informer...
  STEP: Starting pods... @ 07/30/24 07:48:37.764
  E0730 07:48:37.929157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:48:37.983934 19 taints.go:469] Pod1 is running on jammy. Tainting Node
  E0730 07:48:38.929414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:39.929864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:48:40.209516 19 taints.go:477] Pod2 is running on jammy. Tainting Node
  STEP: Trying to apply a taint on the Node @ 07/30/24 07:48:40.209
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/30/24 07:48:40.228
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 07/30/24 07:48:40.247
  E0730 07:48:40.930304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:41.930860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:42.931169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:43.931424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:44.931872      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:48:45.784150 19 taints.go:498] Noticed Pod "taint-eviction-b1" gets evicted.
  E0730 07:48:45.932800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:46.933115      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:47.933398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:48.934411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:49.934787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:50.935176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:51.935270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:52.935748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:53.936185      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:54.936528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:55.937246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:56.937540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:57.938289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:58.938395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:48:59.938854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:49:00.939911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:49:01.940341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:49:02.941211      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:49:03.941673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:49:04.942341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:49:05.839462 19 taints.go:498] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/30/24 07:49:05.848
  I0730 07:49:05.849985 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-5987" for this suite. @ 07/30/24 07:49:05.851
• [88.117 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 07/30/24 07:49:05.855
  I0730 07:49:05.855852 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename projected @ 07/30/24 07:49:05.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:49:05.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:49:05.869
  STEP: Creating a pod to test downward API volume plugin @ 07/30/24 07:49:05.871
  E0730 07:49:05.943013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:49:06.943715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:49:07.944288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:49:08.944569      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 07:49:09.888
  I0730 07:49:09.891642 19 output.go:196] Trying to get logs from node jammy pod downwardapi-volume-35ddec8d-f95c-4bf4-b1cc-93fcb0ab00c3 container client-container: <nil>
  STEP: delete the pod @ 07/30/24 07:49:09.898
  I0730 07:49:09.913902 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9473" for this suite. @ 07/30/24 07:49:09.915
• [4.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 07/30/24 07:49:09.921
  I0730 07:49:09.921833 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename projected @ 07/30/24 07:49:09.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:49:09.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:49:09.933
  E0730 07:49:09.944624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating configMap with name projected-configmap-test-volume-cdc1fe8e-b89c-4b4c-a6ab-d72059e90651 @ 07/30/24 07:49:09.99
  STEP: Creating a pod to test consume configMaps @ 07/30/24 07:49:09.998
  E0730 07:49:10.945759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:49:11.946044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 07:49:12.021
  I0730 07:49:12.025526 19 output.go:196] Trying to get logs from node jammy pod pod-projected-configmaps-c7c88f1a-e1e6-4e5f-aee2-adae9d9822f8 container agnhost-container: <nil>
  STEP: delete the pod @ 07/30/24 07:49:12.032
  I0730 07:49:12.045859 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-727" for this suite. @ 07/30/24 07:49:12.047
• [2.129 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 07/30/24 07:49:12.051
  I0730 07:49:12.051659 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename downward-api @ 07/30/24 07:49:12.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:49:12.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:49:12.064
  STEP: Creating a pod to test downward API volume plugin @ 07/30/24 07:49:12.065
  E0730 07:49:12.946448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:49:13.947128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 07:49:14.08
  I0730 07:49:14.085534 19 output.go:196] Trying to get logs from node jammy pod downwardapi-volume-eb3cee0d-5588-47b8-9f51-cb723b9606dc container client-container: <nil>
  STEP: delete the pod @ 07/30/24 07:49:14.092
  I0730 07:49:14.121610 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8654" for this suite. @ 07/30/24 07:49:14.126
• [2.079 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 07/30/24 07:49:14.13
  I0730 07:49:14.130576 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename emptydir @ 07/30/24 07:49:14.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:49:14.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:49:14.148
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 07/30/24 07:49:14.15
  E0730 07:49:14.947427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:49:15.948153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 07:49:16.165
  I0730 07:49:16.169661 19 output.go:196] Trying to get logs from node jammy pod pod-6d299701-2c49-4b27-aba2-70c8f454d991 container test-container: <nil>
  STEP: delete the pod @ 07/30/24 07:49:16.176
  I0730 07:49:16.190367 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-405" for this suite. @ 07/30/24 07:49:16.191
• [2.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 07/30/24 07:49:16.196
  I0730 07:49:16.196687 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename configmap @ 07/30/24 07:49:16.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:49:16.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:49:16.212
  STEP: Creating configMap with name configmap-test-volume-map-3c5cba36-627e-4561-b961-2ef5e0bb0121 @ 07/30/24 07:49:16.213
  STEP: Creating a pod to test consume configMaps @ 07/30/24 07:49:16.217
  E0730 07:49:16.948564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:49:17.949321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 07:49:18.232
  I0730 07:49:18.236492 19 output.go:196] Trying to get logs from node jammy pod pod-configmaps-70c609e0-5142-47d5-9957-27c086b2510e container agnhost-container: <nil>
  STEP: delete the pod @ 07/30/24 07:49:18.243
  I0730 07:49:18.273663 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9587" for this suite. @ 07/30/24 07:49:18.277
• [2.089 seconds]
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 07/30/24 07:49:18.285
  I0730 07:49:18.285868 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename deployment @ 07/30/24 07:49:18.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:49:18.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:49:18.303
  I0730 07:49:18.306435 19 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0730 07:49:18.317239 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0730 07:49:18.950401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:49:19.951304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:49:20.951668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:49:21.951894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:49:22.952307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:49:23.321210 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/30/24 07:49:23.321
  I0730 07:49:23.321282 19 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0730 07:49:23.326452 19 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0730 07:49:23.333696 19 deployment.go:222] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0730 07:49:23.952355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:49:24.952815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:49:25.347645 19 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0730 07:49:25.350939 19 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0730 07:49:25.359278 19 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1160",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bd5f24ce-8fc2-441f-bde4-4c902e0ddd50",
      ResourceVersion: (string) (len=5) "11182",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922563,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6f4b778cd6\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0730 07:49:25.366273 19 deployment.go:39] New ReplicaSet "test-rolling-update-deployment-6f4b778cd6" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6f4b778cd6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1160",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0eed4964-5b52-47ed-a61e-a6735a7a6196",
      ResourceVersion: (string) (len=5) "11172",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922563,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "bd5f24ce-8fc2-441f-bde4-4c902e0ddd50",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 64 35 66 32 34  63 65 2d 38 66 63 32 2d  |\"bd5f24ce-8fc2-|
              00000120  34 34 31 66 2d 62 64 65  34 2d 34 63 39 30 32 65  |441f-bde4-4c902e|
              00000130  30 64 64 64 35 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0ddd50\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0730 07:49:25.366583 19 deployment.go:44] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0730 07:49:25.366689 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1160",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b91334e8-7b91-409f-a7f5-a9304ba67c86",
      ResourceVersion: (string) (len=5) "11181",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922558,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "bd5f24ce-8fc2-441f-bde4-4c902e0ddd50",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922558,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 62 64 35 66 32 34 63  |"uid\":\"bd5f24c|
              000000b0  65 2d 38 66 63 32 2d 34  34 31 66 2d 62 64 65 34  |e-8fc2-441f-bde4|
              000000c0  2d 34 63 39 30 32 65 30  64 64 64 35 30 5c 22 7d  |-4c902e0ddd50\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0730 07:49:25.368865 19 deployment.go:67] Pod "test-rolling-update-deployment-6f4b778cd6-2nzz8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6f4b778cd6-2nzz8",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6f4b778cd6-",
      Namespace: (string) (len=15) "deployment-1160",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d1e43968-c002-41ba-9ba8-463ba648e41d",
      ResourceVersion: (string) (len=5) "11171",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922563,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "069d4a8c4e6e8b80054228ba708eac77cf78fbabef397fe2fef3c86bb443ad43",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.163.43/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.163.43/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6f4b778cd6",
          UID: (types.UID) (len=36) "0eed4964-5b52-47ed-a61e-a6735a7a6196",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 65  65 64 34 39 36 34 2d 35  |d\":\"0eed4964-5|
              00000090  62 35 32 2d 34 37 65 64  2d 61 36 31 65 2d 61 36  |b52-47ed-a61e-a6|
              000000a0  37 33 35 61 37 61 36 31  39 36 5c 22 7d 22 3a 7b  |735a7a6196\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 36 33 2e 34  33 5c 22 7d 22 3a 7b 22  |.1.163.43\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9hf8q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9hf8q",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "jammy",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922563,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.102",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.102"
        }
      },
      PodIP: (string) (len=11) "10.1.163.43",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.163.43"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922563,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857922563,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://287c6395710bfdf46f881bb7272d2e16ff7ac54d6baa29529420a59a1ee9e7c4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 07:49:25.370601 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1160" for this suite. @ 07/30/24 07:49:25.372
• [7.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 07/30/24 07:49:25.377
  I0730 07:49:25.377171 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename csiinlinevolumes @ 07/30/24 07:49:25.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:49:25.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:49:25.388
  STEP: creating @ 07/30/24 07:49:25.389
  STEP: getting @ 07/30/24 07:49:25.398
  STEP: listing in namespace @ 07/30/24 07:49:25.4
  STEP: patching @ 07/30/24 07:49:25.402
  STEP: deleting @ 07/30/24 07:49:25.411
  I0730 07:49:25.417765 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-2290" for this suite. @ 07/30/24 07:49:25.419
• [0.046 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 07/30/24 07:49:25.423
  I0730 07:49:25.423547 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename gc @ 07/30/24 07:49:25.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:49:25.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:49:25.435
  STEP: create the deployment @ 07/30/24 07:49:25.436
  W0730 07:49:25.440141      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 07/30/24 07:49:25.44
  STEP: delete the deployment @ 07/30/24 07:49:25.951
  E0730 07:49:25.953126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for all rs to be garbage collected @ 07/30/24 07:49:25.968
  STEP: expected 0 rs, got 1 rs @ 07/30/24 07:49:25.975
  STEP: expected 0 pods, got 2 pods @ 07/30/24 07:49:25.977
  STEP: Gathering metrics @ 07/30/24 07:49:26.479
  W0730 07:49:26.482825      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0730 07:49:26.482845 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0730 07:49:26.483164 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5121" for this suite. @ 07/30/24 07:49:26.485
• [1.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 07/30/24 07:49:26.49
  I0730 07:49:26.490437 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename daemonsets @ 07/30/24 07:49:26.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:49:26.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:49:26.503
  I0730 07:49:26.512985 19 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/30/24 07:49:26.516
  I0730 07:49:26.521028 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0730 07:49:26.521061 19 fixtures.go:130] Node jammy is running 0 daemon pod, expected 1
  E0730 07:49:26.953397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:49:27.526157 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0730 07:49:27.526200 19 fixtures.go:130] Node jammy is running 0 daemon pod, expected 1
  E0730 07:49:27.953656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:49:28.531308 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0730 07:49:28.531359 19 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 07/30/24 07:49:28.547
  STEP: Check that daemon pods images are updated. @ 07/30/24 07:49:28.563
  I0730 07:49:28.566589 19 daemon_set.go:1178] Wrong image for pod: daemon-set-7824s. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0730 07:49:28.566627 19 daemon_set.go:1178] Wrong image for pod: daemon-set-cktrf. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0730 07:49:28.954120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:49:29.571655 19 daemon_set.go:1178] Wrong image for pod: daemon-set-cktrf. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0730 07:49:29.954068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:49:30.566462 19 daemon_set.go:1178] Wrong image for pod: daemon-set-cktrf. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0730 07:49:30.566491 19 daemon_set.go:1183] Pod daemon-set-r58ct is not available
  E0730 07:49:30.954661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:49:31.566353 19 daemon_set.go:1183] Pod daemon-set-9zh7z is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 07/30/24 07:49:31.568
  I0730 07:49:31.571656 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0730 07:49:31.571681 19 fixtures.go:130] Node worker is running 0 daemon pod, expected 1
  E0730 07:49:31.955373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:49:32.581844 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0730 07:49:32.581901 19 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/30/24 07:49:32.6
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7451, will wait for the garbage collector to delete the pods @ 07/30/24 07:49:32.6
  I0730 07:49:32.668014 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 14.188419ms
  I0730 07:49:32.768263 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.232034ms
  E0730 07:49:32.956085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:49:33.956638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:49:34.957090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:49:34.972355 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0730 07:49:34.972387 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0730 07:49:34.974355 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"11419"},"items":null}

  I0730 07:49:34.976311 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"11419"},"items":null}

  I0730 07:49:34.981596 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7451" for this suite. @ 07/30/24 07:49:34.983
• [8.498 seconds]
------------------------------
SS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 07/30/24 07:49:34.988
  I0730 07:49:34.988494 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename kubelet-test @ 07/30/24 07:49:34.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:49:35.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:49:35.004
  E0730 07:49:35.957960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:49:36.958398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:49:37.959102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:49:38.959850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:49:39.022333 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8424" for this suite. @ 07/30/24 07:49:39.026
• [4.049 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 07/30/24 07:49:39.039
  I0730 07:49:39.039522 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename var-expansion @ 07/30/24 07:49:39.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:49:39.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:49:39.067
  STEP: Creating a pod to test substitution in volume subpath @ 07/30/24 07:49:39.07
  E0730 07:49:39.960214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:49:40.961037      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:49:41.961326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:49:42.962004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 07:49:43.091
  I0730 07:49:43.096587 19 output.go:196] Trying to get logs from node jammy pod var-expansion-a06fc07e-4c99-49cc-a9b3-a4b235612228 container dapi-container: <nil>
  STEP: delete the pod @ 07/30/24 07:49:43.104
  I0730 07:49:43.133975 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6649" for this suite. @ 07/30/24 07:49:43.136
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:469
  STEP: Creating a kubernetes client @ 07/30/24 07:49:43.142
  I0730 07:49:43.142281 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename sched-pred @ 07/30/24 07:49:43.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:49:43.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:49:43.158
  I0730 07:49:43.160283 19 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0730 07:49:43.163219 19 util.go:400] Waiting for terminating namespaces to be deleted...
  I0730 07:49:43.164382 19 predicates.go:121] 
  Logging pods the apiserver thinks is on node jammy before test
  I0730 07:49:43.166952 19 predicates.go:887] calico-node-m8grj from kube-system started at 2024-07-30 07:18:40 +0000 UTC (1 container statuses recorded)
  I0730 07:49:43.166965 19 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0730 07:49:43.166994 19 predicates.go:887] bin-false02e1bdf6-cbce-4c63-9349-f365b2120a32 from kubelet-test-8424 started at 2024-07-30 07:49:34 +0000 UTC (1 container statuses recorded)
  I0730 07:49:43.167035 19 predicates.go:889] 	Container bin-false02e1bdf6-cbce-4c63-9349-f365b2120a32 ready: false, restart count 0
  I0730 07:49:43.167071 19 predicates.go:887] sonobuoy-systemd-logs-daemon-set-d42ae569ae0c45bb-bfb6w from sonobuoy started at 2024-07-30 07:21:03 +0000 UTC (2 container statuses recorded)
  I0730 07:49:43.167104 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0730 07:49:43.167127 19 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0730 07:49:43.167185 19 predicates.go:121] 
  Logging pods the apiserver thinks is on node worker before test
  I0730 07:49:43.169962 19 predicates.go:887] calico-kube-controllers-796fb75cc-xn4sj from kube-system started at 2024-07-30 07:48:40 +0000 UTC (1 container statuses recorded)
  I0730 07:49:43.169976 19 predicates.go:889] 	Container calico-kube-controllers ready: true, restart count 0
  I0730 07:49:43.169982 19 predicates.go:887] calico-node-6gcmw from kube-system started at 2024-07-30 07:19:13 +0000 UTC (1 container statuses recorded)
  I0730 07:49:43.170000 19 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0730 07:49:43.170005 19 predicates.go:887] coredns-5986966c54-64tvz from kube-system started at 2024-07-30 07:48:40 +0000 UTC (1 container statuses recorded)
  I0730 07:49:43.170008 19 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0730 07:49:43.170013 19 predicates.go:887] sonobuoy from sonobuoy started at 2024-07-30 07:20:51 +0000 UTC (1 container statuses recorded)
  I0730 07:49:43.170016 19 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0730 07:49:43.170025 19 predicates.go:887] sonobuoy-e2e-job-5d7978649fbd4f42 from sonobuoy started at 2024-07-30 07:21:03 +0000 UTC (2 container statuses recorded)
  I0730 07:49:43.170034 19 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0730 07:49:43.170038 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0730 07:49:43.170042 19 predicates.go:887] sonobuoy-systemd-logs-daemon-set-d42ae569ae0c45bb-kvn49 from sonobuoy started at 2024-07-30 07:21:03 +0000 UTC (2 container statuses recorded)
  I0730 07:49:43.170045 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0730 07:49:43.170049 19 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/30/24 07:49:43.17
  E0730 07:49:43.962201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:49:44.963171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/30/24 07:49:45.188
  STEP: Trying to apply a random label on the found node. @ 07/30/24 07:49:45.216
  STEP: verifying the node has the label kubernetes.io/e2e-6a6c67f8-88b0-42c4-9fea-63cb5875013f 42 @ 07/30/24 07:49:45.224
  STEP: Trying to relaunch the pod, now with labels. @ 07/30/24 07:49:45.228
  E0730 07:49:45.963293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:49:46.963815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-6a6c67f8-88b0-42c4-9fea-63cb5875013f off the node jammy @ 07/30/24 07:49:47.247
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-6a6c67f8-88b0-42c4-9fea-63cb5875013f @ 07/30/24 07:49:47.258
  I0730 07:49:47.262087 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8041" for this suite. @ 07/30/24 07:49:47.279
• [4.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 07/30/24 07:49:47.285
  I0730 07:49:47.285250 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/30/24 07:49:47.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:49:47.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:49:47.298
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 07/30/24 07:49:47.299
  I0730 07:49:47.299901 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  E0730 07:49:47.964224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:49:48.964971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:49:49.966059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:49:50.966436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:49:51.966289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 07/30/24 07:49:52.025
  I0730 07:49:52.026099 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  E0730 07:49:52.966549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:49:53.210986 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  E0730 07:49:53.967890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:49:54.967791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:49:55.968177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:49:56.969053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:49:57.878218 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8569" for this suite. @ 07/30/24 07:49:57.881
• [10.601 seconds]
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 07/30/24 07:49:57.886
  I0730 07:49:57.886848 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename runtimeclass @ 07/30/24 07:49:57.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:49:57.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:49:57.897
  E0730 07:49:57.969336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:49:58.969630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:49:59.929698 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-920" for this suite. @ 07/30/24 07:49:59.934
• [2.059 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 07/30/24 07:49:59.945
  I0730 07:49:59.946005 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename proxy @ 07/30/24 07:49:59.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:49:59.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:49:59.965
  E0730 07:49:59.970248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: starting an echo server on multiple ports @ 07/30/24 07:49:59.973
  STEP: creating replication controller proxy-service-5ckb6 in namespace proxy-9758 @ 07/30/24 07:49:59.973
  I0730 07:49:59.984003      19 runners.go:198] Created replication controller with name: proxy-service-5ckb6, namespace: proxy-9758, replica count: 1
  E0730 07:50:00.971445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:50:01.035164      19 runners.go:198] proxy-service-5ckb6 Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0730 07:50:01.971826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:50:02.035350      19 runners.go:198] proxy-service-5ckb6 Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0730 07:50:02.972438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:50:03.035895      19 runners.go:198] proxy-service-5ckb6 Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0730 07:50:03.043619 19 proxy.go:230] setup took 3.076436752s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 07/30/24 07:50:03.044
  I0730 07:50:03.056517 19 proxy.go:558] (0) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 11.456833ms)
  I0730 07:50:03.058193 19 proxy.go:558] (0) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">test<... (200; 12.378407ms)
  I0730 07:50:03.059063 19 proxy.go:558] (0) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/tlsrewritem... (200; 14.472122ms)
  I0730 07:50:03.059133 19 proxy.go:558] (0) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">... (200; 13.211205ms)
  I0730 07:50:03.059081 19 proxy.go:558] (0) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:460/proxy/: tls baz (200; 12.711614ms)
  I0730 07:50:03.060035 19 proxy.go:558] (0) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 14.096633ms)
  I0730 07:50:03.062166 19 proxy.go:558] (0) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/rewriteme">test</a> (200; 15.864331ms)
  I0730 07:50:03.062641 19 proxy.go:558] (0) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname1/proxy/: foo (200; 16.213689ms)
  I0730 07:50:03.062789 19 proxy.go:558] (0) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 18.434776ms)
  I0730 07:50:03.062872 19 proxy.go:558] (0) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname1/proxy/: tls baz (200; 18.164206ms)
  I0730 07:50:03.063757 19 proxy.go:558] (0) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:462/proxy/: tls qux (200; 17.706386ms)
  I0730 07:50:03.063760 19 proxy.go:558] (0) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 17.238159ms)
  I0730 07:50:03.064872 19 proxy.go:558] (0) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname1/proxy/: foo (200; 18.733681ms)
  I0730 07:50:03.065079 19 proxy.go:558] (0) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname2/proxy/: bar (200; 19.609781ms)
  I0730 07:50:03.065100 19 proxy.go:558] (0) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname2/proxy/: tls qux (200; 20.182564ms)
  I0730 07:50:03.065232 19 proxy.go:558] (0) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname2/proxy/: bar (200; 19.047254ms)
  I0730 07:50:03.068554 19 proxy.go:558] (1) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 3.144825ms)
  I0730 07:50:03.068605 19 proxy.go:558] (1) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:460/proxy/: tls baz (200; 3.330004ms)
  I0730 07:50:03.069491 19 proxy.go:558] (1) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">... (200; 3.935647ms)
  I0730 07:50:03.069507 19 proxy.go:558] (1) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 3.934688ms)
  I0730 07:50:03.069512 19 proxy.go:558] (1) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">test<... (200; 3.980907ms)
  I0730 07:50:03.070585 19 proxy.go:558] (1) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 4.924527ms)
  I0730 07:50:03.070665 19 proxy.go:558] (1) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname1/proxy/: foo (200; 5.201948ms)
  I0730 07:50:03.070701 19 proxy.go:558] (1) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 5.061325ms)
  I0730 07:50:03.071238 19 proxy.go:558] (1) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:462/proxy/: tls qux (200; 5.642315ms)
  I0730 07:50:03.071379 19 proxy.go:558] (1) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname2/proxy/: tls qux (200; 5.994854ms)
  I0730 07:50:03.072181 19 proxy.go:558] (1) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname1/proxy/: tls baz (200; 6.834524ms)
  I0730 07:50:03.072450 19 proxy.go:558] (1) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/rewriteme">test</a> (200; 6.93999ms)
  I0730 07:50:03.072512 19 proxy.go:558] (1) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname1/proxy/: foo (200; 6.889704ms)
  I0730 07:50:03.073093 19 proxy.go:558] (1) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname2/proxy/: bar (200; 7.640348ms)
  I0730 07:50:03.073127 19 proxy.go:558] (1) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname2/proxy/: bar (200; 7.623327ms)
  I0730 07:50:03.073363 19 proxy.go:558] (1) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/tlsrewritem... (200; 7.932338ms)
  I0730 07:50:03.075999 19 proxy.go:558] (2) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/rewriteme">test</a> (200; 2.431158ms)
  I0730 07:50:03.076733 19 proxy.go:558] (2) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 3.285779ms)
  I0730 07:50:03.076799 19 proxy.go:558] (2) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:460/proxy/: tls baz (200; 3.310812ms)
  I0730 07:50:03.076884 19 proxy.go:558] (2) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 3.37046ms)
  I0730 07:50:03.077564 19 proxy.go:558] (2) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">test<... (200; 4.035662ms)
  I0730 07:50:03.077684 19 proxy.go:558] (2) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/tlsrewritem... (200; 4.164191ms)
  I0730 07:50:03.077873 19 proxy.go:558] (2) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:462/proxy/: tls qux (200; 4.272271ms)
  I0730 07:50:03.078112 19 proxy.go:558] (2) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 4.643278ms)
  I0730 07:50:03.078239 19 proxy.go:558] (2) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">... (200; 4.656122ms)
  I0730 07:50:03.079398 19 proxy.go:558] (2) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 5.824023ms)
  I0730 07:50:03.080666 19 proxy.go:558] (2) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname1/proxy/: foo (200; 7.235701ms)
  I0730 07:50:03.080713 19 proxy.go:558] (2) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname2/proxy/: bar (200; 7.167211ms)
  I0730 07:50:03.080749 19 proxy.go:558] (2) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname1/proxy/: tls baz (200; 7.36347ms)
  I0730 07:50:03.081055 19 proxy.go:558] (2) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname2/proxy/: tls qux (200; 7.549793ms)
  I0730 07:50:03.081068 19 proxy.go:558] (2) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname2/proxy/: bar (200; 7.505654ms)
  I0730 07:50:03.081152 19 proxy.go:558] (2) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname1/proxy/: foo (200; 7.65474ms)
  I0730 07:50:03.084313 19 proxy.go:558] (3) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">test<... (200; 2.984978ms)
  I0730 07:50:03.084349 19 proxy.go:558] (3) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 3.123011ms)
  I0730 07:50:03.084315 19 proxy.go:558] (3) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 2.95821ms)
  I0730 07:50:03.085121 19 proxy.go:558] (3) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 3.671814ms)
  I0730 07:50:03.085122 19 proxy.go:558] (3) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">... (200; 3.780012ms)
  I0730 07:50:03.085129 19 proxy.go:558] (3) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/rewriteme">test</a> (200; 3.823186ms)
  I0730 07:50:03.086532 19 proxy.go:558] (3) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:462/proxy/: tls qux (200; 5.156055ms)
  I0730 07:50:03.087020 19 proxy.go:558] (3) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname2/proxy/: bar (200; 5.732892ms)
  I0730 07:50:03.087032 19 proxy.go:558] (3) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 5.523056ms)
  I0730 07:50:03.087154 19 proxy.go:558] (3) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/tlsrewritem... (200; 5.658901ms)
  I0730 07:50:03.087317 19 proxy.go:558] (3) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:460/proxy/: tls baz (200; 5.853353ms)
  I0730 07:50:03.087331 19 proxy.go:558] (3) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname1/proxy/: foo (200; 5.85171ms)
  I0730 07:50:03.087524 19 proxy.go:558] (3) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname1/proxy/: tls baz (200; 5.994388ms)
  I0730 07:50:03.087578 19 proxy.go:558] (3) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname1/proxy/: foo (200; 6.175194ms)
  I0730 07:50:03.087583 19 proxy.go:558] (3) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname2/proxy/: tls qux (200; 6.160597ms)
  I0730 07:50:03.088418 19 proxy.go:558] (3) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname2/proxy/: bar (200; 7.205894ms)
  I0730 07:50:03.090001 19 proxy.go:558] (4) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:462/proxy/: tls qux (200; 1.506826ms)
  I0730 07:50:03.091578 19 proxy.go:558] (4) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname2/proxy/: bar (200; 3.130979ms)
  I0730 07:50:03.093775 19 proxy.go:558] (4) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname2/proxy/: bar (200; 5.212239ms)
  I0730 07:50:03.093773 19 proxy.go:558] (4) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">... (200; 5.174456ms)
  I0730 07:50:03.093784 19 proxy.go:558] (4) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/rewriteme">test</a> (200; 5.221549ms)
  I0730 07:50:03.093911 19 proxy.go:558] (4) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname1/proxy/: foo (200; 5.389151ms)
  I0730 07:50:03.093917 19 proxy.go:558] (4) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">test<... (200; 5.275708ms)
  I0730 07:50:03.094010 19 proxy.go:558] (4) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 5.365658ms)
  I0730 07:50:03.094043 19 proxy.go:558] (4) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/tlsrewritem... (200; 5.311173ms)
  I0730 07:50:03.094245 19 proxy.go:558] (4) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 5.527392ms)
  I0730 07:50:03.094253 19 proxy.go:558] (4) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:460/proxy/: tls baz (200; 5.582413ms)
  I0730 07:50:03.094259 19 proxy.go:558] (4) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 5.645438ms)
  I0730 07:50:03.095396 19 proxy.go:558] (4) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname1/proxy/: foo (200; 6.766585ms)
  I0730 07:50:03.095428 19 proxy.go:558] (4) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname2/proxy/: tls qux (200; 6.727115ms)
  I0730 07:50:03.095439 19 proxy.go:558] (4) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname1/proxy/: tls baz (200; 6.753988ms)
  I0730 07:50:03.095408 19 proxy.go:558] (4) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 6.75076ms)
  I0730 07:50:03.100877 19 proxy.go:558] (5) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 5.279255ms)
  I0730 07:50:03.100946 19 proxy.go:558] (5) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:460/proxy/: tls baz (200; 5.342358ms)
  I0730 07:50:03.100883 19 proxy.go:558] (5) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 5.215408ms)
  I0730 07:50:03.100893 19 proxy.go:558] (5) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">test<... (200; 5.336144ms)
  I0730 07:50:03.100898 19 proxy.go:558] (5) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">... (200; 5.31008ms)
  I0730 07:50:03.100903 19 proxy.go:558] (5) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:462/proxy/: tls qux (200; 5.431739ms)
  I0730 07:50:03.100940 19 proxy.go:558] (5) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 5.311676ms)
  I0730 07:50:03.100975 19 proxy.go:558] (5) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/rewriteme">test</a> (200; 5.429569ms)
  I0730 07:50:03.101097 19 proxy.go:558] (5) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 5.461518ms)
  I0730 07:50:03.101891 19 proxy.go:558] (5) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname1/proxy/: foo (200; 6.277793ms)
  I0730 07:50:03.102623 19 proxy.go:558] (5) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname1/proxy/: foo (200; 7.100451ms)
  I0730 07:50:03.102633 19 proxy.go:558] (5) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname2/proxy/: bar (200; 7.102167ms)
  I0730 07:50:03.102698 19 proxy.go:558] (5) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname2/proxy/: tls qux (200; 7.050733ms)
  I0730 07:50:03.102703 19 proxy.go:558] (5) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname1/proxy/: tls baz (200; 7.045019ms)
  I0730 07:50:03.103496 19 proxy.go:558] (5) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/tlsrewritem... (200; 8.029299ms)
  I0730 07:50:03.103496 19 proxy.go:558] (5) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname2/proxy/: bar (200; 7.984589ms)
  I0730 07:50:03.107990 19 proxy.go:558] (6) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 4.147533ms)
  I0730 07:50:03.108133 19 proxy.go:558] (6) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 4.192023ms)
  I0730 07:50:03.108199 19 proxy.go:558] (6) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">... (200; 4.427253ms)
  I0730 07:50:03.108217 19 proxy.go:558] (6) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/rewriteme">test</a> (200; 4.491616ms)
  I0730 07:50:03.108236 19 proxy.go:558] (6) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 4.382752ms)
  I0730 07:50:03.108281 19 proxy.go:558] (6) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 4.471627ms)
  I0730 07:50:03.108287 19 proxy.go:558] (6) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:460/proxy/: tls baz (200; 4.409283ms)
  I0730 07:50:03.108291 19 proxy.go:558] (6) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/tlsrewritem... (200; 4.329952ms)
  I0730 07:50:03.108312 19 proxy.go:558] (6) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:462/proxy/: tls qux (200; 4.651146ms)
  I0730 07:50:03.108504 19 proxy.go:558] (6) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">test<... (200; 4.764281ms)
  I0730 07:50:03.110547 19 proxy.go:558] (6) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname1/proxy/: foo (200; 6.720317ms)
  I0730 07:50:03.110548 19 proxy.go:558] (6) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname2/proxy/: tls qux (200; 6.621642ms)
  I0730 07:50:03.110577 19 proxy.go:558] (6) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname2/proxy/: bar (200; 6.877407ms)
  I0730 07:50:03.110676 19 proxy.go:558] (6) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname1/proxy/: foo (200; 6.9906ms)
  I0730 07:50:03.110687 19 proxy.go:558] (6) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname2/proxy/: bar (200; 7.086895ms)
  I0730 07:50:03.110697 19 proxy.go:558] (6) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname1/proxy/: tls baz (200; 6.807047ms)
  I0730 07:50:03.115237 19 proxy.go:558] (7) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/rewriteme">test</a> (200; 4.255632ms)
  I0730 07:50:03.115320 19 proxy.go:558] (7) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">test<... (200; 4.524433ms)
  I0730 07:50:03.115349 19 proxy.go:558] (7) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 4.464565ms)
  I0730 07:50:03.115376 19 proxy.go:558] (7) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 4.30168ms)
  I0730 07:50:03.115382 19 proxy.go:558] (7) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 4.353867ms)
  I0730 07:50:03.115413 19 proxy.go:558] (7) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:460/proxy/: tls baz (200; 4.322988ms)
  I0730 07:50:03.115419 19 proxy.go:558] (7) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/tlsrewritem... (200; 4.509557ms)
  I0730 07:50:03.115446 19 proxy.go:558] (7) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:462/proxy/: tls qux (200; 4.402326ms)
  I0730 07:50:03.115549 19 proxy.go:558] (7) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">... (200; 4.534283ms)
  I0730 07:50:03.117205 19 proxy.go:558] (7) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname2/proxy/: tls qux (200; 6.348508ms)
  I0730 07:50:03.117363 19 proxy.go:558] (7) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname2/proxy/: bar (200; 6.399387ms)
  I0730 07:50:03.117442 19 proxy.go:558] (7) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname1/proxy/: tls baz (200; 6.513303ms)
  I0730 07:50:03.117412 19 proxy.go:558] (7) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 6.351495ms)
  I0730 07:50:03.117580 19 proxy.go:558] (7) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname2/proxy/: bar (200; 6.636217ms)
  I0730 07:50:03.117587 19 proxy.go:558] (7) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname1/proxy/: foo (200; 6.591903ms)
  I0730 07:50:03.117593 19 proxy.go:558] (7) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname1/proxy/: foo (200; 6.48149ms)
  I0730 07:50:03.120765 19 proxy.go:558] (8) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">... (200; 3.066659ms)
  I0730 07:50:03.121163 19 proxy.go:558] (8) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 3.515349ms)
  I0730 07:50:03.121805 19 proxy.go:558] (8) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:460/proxy/: tls baz (200; 4.052266ms)
  I0730 07:50:03.122282 19 proxy.go:558] (8) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:462/proxy/: tls qux (200; 4.636281ms)
  I0730 07:50:03.122428 19 proxy.go:558] (8) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/rewriteme">test</a> (200; 4.684468ms)
  I0730 07:50:03.122983 19 proxy.go:558] (8) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 5.207848ms)
  I0730 07:50:03.123481 19 proxy.go:558] (8) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/tlsrewritem... (200; 5.698183ms)
  I0730 07:50:03.123618 19 proxy.go:558] (8) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname2/proxy/: bar (200; 5.949162ms)
  I0730 07:50:03.124020 19 proxy.go:558] (8) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 6.206066ms)
  I0730 07:50:03.125044 19 proxy.go:558] (8) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname1/proxy/: foo (200; 7.329902ms)
  I0730 07:50:03.125300 19 proxy.go:558] (8) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">test<... (200; 7.61535ms)
  I0730 07:50:03.125932 19 proxy.go:558] (8) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 8.159143ms)
  I0730 07:50:03.126477 19 proxy.go:558] (8) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname2/proxy/: bar (200; 8.743395ms)
  I0730 07:50:03.127054 19 proxy.go:558] (8) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname1/proxy/: foo (200; 9.29336ms)
  I0730 07:50:03.127224 19 proxy.go:558] (8) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname2/proxy/: tls qux (200; 9.420907ms)
  I0730 07:50:03.127785 19 proxy.go:558] (8) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname1/proxy/: tls baz (200; 9.993178ms)
  I0730 07:50:03.131643 19 proxy.go:558] (9) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/tlsrewritem... (200; 3.642099ms)
  I0730 07:50:03.131951 19 proxy.go:558] (9) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/rewriteme">test</a> (200; 3.797512ms)
  I0730 07:50:03.132245 19 proxy.go:558] (9) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 3.961758ms)
  I0730 07:50:03.132974 19 proxy.go:558] (9) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">test<... (200; 4.797555ms)
  I0730 07:50:03.133111 19 proxy.go:558] (9) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:462/proxy/: tls qux (200; 5.026789ms)
  I0730 07:50:03.133359 19 proxy.go:558] (9) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:460/proxy/: tls baz (200; 5.513894ms)
  I0730 07:50:03.133620 19 proxy.go:558] (9) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">... (200; 5.512838ms)
  I0730 07:50:03.133875 19 proxy.go:558] (9) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 5.897995ms)
  I0730 07:50:03.134126 19 proxy.go:558] (9) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname2/proxy/: bar (200; 6.091581ms)
  I0730 07:50:03.135017 19 proxy.go:558] (9) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 6.805199ms)
  I0730 07:50:03.135364 19 proxy.go:558] (9) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname1/proxy/: tls baz (200; 7.449917ms)
  I0730 07:50:03.135516 19 proxy.go:558] (9) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname1/proxy/: foo (200; 7.654478ms)
  I0730 07:50:03.136116 19 proxy.go:558] (9) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 8.056742ms)
  I0730 07:50:03.136227 19 proxy.go:558] (9) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname2/proxy/: tls qux (200; 8.2761ms)
  I0730 07:50:03.136756 19 proxy.go:558] (9) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname2/proxy/: bar (200; 8.626784ms)
  I0730 07:50:03.137025 19 proxy.go:558] (9) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname1/proxy/: foo (200; 8.792831ms)
  I0730 07:50:03.139555 19 proxy.go:558] (10) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/rewriteme">test</a> (200; 2.242226ms)
  I0730 07:50:03.139728 19 proxy.go:558] (10) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">test<... (200; 2.468261ms)
  I0730 07:50:03.139941 19 proxy.go:558] (10) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 2.611244ms)
  I0730 07:50:03.140605 19 proxy.go:558] (10) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:460/proxy/: tls baz (200; 3.433386ms)
  I0730 07:50:03.141260 19 proxy.go:558] (10) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:462/proxy/: tls qux (200; 3.890692ms)
  I0730 07:50:03.141690 19 proxy.go:558] (10) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/tlsrewritem... (200; 4.44334ms)
  I0730 07:50:03.142098 19 proxy.go:558] (10) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">... (200; 4.750024ms)
  I0730 07:50:03.142340 19 proxy.go:558] (10) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 5.188159ms)
  I0730 07:50:03.143040 19 proxy.go:558] (10) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 5.935202ms)
  I0730 07:50:03.143473 19 proxy.go:558] (10) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 6.240954ms)
  I0730 07:50:03.144445 19 proxy.go:558] (10) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname1/proxy/: foo (200; 7.404198ms)
  I0730 07:50:03.145078 19 proxy.go:558] (10) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname2/proxy/: tls qux (200; 7.868611ms)
  I0730 07:50:03.145331 19 proxy.go:558] (10) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname2/proxy/: bar (200; 8.036078ms)
  I0730 07:50:03.146051 19 proxy.go:558] (10) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname1/proxy/: tls baz (200; 8.925191ms)
  I0730 07:50:03.146309 19 proxy.go:558] (10) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname2/proxy/: bar (200; 9.030324ms)
  I0730 07:50:03.146319 19 proxy.go:558] (10) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname1/proxy/: foo (200; 9.126859ms)
  I0730 07:50:03.149075 19 proxy.go:558] (11) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:460/proxy/: tls baz (200; 2.247816ms)
  I0730 07:50:03.150634 19 proxy.go:558] (11) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 3.745686ms)
  I0730 07:50:03.151372 19 proxy.go:558] (11) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">... (200; 4.6676ms)
  I0730 07:50:03.152018 19 proxy.go:558] (11) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/tlsrewritem... (200; 5.110137ms)
  I0730 07:50:03.152182 19 proxy.go:558] (11) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 5.374233ms)
  I0730 07:50:03.152436 19 proxy.go:558] (11) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 5.643783ms)
  I0730 07:50:03.153031 19 proxy.go:558] (11) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname2/proxy/: bar (200; 6.392589ms)
  I0730 07:50:03.153708 19 proxy.go:558] (11) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/rewriteme">test</a> (200; 7.039483ms)
  I0730 07:50:03.153911 19 proxy.go:558] (11) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 7.190958ms)
  I0730 07:50:03.154519 19 proxy.go:558] (11) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname2/proxy/: bar (200; 7.964249ms)
  I0730 07:50:03.155176 19 proxy.go:558] (11) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname1/proxy/: tls baz (200; 8.24399ms)
  I0730 07:50:03.155685 19 proxy.go:558] (11) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname2/proxy/: tls qux (200; 8.813315ms)
  I0730 07:50:03.156974 19 proxy.go:558] (11) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname1/proxy/: foo (200; 10.123744ms)
  I0730 07:50:03.157518 19 proxy.go:558] (11) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">test<... (200; 10.829962ms)
  I0730 07:50:03.157583 19 proxy.go:558] (11) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname1/proxy/: foo (200; 10.816374ms)
  I0730 07:50:03.157596 19 proxy.go:558] (11) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:462/proxy/: tls qux (200; 10.8532ms)
  I0730 07:50:03.159595 19 proxy.go:558] (12) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:462/proxy/: tls qux (200; 1.96213ms)
  I0730 07:50:03.162071 19 proxy.go:558] (12) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">test<... (200; 4.281429ms)
  I0730 07:50:03.162279 19 proxy.go:558] (12) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 4.452936ms)
  I0730 07:50:03.163668 19 proxy.go:558] (12) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:460/proxy/: tls baz (200; 5.820252ms)
  I0730 07:50:03.163839 19 proxy.go:558] (12) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">... (200; 6.030946ms)
  I0730 07:50:03.163900 19 proxy.go:558] (12) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname2/proxy/: bar (200; 6.208063ms)
  I0730 07:50:03.164039 19 proxy.go:558] (12) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 6.127677ms)
  I0730 07:50:03.164116 19 proxy.go:558] (12) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 6.224893ms)
  I0730 07:50:03.165021 19 proxy.go:558] (12) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/rewriteme">test</a> (200; 7.259848ms)
  I0730 07:50:03.166050 19 proxy.go:558] (12) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/tlsrewritem... (200; 8.440559ms)
  I0730 07:50:03.166066 19 proxy.go:558] (12) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname2/proxy/: bar (200; 8.328109ms)
  I0730 07:50:03.166631 19 proxy.go:558] (12) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname2/proxy/: tls qux (200; 8.691625ms)
  I0730 07:50:03.166640 19 proxy.go:558] (12) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 8.658497ms)
  I0730 07:50:03.167104 19 proxy.go:558] (12) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname1/proxy/: foo (200; 9.230957ms)
  I0730 07:50:03.167106 19 proxy.go:558] (12) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname1/proxy/: tls baz (200; 9.146444ms)
  I0730 07:50:03.167345 19 proxy.go:558] (12) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname1/proxy/: foo (200; 9.626523ms)
  I0730 07:50:03.171376 19 proxy.go:558] (13) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 3.796541ms)
  I0730 07:50:03.171377 19 proxy.go:558] (13) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">... (200; 3.89337ms)
  I0730 07:50:03.171385 19 proxy.go:558] (13) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname2/proxy/: bar (200; 3.857185ms)
  I0730 07:50:03.171918 19 proxy.go:558] (13) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 4.426399ms)
  I0730 07:50:03.171961 19 proxy.go:558] (13) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname1/proxy/: foo (200; 4.407103ms)
  I0730 07:50:03.172449 19 proxy.go:558] (13) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/tlsrewritem... (200; 4.84962ms)
  I0730 07:50:03.172853 19 proxy.go:558] (13) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname2/proxy/: bar (200; 5.394444ms)
  I0730 07:50:03.172875 19 proxy.go:558] (13) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 5.337467ms)
  I0730 07:50:03.172980 19 proxy.go:558] (13) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/rewriteme">test</a> (200; 5.55407ms)
  I0730 07:50:03.172989 19 proxy.go:558] (13) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname1/proxy/: foo (200; 5.472261ms)
  I0730 07:50:03.173639 19 proxy.go:558] (13) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname1/proxy/: tls baz (200; 6.041479ms)
  I0730 07:50:03.174274 19 proxy.go:558] (13) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:462/proxy/: tls qux (200; 6.773314ms)
  I0730 07:50:03.174323 19 proxy.go:558] (13) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 6.931543ms)
  I0730 07:50:03.174980 19 proxy.go:558] (13) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:460/proxy/: tls baz (200; 7.433724ms)
  I0730 07:50:03.174990 19 proxy.go:558] (13) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname2/proxy/: tls qux (200; 7.383479ms)
  I0730 07:50:03.175037 19 proxy.go:558] (13) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">test<... (200; 7.562621ms)
  I0730 07:50:03.178521 19 proxy.go:558] (14) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:460/proxy/: tls baz (200; 3.094129ms)
  I0730 07:50:03.179456 19 proxy.go:558] (14) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 4.076721ms)
  I0730 07:50:03.179679 19 proxy.go:558] (14) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname2/proxy/: bar (200; 4.554346ms)
  I0730 07:50:03.180310 19 proxy.go:558] (14) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/tlsrewritem... (200; 5.247693ms)
  I0730 07:50:03.180678 19 proxy.go:558] (14) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:462/proxy/: tls qux (200; 5.350675ms)
  I0730 07:50:03.180980 19 proxy.go:558] (14) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname2/proxy/: tls qux (200; 5.496ms)
  I0730 07:50:03.181522 19 proxy.go:558] (14) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">test<... (200; 6.27106ms)
  I0730 07:50:03.181732 19 proxy.go:558] (14) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">... (200; 6.459615ms)
  I0730 07:50:03.182029 19 proxy.go:558] (14) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 6.722893ms)
  I0730 07:50:03.182681 19 proxy.go:558] (14) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/rewriteme">test</a> (200; 7.463635ms)
  I0730 07:50:03.183335 19 proxy.go:558] (14) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname1/proxy/: tls baz (200; 7.886306ms)
  I0730 07:50:03.183518 19 proxy.go:558] (14) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 8.115732ms)
  I0730 07:50:03.183740 19 proxy.go:558] (14) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname1/proxy/: foo (200; 8.573207ms)
  I0730 07:50:03.183741 19 proxy.go:558] (14) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 8.235025ms)
  I0730 07:50:03.184270 19 proxy.go:558] (14) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname2/proxy/: bar (200; 9.075758ms)
  I0730 07:50:03.184425 19 proxy.go:558] (14) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname1/proxy/: foo (200; 9.065954ms)
  I0730 07:50:03.186291 19 proxy.go:558] (15) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 1.793778ms)
  I0730 07:50:03.187916 19 proxy.go:558] (15) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 3.328619ms)
  I0730 07:50:03.188768 19 proxy.go:558] (15) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 4.041934ms)
  I0730 07:50:03.188889 19 proxy.go:558] (15) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/rewriteme">test</a> (200; 4.363737ms)
  I0730 07:50:03.189212 19 proxy.go:558] (15) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">... (200; 4.640742ms)
  I0730 07:50:03.189727 19 proxy.go:558] (15) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/tlsrewritem... (200; 4.965138ms)
  I0730 07:50:03.189814 19 proxy.go:558] (15) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname2/proxy/: bar (200; 5.365733ms)
  I0730 07:50:03.190168 19 proxy.go:558] (15) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:462/proxy/: tls qux (200; 5.536267ms)
  I0730 07:50:03.190324 19 proxy.go:558] (15) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:460/proxy/: tls baz (200; 5.625848ms)
  I0730 07:50:03.190572 19 proxy.go:558] (15) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 5.908715ms)
  I0730 07:50:03.191262 19 proxy.go:558] (15) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">test<... (200; 6.724536ms)
  I0730 07:50:03.192732 19 proxy.go:558] (15) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname2/proxy/: tls qux (200; 7.95948ms)
  I0730 07:50:03.193371 19 proxy.go:558] (15) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname1/proxy/: foo (200; 8.664168ms)
  I0730 07:50:03.193710 19 proxy.go:558] (15) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname1/proxy/: tls baz (200; 8.968978ms)
  I0730 07:50:03.193714 19 proxy.go:558] (15) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname2/proxy/: bar (200; 9.057086ms)
  I0730 07:50:03.193891 19 proxy.go:558] (15) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname1/proxy/: foo (200; 9.249144ms)
  I0730 07:50:03.196123 19 proxy.go:558] (16) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/tlsrewritem... (200; 2.183934ms)
  I0730 07:50:03.198412 19 proxy.go:558] (16) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 4.251999ms)
  I0730 07:50:03.199719 19 proxy.go:558] (16) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname1/proxy/: foo (200; 5.721315ms)
  I0730 07:50:03.199895 19 proxy.go:558] (16) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">test<... (200; 5.858126ms)
  I0730 07:50:03.200161 19 proxy.go:558] (16) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:460/proxy/: tls baz (200; 6.030576ms)
  I0730 07:50:03.200704 19 proxy.go:558] (16) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">... (200; 6.641051ms)
  I0730 07:50:03.200799 19 proxy.go:558] (16) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname2/proxy/: bar (200; 6.82902ms)
  I0730 07:50:03.201149 19 proxy.go:558] (16) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:462/proxy/: tls qux (200; 7.056483ms)
  I0730 07:50:03.201353 19 proxy.go:558] (16) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/rewriteme">test</a> (200; 7.424309ms)
  I0730 07:50:03.201839 19 proxy.go:558] (16) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname1/proxy/: foo (200; 7.739247ms)
  I0730 07:50:03.202276 19 proxy.go:558] (16) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 8.153723ms)
  I0730 07:50:03.202633 19 proxy.go:558] (16) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 8.526503ms)
  I0730 07:50:03.202719 19 proxy.go:558] (16) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname2/proxy/: bar (200; 8.712741ms)
  I0730 07:50:03.207131 19 proxy.go:558] (16) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 13.042388ms)
  I0730 07:50:03.207449 19 proxy.go:558] (16) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname1/proxy/: tls baz (200; 13.308921ms)
  I0730 07:50:03.208074 19 proxy.go:558] (16) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname2/proxy/: tls qux (200; 13.925401ms)
  I0730 07:50:03.210585 19 proxy.go:558] (17) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/tlsrewritem... (200; 2.425264ms)
  I0730 07:50:03.210633 19 proxy.go:558] (17) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 2.340974ms)
  I0730 07:50:03.212586 19 proxy.go:558] (17) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:462/proxy/: tls qux (200; 4.274541ms)
  I0730 07:50:03.213346 19 proxy.go:558] (17) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">test<... (200; 4.87479ms)
  I0730 07:50:03.213361 19 proxy.go:558] (17) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">... (200; 4.900813ms)
  I0730 07:50:03.214756 19 proxy.go:558] (17) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 6.340087ms)
  I0730 07:50:03.215208 19 proxy.go:558] (17) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 6.754605ms)
  I0730 07:50:03.215883 19 proxy.go:558] (17) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname2/proxy/: tls qux (200; 7.446059ms)
  I0730 07:50:03.216089 19 proxy.go:558] (17) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname1/proxy/: foo (200; 7.687909ms)
  I0730 07:50:03.216243 19 proxy.go:558] (17) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/rewriteme">test</a> (200; 7.872473ms)
  I0730 07:50:03.216467 19 proxy.go:558] (17) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 7.983014ms)
  I0730 07:50:03.216484 19 proxy.go:558] (17) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname1/proxy/: tls baz (200; 8.193354ms)
  I0730 07:50:03.217008 19 proxy.go:558] (17) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname1/proxy/: foo (200; 8.689983ms)
  I0730 07:50:03.217798 19 proxy.go:558] (17) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname2/proxy/: bar (200; 9.373856ms)
  I0730 07:50:03.217866 19 proxy.go:558] (17) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:460/proxy/: tls baz (200; 9.478242ms)
  I0730 07:50:03.217897 19 proxy.go:558] (17) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname2/proxy/: bar (200; 9.530593ms)
  I0730 07:50:03.219684 19 proxy.go:558] (18) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/rewriteme">test</a> (200; 1.73087ms)
  I0730 07:50:03.222135 19 proxy.go:558] (18) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">... (200; 4.133681ms)
  I0730 07:50:03.222299 19 proxy.go:558] (18) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 4.204565ms)
  I0730 07:50:03.222954 19 proxy.go:558] (18) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:460/proxy/: tls baz (200; 5.005914ms)
  I0730 07:50:03.223140 19 proxy.go:558] (18) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">test<... (200; 5.150508ms)
  I0730 07:50:03.224674 19 proxy.go:558] (18) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 6.610966ms)
  I0730 07:50:03.224679 19 proxy.go:558] (18) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 6.669381ms)
  I0730 07:50:03.226377 19 proxy.go:558] (18) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/tlsrewritem... (200; 8.30649ms)
  I0730 07:50:03.226443 19 proxy.go:558] (18) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname1/proxy/: tls baz (200; 8.364082ms)
  I0730 07:50:03.226482 19 proxy.go:558] (18) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname1/proxy/: foo (200; 8.305538ms)
  I0730 07:50:03.226672 19 proxy.go:558] (18) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname1/proxy/: foo (200; 8.627961ms)
  I0730 07:50:03.226937 19 proxy.go:558] (18) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname2/proxy/: bar (200; 8.820277ms)
  I0730 07:50:03.227029 19 proxy.go:558] (18) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 8.976393ms)
  I0730 07:50:03.227222 19 proxy.go:558] (18) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:462/proxy/: tls qux (200; 9.201547ms)
  I0730 07:50:03.227776 19 proxy.go:558] (18) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname2/proxy/: tls qux (200; 9.689535ms)
  I0730 07:50:03.227779 19 proxy.go:558] (18) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname2/proxy/: bar (200; 9.618399ms)
  I0730 07:50:03.231260 19 proxy.go:558] (19) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:460/proxy/: tls baz (200; 3.325229ms)
  I0730 07:50:03.231368 19 proxy.go:558] (19) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 3.460081ms)
  I0730 07:50:03.232287 19 proxy.go:558] (19) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 4.365725ms)
  I0730 07:50:03.234140 19 proxy.go:558] (19) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">test<... (200; 6.116468ms)
  I0730 07:50:03.234141 19 proxy.go:558] (19) /api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/http:proxy-service-5ckb6-pm5d2:1080/proxy/rewriteme">... (200; 6.123665ms)
  I0730 07:50:03.234276 19 proxy.go:558] (19) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:162/proxy/: bar (200; 6.312097ms)
  I0730 07:50:03.234886 19 proxy.go:558] (19) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2:160/proxy/: foo (200; 6.848385ms)
  I0730 07:50:03.236518 19 proxy.go:558] (19) /api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/proxy-service-5ckb6-pm5d2/proxy/rewriteme">test</a> (200; 8.536525ms)
  I0730 07:50:03.236758 19 proxy.go:558] (19) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:462/proxy/: tls qux (200; 8.906661ms)
  I0730 07:50:03.237092 19 proxy.go:558] (19) /api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/: <a href="/api/v1/namespaces/proxy-9758/pods/https:proxy-service-5ckb6-pm5d2:443/proxy/tlsrewritem... (200; 9.206842ms)
  I0730 07:50:03.237095 19 proxy.go:558] (19) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname1/proxy/: foo (200; 9.100138ms)
  I0730 07:50:03.237365 19 proxy.go:558] (19) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname2/proxy/: tls qux (200; 9.408927ms)
  I0730 07:50:03.237616 19 proxy.go:558] (19) /api/v1/namespaces/proxy-9758/services/proxy-service-5ckb6:portname2/proxy/: bar (200; 9.61472ms)
  I0730 07:50:03.237677 19 proxy.go:558] (19) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname2/proxy/: bar (200; 9.690674ms)
  I0730 07:50:03.237688 19 proxy.go:558] (19) /api/v1/namespaces/proxy-9758/services/https:proxy-service-5ckb6:tlsportname1/proxy/: tls baz (200; 9.744361ms)
  I0730 07:50:03.237710 19 proxy.go:558] (19) /api/v1/namespaces/proxy-9758/services/http:proxy-service-5ckb6:portname1/proxy/: foo (200; 9.812852ms)
  STEP: deleting ReplicationController proxy-service-5ckb6 in namespace proxy-9758, will wait for the garbage collector to delete the pods @ 07/30/24 07:50:03.237
  I0730 07:50:03.304365 19 resources.go:139] Deleting ReplicationController proxy-service-5ckb6 took: 15.177381ms
  I0730 07:50:03.405319 19 resources.go:163] Terminating ReplicationController proxy-service-5ckb6 pods took: 100.944736ms
  E0730 07:50:03.973140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:04.973616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:05.974147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:50:06.105702 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-9758" for this suite. @ 07/30/24 07:50:06.108
• [6.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2218
  STEP: Creating a kubernetes client @ 07/30/24 07:50:06.12
  I0730 07:50:06.120950 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename services @ 07/30/24 07:50:06.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:50:06.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:50:06.134
  STEP: creating service in namespace services-4995 @ 07/30/24 07:50:06.135
  STEP: creating service affinity-nodeport in namespace services-4995 @ 07/30/24 07:50:06.135
  STEP: creating replication controller affinity-nodeport in namespace services-4995 @ 07/30/24 07:50:06.144
  I0730 07:50:06.152966      19 runners.go:198] Created replication controller with name: affinity-nodeport, namespace: services-4995, replica count: 3
  E0730 07:50:06.974727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:07.975179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:08.975677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:50:09.203841      19 runners.go:198] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0730 07:50:09.220366 19 resource.go:361] Creating new exec pod
  E0730 07:50:09.976212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:10.977178      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:11.977326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:50:12.240105 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-4995 exec execpod-affinity9nmr7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0730 07:50:12.297537 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I0730 07:50:12.297574 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0730 07:50:12.297682 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-4995 exec execpod-affinity9nmr7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.176 80'
  I0730 07:50:12.348744 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.176 80\nConnection to 10.152.183.176 80 port [tcp/http] succeeded!\n"
  I0730 07:50:12.348790 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0730 07:50:12.348853 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-4995 exec execpod-affinity9nmr7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.227.69.102 31870'
  I0730 07:50:12.398584 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.227.69.102 31870\nConnection to 10.227.69.102 31870 port [tcp/*] succeeded!\n"
  I0730 07:50:12.398619 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0730 07:50:12.398780 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-4995 exec execpod-affinity9nmr7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.227.69.245 31870'
  I0730 07:50:12.446182 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.227.69.245 31870\nConnection to 10.227.69.245 31870 port [tcp/*] succeeded!\n"
  I0730 07:50:12.446211 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0730 07:50:12.446293 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-4995 exec execpod-affinity9nmr7 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.227.69.102:31870/ ; done'
  I0730 07:50:12.523473 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:31870/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:31870/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:31870/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:31870/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:31870/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:31870/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:31870/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:31870/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:31870/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:31870/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:31870/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:31870/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:31870/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:31870/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:31870/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:31870/\n"
  I0730 07:50:12.523504 19 builder.go:147] stdout: "\naffinity-nodeport-xbt7z\naffinity-nodeport-xbt7z\naffinity-nodeport-xbt7z\naffinity-nodeport-xbt7z\naffinity-nodeport-xbt7z\naffinity-nodeport-xbt7z\naffinity-nodeport-xbt7z\naffinity-nodeport-xbt7z\naffinity-nodeport-xbt7z\naffinity-nodeport-xbt7z\naffinity-nodeport-xbt7z\naffinity-nodeport-xbt7z\naffinity-nodeport-xbt7z\naffinity-nodeport-xbt7z\naffinity-nodeport-xbt7z\naffinity-nodeport-xbt7z"
  I0730 07:50:12.523512 19 service.go:242] Received response from host: affinity-nodeport-xbt7z
  I0730 07:50:12.523517 19 service.go:242] Received response from host: affinity-nodeport-xbt7z
  I0730 07:50:12.523520 19 service.go:242] Received response from host: affinity-nodeport-xbt7z
  I0730 07:50:12.523523 19 service.go:242] Received response from host: affinity-nodeport-xbt7z
  I0730 07:50:12.523527 19 service.go:242] Received response from host: affinity-nodeport-xbt7z
  I0730 07:50:12.523529 19 service.go:242] Received response from host: affinity-nodeport-xbt7z
  I0730 07:50:12.523532 19 service.go:242] Received response from host: affinity-nodeport-xbt7z
  I0730 07:50:12.523535 19 service.go:242] Received response from host: affinity-nodeport-xbt7z
  I0730 07:50:12.523539 19 service.go:242] Received response from host: affinity-nodeport-xbt7z
  I0730 07:50:12.523544 19 service.go:242] Received response from host: affinity-nodeport-xbt7z
  I0730 07:50:12.523550 19 service.go:242] Received response from host: affinity-nodeport-xbt7z
  I0730 07:50:12.523554 19 service.go:242] Received response from host: affinity-nodeport-xbt7z
  I0730 07:50:12.523631 19 service.go:242] Received response from host: affinity-nodeport-xbt7z
  I0730 07:50:12.523639 19 service.go:242] Received response from host: affinity-nodeport-xbt7z
  I0730 07:50:12.523643 19 service.go:242] Received response from host: affinity-nodeport-xbt7z
  I0730 07:50:12.523646 19 service.go:242] Received response from host: affinity-nodeport-xbt7z
  I0730 07:50:12.523711 19 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-4995, will wait for the garbage collector to delete the pods @ 07/30/24 07:50:12.533
  I0730 07:50:12.592805 19 resources.go:139] Deleting ReplicationController affinity-nodeport took: 7.25583ms
  I0730 07:50:12.693357 19 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.548491ms
  E0730 07:50:12.978081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:13.978725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:14.979803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:50:15.229714 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4995" for this suite. @ 07/30/24 07:50:15.231
• [9.117 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 07/30/24 07:50:15.236
  I0730 07:50:15.236196 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename apf @ 07/30/24 07:50:15.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:50:15.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:50:15.25
  STEP: getting /apis @ 07/30/24 07:50:15.251
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 07/30/24 07:50:15.252
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 07/30/24 07:50:15.253
  STEP: creating @ 07/30/24 07:50:15.253
  STEP: getting @ 07/30/24 07:50:15.263
  STEP: listing @ 07/30/24 07:50:15.265
  STEP: watching @ 07/30/24 07:50:15.266
  I0730 07:50:15.266937 19 flowcontrol.go:394] starting watch
  STEP: patching @ 07/30/24 07:50:15.267
  STEP: updating @ 07/30/24 07:50:15.272
  I0730 07:50:15.277549 19 flowcontrol.go:422] waiting for watch events with expected annotations
  I0730 07:50:15.277586 19 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 07/30/24 07:50:15.277
  STEP: patching /status @ 07/30/24 07:50:15.279
  STEP: updating /status @ 07/30/24 07:50:15.284
  STEP: deleting @ 07/30/24 07:50:15.307
  STEP: deleting a collection @ 07/30/24 07:50:15.315
  I0730 07:50:15.325527 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-9055" for this suite. @ 07/30/24 07:50:15.327
• [0.096 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 07/30/24 07:50:15.332
  I0730 07:50:15.332435 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename crd-watch @ 07/30/24 07:50:15.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:50:15.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:50:15.347
  I0730 07:50:15.348136 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  E0730 07:50:15.979768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:16.980357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 07/30/24 07:50:17.888
  I0730 07:50:17.897698 19 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-30T07:50:17Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-30T07:50:17Z]] name:name1 resourceVersion:11888 uid:cdc5908a-a7da-435e-a5eb-49fcce6ca787] num:map[num1:9223372036854775807 num2:1000000]]}
  E0730 07:50:17.981042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:18.981994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:19.982930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:20.984130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:21.985246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:22.986127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:23.986926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:24.987410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:25.988562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:26.989248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 07/30/24 07:50:27.898
  I0730 07:50:27.906667 19 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-30T07:50:27Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-30T07:50:27Z]] name:name2 resourceVersion:11934 uid:b8b83d6f-9335-4580-986f-2256c18017aa] num:map[num1:9223372036854775807 num2:1000000]]}
  E0730 07:50:27.990001      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:28.990298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:29.991151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:30.992123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:31.992275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:32.992839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:33.992972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:34.993410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:35.994306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:36.994330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 07/30/24 07:50:37.907
  I0730 07:50:37.922358 19 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-30T07:50:17Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-30T07:50:37Z]] name:name1 resourceVersion:11949 uid:cdc5908a-a7da-435e-a5eb-49fcce6ca787] num:map[num1:9223372036854775807 num2:1000000]]}
  E0730 07:50:37.994593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:38.995081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:39.995972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:40.996393      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:41.996782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:42.997508      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:43.997998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:44.998862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:45.998991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:46.999202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 07/30/24 07:50:47.922
  I0730 07:50:47.937335 19 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-30T07:50:27Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-30T07:50:47Z]] name:name2 resourceVersion:11964 uid:b8b83d6f-9335-4580-986f-2256c18017aa] num:map[num1:9223372036854775807 num2:1000000]]}
  E0730 07:50:47.999597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:48.999832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:50.000025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:51.000800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:52.000944      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:53.001443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:54.001846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:55.002194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:56.002327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:57.002839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 07/30/24 07:50:57.937
  I0730 07:50:57.952000 19 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-30T07:50:17Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-30T07:50:37Z]] name:name1 resourceVersion:11979 uid:cdc5908a-a7da-435e-a5eb-49fcce6ca787] num:map[num1:9223372036854775807 num2:1000000]]}
  E0730 07:50:58.003198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:50:59.004337      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:00.004564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:01.005192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:02.005332      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:03.006419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:04.007063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:05.007491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:06.008511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:07.009313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 07/30/24 07:51:07.953
  I0730 07:51:07.967962 19 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-30T07:50:27Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-30T07:50:47Z]] name:name2 resourceVersion:11994 uid:b8b83d6f-9335-4580-986f-2256c18017aa] num:map[num1:9223372036854775807 num2:1000000]]}
  E0730 07:51:08.010191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:09.011121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:10.011190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:11.011502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:12.012327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:13.013171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:14.013457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:15.013625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:16.014516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:17.015446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:18.015749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:51:18.492943 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-9800" for this suite. @ 07/30/24 07:51:18.498
• [63.178 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:927
  STEP: Creating a kubernetes client @ 07/30/24 07:51:18.512
  I0730 07:51:18.512387 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename job @ 07/30/24 07:51:18.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:51:18.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:51:18.532
  STEP: Creating a suspended job @ 07/30/24 07:51:18.536
  STEP: Patching the Job @ 07/30/24 07:51:18.54
  STEP: Watching for Job to be patched @ 07/30/24 07:51:18.552
  I0730 07:51:18.553842 19 job.go:1109] Event ADDED observed for Job e2e-64rlh in namespace job-1565 with labels: map[e2e-job-label:e2e-64rlh] and annotations: map[]
  I0730 07:51:18.553883 19 job.go:1109] Event MODIFIED observed for Job e2e-64rlh in namespace job-1565 with labels: map[e2e-job-label:e2e-64rlh] and annotations: map[]
  I0730 07:51:18.553899 19 job.go:1112] Event MODIFIED found for Job e2e-64rlh in namespace job-1565 with labels: map[e2e-64rlh:patched e2e-job-label:e2e-64rlh] and annotations: map[]
  STEP: Updating the job @ 07/30/24 07:51:18.553
  STEP: Watching for Job to be updated @ 07/30/24 07:51:18.559
  I0730 07:51:18.560982 19 job.go:1112] Event MODIFIED found for Job e2e-64rlh in namespace job-1565 with labels: map[e2e-64rlh:patched e2e-job-label:e2e-64rlh] and annotations: map[updated:true]
  I0730 07:51:18.561011 19 job.go:1005] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 07/30/24 07:51:18.561
  I0730 07:51:18.562652 19 job.go:1012] Job: e2e-64rlh as labels: map[e2e-64rlh:patched e2e-job-label:e2e-64rlh]
  STEP: Waiting for job to complete @ 07/30/24 07:51:18.562
  E0730 07:51:19.015916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:20.016231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:21.016347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:22.016647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:23.017355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:24.018247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 07/30/24 07:51:24.568
  STEP: Watching for Job to be deleted @ 07/30/24 07:51:24.581
  I0730 07:51:24.584964 19 job.go:1109] Event MODIFIED observed for Job e2e-64rlh in namespace job-1565 with labels: map[e2e-64rlh:patched e2e-job-label:e2e-64rlh] and annotations: map[updated:true]
  I0730 07:51:24.585018 19 job.go:1109] Event MODIFIED observed for Job e2e-64rlh in namespace job-1565 with labels: map[e2e-64rlh:patched e2e-job-label:e2e-64rlh] and annotations: map[updated:true]
  I0730 07:51:24.585036 19 job.go:1109] Event MODIFIED observed for Job e2e-64rlh in namespace job-1565 with labels: map[e2e-64rlh:patched e2e-job-label:e2e-64rlh] and annotations: map[updated:true]
  I0730 07:51:24.585381 19 job.go:1109] Event MODIFIED observed for Job e2e-64rlh in namespace job-1565 with labels: map[e2e-64rlh:patched e2e-job-label:e2e-64rlh] and annotations: map[updated:true]
  I0730 07:51:24.585453 19 job.go:1109] Event MODIFIED observed for Job e2e-64rlh in namespace job-1565 with labels: map[e2e-64rlh:patched e2e-job-label:e2e-64rlh] and annotations: map[updated:true]
  I0730 07:51:24.585664 19 job.go:1112] Event DELETED found for Job e2e-64rlh in namespace job-1565 with labels: map[e2e-64rlh:patched e2e-job-label:e2e-64rlh] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 07/30/24 07:51:24.585
  I0730 07:51:24.612577 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1565" for this suite. @ 07/30/24 07:51:24.614
• [6.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1793
  STEP: Creating a kubernetes client @ 07/30/24 07:51:24.631
  I0730 07:51:24.631460 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename kubectl @ 07/30/24 07:51:24.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:51:24.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:51:24.646
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/30/24 07:51:24.647
  I0730 07:51:24.647686 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-6270 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0730 07:51:24.685741 19 builder.go:146] stderr: ""
  I0730 07:51:24.685781 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 07/30/24 07:51:24.685
  E0730 07:51:25.018239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:26.019083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:27.019394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:28.019915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:29.020183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 07/30/24 07:51:29.736
  I0730 07:51:29.737030 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-6270 get pod e2e-test-httpd-pod -o json'
  I0730 07:51:29.766332 19 builder.go:146] stderr: ""
  I0730 07:51:29.766413 19 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"dbedc2059b0eedb0f6354ca71700866f08d6fc5eede0ba8958cb6ce009964796\",\n            \"cni.projectcalico.org/podIP\": \"10.1.163.57/32\",\n            \"cni.projectcalico.org/podIPs\": \"10.1.163.57/32\"\n        },\n        \"creationTimestamp\": \"2024-07-30T07:51:24Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-6270\",\n        \"resourceVersion\": \"12142\",\n        \"uid\": \"0d53a2d0-4b02-46bd-9b3e-d5a9d8a0eb96\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-j76xq\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"jammy\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-j76xq\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-07-30T07:51:25Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-07-30T07:51:24Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-07-30T07:51:25Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-07-30T07:51:25Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-07-30T07:51:24Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://41d60d3bdbbc4d596a7463e0792e2fb8154b4f2a126629c45607d0452a384cad\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-07-30T07:51:25Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"10.227.69.102\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"10.227.69.102\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.1.163.57\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.1.163.57\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-07-30T07:51:24Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 07/30/24 07:51:29.766
  I0730 07:51:29.766490 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-6270 replace -f -'
  I0730 07:51:29.833512 19 builder.go:146] stderr: ""
  I0730 07:51:29.833557 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 07/30/24 07:51:29.833
  I0730 07:51:29.839740 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-6270 delete pods e2e-test-httpd-pod'
  E0730 07:51:30.020255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:31.021242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:51:31.437657 19 builder.go:146] stderr: ""
  I0730 07:51:31.437693 19 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0730 07:51:31.437930 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6270" for this suite. @ 07/30/24 07:51:31.44
• [6.816 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 07/30/24 07:51:31.448
  I0730 07:51:31.448285 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename pods @ 07/30/24 07:51:31.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:51:31.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:51:31.519
  I0730 07:51:31.524016 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: creating the pod @ 07/30/24 07:51:31.524
  STEP: submitting the pod to kubernetes @ 07/30/24 07:51:31.524
  E0730 07:51:32.021881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:33.022072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:51:33.608519 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5127" for this suite. @ 07/30/24 07:51:33.61
• [2.166 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 07/30/24 07:51:33.614
  I0730 07:51:33.614836 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename resourcequota @ 07/30/24 07:51:33.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:51:33.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:51:33.631
  STEP: Counting existing ResourceQuota @ 07/30/24 07:51:33.633
  E0730 07:51:34.022849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:35.023040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:36.023803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:37.024027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:38.024829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/30/24 07:51:38.638
  STEP: Ensuring resource quota status is calculated @ 07/30/24 07:51:38.645
  E0730 07:51:39.025143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:40.025593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:51:40.655140 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-335" for this suite. @ 07/30/24 07:51:40.66
• [7.056 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 07/30/24 07:51:40.673
  I0730 07:51:40.673248 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename projected @ 07/30/24 07:51:40.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:51:40.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:51:40.693
  STEP: Creating the pod @ 07/30/24 07:51:40.696
  E0730 07:51:41.026400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:42.026939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:43.027138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:51:43.253044 19 pod_client.go:141] Successfully updated pod "labelsupdate57360f38-e661-4742-8caf-80157d46b795"
  E0730 07:51:44.028113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:45.028617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:51:45.276641 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2336" for this suite. @ 07/30/24 07:51:45.281
• [4.619 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 07/30/24 07:51:45.293
  I0730 07:51:45.293758 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename secrets @ 07/30/24 07:51:45.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:51:45.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:51:45.309
  STEP: Creating secret with name secret-test-cb23745b-5baf-4825-8fc2-3fbaec79ca72 @ 07/30/24 07:51:45.311
  STEP: Creating a pod to test consume secrets @ 07/30/24 07:51:45.314
  E0730 07:51:46.029577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:47.029671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:48.029871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:49.030431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 07:51:49.335
  I0730 07:51:49.340662 19 output.go:196] Trying to get logs from node jammy pod pod-secrets-a28c6e8f-6efe-4e97-b91f-06e27115a677 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/30/24 07:51:49.348
  I0730 07:51:49.376779 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-424" for this suite. @ 07/30/24 07:51:49.379
• [4.091 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 07/30/24 07:51:49.384
  I0730 07:51:49.384945 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/30/24 07:51:49.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:51:49.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:51:49.398
  STEP: create the container to handle the HTTPGet hook request. @ 07/30/24 07:51:49.403
  E0730 07:51:50.031497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:51.032057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 07/30/24 07:51:51.422
  E0730 07:51:52.033240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:53.033555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 07/30/24 07:51:53.449
  E0730 07:51:54.034466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:55.034958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:56.035154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:57.035408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 07/30/24 07:51:57.478
  I0730 07:51:57.493665 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6365" for this suite. @ 07/30/24 07:51:57.497
• [8.122 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:833
  STEP: Creating a kubernetes client @ 07/30/24 07:51:57.507
  I0730 07:51:57.507821 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename job @ 07/30/24 07:51:57.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:51:57.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:51:57.525
  STEP: Creating a job @ 07/30/24 07:51:57.531
  STEP: Ensure pods equal to parallelism count is attached to the job @ 07/30/24 07:51:57.536
  E0730 07:51:58.035314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:51:59.035920      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 07/30/24 07:51:59.543
  STEP: updating /status @ 07/30/24 07:51:59.558
  STEP: get /status @ 07/30/24 07:51:59.565
  I0730 07:51:59.568357 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4057" for this suite. @ 07/30/24 07:51:59.57
• [2.068 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1533
  STEP: Creating a kubernetes client @ 07/30/24 07:51:59.576
  I0730 07:51:59.576077 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename kubectl @ 07/30/24 07:51:59.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:51:59.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:51:59.591
  STEP: creating Agnhost RC @ 07/30/24 07:51:59.593
  I0730 07:51:59.593436 19 kubectl.go:1540] namespace kubectl-5209
  I0730 07:51:59.593554 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-5209 create -f -'
  I0730 07:51:59.656712 19 builder.go:146] stderr: ""
  I0730 07:51:59.656737 19 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/30/24 07:51:59.656
  E0730 07:52:00.036249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:52:00.663213 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0730 07:52:00.663262 19 framework.go:733] Found 1 / 1
  I0730 07:52:00.663289 19 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0730 07:52:00.667980 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0730 07:52:00.668013 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0730 07:52:00.668023 19 kubectl.go:1547] wait on agnhost-primary startup in kubectl-5209 
  I0730 07:52:00.668077 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-5209 logs agnhost-primary-s54km agnhost-primary'
  I0730 07:52:00.733245 19 builder.go:146] stderr: ""
  I0730 07:52:00.733272 19 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 07/30/24 07:52:00.733
  I0730 07:52:00.733316 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-5209 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0730 07:52:00.777069 19 builder.go:146] stderr: ""
  I0730 07:52:00.777095 19 builder.go:147] stdout: "service/rm2 exposed\n"
  I0730 07:52:00.781707 19 utils.go:1179] Service rm2 in namespace kubectl-5209 found.
  E0730 07:52:01.037440      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:52:02.037762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: exposing service @ 07/30/24 07:52:02.787
  I0730 07:52:02.787803 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-5209 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0730 07:52:02.846668 19 builder.go:146] stderr: ""
  I0730 07:52:02.846784 19 builder.go:147] stdout: "service/rm3 exposed\n"
  I0730 07:52:02.849013 19 utils.go:1179] Service rm3 in namespace kubectl-5209 found.
  E0730 07:52:03.038574      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:52:04.039233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:52:04.855386 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5209" for this suite. @ 07/30/24 07:52:04.857
• [5.288 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 07/30/24 07:52:04.864
  I0730 07:52:04.864330 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename projected @ 07/30/24 07:52:04.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:52:04.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:52:04.881
  STEP: Creating configMap with name projected-configmap-test-volume-map-098a34fa-e1d7-4f6d-9283-c915155bd3b3 @ 07/30/24 07:52:04.882
  STEP: Creating a pod to test consume configMaps @ 07/30/24 07:52:04.887
  E0730 07:52:05.039494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:52:06.039768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 07:52:06.909
  I0730 07:52:06.914588 19 output.go:196] Trying to get logs from node jammy pod pod-projected-configmaps-3c3c9135-a0c8-48b9-a527-d9693db196c8 container agnhost-container: <nil>
  STEP: delete the pod @ 07/30/24 07:52:06.918
  I0730 07:52:06.933875 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1798" for this suite. @ 07/30/24 07:52:06.936
• [2.077 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 07/30/24 07:52:06.941
  I0730 07:52:06.941709 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/30/24 07:52:06.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:52:06.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:52:06.96
  STEP: creating a policy with variables @ 07/30/24 07:52:06.965
  STEP: waiting until the marker is denied @ 07/30/24 07:52:06.977
  E0730 07:52:07.040460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 07/30/24 07:52:07.588
  STEP: testing a non-replicated ReplicaSet not to be denied @ 07/30/24 07:52:07.601
  I0730 07:52:07.713503 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-5891" for this suite. @ 07/30/24 07:52:07.717
• [0.786 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 07/30/24 07:52:07.728
  I0730 07:52:07.728094 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename configmap @ 07/30/24 07:52:07.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:52:07.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:52:07.742
  STEP: Creating configMap with name configmap-test-volume-34680c6b-4005-469c-82ef-b71eccc3181a @ 07/30/24 07:52:07.743
  STEP: Creating a pod to test consume configMaps @ 07/30/24 07:52:07.748
  E0730 07:52:08.040960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:52:09.041058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 07:52:09.76
  I0730 07:52:09.764134 19 output.go:196] Trying to get logs from node jammy pod pod-configmaps-4d3490ff-e9bc-4c3d-a56d-b8d27ac22792 container agnhost-container: <nil>
  STEP: delete the pod @ 07/30/24 07:52:09.769
  I0730 07:52:09.784103 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-618" for this suite. @ 07/30/24 07:52:09.786
• [2.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:601
  STEP: Creating a kubernetes client @ 07/30/24 07:52:09.791
  I0730 07:52:09.791455 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename job @ 07/30/24 07:52:09.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:52:09.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:52:09.805
  STEP: Creating a job @ 07/30/24 07:52:09.807
  STEP: Ensuring job reaches completions @ 07/30/24 07:52:09.81
  E0730 07:52:10.041344      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:52:11.042651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:52:12.043206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:52:13.043757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:52:14.043607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:52:15.044245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:52:16.044670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:52:17.045595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:52:17.815235 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5811" for this suite. @ 07/30/24 07:52:17.819
• [8.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 07/30/24 07:52:17.828
  I0730 07:52:17.828696 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename proxy @ 07/30/24 07:52:17.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:52:17.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:52:17.841
  I0730 07:52:17.843027 19 proxy.go:293] Creating pod...
  E0730 07:52:18.046189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:52:19.047121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:52:19.857881 19 proxy.go:317] Creating service...
  I0730 07:52:19.878571 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4222/pods/agnhost/proxy/some/path/with/DELETE
  I0730 07:52:19.887715 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0730 07:52:19.887821 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4222/pods/agnhost/proxy/some/path/with/GET
  I0730 07:52:19.891137 19 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0730 07:52:19.891296 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4222/pods/agnhost/proxy/some/path/with/HEAD
  I0730 07:52:19.893533 19 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0730 07:52:19.893560 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4222/pods/agnhost/proxy/some/path/with/OPTIONS
  I0730 07:52:19.894892 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0730 07:52:19.894908 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4222/pods/agnhost/proxy/some/path/with/PATCH
  I0730 07:52:19.896110 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0730 07:52:19.896159 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4222/pods/agnhost/proxy/some/path/with/POST
  I0730 07:52:19.897242 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0730 07:52:19.897251 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4222/pods/agnhost/proxy/some/path/with/PUT
  I0730 07:52:19.898296 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0730 07:52:19.898312 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4222/services/test-service/proxy/some/path/with/DELETE
  I0730 07:52:19.899746 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0730 07:52:19.899761 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4222/services/test-service/proxy/some/path/with/GET
  I0730 07:52:19.901076 19 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0730 07:52:19.901089 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4222/services/test-service/proxy/some/path/with/HEAD
  I0730 07:52:19.902524 19 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0730 07:52:19.902536 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4222/services/test-service/proxy/some/path/with/OPTIONS
  I0730 07:52:19.904095 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0730 07:52:19.904108 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4222/services/test-service/proxy/some/path/with/PATCH
  I0730 07:52:19.905520 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0730 07:52:19.905552 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4222/services/test-service/proxy/some/path/with/POST
  I0730 07:52:19.907112 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0730 07:52:19.907123 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4222/services/test-service/proxy/some/path/with/PUT
  I0730 07:52:19.908525 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0730 07:52:19.908605 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4222" for this suite. @ 07/30/24 07:52:19.91
• [2.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 07/30/24 07:52:19.914
  I0730 07:52:19.914093 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/30/24 07:52:19.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:52:19.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:52:19.929
  STEP: fetching the /apis discovery document @ 07/30/24 07:52:19.93
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 07/30/24 07:52:19.93
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 07/30/24 07:52:19.93
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 07/30/24 07:52:19.93
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 07/30/24 07:52:19.931
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 07/30/24 07:52:19.931
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 07/30/24 07:52:19.931
  I0730 07:52:19.931491 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7289" for this suite. @ 07/30/24 07:52:19.932
• [0.023 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 07/30/24 07:52:19.936
  I0730 07:52:19.936981 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename resourcequota @ 07/30/24 07:52:19.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:52:19.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:52:19.949
  STEP: Counting existing ResourceQuota @ 07/30/24 07:52:19.95
  E0730 07:52:20.047490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:52:21.047899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:52:22.048474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:52:23.049041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:52:24.049738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/30/24 07:52:24.953
  STEP: Ensuring resource quota status is calculated @ 07/30/24 07:52:24.957
  E0730 07:52:25.049741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:52:26.050246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 07/30/24 07:52:26.964
  STEP: Creating a NodePort Service @ 07/30/24 07:52:26.992
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 07/30/24 07:52:27.015
  STEP: Ensuring resource quota status captures service creation @ 07/30/24 07:52:27.03
  E0730 07:52:27.051171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:52:28.051821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 07/30/24 07:52:29.039
  E0730 07:52:29.052592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota status released usage @ 07/30/24 07:52:29.09
  E0730 07:52:30.052925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:52:31.053969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:52:31.096412 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5793" for this suite. @ 07/30/24 07:52:31.101
• [11.174 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 07/30/24 07:52:31.111
  I0730 07:52:31.112027 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename downward-api @ 07/30/24 07:52:31.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:52:31.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:52:31.127
  STEP: Creating a pod to test downward API volume plugin @ 07/30/24 07:52:31.129
  E0730 07:52:32.054526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:52:33.054711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 07:52:33.145
  I0730 07:52:33.149817 19 output.go:196] Trying to get logs from node jammy pod downwardapi-volume-a64f0cbd-ebb2-478e-9ddc-4c4a87d4dd54 container client-container: <nil>
  STEP: delete the pod @ 07/30/24 07:52:33.156
  I0730 07:52:33.186277 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9802" for this suite. @ 07/30/24 07:52:33.192
• [2.087 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 07/30/24 07:52:33.199
  I0730 07:52:33.199622 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename resourcequota @ 07/30/24 07:52:33.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:52:33.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:52:33.213
  STEP: Counting existing ResourceQuota @ 07/30/24 07:52:33.214
  E0730 07:52:34.054941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:52:35.055013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:52:36.056085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:52:37.057063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:52:38.057123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/30/24 07:52:38.221
  STEP: Ensuring resource quota status is calculated @ 07/30/24 07:52:38.23
  E0730 07:52:39.057484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:52:40.057840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 07/30/24 07:52:40.238
  STEP: Ensuring resource quota status captures replication controller creation @ 07/30/24 07:52:40.257
  E0730 07:52:41.059087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:52:42.060097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 07/30/24 07:52:42.265
  STEP: Ensuring resource quota status released usage @ 07/30/24 07:52:42.277
  E0730 07:52:43.061301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:52:44.062117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:52:44.282995 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1418" for this suite. @ 07/30/24 07:52:44.288
• [11.101 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1394
  STEP: Creating a kubernetes client @ 07/30/24 07:52:44.302
  I0730 07:52:44.302730 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename kubectl @ 07/30/24 07:52:44.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:52:44.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:52:44.328
  I0730 07:52:44.330356 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-4452 create -f -'
  I0730 07:52:44.388362 19 builder.go:146] stderr: ""
  I0730 07:52:44.388405 19 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0730 07:52:44.388437 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-4452 create -f -'
  I0730 07:52:44.454622 19 builder.go:146] stderr: ""
  I0730 07:52:44.454655 19 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/30/24 07:52:44.454
  E0730 07:52:45.062336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:52:45.462424 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0730 07:52:45.462478 19 framework.go:733] Found 0 / 1
  E0730 07:52:46.062662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:52:46.461550 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0730 07:52:46.461629 19 framework.go:733] Found 1 / 1
  I0730 07:52:46.461664 19 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0730 07:52:46.465077 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0730 07:52:46.465109 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0730 07:52:46.465160 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-4452 describe pod agnhost-primary-hrthv'
  I0730 07:52:46.508609 19 builder.go:146] stderr: ""
  I0730 07:52:46.508660 19 builder.go:147] stdout: "Name:             agnhost-primary-hrthv\nNamespace:        kubectl-4452\nPriority:         0\nService Account:  default\nNode:             jammy/10.227.69.102\nStart Time:       Tue, 30 Jul 2024 07:52:44 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: 4dcd2ec0b9da587719c82235ab4e9e5ae00fc38ee2295274863a6f137f9b768a\n                  cni.projectcalico.org/podIP: 10.1.163.15/32\n                  cni.projectcalico.org/podIPs: 10.1.163.15/32\nStatus:           Running\nIP:               10.1.163.15\nIPs:\n  IP:           10.1.163.15\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://cd6f36aa90cecd9d8a80511afe74324a8cc5328af4c31d0b4ff4e5fbb6bd7dd8\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Tue, 30 Jul 2024 07:52:44 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-7vwrl (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-7vwrl:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-4452/agnhost-primary-hrthv to jammy\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    2s    kubelet            Created container agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
  I0730 07:52:46.508734 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-4452 describe rc agnhost-primary'
  I0730 07:52:46.544062 19 builder.go:146] stderr: ""
  I0730 07:52:46.544094 19 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-4452\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-hrthv\n"
  I0730 07:52:46.544177 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-4452 describe service agnhost-primary'
  I0730 07:52:46.574045 19 builder.go:146] stderr: ""
  I0730 07:52:46.574127 19 builder.go:147] stdout: "Name:              agnhost-primary\nNamespace:         kubectl-4452\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.152.183.111\nIPs:               10.152.183.111\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.1.163.15:6379\nSession Affinity:  None\nEvents:            <none>\n"
  I0730 07:52:46.575703 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-4452 describe node jammy'
  I0730 07:52:46.615927 19 builder.go:146] stderr: ""
  I0730 07:52:46.616033 19 builder.go:147] stdout: "Name:               jammy\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=jammy\n                    kubernetes.io/os=linux\n                    microk8s.io/cluster=true\n                    node.kubernetes.io/microk8s-controlplane=microk8s-controlplane\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    projectcalico.org/IPv4Address: 10.227.69.102/24\n                    projectcalico.org/IPv4VXLANTunnelAddr: 10.1.163.0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Tue, 30 Jul 2024 07:17:56 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  jammy\n  AcquireTime:     <unset>\n  RenewTime:       Tue, 30 Jul 2024 07:52:39 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Tue, 30 Jul 2024 07:18:42 +0000   Tue, 30 Jul 2024 07:18:42 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Tue, 30 Jul 2024 07:51:14 +0000   Tue, 30 Jul 2024 07:17:56 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Tue, 30 Jul 2024 07:51:14 +0000   Tue, 30 Jul 2024 07:17:56 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Tue, 30 Jul 2024 07:51:14 +0000   Tue, 30 Jul 2024 07:17:56 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Tue, 30 Jul 2024 07:51:14 +0000   Tue, 30 Jul 2024 07:18:26 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  10.227.69.102\n  Hostname:    jammy\nCapacity:\n  cpu:                2\n  ephemeral-storage:  50620216Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             4000064Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  49571640Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3897664Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 d76ae260043f4d108a98e696001a4673\n  System UUID:                d76ae260043f4d108a98e696001a4673\n  Boot ID:                    26eceb26-f461-4a82-b628-f9009b6aa361\n  Kernel Version:             5.15.0-113-generic\n  OS Image:                   Ubuntu 22.04.4 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.28\n  Kubelet Version:            v1.30.3\n  Kube-Proxy Version:         v1.30.3\nNon-terminated Pods:          (3 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-node-m8grj                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         34m\n  kubectl-4452                agnhost-primary-hrthv                                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         2s\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-d42ae569ae0c45bb-bfb6w    0 (0%)        0 (0%)      0 (0%)           0 (0%)         31m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                250m (12%)  0 (0%)\n  memory             0 (0%)      0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  I0730 07:52:46.616068 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-4452 describe namespace kubectl-4452'
  I0730 07:52:46.649649 19 builder.go:146] stderr: ""
  I0730 07:52:46.649690 19 builder.go:147] stdout: "Name:         kubectl-4452\nLabels:       e2e-framework=kubectl\n              e2e-run=0de2a537-bd84-4e5f-9cf4-2fe6d6c3e802\n              kubernetes.io/metadata.name=kubectl-4452\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0730 07:52:46.649819 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4452" for this suite. @ 07/30/24 07:52:46.651
• [2.355 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 07/30/24 07:52:46.657
  I0730 07:52:46.657954 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename disruption @ 07/30/24 07:52:46.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:52:46.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:52:46.669
  STEP: creating the pdb @ 07/30/24 07:52:46.67
  STEP: Waiting for the pdb to be processed @ 07/30/24 07:52:46.673
  E0730 07:52:47.062707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:52:48.064035      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 07/30/24 07:52:48.68
  STEP: Waiting for the pdb to be processed @ 07/30/24 07:52:48.694
  E0730 07:52:49.064192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:52:50.064485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 07/30/24 07:52:50.696
  STEP: Waiting for the pdb to be processed @ 07/30/24 07:52:50.706
  E0730 07:52:51.065032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:52:52.065679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 07/30/24 07:52:52.725
  I0730 07:52:52.729529 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3928" for this suite. @ 07/30/24 07:52:52.733
• [6.083 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 07/30/24 07:52:52.742
  I0730 07:52:52.742288 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/30/24 07:52:52.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:52:52.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:52:52.76
  I0730 07:52:52.763043 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  E0730 07:52:53.065800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:52:54.066633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:52:55.067646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:52:55.840300 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-1810" for this suite. @ 07/30/24 07:52:55.845
• [3.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 07/30/24 07:52:55.858
  I0730 07:52:55.858550 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename runtimeclass @ 07/30/24 07:52:55.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:52:55.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:52:55.885
  I0730 07:52:55.892969 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2717" for this suite. @ 07/30/24 07:52:55.895
• [0.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 07/30/24 07:52:55.901
  I0730 07:52:55.901215 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename daemonsets @ 07/30/24 07:52:55.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:52:55.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:52:55.913
  STEP: Creating simple DaemonSet "daemon-set" @ 07/30/24 07:52:55.921
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/30/24 07:52:55.925
  I0730 07:52:55.929003 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0730 07:52:55.929024 19 fixtures.go:130] Node jammy is running 0 daemon pod, expected 1
  E0730 07:52:56.068397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:52:56.933350 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0730 07:52:56.933374 19 fixtures.go:130] Node worker is running 0 daemon pod, expected 1
  E0730 07:52:57.068882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:52:57.937450 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0730 07:52:57.937499 19 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 07/30/24 07:52:57.941
  I0730 07:52:57.965824 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0730 07:52:57.965857 19 fixtures.go:130] Node worker is running 0 daemon pod, expected 1
  E0730 07:52:58.069175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:52:58.969006 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0730 07:52:58.969030 19 fixtures.go:130] Node worker is running 0 daemon pod, expected 1
  E0730 07:52:59.069476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:52:59.970463 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0730 07:52:59.970555 19 fixtures.go:130] Node worker is running 0 daemon pod, expected 1
  E0730 07:53:00.069488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:53:00.961974 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0730 07:53:00.961997 19 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/30/24 07:53:00.963
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7106, will wait for the garbage collector to delete the pods @ 07/30/24 07:53:00.963
  I0730 07:53:01.021725 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 6.106181ms
  E0730 07:53:01.070427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:53:01.122750 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.023881ms
  E0730 07:53:02.071582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:03.072386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:53:03.630612 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0730 07:53:03.630666 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0730 07:53:03.635403 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"13306"},"items":null}

  I0730 07:53:03.640517 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"13306"},"items":null}

  I0730 07:53:03.652922 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7106" for this suite. @ 07/30/24 07:53:03.654
• [7.758 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 07/30/24 07:53:03.659
  I0730 07:53:03.659805 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename pv @ 07/30/24 07:53:03.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:53:03.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:53:03.675
  STEP: Creating initial PV and PVC @ 07/30/24 07:53:03.677
  I0730 07:53:03.677346 19 pv.go:390] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-3351" @ 07/30/24 07:53:03.685
  STEP: Listing PVCs in namespace "pv-3351" @ 07/30/24 07:53:03.688
  STEP: Patching the PV "pv-3351-vvtqb" @ 07/30/24 07:53:03.689
  STEP: Patching the PVC "pvc-4glmd" @ 07/30/24 07:53:03.699
  STEP: Getting PV "pv-3351-vvtqb" @ 07/30/24 07:53:03.708
  STEP: Getting PVC "pvc-4glmd" @ 07/30/24 07:53:03.709
  STEP: Deleting PVC "pvc-4glmd" @ 07/30/24 07:53:03.711
  STEP: Confirm deletion of PVC "pvc-4glmd" @ 07/30/24 07:53:03.714
  E0730 07:53:04.073061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:05.073654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-3351-vvtqb" @ 07/30/24 07:53:05.722
  STEP: Confirm deletion of PV "pv-3351-vvtqb" @ 07/30/24 07:53:05.732
  E0730 07:53:06.073850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:07.074573      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 07/30/24 07:53:07.747
  I0730 07:53:07.747200 19 pv.go:390] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-3351-fqgw2" @ 07/30/24 07:53:07.77
  STEP: Updating the PVC "pvc-pmlbj" @ 07/30/24 07:53:07.796
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-pmlbj=updated" @ 07/30/24 07:53:07.801
  STEP: Deleting PVC "pvc-pmlbj" via DeleteCollection @ 07/30/24 07:53:07.802
  STEP: Confirm deletion of PVC "pvc-pmlbj" @ 07/30/24 07:53:07.81
  E0730 07:53:08.075107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:09.075128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-3351-fqgw2" via DeleteCollection @ 07/30/24 07:53:09.813
  STEP: Confirm deletion of PV "pv-3351-fqgw2" @ 07/30/24 07:53:09.819
  E0730 07:53:10.074948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:11.076239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:53:11.829861 19 persistent_volumes.go:407] AfterEach: deleting 1 PVCs and 1 PVs...
  I0730 07:53:11.830055 19 pv.go:201] Deleting PersistentVolumeClaim "pvc-pmlbj"
  I0730 07:53:11.834472 19 pv.go:189] Deleting PersistentVolume "pv-3351-fqgw2"
  I0730 07:53:11.838612 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-3351" for this suite. @ 07/30/24 07:53:11.843
• [8.197 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 07/30/24 07:53:11.858
  I0730 07:53:11.858261 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename downward-api @ 07/30/24 07:53:11.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:53:11.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:53:11.881
  STEP: Creating a pod to test downward api env vars @ 07/30/24 07:53:11.883
  E0730 07:53:12.076449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:13.077586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:14.077596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:15.078146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 07:53:15.908
  I0730 07:53:15.913414 19 output.go:196] Trying to get logs from node jammy pod downward-api-975264fb-5c4c-4cca-9a90-77756f311b43 container dapi-container: <nil>
  STEP: delete the pod @ 07/30/24 07:53:15.921
  I0730 07:53:15.940331 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8173" for this suite. @ 07/30/24 07:53:15.942
• [4.088 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 07/30/24 07:53:15.946
  I0730 07:53:15.946832 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename subpath @ 07/30/24 07:53:15.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:53:15.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:53:15.959
  STEP: Setting up data @ 07/30/24 07:53:15.96
  STEP: Creating pod pod-subpath-test-secret-dddw @ 07/30/24 07:53:15.966
  STEP: Creating a pod to test atomic-volume-subpath @ 07/30/24 07:53:15.966
  E0730 07:53:16.078592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:17.079016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:18.079237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:19.079858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:20.080559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:21.081271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:22.081930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:23.082540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:24.083092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:25.084222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:26.085155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:27.085491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:28.086351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:29.086545      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:30.087217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:31.087669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:32.088368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:33.088679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:34.089581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:35.090053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:36.090067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:37.090414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:38.091240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:39.091614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 07:53:40.049
  I0730 07:53:40.051081 19 output.go:196] Trying to get logs from node jammy pod pod-subpath-test-secret-dddw container test-container-subpath-secret-dddw: <nil>
  STEP: delete the pod @ 07/30/24 07:53:40.054
  STEP: Deleting pod pod-subpath-test-secret-dddw @ 07/30/24 07:53:40.074
  I0730 07:53:40.074472 19 delete.go:62] Deleting pod "pod-subpath-test-secret-dddw" in namespace "subpath-5757"
  I0730 07:53:40.076035 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5757" for this suite. @ 07/30/24 07:53:40.077
• [24.137 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 07/30/24 07:53:40.083
  I0730 07:53:40.083429 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename deployment @ 07/30/24 07:53:40.083
  E0730 07:53:40.091578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:53:40.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:53:40.107
  I0730 07:53:40.122887 19 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  E0730 07:53:41.092345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:42.092891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:43.093409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:44.093589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:45.093744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:53:45.125811 19 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/30/24 07:53:45.125
  I0730 07:53:45.125880 19 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 07/30/24 07:53:45.142
  I0730 07:53:45.148733 19 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1853",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "31c57719-b2ab-440a-a993-91e9fbce0cc9",
      ResourceVersion: (string) (len=5) "13503",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922825,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0730 07:53:45.151127 19 deployment.go:41] New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  I0730 07:53:45.152840 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1853" for this suite. @ 07/30/24 07:53:45.156
• [5.103 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 07/30/24 07:53:45.187
  I0730 07:53:45.187224 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename pods @ 07/30/24 07:53:45.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:53:45.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:53:45.229
  STEP: Create a pod @ 07/30/24 07:53:45.231
  E0730 07:53:46.094664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:47.094935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 07/30/24 07:53:47.251
  I0730 07:53:47.262795 19 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0730 07:53:47.262923 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1840" for this suite. @ 07/30/24 07:53:47.271
• [2.094 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 07/30/24 07:53:47.281
  I0730 07:53:47.281854 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename svcaccounts @ 07/30/24 07:53:47.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:53:47.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:53:47.304
  E0730 07:53:48.095597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:49.095861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 07/30/24 07:53:49.325
  I0730 07:53:49.325808 19 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3332 pod-service-account-e263fd91-98ef-4ca4-b92c-9bd04633da0c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 07/30/24 07:53:49.399
  I0730 07:53:49.399144 19 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3332 pod-service-account-e263fd91-98ef-4ca4-b92c-9bd04633da0c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 07/30/24 07:53:49.451
  I0730 07:53:49.451329 19 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3332 pod-service-account-e263fd91-98ef-4ca4-b92c-9bd04633da0c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0730 07:53:49.518225 19 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-3332"
  I0730 07:53:49.521305 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3332" for this suite. @ 07/30/24 07:53:49.523
• [2.247 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 07/30/24 07:53:49.529
  I0730 07:53:49.529189 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename gc @ 07/30/24 07:53:49.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:53:49.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:53:49.55
  STEP: create the rc @ 07/30/24 07:53:49.552
  W0730 07:53:49.558195      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0730 07:53:50.095879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:51.095932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:52.096290      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:53.096810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:54.097834      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 07/30/24 07:53:54.566
  STEP: wait for all pods to be garbage collected @ 07/30/24 07:53:54.579
  E0730 07:53:55.098050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:56.098258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:57.098636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:58.099153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:53:59.099444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/30/24 07:53:59.593
  W0730 07:53:59.600545      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0730 07:53:59.600590 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0730 07:53:59.600785 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-948" for this suite. @ 07/30/24 07:53:59.605
• [10.087 seconds]
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 07/30/24 07:53:59.616
  I0730 07:53:59.617084 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename deployment @ 07/30/24 07:53:59.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:53:59.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:53:59.633
  STEP: creating a Deployment @ 07/30/24 07:53:59.636
  STEP: waiting for Deployment to be created @ 07/30/24 07:53:59.64
  STEP: waiting for all Replicas to be Ready @ 07/30/24 07:53:59.641
  I0730 07:53:59.642287 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0730 07:53:59.642310 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0730 07:53:59.652475 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0730 07:53:59.652510 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0730 07:53:59.657315 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0730 07:53:59.657339 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0730 07:53:59.702288 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0730 07:53:59.702312 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0730 07:54:00.099851      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:54:00.748648 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0730 07:54:00.748701 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0730 07:54:01.072678 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 07/30/24 07:54:01.072
  I0730 07:54:01.080341 19 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 07/30/24 07:54:01.08
  I0730 07:54:01.081315 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 0
  I0730 07:54:01.081417 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 0
  I0730 07:54:01.081451 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 0
  I0730 07:54:01.081474 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 0
  I0730 07:54:01.081482 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 0
  I0730 07:54:01.081487 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 0
  I0730 07:54:01.081613 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 0
  I0730 07:54:01.081649 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 0
  I0730 07:54:01.081658 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 1
  I0730 07:54:01.081663 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 1
  I0730 07:54:01.081669 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 2
  I0730 07:54:01.081674 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 2
  I0730 07:54:01.081717 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 2
  I0730 07:54:01.081725 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 2
  I0730 07:54:01.089642 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 2
  I0730 07:54:01.089724 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 2
  E0730 07:54:01.100278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:54:01.117571 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 2
  I0730 07:54:01.117597 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 2
  I0730 07:54:01.132611 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 1
  I0730 07:54:01.132818 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 1
  I0730 07:54:01.140893 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 1
  I0730 07:54:01.140913 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 1
  I0730 07:54:02.093805 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 2
  I0730 07:54:02.093834 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 2
  E0730 07:54:02.100964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:54:02.104857 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 1
  STEP: listing Deployments @ 07/30/24 07:54:02.104
  I0730 07:54:02.106518 19 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 07/30/24 07:54:02.106
  I0730 07:54:02.113944 19 deployment.go:360] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 07/30/24 07:54:02.113
  I0730 07:54:02.117805 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0730 07:54:02.125034 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0730 07:54:02.145894 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0730 07:54:02.157821 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0730 07:54:02.168882 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0730 07:54:02.759923 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0730 07:54:03.101168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:54:03.136152 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0730 07:54:03.193598 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0730 07:54:03.200219 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0730 07:54:03.738990 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 07/30/24 07:54:03.749
  STEP: fetching the DeploymentStatus @ 07/30/24 07:54:03.755
  I0730 07:54:03.758043 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 1
  I0730 07:54:03.758277 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 1
  I0730 07:54:03.758306 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 1
  I0730 07:54:03.758464 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 1
  I0730 07:54:03.758564 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 1
  I0730 07:54:03.758571 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 2
  I0730 07:54:03.758683 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 3
  I0730 07:54:03.758854 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 2
  I0730 07:54:03.758918 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 2
  I0730 07:54:03.758926 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-9955 with ReadyReplicas 3
  STEP: deleting the Deployment @ 07/30/24 07:54:03.758
  I0730 07:54:03.767354 19 deployment.go:475] observed event type MODIFIED
  I0730 07:54:03.767526 19 deployment.go:475] observed event type MODIFIED
  I0730 07:54:03.767535 19 deployment.go:475] observed event type MODIFIED
  I0730 07:54:03.767691 19 deployment.go:475] observed event type MODIFIED
  I0730 07:54:03.767703 19 deployment.go:475] observed event type MODIFIED
  I0730 07:54:03.767839 19 deployment.go:475] observed event type MODIFIED
  I0730 07:54:03.767853 19 deployment.go:475] observed event type MODIFIED
  I0730 07:54:03.767857 19 deployment.go:475] observed event type MODIFIED
  I0730 07:54:03.767944 19 deployment.go:475] observed event type MODIFIED
  I0730 07:54:03.767952 19 deployment.go:475] observed event type MODIFIED
  I0730 07:54:03.767956 19 deployment.go:475] observed event type MODIFIED
  I0730 07:54:03.768048 19 deployment.go:475] observed event type MODIFIED
  I0730 07:54:03.768070 19 deployment.go:475] observed event type MODIFIED
  I0730 07:54:03.771216 19 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0730 07:54:03.773167 19 deployment.go:657] ReplicaSet "test-deployment-5bf4984755":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-5bf4984755",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9955",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f40dc9f4-75b5-4afa-b9fb-c124275606a3",
      ResourceVersion: (string) (len=5) "13762",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922839,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5bf4984755"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "10137fd7-3e29-4609-8144-40ad6ed7f886",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 31 30 31 33  37 66 64 37 2d 33 65 32  |":\"10137fd7-3e2|
              00000130  39 2d 34 36 30 39 2d 38  31 34 34 2d 34 30 61 64  |9-4609-8144-40ad|
              00000140  36 65 64 37 66 38 38 36  5c 22 7d 22 3a 7b 7d 7d  |6ed7f886\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "5bf4984755",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "5bf4984755",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0730 07:54:03.776690 19 deployment.go:669] pod: "test-deployment-5bf4984755-t4ck6":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-5bf4984755-t4ck6",
      GenerateName: (string) (len=27) "test-deployment-5bf4984755-",
      Namespace: (string) (len=15) "deployment-9955",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "93ba0092-5f73-4685-adb2-578692c34692",
      ResourceVersion: (string) (len=5) "13833",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922839,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5bf4984755",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "7b97db0b4b147c8c3e51b73184d9177ae54e5116ffcf50f11291ce2acca5913f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) "",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) ""
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-5bf4984755",
          UID: (types.UID) (len=36) "f40dc9f4-75b5-4afa-b9fb-c124275606a3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  66 34 30 64 63 39 66 34  |uid\":\"f40dc9f4|
              000000a0  2d 37 35 62 35 2d 34 61  66 61 2d 62 39 66 62 2d  |-75b5-4afa-b9fb-|
              000000b0  63 31 32 34 32 37 35 36  30 36 61 33 5c 22 7d 22  |c124275606a3\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=607) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 72 65 61 73 6f 6e  |me":{},"f:reason|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000090  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000000a0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 49  |"k:{\"type\":\"I|
              000000b0  6e 69 74 69 61 6c 69 7a  65 64 5c 22 7d 22 3a 7b  |nitialized\"}":{|
              000000c0  22 2e 22 3a 7b 7d 2c 22  66 3a 6c 61 73 74 50 72  |".":{},"f:lastPr|
              000000d0  6f 62 65 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |obeTime":{},"f:l|
              000000e0  61 73 74 54 72 61 6e 73  69 74 69 6f 6e 54 69 6d  |astTransitionTim|
              000000f0  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000100  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000110  2c 22 6b 3a 7b 5c 22 74  79 70 65 5c 22 3a 5c 22  |,"k:{\"type\":\"|
              00000120  50 6f 64 52 65 61 64 79  54 6f 53 74 61 72 74 43  |PodReadyToStartC|
              00000130  6f 6e 74 61 69 6e 65 72  73 5c 22 7d 22 3a 7b 22  |ontainers\"}":{"|
              00000140  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              00000150  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              00000160  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000170  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000180  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000190  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              000001a0  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              000001b0  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              000001c0  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              000001d0  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              000001e0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000001f0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              00000200  79 70 65 22 3a 7b 7d 7d  7d 2c 22 66 3a 63 6f 6e  |ype":{}}},"f:con|
              00000210  74 61 69 6e 65 72 53 74  61 74 75 73 65 73 22 3a  |tainerStatuses":|
              00000220  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 22 3a 7b 7d  |{},"f:hostIP":{}|
              00000230  2c 22 66 3a 68 6f 73 74  49 50 73 22 3a 7b 7d 2c  |,"f:hostIPs":{},|
              00000240  22 66 3a 70 68 61 73 65  22 3a 7b 7d 2c 22 66 3a  |"f:phase":{},"f:|
              00000250  73 74 61 72 74 54 69 6d  65 22 3a 7b 7d 7d 7d     |startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nwd7r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nwd7r",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "jammy",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=6) "Failed",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=9) "PodFailed",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=9) "PodFailed",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.102",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.102"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922839,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)({
              ExitCode: (int32) 2,
              Signal: (int32) 0,
              Reason: (string) (len=5) "Error",
              Message: (string) "",
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857922840,
                  loc: (*time.Location)(<already shown>)
                }
              },
              FinishedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857922843,
                  loc: (*time.Location)(<already shown>)
                }
              },
              ContainerID: (string) (len=77) "containerd://8691abe418a177c3af163825ef710a750f230e25f0b26700758780adaae10e36"
            })
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://8691abe418a177c3af163825ef710a750f230e25f0b26700758780adaae10e36",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0730 07:54:03.777686 19 deployment.go:657] ReplicaSet "test-deployment-65fbf5b65d":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-65fbf5b65d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9955",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0674bfd0-f66c-4cdc-9b05-90d1ba93c2a2",
      ResourceVersion: (string) (len=5) "13851",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "65fbf5b65d",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "10137fd7-3e29-4609-8144-40ad6ed7f886",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 31 30 31 33  37 66 64 37 2d 33 65 32  |":\"10137fd7-3e2|
              00000130  39 2d 34 36 30 39 2d 38  31 34 34 2d 34 30 61 64  |9-4609-8144-40ad|
              00000140  36 65 64 37 66 38 38 36  5c 22 7d 22 3a 7b 7d 7d  |6ed7f886\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "65fbf5b65d",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "65fbf5b65d",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0730 07:54:03.780958 19 deployment.go:669] pod: "test-deployment-65fbf5b65d-hsr8b":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-65fbf5b65d-hsr8b",
      GenerateName: (string) (len=27) "test-deployment-65fbf5b65d-",
      Namespace: (string) (len=15) "deployment-9955",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6fa65bfe-8236-4041-9a7a-f89b29e00287",
      ResourceVersion: (string) (len=5) "13846",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922845,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "65fbf5b65d",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.171.115/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.171.115/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "65998893d1fc40ed822574da90d1a6d9d94b2271a4c45697fee29e35994cc377"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-65fbf5b65d",
          UID: (types.UID) (len=36) "0674bfd0-f66c-4cdc-9b05-90d1ba93c2a2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  30 36 37 34 62 66 64 30  |uid\":\"0674bfd0|
              000000a0  2d 66 36 36 63 2d 34 63  64 63 2d 39 62 30 35 2d  |-f66c-4cdc-9b05-|
              000000b0  39 30 64 31 62 61 39 33  63 32 61 32 5c 22 7d 22  |90d1ba93c2a2\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 37 31 2e 31  31 35 5c 22 7d 22 3a 7b  |.1.171.115\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rh85s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rh85s",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "worker",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.245",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.245"
        }
      },
      PodIP: (string) (len=12) "10.1.171.115",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.171.115"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857922842,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://f142b5792b5bd033a4dc4769653af04addb48dee0324a4b9606dd2934ef43108",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0730 07:54:03.782088 19 deployment.go:669] pod: "test-deployment-65fbf5b65d-t6kx9":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-65fbf5b65d-t6kx9",
      GenerateName: (string) (len=27) "test-deployment-65fbf5b65d-",
      Namespace: (string) (len=15) "deployment-9955",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "37c2ec17-04e8-46f2-8a76-7862a9cd70ad",
      ResourceVersion: (string) (len=5) "13813",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922845,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "65fbf5b65d",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d4687207f441f323943a62d7ae38769920992bf19d719c9085353a1800ef918c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.163.23/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.163.23/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-65fbf5b65d",
          UID: (types.UID) (len=36) "0674bfd0-f66c-4cdc-9b05-90d1ba93c2a2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  30 36 37 34 62 66 64 30  |uid\":\"0674bfd0|
              000000a0  2d 66 36 36 63 2d 34 63  64 63 2d 39 62 30 35 2d  |-f66c-4cdc-9b05-|
              000000b0  39 30 64 31 62 61 39 33  63 32 61 32 5c 22 7d 22  |90d1ba93c2a2\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 36 33 2e 32  33 5c 22 7d 22 3a 7b 22  |.1.163.23\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k8x49",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k8x49",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "jammy",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.102",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.102"
        }
      },
      PodIP: (string) (len=11) "10.1.163.23",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.163.23"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857922841,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://7919660b8387dc10dfe2c2c65afd1ad049f6bf6f3d06f3a8f3ee6d13dd25457c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0730 07:54:03.791439 19 deployment.go:657] ReplicaSet "test-deployment-6b9f8f4d48":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6b9f8f4d48",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9955",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "37e6d8fa-fb9a-4c72-a34c-35c56e2e9ce0",
      ResourceVersion: (string) (len=5) "13841",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "10137fd7-3e29-4609-8144-40ad6ed7f886",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 31 30 31 33  37 66 64 37 2d 33 65 32  |":\"10137fd7-3e2|
              00000130  39 2d 34 36 30 39 2d 38  31 34 34 2d 34 30 61 64  |9-4609-8144-40ad|
              00000140  36 65 64 37 66 38 38 36  5c 22 7d 22 3a 7b 7d 7d  |6ed7f886\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0730 07:54:03.794844 19 deployment.go:669] pod: "test-deployment-6b9f8f4d48-b2gnh":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6b9f8f4d48-b2gnh",
      GenerateName: (string) (len=27) "test-deployment-6b9f8f4d48-",
      Namespace: (string) (len=15) "deployment-9955",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fdf78b9a-7ed2-4fd3-bf5c-c8c2f47e8afc",
      ResourceVersion: (string) (len=5) "13860",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.163.24/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "90814ede8b9570ab6459fd73623696ccd1fc563b91d1d498d0e2b84e5b85aa30",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.163.24/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6b9f8f4d48",
          UID: (types.UID) (len=36) "37e6d8fa-fb9a-4c72-a34c-35c56e2e9ce0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  33 37 65 36 64 38 66 61  |uid\":\"37e6d8fa|
              000000a0  2d 66 62 39 61 2d 34 63  37 32 2d 61 33 34 63 2d  |-fb9a-4c72-a34c-|
              000000b0  33 35 63 35 36 65 32 65  39 63 65 30 5c 22 7d 22  |35c56e2e9ce0\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 36 33 2e 32  34 5c 22 7d 22 3a 7b 22  |.1.163.24\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sbgqp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sbgqp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "jammy",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.102",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.102"
        }
      },
      PodIP: (string) (len=11) "10.1.163.24",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.163.24"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857922842,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c60b392aeb6663b643093048715ca1a27e93158bde632ff02566371e03a830f4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0730 07:54:03.795769 19 deployment.go:669] pod: "test-deployment-6b9f8f4d48-rfz48":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6b9f8f4d48-rfz48",
      GenerateName: (string) (len=27) "test-deployment-6b9f8f4d48-",
      Namespace: (string) (len=15) "deployment-9955",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2d9fe407-4ae1-43ce-a7b5-c084ebecff05",
      ResourceVersion: (string) (len=5) "13859",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.171.116/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.171.116/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c172b753b1ba38b6389c48df01532f566aac7355664f4ede6c6b7cb7e12ee2de"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6b9f8f4d48",
          UID: (types.UID) (len=36) "37e6d8fa-fb9a-4c72-a34c-35c56e2e9ce0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  33 37 65 36 64 38 66 61  |uid\":\"37e6d8fa|
              000000a0  2d 66 62 39 61 2d 34 63  37 32 2d 61 33 34 63 2d  |-fb9a-4c72-a34c-|
              000000b0  33 35 63 35 36 65 32 65  39 63 65 30 5c 22 7d 22  |35c56e2e9ce0\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 37 31 2e 31  31 36 5c 22 7d 22 3a 7b  |.1.171.116\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q2skx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q2skx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "worker",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.245",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.245"
        }
      },
      PodIP: (string) (len=12) "10.1.171.116",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.171.116"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922843,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857922843,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3da4c0ec7aec87bbb80503a1e6aec3fd5c3004536a1195d0630c345cc3a1867e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0730 07:54:03.798054 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9955" for this suite. @ 07/30/24 07:54:03.799
• [4.187 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:342
  STEP: Creating a kubernetes client @ 07/30/24 07:54:03.804
  I0730 07:54:03.804352 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename kubectl @ 07/30/24 07:54:03.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:54:03.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:54:03.821
  STEP: creating a replication controller @ 07/30/24 07:54:03.822
  I0730 07:54:03.822763 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-8867 create -f -'
  I0730 07:54:03.884076 19 builder.go:146] stderr: ""
  I0730 07:54:03.884109 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/30/24 07:54:03.884
  I0730 07:54:03.884312 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-8867 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0730 07:54:03.922526 19 builder.go:146] stderr: ""
  I0730 07:54:03.922559 19 builder.go:147] stdout: "update-demo-nautilus-q52tt update-demo-nautilus-q8gff "
  I0730 07:54:03.922691 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-8867 get pods update-demo-nautilus-q52tt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0730 07:54:03.953948 19 builder.go:146] stderr: ""
  I0730 07:54:03.953981 19 builder.go:147] stdout: ""
  I0730 07:54:03.953986 19 kubectl.go:2501] update-demo-nautilus-q52tt is created but not running
  E0730 07:54:04.101189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:05.101596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:06.102276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:07.103190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:08.102896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:54:08.954223 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-8867 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0730 07:54:08.990988 19 builder.go:146] stderr: ""
  I0730 07:54:08.991033 19 builder.go:147] stdout: "update-demo-nautilus-q52tt update-demo-nautilus-q8gff "
  I0730 07:54:08.991065 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-8867 get pods update-demo-nautilus-q52tt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0730 07:54:09.022497 19 builder.go:146] stderr: ""
  I0730 07:54:09.022572 19 builder.go:147] stdout: ""
  I0730 07:54:09.022580 19 kubectl.go:2501] update-demo-nautilus-q52tt is created but not running
  E0730 07:54:09.103933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:10.105365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:11.105910      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:12.106476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:13.106585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:54:14.023046 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-8867 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0730 07:54:14.071027 19 builder.go:146] stderr: ""
  I0730 07:54:14.071054 19 builder.go:147] stdout: "update-demo-nautilus-q52tt update-demo-nautilus-q8gff "
  I0730 07:54:14.071076 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-8867 get pods update-demo-nautilus-q52tt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0730 07:54:14.105646 19 builder.go:146] stderr: ""
  I0730 07:54:14.105671 19 builder.go:147] stdout: ""
  I0730 07:54:14.105677 19 kubectl.go:2501] update-demo-nautilus-q52tt is created but not running
  E0730 07:54:14.106787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:15.107341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:16.108315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:17.108518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:18.109650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:54:19.106045 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-8867 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0730 07:54:19.109798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:54:19.158057 19 builder.go:146] stderr: ""
  I0730 07:54:19.158083 19 builder.go:147] stdout: "update-demo-nautilus-q52tt update-demo-nautilus-q8gff "
  I0730 07:54:19.158163 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-8867 get pods update-demo-nautilus-q52tt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0730 07:54:19.189645 19 builder.go:146] stderr: ""
  I0730 07:54:19.189671 19 builder.go:147] stdout: ""
  I0730 07:54:19.189799 19 kubectl.go:2501] update-demo-nautilus-q52tt is created but not running
  E0730 07:54:20.110230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:21.110354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:22.110617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:23.110784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:24.111074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:54:24.190191 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-8867 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0730 07:54:24.241487 19 builder.go:146] stderr: ""
  I0730 07:54:24.241512 19 builder.go:147] stdout: "update-demo-nautilus-q52tt update-demo-nautilus-q8gff "
  I0730 07:54:24.241536 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-8867 get pods update-demo-nautilus-q52tt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0730 07:54:24.274230 19 builder.go:146] stderr: ""
  I0730 07:54:24.274259 19 builder.go:147] stdout: "true"
  I0730 07:54:24.274287 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-8867 get pods update-demo-nautilus-q52tt -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0730 07:54:24.306060 19 builder.go:146] stderr: ""
  I0730 07:54:24.306094 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0730 07:54:24.306105 19 kubectl.go:2392] validating pod update-demo-nautilus-q52tt
  I0730 07:54:24.308374 19 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0730 07:54:24.308438 19 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0730 07:54:24.308447 19 kubectl.go:2519] update-demo-nautilus-q52tt is verified up and running
  I0730 07:54:24.308478 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-8867 get pods update-demo-nautilus-q8gff -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0730 07:54:24.340150 19 builder.go:146] stderr: ""
  I0730 07:54:24.340178 19 builder.go:147] stdout: "true"
  I0730 07:54:24.340215 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-8867 get pods update-demo-nautilus-q8gff -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0730 07:54:24.376635 19 builder.go:146] stderr: ""
  I0730 07:54:24.376672 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0730 07:54:24.376679 19 kubectl.go:2392] validating pod update-demo-nautilus-q8gff
  I0730 07:54:24.379003 19 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0730 07:54:24.379091 19 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0730 07:54:24.379102 19 kubectl.go:2519] update-demo-nautilus-q8gff is verified up and running
  STEP: using delete to clean up resources @ 07/30/24 07:54:24.379
  I0730 07:54:24.379192 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-8867 delete --grace-period=0 --force -f -'
  I0730 07:54:24.419513 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0730 07:54:24.419569 19 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0730 07:54:24.419709 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-8867 get rc,svc -l name=update-demo --no-headers'
  I0730 07:54:24.466455 19 builder.go:146] stderr: "No resources found in kubectl-8867 namespace.\n"
  I0730 07:54:24.466492 19 builder.go:147] stdout: ""
  I0730 07:54:24.466680 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-8867 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0730 07:54:24.521393 19 builder.go:146] stderr: ""
  I0730 07:54:24.521432 19 builder.go:147] stdout: ""
  I0730 07:54:24.521599 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8867" for this suite. @ 07/30/24 07:54:24.524
• [20.744 seconds]
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 07/30/24 07:54:24.548
  I0730 07:54:24.548885 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename deployment @ 07/30/24 07:54:24.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:54:24.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:54:24.567
  I0730 07:54:24.568972 19 deployment.go:1196] Creating deployment "webserver-deployment"
  I0730 07:54:24.572427 19 deployment.go:1200] Waiting for observed generation 1
  E0730 07:54:25.111330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:26.112419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:54:26.580876 19 deployment.go:1205] Waiting for all required pods to come up
  I0730 07:54:26.587709 19 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 07/30/24 07:54:26.587
  I0730 07:54:26.588020 19 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0730 07:54:26.596011 19 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0730 07:54:26.613873 19 deployment.go:313] Updating deployment webserver-deployment
  I0730 07:54:26.613905 19 deployment.go:1224] Waiting for observed generation 2
  E0730 07:54:27.112901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:28.113521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:54:28.623824 19 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0730 07:54:28.629181 19 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0730 07:54:28.634142 19 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0730 07:54:28.648033 19 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0730 07:54:28.648086 19 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0730 07:54:28.651786 19 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0730 07:54:28.661201 19 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0730 07:54:28.661218 19 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0730 07:54:28.667508 19 deployment.go:313] Updating deployment webserver-deployment
  I0730 07:54:28.667527 19 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0730 07:54:28.670787 19 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  E0730 07:54:29.113734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:30.114973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:54:30.676931 19 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0730 07:54:30.702288 19 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "63edf323-2be1-401c-9614-026a63467a2f",
      ResourceVersion: (string) (len=5) "14443",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922864,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 9,
      AvailableReplicas: (int32) 9,
      UnavailableReplicas: (int32) 24,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-67c89d485c\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0730 07:54:30.713471 19 deployment.go:39] New ReplicaSet "webserver-deployment-67c89d485c" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-67c89d485c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "85f0dcb4-3eea-42c2-99b9-9357ea7cc497",
      ResourceVersion: (string) (len=5) "14370",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "63edf323-2be1-401c-9614-026a63467a2f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 33 65 64 66 33  32 33 2d 32 62 65 31 2d  |\"63edf323-2be1-|
              00000120  34 30 31 63 2d 39 36 31  34 2d 30 32 36 61 36 33  |401c-9614-026a63|
              00000130  34 36 37 61 32 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |467a2f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0730 07:54:30.716216 19 deployment.go:44] All old ReplicaSets of Deployment "webserver-deployment":
  I0730 07:54:30.716418 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-77db57d8df",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "61e67acc-5300-4832-85c9-66e484740193",
      ResourceVersion: (string) (len=5) "14442",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922864,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "63edf323-2be1-401c-9614-026a63467a2f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 33 65 64 66 33  32 33 2d 32 62 65 31 2d  |\"63edf323-2be1-|
              00000120  34 30 31 63 2d 39 36 31  34 2d 30 32 36 61 36 33  |401c-9614-026a63|
              00000130  34 36 37 61 32 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |467a2f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 9,
      AvailableReplicas: (int32) 9,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0730 07:54:30.725257 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-542mc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-542mc",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-1587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "113af6d8-db9e-4734-87c9-cd206f48f76c",
      ResourceVersion: (string) (len=5) "14378",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "85f0dcb4-3eea-42c2-99b9-9357ea7cc497",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 35  66 30 64 63 62 34 2d 33  |d\":\"85f0dcb4-3|
              00000090  65 65 61 2d 34 32 63 32  2d 39 39 62 39 2d 39 33  |eea-42c2-99b9-93|
              000000a0  35 37 65 61 37 63 63 34  39 37 5c 22 7d 22 3a 7b  |57ea7cc497\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bfrr9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bfrr9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "jammy",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.102",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.102"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 07:54:30.729135 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-b42vh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-b42vh",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-1587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f60d4da1-3e03-4fb3-b0ed-fa6c74a4ad7c",
      ResourceVersion: (string) (len=5) "14262",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d2cd7aafc4df74f309b7b567db35f65c4d542efa125692b0829eab39e68a3d73",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.163.29/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.163.29/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "85f0dcb4-3eea-42c2-99b9-9357ea7cc497",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 35  66 30 64 63 62 34 2d 33  |d\":\"85f0dcb4-3|
              00000090  65 65 61 2d 34 32 63 32  2d 39 39 62 39 2d 39 33  |eea-42c2-99b9-93|
              000000a0  35 37 65 61 37 63 63 34  39 37 5c 22 7d 22 3a 7b  |57ea7cc497\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qc6f9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qc6f9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "jammy",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.102",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.102"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 07:54:30.732488 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-b5588" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-b5588",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-1587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c1765d38-5b65-415f-8039-fbb616c05f2a",
      ResourceVersion: (string) (len=5) "14468",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.163.37/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "561237313fd7e942158755728ce18aa24776dab71f2e1f963afcc47a63184744",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.163.37/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "85f0dcb4-3eea-42c2-99b9-9357ea7cc497",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 35  66 30 64 63 62 34 2d 33  |d\":\"85f0dcb4-3|
              00000090  65 65 61 2d 34 32 63 32  2d 39 39 62 39 2d 39 33  |eea-42c2-99b9-93|
              000000a0  35 37 65 61 37 63 63 34  39 37 5c 22 7d 22 3a 7b  |57ea7cc497\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922870,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lc5bf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lc5bf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "jammy",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.102",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.102"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 07:54:30.735442 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-bm25h" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-bm25h",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-1587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4b94e8e8-ff00-43a0-b5dc-a1c79401a28d",
      ResourceVersion: (string) (len=5) "14466",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.171.69/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "4f0ab0bfc2b3d36e5c6812cca550788f48c8b399ae79f874d4fff5dfc2aa5d86",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.171.69/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "85f0dcb4-3eea-42c2-99b9-9357ea7cc497",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 35  66 30 64 63 62 34 2d 33  |d\":\"85f0dcb4-3|
              00000090  65 65 61 2d 34 32 63 32  2d 39 39 62 39 2d 39 33  |eea-42c2-99b9-93|
              000000a0  35 37 65 61 37 63 63 34  39 37 5c 22 7d 22 3a 7b  |57ea7cc497\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922870,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mbgbq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mbgbq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "worker",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.245",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.245"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 07:54:30.738830 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-k2wvv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-k2wvv",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-1587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "80e17e52-1056-410a-b6f2-aa33dd0fb1ed",
      ResourceVersion: (string) (len=5) "14270",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.171.124/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "92b49f56a42ea88ed15a5b15c004ae55a721c939bfe75cca3feecb2d13b87ae5",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.171.124/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "85f0dcb4-3eea-42c2-99b9-9357ea7cc497",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 35  66 30 64 63 62 34 2d 33  |d\":\"85f0dcb4-3|
              00000090  65 65 61 2d 34 32 63 32  2d 39 39 62 39 2d 39 33  |eea-42c2-99b9-93|
              000000a0  35 37 65 61 37 63 63 34  39 37 5c 22 7d 22 3a 7b  |57ea7cc497\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cq986",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cq986",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "worker",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.245",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.245"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 07:54:30.741655 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-mm9k8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-mm9k8",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-1587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1906125f-a1fa-44f5-b082-6a375412c0f5",
      ResourceVersion: (string) (len=5) "14272",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "cf25eb6a2b29d8f1e9e2de0ad91f4594f0d3825fd9750fbf471454d944f210a5",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.163.34/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.163.34/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "85f0dcb4-3eea-42c2-99b9-9357ea7cc497",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 35  66 30 64 63 62 34 2d 33  |d\":\"85f0dcb4-3|
              00000090  65 65 61 2d 34 32 63 32  2d 39 39 62 39 2d 39 33  |eea-42c2-99b9-93|
              000000a0  35 37 65 61 37 63 63 34  39 37 5c 22 7d 22 3a 7b  |57ea7cc497\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2fmgp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2fmgp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "jammy",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.102",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.102"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 07:54:30.744321 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-pgpw7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-pgpw7",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-1587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "438f38e8-4896-4dcb-9437-49d7f9ff454c",
      ResourceVersion: (string) (len=5) "14258",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "b8d74d4c371b8efb8a78657410dc37253538fb4d88617334d14321d04a5fb26c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.171.123/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.171.123/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "85f0dcb4-3eea-42c2-99b9-9357ea7cc497",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 35  66 30 64 63 62 34 2d 33  |d\":\"85f0dcb4-3|
              00000090  65 65 61 2d 34 32 63 32  2d 39 39 62 39 2d 39 33  |eea-42c2-99b9-93|
              000000a0  35 37 65 61 37 63 63 34  39 37 5c 22 7d 22 3a 7b  |57ea7cc497\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-btjgh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-btjgh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "worker",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.245",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.245"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 07:54:30.746975 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-psxd6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-psxd6",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-1587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ba028e13-fbc3-48dd-bc34-dc16422171b6",
      ResourceVersion: (string) (len=5) "14436",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "fa081bba10b6325346e0713d45f8c49753e4ce17efc696d08f6ca5c812a69f43",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.171.67/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.171.67/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "85f0dcb4-3eea-42c2-99b9-9357ea7cc497",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 35  66 30 64 63 62 34 2d 33  |d\":\"85f0dcb4-3|
              00000090  65 65 61 2d 34 32 63 32  2d 39 39 62 39 2d 39 33  |eea-42c2-99b9-93|
              000000a0  35 37 65 61 37 63 63 34  39 37 5c 22 7d 22 3a 7b  |57ea7cc497\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rvjfl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rvjfl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "worker",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.245",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.245"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 07:54:30.749621 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-pxnx5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-pxnx5",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-1587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b1ced424-d032-40fa-b4b9-ad6592b8a185",
      ResourceVersion: (string) (len=5) "14484",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "175bc02c3827d298332769e1c96e4c4c2d8e8b6bab27c0ad7fc21fd62b5da66c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.171.72/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.171.72/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "85f0dcb4-3eea-42c2-99b9-9357ea7cc497",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 35  66 30 64 63 62 34 2d 33  |d\":\"85f0dcb4-3|
              00000090  65 65 61 2d 34 32 63 32  2d 39 39 62 39 2d 39 33  |eea-42c2-99b9-93|
              000000a0  35 37 65 61 37 63 63 34  39 37 5c 22 7d 22 3a 7b  |57ea7cc497\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922870,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qcgvk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qcgvk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "worker",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.245",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.245"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 07:54:30.752117 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-r6vpx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-r6vpx",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-1587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dd171fa9-c47a-438e-9f93-d3f62720d48b",
      ResourceVersion: (string) (len=5) "14267",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "b80064c1144498033212157c3f7ce1be887e25d120761638741e1efad3e68ef0",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.163.30/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.163.30/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "85f0dcb4-3eea-42c2-99b9-9357ea7cc497",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 35  66 30 64 63 62 34 2d 33  |d\":\"85f0dcb4-3|
              00000090  65 65 61 2d 34 32 63 32  2d 39 39 62 39 2d 39 33  |eea-42c2-99b9-93|
              000000a0  35 37 65 61 37 63 63 34  39 37 5c 22 7d 22 3a 7b  |57ea7cc497\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lsgc4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lsgc4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "jammy",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.102",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.102"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922866,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 07:54:30.755400 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-r8ftg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-r8ftg",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-1587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "510374e9-b397-4a8f-9882-63ca6b923386",
      ResourceVersion: (string) (len=5) "14425",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e64d6ad6d90984d5c3cf32af3b5c5b8c2e20866d00701c1e3940d694b1dbd6a5",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.163.35/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.163.35/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "85f0dcb4-3eea-42c2-99b9-9357ea7cc497",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 35  66 30 64 63 62 34 2d 33  |d\":\"85f0dcb4-3|
              00000090  65 65 61 2d 34 32 63 32  2d 39 39 62 39 2d 39 33  |eea-42c2-99b9-93|
              000000a0  35 37 65 61 37 63 63 34  39 37 5c 22 7d 22 3a 7b  |57ea7cc497\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kl9rc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kl9rc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "jammy",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.102",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.102"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 07:54:30.757770 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-s9bbz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-s9bbz",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-1587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4609605c-e0de-4f77-951b-607a72f5aa79",
      ResourceVersion: (string) (len=5) "14498",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "8db212f21efa90f6148aa29e14beb2fb30aaf982d1cf9dad4b941aec81e3231c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.163.38/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.163.38/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "85f0dcb4-3eea-42c2-99b9-9357ea7cc497",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 35  66 30 64 63 62 34 2d 33  |d\":\"85f0dcb4-3|
              00000090  65 65 61 2d 34 32 63 32  2d 39 39 62 39 2d 39 33  |eea-42c2-99b9-93|
              000000a0  35 37 65 61 37 63 63 34  39 37 5c 22 7d 22 3a 7b  |57ea7cc497\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922870,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bcq78",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bcq78",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "jammy",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.102",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.102"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 07:54:30.760160 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-xjptb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-xjptb",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-1587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5e4ae5f1-bd73-4f12-be1c-a845c3909ee7",
      ResourceVersion: (string) (len=5) "14396",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "2a59e4be01dcb76dc71b22bd22f1ebb7a471c6418b9845abbfc12b8bae28461a",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.171.125/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.171.125/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "85f0dcb4-3eea-42c2-99b9-9357ea7cc497",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 35  66 30 64 63 62 34 2d 33  |d\":\"85f0dcb4-3|
              00000090  65 65 61 2d 34 32 63 32  2d 39 39 62 39 2d 39 33  |eea-42c2-99b9-93|
              000000a0  35 37 65 61 37 63 63 34  39 37 5c 22 7d 22 3a 7b  |57ea7cc497\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-55w7b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-55w7b",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "worker",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.245",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.245"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 07:54:30.762391 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-5t7f9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-5t7f9",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e9f312a5-176c-4301-a9ab-5893fde6335f",
      ResourceVersion: (string) (len=5) "14438",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f6abc937e437d99ec03af38ca6b5b827eb39c384c019178e968e472f98c9e1a1",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.171.126/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.171.126/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "61e67acc-5300-4832-85c9-66e484740193",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  65 36 37 61 63 63 2d 35  |d\":\"61e67acc-5|
              00000090  33 30 30 2d 34 38 33 32  2d 38 35 63 39 2d 36 36  |300-4832-85c9-66|
              000000a0  65 34 38 34 37 34 30 31  39 33 5c 22 7d 22 3a 7b  |e484740193\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 37 31 2e 31  32 36 5c 22 7d 22 3a 7b  |.1.171.126\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hxm49",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hxm49",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "worker",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.245",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.245"
        }
      },
      PodIP: (string) (len=12) "10.1.171.126",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.171.126"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857922869,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a592f4c2c452adb6f0828bc3a63c63ad50c4c7bd872389e0ae9dc7d4fd177aa7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 07:54:30.764522 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-7f98z" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-7f98z",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "226a14a5-9ee5-4e52-b712-3a1f18302342",
      ResourceVersion: (string) (len=5) "14178",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922864,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "38aeccc138e51bc5b8dad0050c62ab3228ee8b48ee7679384b49e9c4974db2c8",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.171.118/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.171.118/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "61e67acc-5300-4832-85c9-66e484740193",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  65 36 37 61 63 63 2d 35  |d\":\"61e67acc-5|
              00000090  33 30 30 2d 34 38 33 32  2d 38 35 63 39 2d 36 36  |300-4832-85c9-66|
              000000a0  65 34 38 34 37 34 30 31  39 33 5c 22 7d 22 3a 7b  |e484740193\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 37 31 2e 31  31 38 5c 22 7d 22 3a 7b  |.1.171.118\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x949s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x949s",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "worker",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.245",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.245"
        }
      },
      PodIP: (string) (len=12) "10.1.171.118",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.171.118"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922864,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857922865,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://41960ee0e8bb02a56490fbd84f0a833d8c6b6ecaf84e373931247fd9635ff6b2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 07:54:30.766681 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-7vjrp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-7vjrp",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9f0a0285-fdbc-408f-8b94-6d07fb7210cb",
      ResourceVersion: (string) (len=5) "14203",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922864,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f09344bc6db74bc65c820d2378ae9f8ff29796cf3d00036fdb3c61278dc03758",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.163.31/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.163.31/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "61e67acc-5300-4832-85c9-66e484740193",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  65 36 37 61 63 63 2d 35  |d\":\"61e67acc-5|
              00000090  33 30 30 2d 34 38 33 32  2d 38 35 63 39 2d 36 36  |300-4832-85c9-66|
              000000a0  65 34 38 34 37 34 30 31  39 33 5c 22 7d 22 3a 7b  |e484740193\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 36 33 2e 33  31 5c 22 7d 22 3a 7b 22  |.1.163.31\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7rtcm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7rtcm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "jammy",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.102",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.102"
        }
      },
      PodIP: (string) (len=11) "10.1.163.31",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.163.31"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922864,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857922865,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f0d9b280819240d540cd88102bbb96352f8c73e4081c0a95c6fb4016636551c7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 07:54:30.768240 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-bjdsj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-bjdsj",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b489c147-54f3-4a5a-a6fe-fe741c3a2871",
      ResourceVersion: (string) (len=5) "14373",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "61e67acc-5300-4832-85c9-66e484740193",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  65 36 37 61 63 63 2d 35  |d\":\"61e67acc-5|
              00000090  33 30 30 2d 34 38 33 32  2d 38 35 63 39 2d 36 36  |300-4832-85c9-66|
              000000a0  65 34 38 34 37 34 30 31  39 33 5c 22 7d 22 3a 7b  |e484740193\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d947j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d947j",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "jammy",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.102",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.102"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 07:54:30.770670 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-csp69" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-csp69",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a056051c-725b-44c1-a607-830b59a6fb61",
      ResourceVersion: (string) (len=5) "14186",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922864,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "bf1152303ddc3c3caaba687d3337bc86137ff87bb22fea0ebc5130a334f24db5",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.171.121/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.171.121/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "61e67acc-5300-4832-85c9-66e484740193",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  65 36 37 61 63 63 2d 35  |d\":\"61e67acc-5|
              00000090  33 30 30 2d 34 38 33 32  2d 38 35 63 39 2d 36 36  |300-4832-85c9-66|
              000000a0  65 34 38 34 37 34 30 31  39 33 5c 22 7d 22 3a 7b  |e484740193\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 37 31 2e 31  32 31 5c 22 7d 22 3a 7b  |.1.171.121\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p7qng",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p7qng",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "worker",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.245",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.245"
        }
      },
      PodIP: (string) (len=12) "10.1.171.121",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.171.121"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922864,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857922865,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c55cbf7731f1612bdcac267f471eb378ddee8d7b56923072a9f3f41a50a6fb28",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 07:54:30.773311 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-d6q6p" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-d6q6p",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0605d1b0-8bf2-47d5-ae52-bfb24ae6a0f7",
      ResourceVersion: (string) (len=5) "14492",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a248085e2a3d533b5b3316736a486ad07cb5d2f1c7f21fb787c50e0d9c0a8fa8",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.163.39/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.163.39/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "61e67acc-5300-4832-85c9-66e484740193",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  65 36 37 61 63 63 2d 35  |d\":\"61e67acc-5|
              00000090  33 30 30 2d 34 38 33 32  2d 38 35 63 39 2d 36 36  |300-4832-85c9-66|
              000000a0  65 34 38 34 37 34 30 31  39 33 5c 22 7d 22 3a 7b  |e484740193\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922870,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vrd95",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vrd95",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "jammy",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.102",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.102"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 07:54:30.775265 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-fgssk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-fgssk",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e5c991f9-776f-4183-a6ab-1bb1a88104a4",
      ResourceVersion: (string) (len=5) "14448",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "310d670941392178973f706daeb17daa800ac848d8fb319f87cd54c953809ac0",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.171.68/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.171.68/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "61e67acc-5300-4832-85c9-66e484740193",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  65 36 37 61 63 63 2d 35  |d\":\"61e67acc-5|
              00000090  33 30 30 2d 34 38 33 32  2d 38 35 63 39 2d 36 36  |300-4832-85c9-66|
              000000a0  65 34 38 34 37 34 30 31  39 33 5c 22 7d 22 3a 7b  |e484740193\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l7lhk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l7lhk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "worker",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.245",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.245"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 07:54:30.777404 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-fnczq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-fnczq",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "676f37da-2bbc-4d00-8da9-ef9a4bb2bb23",
      ResourceVersion: (string) (len=5) "14184",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922864,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "2db0d864a7b8d79fe3da9ae6e217820ca15f3300e8e4ea6cbbf8bfde0214458c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.171.119/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.171.119/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "61e67acc-5300-4832-85c9-66e484740193",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  65 36 37 61 63 63 2d 35  |d\":\"61e67acc-5|
              00000090  33 30 30 2d 34 38 33 32  2d 38 35 63 39 2d 36 36  |300-4832-85c9-66|
              000000a0  65 34 38 34 37 34 30 31  39 33 5c 22 7d 22 3a 7b  |e484740193\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 37 31 2e 31  31 39 5c 22 7d 22 3a 7b  |.1.171.119\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6b4w6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6b4w6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "worker",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.245",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.245"
        }
      },
      PodIP: (string) (len=12) "10.1.171.119",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.171.119"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922864,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857922865,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2a9f7f4e9b44b0b76fff0b7b5b5965eac1e63b71acc2a0d39bf9f0e819ecfd5c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 07:54:30.782939 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-gstzs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-gstzs",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "93fd38ef-094b-43fd-9048-06314e33b33b",
      ResourceVersion: (string) (len=5) "14413",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "655b8df1c5de01dc6e0aa1b45b5e0770710546190c20121ce33c23a5e25e427e",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.1.163.1/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.1.163.1/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "61e67acc-5300-4832-85c9-66e484740193",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  65 36 37 61 63 63 2d 35  |d\":\"61e67acc-5|
              00000090  33 30 30 2d 34 38 33 32  2d 38 35 63 39 2d 36 36  |300-4832-85c9-66|
              000000a0  65 34 38 34 37 34 30 31  39 33 5c 22 7d 22 3a 7b  |e484740193\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wrhvk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wrhvk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "jammy",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.102",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.102"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 07:54:30.785587 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-kp7r4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-kp7r4",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "136e8113-3698-4251-90b2-46415a629b04",
      ResourceVersion: (string) (len=5) "14388",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "61e67acc-5300-4832-85c9-66e484740193",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  65 36 37 61 63 63 2d 35  |d\":\"61e67acc-5|
              00000090  33 30 30 2d 34 38 33 32  2d 38 35 63 39 2d 36 36  |300-4832-85c9-66|
              000000a0  65 34 38 34 37 34 30 31  39 33 5c 22 7d 22 3a 7b  |e484740193\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4f54k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4f54k",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "jammy",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.102",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.102"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 07:54:30.788137 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-l6rc6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-l6rc6",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b8a0852f-da8a-47ac-b341-68bc79dbfe14",
      ResourceVersion: (string) (len=5) "14419",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "38c682f946c9b46ba09788f1d139f693c17644bf871bce9510bcb2b83555be0e",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.171.127/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.171.127/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "61e67acc-5300-4832-85c9-66e484740193",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  65 36 37 61 63 63 2d 35  |d\":\"61e67acc-5|
              00000090  33 30 30 2d 34 38 33 32  2d 38 35 63 39 2d 36 36  |300-4832-85c9-66|
              000000a0  65 34 38 34 37 34 30 31  39 33 5c 22 7d 22 3a 7b  |e484740193\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z78n9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z78n9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "worker",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.245",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.245"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 07:54:30.789360 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-n7j47" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-n7j47",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8c22c039-f086-415b-a078-e3e27acda92f",
      ResourceVersion: (string) (len=5) "14192",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922864,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "821fa1fc0dcc6ee0124fff499d0103b1e759978df55394f288fc1470ebc7cfe2",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.163.33/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.163.33/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "61e67acc-5300-4832-85c9-66e484740193",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  65 36 37 61 63 63 2d 35  |d\":\"61e67acc-5|
              00000090  33 30 30 2d 34 38 33 32  2d 38 35 63 39 2d 36 36  |300-4832-85c9-66|
              000000a0  65 34 38 34 37 34 30 31  39 33 5c 22 7d 22 3a 7b  |e484740193\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 36 33 2e 33  33 5c 22 7d 22 3a 7b 22  |.1.163.33\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bxjbt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bxjbt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "jammy",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.102",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.102"
        }
      },
      PodIP: (string) (len=11) "10.1.163.33",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.163.33"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922864,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857922865,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://329346c98de8da9097f0f661ed9b0a9cbffbe8579db974611b65b20b1be921ca",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 07:54:30.792727 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-n7klc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-n7klc",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c66d7c50-5722-4920-b94a-e3e61c4da3e7",
      ResourceVersion: (string) (len=5) "14457",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.1.163.2/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e38ae47deea2b9a4fc76ea4a858ec3520a3734d60239cc07f1769d1de9971568",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.1.163.2/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "61e67acc-5300-4832-85c9-66e484740193",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  65 36 37 61 63 63 2d 35  |d\":\"61e67acc-5|
              00000090  33 30 30 2d 34 38 33 32  2d 38 35 63 39 2d 36 36  |300-4832-85c9-66|
              000000a0  65 34 38 34 37 34 30 31  39 33 5c 22 7d 22 3a 7b  |e484740193\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922870,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w8bb7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w8bb7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "jammy",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.102",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.102"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 07:54:30.795282 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-nbmvp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-nbmvp",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f817f95a-dd12-4d9c-9d65-9c6f560e4ad6",
      ResourceVersion: (string) (len=5) "14473",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "bdcc0caa7df6c1b68c4df711d5e44febd15b6e5ab4be4550ed5aeea3ed5cacb9",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.171.71/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.171.71/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "61e67acc-5300-4832-85c9-66e484740193",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  65 36 37 61 63 63 2d 35  |d\":\"61e67acc-5|
              00000090  33 30 30 2d 34 38 33 32  2d 38 35 63 39 2d 36 36  |300-4832-85c9-66|
              000000a0  65 34 38 34 37 34 30 31  39 33 5c 22 7d 22 3a 7b  |e484740193\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922870,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bxrl5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bxrl5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "worker",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.245",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.245"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 07:54:30.797949 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-rdkbf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-rdkbf",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bd2c9c18-eede-4a3c-b49b-3ca8657687f4",
      ResourceVersion: (string) (len=5) "14175",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922864,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9db1d9b8495b7ddf9c5a7b2103ee285c67f100ecb61d22c9057fbf3596bdb060",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.171.122/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.171.122/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "61e67acc-5300-4832-85c9-66e484740193",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  65 36 37 61 63 63 2d 35  |d\":\"61e67acc-5|
              00000090  33 30 30 2d 34 38 33 32  2d 38 35 63 39 2d 36 36  |300-4832-85c9-66|
              000000a0  65 34 38 34 37 34 30 31  39 33 5c 22 7d 22 3a 7b  |e484740193\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 37 31 2e 31  32 32 5c 22 7d 22 3a 7b  |.1.171.122\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h75rc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h75rc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "worker",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.245",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.245"
        }
      },
      PodIP: (string) (len=12) "10.1.171.122",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.171.122"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922864,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857922865,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a39a45af9042e4532e0a018d2e83abefddd285428bb0e22f3cf83e40819880eb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 07:54:30.800108 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-sqn7v" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-sqn7v",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4736ec1d-9193-4f4a-abcf-f663f43acd22",
      ResourceVersion: (string) (len=5) "14485",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9242e48f6620dc32d53052df51a85ef067aea5cd9ceb0fb9dda17b5f835b750e",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.163.36/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.163.36/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "61e67acc-5300-4832-85c9-66e484740193",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  65 36 37 61 63 63 2d 35  |d\":\"61e67acc-5|
              00000090  33 30 30 2d 34 38 33 32  2d 38 35 63 39 2d 36 36  |300-4832-85c9-66|
              000000a0  65 34 38 34 37 34 30 31  39 33 5c 22 7d 22 3a 7b  |e484740193\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922870,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gf9d9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gf9d9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "jammy",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.102",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.102"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 07:54:30.805872 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-xn4t8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-xn4t8",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "32ae15c6-c673-4718-9d8e-7e53595fa0a9",
      ResourceVersion: (string) (len=5) "14403",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.163.32/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.163.32/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "99041ef9d4b0e01075deff6c0fb4db4915d99d315522ef005a729ed91055ea3f"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "61e67acc-5300-4832-85c9-66e484740193",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  65 36 37 61 63 63 2d 35  |d\":\"61e67acc-5|
              00000090  33 30 30 2d 34 38 33 32  2d 38 35 63 39 2d 36 36  |300-4832-85c9-66|
              000000a0  65 34 38 34 37 34 30 31  39 33 5c 22 7d 22 3a 7b  |e484740193\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gd65d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gd65d",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "jammy",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.102",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.102"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 07:54:30.811150 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-xpcnr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-xpcnr",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eae21fa4-bcab-427c-b750-0bd815083ef8",
      ResourceVersion: (string) (len=5) "14194",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922864,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.163.25/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "7a3a26a5eb644db065b4d4bd0cb2b45ad53ed64400d15ddec54a02f72863ce61",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.163.25/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "61e67acc-5300-4832-85c9-66e484740193",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  65 36 37 61 63 63 2d 35  |d\":\"61e67acc-5|
              00000090  33 30 30 2d 34 38 33 32  2d 38 35 63 39 2d 36 36  |300-4832-85c9-66|
              000000a0  65 34 38 34 37 34 30 31  39 33 5c 22 7d 22 3a 7b  |e484740193\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 36 33 2e 32  35 5c 22 7d 22 3a 7b 22  |.1.163.25\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jjhnw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jjhnw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "jammy",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.102",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.102"
        }
      },
      PodIP: (string) (len=11) "10.1.163.25",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.163.25"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922864,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857922865,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d1b0961901bedf7017fe7b577b35be0e068de59e7f5e01e44ce10eaf7a5a6606",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 07:54:30.812676 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-xzdmh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-xzdmh",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0fc5aa7d-f900-455b-ae11-2082293f4983",
      ResourceVersion: (string) (len=5) "14454",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "3d20f47a5e0c03f02ae2c78f57c6fb9eabb26b4926fb641d2a4d8d8faa60a150",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.171.70/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.171.70/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "61e67acc-5300-4832-85c9-66e484740193",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  65 36 37 61 63 63 2d 35  |d\":\"61e67acc-5|
              00000090  33 30 30 2d 34 38 33 32  2d 38 35 63 39 2d 36 36  |300-4832-85c9-66|
              000000a0  65 34 38 34 37 34 30 31  39 33 5c 22 7d 22 3a 7b  |e484740193\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922869,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xb6nx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xb6nx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "worker",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922868,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.245",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.245"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922868,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 07:54:30.814137 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-zlsdh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-zlsdh",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1587",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a4ad4802-60a1-404f-b42b-fe60cd7e4534",
      ResourceVersion: (string) (len=5) "14180",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922864,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.171.120/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.171.120/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f2ce46fa30b5dac488ad516fb73c7e8b9376757550204c4f2950c4da09c463f4"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "61e67acc-5300-4832-85c9-66e484740193",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  65 36 37 61 63 63 2d 35  |d\":\"61e67acc-5|
              00000090  33 30 30 2d 34 38 33 32  2d 38 35 63 39 2d 36 36  |300-4832-85c9-66|
              000000a0  65 34 38 34 37 34 30 31  39 33 5c 22 7d 22 3a 7b  |e484740193\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 37 31 2e 31  32 30 5c 22 7d 22 3a 7b  |.1.171.120\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d2ldc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d2ldc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "worker",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922865,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857922864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.245",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.245"
        }
      },
      PodIP: (string) (len=12) "10.1.171.120",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.171.120"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857922864,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857922865,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b411ec7c36d5319670e4ab5c522e3ce9144f74c5368456b6f4f4e798478f1ba7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 07:54:30.815759 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1587" for this suite. @ 07/30/24 07:54:30.819
• [6.290 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 07/30/24 07:54:30.842
  I0730 07:54:30.842428 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/30/24 07:54:30.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:54:30.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:54:30.968
  I0730 07:54:30.989263 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-2689" for this suite. @ 07/30/24 07:54:30.993
• [0.186 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 07/30/24 07:54:31.027
  I0730 07:54:31.027996 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename downward-api @ 07/30/24 07:54:31.028
  E0730 07:54:31.115435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:54:31.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:54:31.149
  STEP: Creating a pod to test downward API volume plugin @ 07/30/24 07:54:31.16
  E0730 07:54:32.115998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:33.116105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:34.116483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:35.117249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 07:54:35.214
  I0730 07:54:35.218337 19 output.go:196] Trying to get logs from node jammy pod downwardapi-volume-8e38a013-1b7f-4a8f-af0e-4600d0c5c391 container client-container: <nil>
  STEP: delete the pod @ 07/30/24 07:54:35.224
  I0730 07:54:35.254977 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6728" for this suite. @ 07/30/24 07:54:35.259
• [4.245 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 07/30/24 07:54:35.273
  I0730 07:54:35.273041 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename resourcequota @ 07/30/24 07:54:35.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:54:35.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:54:35.307
  E0730 07:54:36.117878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:37.117987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:38.118183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:39.118539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:40.118883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:41.119496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:42.119895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:43.119835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:44.119958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:45.121322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:46.122264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:47.122960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:48.123069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:49.124212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:50.124449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:51.125101      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:52.125890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 07/30/24 07:54:52.318
  E0730 07:54:53.126365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:54.127414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:55.127732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:56.128785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:57.128889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/30/24 07:54:57.327
  STEP: Ensuring resource quota status is calculated @ 07/30/24 07:54:57.336
  E0730 07:54:58.128926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:54:59.129249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 07/30/24 07:54:59.347
  STEP: Ensuring resource quota status captures configMap creation @ 07/30/24 07:54:59.365
  E0730 07:55:00.129497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:55:01.130563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 07/30/24 07:55:01.373
  STEP: Ensuring resource quota status released usage @ 07/30/24 07:55:01.388
  E0730 07:55:02.130895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:55:03.131162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:55:03.394957 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8866" for this suite. @ 07/30/24 07:55:03.4
• [28.139 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 07/30/24 07:55:03.413
  I0730 07:55:03.413767 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename secrets @ 07/30/24 07:55:03.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:55:03.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:55:03.435
  STEP: creating secret secrets-6472/secret-test-d196cc5e-03b0-4361-b528-68ced1074dec @ 07/30/24 07:55:03.437
  STEP: Creating a pod to test consume secrets @ 07/30/24 07:55:03.441
  E0730 07:55:04.131393      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:55:05.131447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 07:55:05.456
  I0730 07:55:05.461173 19 output.go:196] Trying to get logs from node jammy pod pod-configmaps-12fd541c-30ff-4f33-b352-e29d852f7edc container env-test: <nil>
  STEP: delete the pod @ 07/30/24 07:55:05.468
  I0730 07:55:05.484312 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6472" for this suite. @ 07/30/24 07:55:05.486
• [2.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 07/30/24 07:55:05.491
  I0730 07:55:05.491072 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename dns @ 07/30/24 07:55:05.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:55:05.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:55:05.503
  STEP: Creating a test headless service @ 07/30/24 07:55:05.504
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5159.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-5159.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5159.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5159.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5159.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-5159.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5159.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-5159.svc.cluster.local;sleep 1; done
   @ 07/30/24 07:55:05.509
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5159.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-5159.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5159.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-5159.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5159.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-5159.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5159.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-5159.svc.cluster.local;sleep 1; done
   @ 07/30/24 07:55:05.509
  STEP: creating a pod to probe DNS @ 07/30/24 07:55:05.509
  STEP: submitting the pod to kubernetes @ 07/30/24 07:55:05.509
  E0730 07:55:06.132236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:55:07.133187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/30/24 07:55:07.525
  STEP: looking for the results for each expected name from probers @ 07/30/24 07:55:07.529
  I0730 07:55:07.534761 19 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5159.svc.cluster.local from pod dns-5159/dns-test-4be5f4fe-7735-461d-9bf2-1a83b3cd422e: the server could not find the requested resource (get pods dns-test-4be5f4fe-7735-461d-9bf2-1a83b3cd422e)
  I0730 07:55:07.539965 19 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5159.svc.cluster.local from pod dns-5159/dns-test-4be5f4fe-7735-461d-9bf2-1a83b3cd422e: the server could not find the requested resource (get pods dns-test-4be5f4fe-7735-461d-9bf2-1a83b3cd422e)
  I0730 07:55:07.543478 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-5159.svc.cluster.local from pod dns-5159/dns-test-4be5f4fe-7735-461d-9bf2-1a83b3cd422e: the server could not find the requested resource (get pods dns-test-4be5f4fe-7735-461d-9bf2-1a83b3cd422e)
  I0730 07:55:07.546101 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-5159.svc.cluster.local from pod dns-5159/dns-test-4be5f4fe-7735-461d-9bf2-1a83b3cd422e: the server could not find the requested resource (get pods dns-test-4be5f4fe-7735-461d-9bf2-1a83b3cd422e)
  I0730 07:55:07.548363 19 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5159.svc.cluster.local from pod dns-5159/dns-test-4be5f4fe-7735-461d-9bf2-1a83b3cd422e: the server could not find the requested resource (get pods dns-test-4be5f4fe-7735-461d-9bf2-1a83b3cd422e)
  I0730 07:55:07.550271 19 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5159.svc.cluster.local from pod dns-5159/dns-test-4be5f4fe-7735-461d-9bf2-1a83b3cd422e: the server could not find the requested resource (get pods dns-test-4be5f4fe-7735-461d-9bf2-1a83b3cd422e)
  I0730 07:55:07.551856 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-5159.svc.cluster.local from pod dns-5159/dns-test-4be5f4fe-7735-461d-9bf2-1a83b3cd422e: the server could not find the requested resource (get pods dns-test-4be5f4fe-7735-461d-9bf2-1a83b3cd422e)
  I0730 07:55:07.553089 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-5159.svc.cluster.local from pod dns-5159/dns-test-4be5f4fe-7735-461d-9bf2-1a83b3cd422e: the server could not find the requested resource (get pods dns-test-4be5f4fe-7735-461d-9bf2-1a83b3cd422e)
  I0730 07:55:07.553101 19 dns_common.go:489] Lookups using dns-5159/dns-test-4be5f4fe-7735-461d-9bf2-1a83b3cd422e failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5159.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5159.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5159.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5159.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5159.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5159.svc.cluster.local jessie_udp@dns-test-service-2.dns-5159.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5159.svc.cluster.local]

  I0730 07:55:07.555239 19 dns_common.go:495] Pod client logs for webserver: 
  I0730 07:55:07.557031 19 dns_common.go:495] Pod client logs for querier: 
  I0730 07:55:07.558966 19 dns_common.go:495] Pod client logs for jessie-querier: 
  E0730 07:55:08.133551      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:55:09.133708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:55:10.133971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:55:11.134837      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:55:12.135606      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:55:12.542119 19 dns_common.go:527] DNS probes using dns-5159/dns-test-4be5f4fe-7735-461d-9bf2-1a83b3cd422e succeeded

  STEP: deleting the pod @ 07/30/24 07:55:12.542
  STEP: deleting the test headless service @ 07/30/24 07:55:12.594
  I0730 07:55:12.639060 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5159" for this suite. @ 07/30/24 07:55:12.645
• [7.166 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1858
  STEP: Creating a kubernetes client @ 07/30/24 07:55:12.656
  I0730 07:55:12.656790 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename kubectl @ 07/30/24 07:55:12.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:55:12.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:55:12.67
  STEP: Starting the proxy @ 07/30/24 07:55:12.672
  I0730 07:55:12.672199 19 util.go:592] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-1551 proxy --unix-socket=/tmp/kubectl-proxy-unix3635001203/test'
  STEP: retrieving proxy /api/ output @ 07/30/24 07:55:12.697
  I0730 07:55:12.698221 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1551" for this suite. @ 07/30/24 07:55:12.701
• [0.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 07/30/24 07:55:12.707
  I0730 07:55:12.707357 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename statefulset @ 07/30/24 07:55:12.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:55:12.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:55:12.726
  STEP: Creating service test in namespace statefulset-3651 @ 07/30/24 07:55:12.728
  STEP: Looking for a node to schedule stateful set and pod @ 07/30/24 07:55:12.733
  STEP: Creating pod with conflicting port in namespace statefulset-3651 @ 07/30/24 07:55:12.736
  STEP: Waiting until pod test-pod will start running in namespace statefulset-3651 @ 07/30/24 07:55:12.746
  E0730 07:55:13.135712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:55:14.136122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-3651 @ 07/30/24 07:55:14.751
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-3651 @ 07/30/24 07:55:14.756
  I0730 07:55:14.763864 19 statefulset.go:866] Observed stateful pod in namespace: statefulset-3651, name: ss-0, uid: 53927c15-8201-4b49-8af9-dc9dbe50a34c, status phase: Pending. Waiting for statefulset controller to delete.
  I0730 07:55:14.776059 19 statefulset.go:866] Observed stateful pod in namespace: statefulset-3651, name: ss-0, uid: 53927c15-8201-4b49-8af9-dc9dbe50a34c, status phase: Failed. Waiting for statefulset controller to delete.
  I0730 07:55:14.790241 19 statefulset.go:866] Observed stateful pod in namespace: statefulset-3651, name: ss-0, uid: 53927c15-8201-4b49-8af9-dc9dbe50a34c, status phase: Failed. Waiting for statefulset controller to delete.
  I0730 07:55:14.795077 19 statefulset.go:860] Observed delete event for stateful pod ss-0 in namespace statefulset-3651
  STEP: Removing pod with conflicting port in namespace statefulset-3651 @ 07/30/24 07:55:14.795
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-3651 and will be in running state @ 07/30/24 07:55:14.808
  E0730 07:55:15.137315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:55:16.137230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:55:16.812686 19 statefulset.go:135] Deleting all statefulset in ns statefulset-3651
  I0730 07:55:16.814101 19 rest.go:150] Scaling statefulset ss to 0
  E0730 07:55:17.137997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:55:18.138073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:55:19.138453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:55:20.138489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:55:21.139000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:55:22.139248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:55:23.139818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:55:24.140519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:55:25.141136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:55:26.141306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:55:26.862307 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0730 07:55:26.866368 19 rest.go:88] Deleting statefulset ss
  I0730 07:55:26.891281 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3651" for this suite. @ 07/30/24 07:55:26.895
• [14.194 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:789
  STEP: Creating a kubernetes client @ 07/30/24 07:55:26.901
  I0730 07:55:26.901986 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename services @ 07/30/24 07:55:26.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:55:26.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:55:26.923
  STEP: creating service endpoint-test2 in namespace services-521 @ 07/30/24 07:55:26.924
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-521 to expose endpoints map[] @ 07/30/24 07:55:26.931
  I0730 07:55:26.934105 19 service.go:4226] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E0730 07:55:27.142264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:55:27.947979 19 service.go:4258] successfully validated that service endpoint-test2 in namespace services-521 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-521 @ 07/30/24 07:55:27.948
  E0730 07:55:28.142941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:55:29.143556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-521 to expose endpoints map[pod1:[80]] @ 07/30/24 07:55:29.979
  I0730 07:55:29.991786 19 service.go:4258] successfully validated that service endpoint-test2 in namespace services-521 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 07/30/24 07:55:29.991
  I0730 07:55:29.991894 19 resource.go:361] Creating new exec pod
  E0730 07:55:30.144235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:55:31.145197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:55:32.145849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:55:33.011819 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-521 exec execpodwp5nr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0730 07:55:33.088040 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0730 07:55:33.088069 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0730 07:55:33.088148 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-521 exec execpodwp5nr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.89 80'
  I0730 07:55:33.138260 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.89 80\nConnection to 10.152.183.89 80 port [tcp/http] succeeded!\n"
  I0730 07:55:33.138288 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-521 @ 07/30/24 07:55:33.138
  E0730 07:55:33.146401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:55:34.146846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:55:35.147370      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-521 to expose endpoints map[pod1:[80] pod2:[80]] @ 07/30/24 07:55:35.164
  I0730 07:55:35.179686 19 service.go:4258] successfully validated that service endpoint-test2 in namespace services-521 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 07/30/24 07:55:35.179
  E0730 07:55:36.148306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:55:36.180923 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-521 exec execpodwp5nr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0730 07:55:36.257873 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0730 07:55:36.257901 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0730 07:55:36.257947 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-521 exec execpodwp5nr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.89 80'
  I0730 07:55:36.328695 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.89 80\nConnection to 10.152.183.89 80 port [tcp/http] succeeded!\n"
  I0730 07:55:36.328732 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-521 @ 07/30/24 07:55:36.328
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-521 to expose endpoints map[pod2:[80]] @ 07/30/24 07:55:36.352
  I0730 07:55:36.364532 19 service.go:4258] successfully validated that service endpoint-test2 in namespace services-521 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 07/30/24 07:55:36.364
  E0730 07:55:37.149667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:55:37.365366 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-521 exec execpodwp5nr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0730 07:55:37.424579 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0730 07:55:37.424610 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0730 07:55:37.424660 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-521 exec execpodwp5nr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.89 80'
  I0730 07:55:37.493936 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.89 80\nConnection to 10.152.183.89 80 port [tcp/http] succeeded!\n"
  I0730 07:55:37.493978 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-521 @ 07/30/24 07:55:37.494
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-521 to expose endpoints map[] @ 07/30/24 07:55:37.513
  E0730 07:55:38.149854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:55:39.150425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:55:39.538373 19 service.go:4258] successfully validated that service endpoint-test2 in namespace services-521 exposes endpoints map[]
  I0730 07:55:39.566202 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-521" for this suite. @ 07/30/24 07:55:39.567
• [12.670 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 07/30/24 07:55:39.572
  I0730 07:55:39.572634 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename resourcequota @ 07/30/24 07:55:39.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:55:39.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:55:39.587
  STEP: Creating a ResourceQuota @ 07/30/24 07:55:39.588
  STEP: Getting a ResourceQuota @ 07/30/24 07:55:39.591
  STEP: Updating a ResourceQuota @ 07/30/24 07:55:39.592
  STEP: Verifying a ResourceQuota was modified @ 07/30/24 07:55:39.597
  STEP: Deleting a ResourceQuota @ 07/30/24 07:55:39.598
  STEP: Verifying the deleted ResourceQuota @ 07/30/24 07:55:39.603
  I0730 07:55:39.604268 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-521" for this suite. @ 07/30/24 07:55:39.605
• [0.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 07/30/24 07:55:39.609
  I0730 07:55:39.609962 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename emptydir @ 07/30/24 07:55:39.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:55:39.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:55:39.622
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 07/30/24 07:55:39.623
  E0730 07:55:40.150490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:55:41.151049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 07:55:41.637
  I0730 07:55:41.641989 19 output.go:196] Trying to get logs from node jammy pod pod-3d81d0c4-82c7-4f96-a761-cbd865d667f5 container test-container: <nil>
  STEP: delete the pod @ 07/30/24 07:55:41.649
  I0730 07:55:41.692067 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4999" for this suite. @ 07/30/24 07:55:41.695
• [2.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 07/30/24 07:55:41.704
  I0730 07:55:41.704991 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename configmap @ 07/30/24 07:55:41.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:55:41.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:55:41.719
  STEP: Creating configMap with name configmap-test-volume-map-315319c1-4c21-41c1-8951-c8171584710d @ 07/30/24 07:55:41.72
  STEP: Creating a pod to test consume configMaps @ 07/30/24 07:55:41.724
  E0730 07:55:42.151108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:55:43.151512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:55:44.151839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:55:45.152369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 07:55:45.745
  I0730 07:55:45.749023 19 output.go:196] Trying to get logs from node jammy pod pod-configmaps-c98b2eff-8e42-420b-9bc8-a84ae3c0abb7 container agnhost-container: <nil>
  STEP: delete the pod @ 07/30/24 07:55:45.755
  I0730 07:55:45.777678 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7600" for this suite. @ 07/30/24 07:55:45.78
• [4.080 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:850
  STEP: Creating a kubernetes client @ 07/30/24 07:55:45.785
  I0730 07:55:45.785098 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename services @ 07/30/24 07:55:45.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:55:45.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:55:45.797
  STEP: creating service multi-endpoint-test in namespace services-120 @ 07/30/24 07:55:45.798
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-120 to expose endpoints map[] @ 07/30/24 07:55:45.806
  I0730 07:55:45.808948 19 service.go:4226] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0730 07:55:46.152829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:55:46.813073 19 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-120 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-120 @ 07/30/24 07:55:46.813
  E0730 07:55:47.153179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:55:48.153464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-120 to expose endpoints map[pod1:[100]] @ 07/30/24 07:55:48.831
  I0730 07:55:48.843282 19 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-120 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-120 @ 07/30/24 07:55:48.843
  E0730 07:55:49.153784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:55:50.153810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-120 to expose endpoints map[pod1:[100] pod2:[101]] @ 07/30/24 07:55:50.858
  I0730 07:55:50.866715 19 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-120 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 07/30/24 07:55:50.866
  I0730 07:55:50.866765 19 resource.go:361] Creating new exec pod
  E0730 07:55:51.154159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:55:52.154611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:55:53.155514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:55:53.879019 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-120 exec execpod8j2jr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0730 07:55:53.952721 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I0730 07:55:53.952758 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0730 07:55:53.952811 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-120 exec execpod8j2jr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.78 80'
  I0730 07:55:54.005899 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.78 80\nConnection to 10.152.183.78 80 port [tcp/http] succeeded!\n"
  I0730 07:55:54.005933 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0730 07:55:54.005987 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-120 exec execpod8j2jr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0730 07:55:54.070426 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I0730 07:55:54.070455 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0730 07:55:54.070554 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-120 exec execpod8j2jr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.78 81'
  I0730 07:55:54.121125 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.78 81\nConnection to 10.152.183.78 81 port [tcp/*] succeeded!\n"
  I0730 07:55:54.121160 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-120 @ 07/30/24 07:55:54.121
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-120 to expose endpoints map[pod2:[101]] @ 07/30/24 07:55:54.133
  E0730 07:55:54.156220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:55:55.156716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:55:56.157338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:55:56.179279 19 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-120 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-120 @ 07/30/24 07:55:56.179
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-120 to expose endpoints map[] @ 07/30/24 07:55:56.206
  E0730 07:55:57.157584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:55:57.236059 19 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-120 exposes endpoints map[]
  I0730 07:55:57.254035 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-120" for this suite. @ 07/30/24 07:55:57.255
• [11.475 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 07/30/24 07:55:57.26
  I0730 07:55:57.260148 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename kubectl-logs @ 07/30/24 07:55:57.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:55:57.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:55:57.271
  STEP: creating an pod @ 07/30/24 07:55:57.272
  I0730 07:55:57.272199 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-logs-8514 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0730 07:55:57.311521 19 builder.go:146] stderr: ""
  I0730 07:55:57.311555 19 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 07/30/24 07:55:57.311
  I0730 07:55:57.311632 19 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0730 07:55:58.157827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:55:59.158463      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:55:59.321240 19 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 07/30/24 07:55:59.321
  I0730 07:55:59.321562 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-logs-8514 logs logs-generator logs-generator'
  I0730 07:55:59.380930 19 builder.go:146] stderr: ""
  I0730 07:55:59.380967 19 builder.go:147] stdout: "I0730 07:55:57.754638       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/mm8 480\nI0730 07:55:57.955581       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/sm4z 426\nI0730 07:55:58.154870       1 logs_generator.go:76] 2 GET /api/v1/namespaces/ns/pods/n9l 478\nI0730 07:55:58.355357       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/kube-system/pods/wv2 516\nI0730 07:55:58.555757       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/dkkv 332\nI0730 07:55:58.755417       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/ns/pods/6n26 477\nI0730 07:55:58.954670       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/nwlt 316\nI0730 07:55:59.155162       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/fdm2 337\n"
  STEP: limiting log lines @ 07/30/24 07:55:59.38
  I0730 07:55:59.381070 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-logs-8514 logs logs-generator logs-generator --tail=1'
  I0730 07:55:59.416577 19 builder.go:146] stderr: ""
  I0730 07:55:59.416602 19 builder.go:147] stdout: "I0730 07:55:59.355428       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/qg9 280\n"
  I0730 07:55:59.416608 19 logs.go:127] got output "I0730 07:55:59.355428       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/qg9 280\n"
  STEP: limiting log bytes @ 07/30/24 07:55:59.416
  I0730 07:55:59.416749 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-logs-8514 logs logs-generator logs-generator --limit-bytes=1'
  I0730 07:55:59.451939 19 builder.go:146] stderr: ""
  I0730 07:55:59.451963 19 builder.go:147] stdout: "I"
  I0730 07:55:59.451968 19 logs.go:133] got output "I"
  STEP: exposing timestamps @ 07/30/24 07:55:59.451
  I0730 07:55:59.452049 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-logs-8514 logs logs-generator logs-generator --tail=1 --timestamps'
  I0730 07:55:59.485984 19 builder.go:146] stderr: ""
  I0730 07:55:59.486009 19 builder.go:147] stdout: "2024-07-30T11:55:59.355539496+04:00 I0730 07:55:59.355428       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/qg9 280\n"
  I0730 07:55:59.486016 19 logs.go:139] got output "2024-07-30T11:55:59.355539496+04:00 I0730 07:55:59.355428       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/qg9 280\n"
  STEP: restricting to a time range @ 07/30/24 07:55:59.486
  E0730 07:56:00.158446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:01.159419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:56:01.986626 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-logs-8514 logs logs-generator logs-generator --since=1s'
  I0730 07:56:02.039515 19 builder.go:146] stderr: ""
  I0730 07:56:02.039554 19 builder.go:147] stdout: "I0730 07:56:01.154773       1 logs_generator.go:76] 17 GET /api/v1/namespaces/ns/pods/p8rj 312\nI0730 07:56:01.355160       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/2fb 356\nI0730 07:56:01.555590       1 logs_generator.go:76] 19 GET /api/v1/namespaces/default/pods/gwrr 463\nI0730 07:56:01.754923       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/bdfn 432\nI0730 07:56:01.955246       1 logs_generator.go:76] 21 GET /api/v1/namespaces/ns/pods/vhn 221\n"
  I0730 07:56:02.039692 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-logs-8514 logs logs-generator logs-generator --since=24h'
  I0730 07:56:02.086977 19 builder.go:146] stderr: ""
  I0730 07:56:02.087027 19 builder.go:147] stdout: "I0730 07:55:57.754638       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/mm8 480\nI0730 07:55:57.955581       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/sm4z 426\nI0730 07:55:58.154870       1 logs_generator.go:76] 2 GET /api/v1/namespaces/ns/pods/n9l 478\nI0730 07:55:58.355357       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/kube-system/pods/wv2 516\nI0730 07:55:58.555757       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/dkkv 332\nI0730 07:55:58.755417       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/ns/pods/6n26 477\nI0730 07:55:58.954670       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/nwlt 316\nI0730 07:55:59.155162       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/fdm2 337\nI0730 07:55:59.355428       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/qg9 280\nI0730 07:55:59.554785       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/default/pods/lfn 545\nI0730 07:55:59.755221       1 logs_generator.go:76] 10 POST /api/v1/namespaces/kube-system/pods/gt8 293\nI0730 07:55:59.955639       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/ns/pods/lm6 570\nI0730 07:56:00.155084       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/default/pods/44hg 406\nI0730 07:56:00.355486       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/default/pods/z88v 599\nI0730 07:56:00.554725       1 logs_generator.go:76] 14 POST /api/v1/namespaces/kube-system/pods/qb5v 363\nI0730 07:56:00.754903       1 logs_generator.go:76] 15 POST /api/v1/namespaces/default/pods/qd5 433\nI0730 07:56:00.955325       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/ns/pods/5tn 435\nI0730 07:56:01.154773       1 logs_generator.go:76] 17 GET /api/v1/namespaces/ns/pods/p8rj 312\nI0730 07:56:01.355160       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/2fb 356\nI0730 07:56:01.555590       1 logs_generator.go:76] 19 GET /api/v1/namespaces/default/pods/gwrr 463\nI0730 07:56:01.754923       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/bdfn 432\nI0730 07:56:01.955246       1 logs_generator.go:76] 21 GET /api/v1/namespaces/ns/pods/vhn 221\n"
  I0730 07:56:02.087132 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-logs-8514 delete pod logs-generator'
  E0730 07:56:02.159553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:03.159919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:56:03.351100 19 builder.go:146] stderr: ""
  I0730 07:56:03.351139 19 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0730 07:56:03.351267 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-8514" for this suite. @ 07/30/24 07:56:03.354
• [6.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 07/30/24 07:56:03.36
  I0730 07:56:03.360631 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/30/24 07:56:03.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:56:03.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:56:03.381
  STEP: create the container to handle the HTTPGet hook request. @ 07/30/24 07:56:03.384
  E0730 07:56:04.160206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:05.160240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 07/30/24 07:56:05.404
  E0730 07:56:06.161585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:07.162083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 07/30/24 07:56:07.437
  STEP: delete the pod with lifecycle hook @ 07/30/24 07:56:07.452
  E0730 07:56:08.162823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:09.163131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:56:09.473657 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2058" for this suite. @ 07/30/24 07:56:09.481
• [6.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 07/30/24 07:56:09.497
  I0730 07:56:09.497621 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename configmap @ 07/30/24 07:56:09.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:56:09.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:56:09.523
  STEP: Creating configMap with name cm-test-opt-del-9b40a6ab-431a-438c-85fb-c424c677c2de @ 07/30/24 07:56:09.526
  STEP: Creating configMap with name cm-test-opt-upd-2a2e446a-cfc5-471b-acf6-8b180945d163 @ 07/30/24 07:56:09.53
  STEP: Creating the pod @ 07/30/24 07:56:09.533
  E0730 07:56:10.163413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:11.164214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-9b40a6ab-431a-438c-85fb-c424c677c2de @ 07/30/24 07:56:11.568
  STEP: Updating configmap cm-test-opt-upd-2a2e446a-cfc5-471b-acf6-8b180945d163 @ 07/30/24 07:56:11.577
  STEP: Creating configMap with name cm-test-opt-create-eb7d5bf7-251a-4068-bcfc-4e2114c4a9f5 @ 07/30/24 07:56:11.584
  STEP: waiting to observe update in volume @ 07/30/24 07:56:11.592
  E0730 07:56:12.165206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:13.166259      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:14.166477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:15.167074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:16.167271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:17.168276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:18.169155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:19.169647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:20.170150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:21.170324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:22.171650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:23.171795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:24.172901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:25.173083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:26.174041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:27.174395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:28.174460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:29.174759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:30.175702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:31.176101      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:32.176345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:33.176933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:34.178164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:35.179207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:36.180444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:37.180807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:38.181555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:39.181634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:40.181925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:41.182715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:42.183867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:43.184324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:44.185645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:45.185782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:46.186232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:47.186803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:48.186849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:49.187737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:50.187961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:51.188426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:52.188794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:53.189541      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:54.190426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:55.191025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:56.191072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:57.191418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:58.191781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:56:59.192744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:00.192805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:01.193002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:02.193035      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:03.193403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:04.193936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:05.194822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:06.194748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:07.195272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:08.195312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:09.195499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:10.195974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:11.196702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:12.196578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:13.197007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:14.197643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:15.197933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:16.198380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:17.198668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:18.199522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:19.199896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:20.200753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:21.201401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:57:22.017113 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7203" for this suite. @ 07/30/24 07:57:22.019
• [72.529 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 07/30/24 07:57:22.026
  I0730 07:57:22.026497 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename downward-api @ 07/30/24 07:57:22.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:57:22.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:57:22.04
  STEP: Creating a pod to test downward API volume plugin @ 07/30/24 07:57:22.042
  E0730 07:57:22.201402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:23.202083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:24.203043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:25.203659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 07:57:26.072
  I0730 07:57:26.077064 19 output.go:196] Trying to get logs from node jammy pod downwardapi-volume-209bec85-04cf-469a-b43c-f16d1202817e container client-container: <nil>
  STEP: delete the pod @ 07/30/24 07:57:26.085
  I0730 07:57:26.118145 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5403" for this suite. @ 07/30/24 07:57:26.121
• [4.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 07/30/24 07:57:26.132
  I0730 07:57:26.133054 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename configmap @ 07/30/24 07:57:26.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:57:26.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:57:26.157
  STEP: Creating configMap configmap-2135/configmap-test-a022481a-de76-4464-8edd-ee031cc6ee3a @ 07/30/24 07:57:26.158
  STEP: Creating a pod to test consume configMaps @ 07/30/24 07:57:26.164
  E0730 07:57:26.203755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:27.203857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:28.204143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:29.204151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 07:57:30.187
  I0730 07:57:30.191815 19 output.go:196] Trying to get logs from node jammy pod pod-configmaps-46b60bb6-1bce-4560-8261-a5b9e7009de6 container env-test: <nil>
  STEP: delete the pod @ 07/30/24 07:57:30.198
  E0730 07:57:30.204767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:57:30.219820 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2135" for this suite. @ 07/30/24 07:57:30.222
• [4.094 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 07/30/24 07:57:30.226
  I0730 07:57:30.226835 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/30/24 07:57:30.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:57:30.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:57:30.242
  I0730 07:57:30.244310 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  E0730 07:57:31.204938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/30/24 07:57:31.39
  I0730 07:57:31.390638 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=crd-publish-openapi-2418 --namespace=crd-publish-openapi-2418 create -f -'
  E0730 07:57:32.205313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:33.205643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:57:33.445632 19 builder.go:146] stderr: ""
  I0730 07:57:33.445694 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3766-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0730 07:57:33.445753 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=crd-publish-openapi-2418 --namespace=crd-publish-openapi-2418 delete e2e-test-crd-publish-openapi-3766-crds test-cr'
  I0730 07:57:33.493025 19 builder.go:146] stderr: ""
  I0730 07:57:33.493052 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3766-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0730 07:57:33.493175 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=crd-publish-openapi-2418 --namespace=crd-publish-openapi-2418 apply -f -'
  I0730 07:57:33.532218 19 builder.go:146] stderr: ""
  I0730 07:57:33.532244 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3766-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0730 07:57:33.532366 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=crd-publish-openapi-2418 --namespace=crd-publish-openapi-2418 delete e2e-test-crd-publish-openapi-3766-crds test-cr'
  I0730 07:57:33.570168 19 builder.go:146] stderr: ""
  I0730 07:57:33.570202 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3766-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 07/30/24 07:57:33.57
  I0730 07:57:33.570312 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=crd-publish-openapi-2418 explain e2e-test-crd-publish-openapi-3766-crds'
  I0730 07:57:33.598307 19 builder.go:146] stderr: ""
  I0730 07:57:33.598345 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-3766-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0730 07:57:34.205911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:57:34.768121 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2418" for this suite. @ 07/30/24 07:57:34.773
• [4.553 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 07/30/24 07:57:34.791
  I0730 07:57:34.791483 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename gc @ 07/30/24 07:57:34.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:57:34.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:57:34.804
  STEP: create the rc @ 07/30/24 07:57:34.807
  W0730 07:57:34.810782      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0730 07:57:35.206530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:36.207406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:37.208549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:38.208685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:39.208805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:40.209163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 07/30/24 07:57:40.818
  STEP: wait for the rc to be deleted @ 07/30/24 07:57:40.842
  E0730 07:57:41.209395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:57:41.982305 19 garbage_collector.go:670] 80 pods remaining
  I0730 07:57:41.982339 19 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0730 07:57:41.982347 19 garbage_collector.go:678] 
  E0730 07:57:42.209612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:57:42.912360 19 garbage_collector.go:670] 74 pods remaining
  I0730 07:57:42.912394 19 garbage_collector.go:677] 73 pods has nil DeletionTimestamp
  I0730 07:57:42.912400 19 garbage_collector.go:678] 
  E0730 07:57:43.211724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:57:43.984721 19 garbage_collector.go:670] 59 pods remaining
  I0730 07:57:43.984858 19 garbage_collector.go:677] 59 pods has nil DeletionTimestamp
  I0730 07:57:43.984900 19 garbage_collector.go:678] 
  E0730 07:57:44.212307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:57:44.964809 19 garbage_collector.go:670] 45 pods remaining
  I0730 07:57:44.964861 19 garbage_collector.go:677] 42 pods has nil DeletionTimestamp
  I0730 07:57:44.964867 19 garbage_collector.go:678] 
  E0730 07:57:45.212691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:57:45.911283 19 garbage_collector.go:670] 30 pods remaining
  I0730 07:57:45.911417 19 garbage_collector.go:677] 30 pods has nil DeletionTimestamp
  I0730 07:57:45.911473 19 garbage_collector.go:678] 
  E0730 07:57:46.213439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:57:46.882374 19 garbage_collector.go:670] 17 pods remaining
  I0730 07:57:46.882403 19 garbage_collector.go:677] 17 pods has nil DeletionTimestamp
  I0730 07:57:46.882409 19 garbage_collector.go:678] 
  E0730 07:57:47.213525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:57:47.876253 19 garbage_collector.go:670] 0 pods remaining
  I0730 07:57:47.876381 19 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I0730 07:57:47.876433 19 garbage_collector.go:678] 
  E0730 07:57:48.215771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/30/24 07:57:48.855
  W0730 07:57:48.903307      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0730 07:57:48.903343 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0730 07:57:48.903487 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8422" for this suite. @ 07/30/24 07:57:48.906
• [14.143 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 07/30/24 07:57:48.93
  I0730 07:57:48.931032 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename security-context @ 07/30/24 07:57:48.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:57:48.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:57:48.972
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 07/30/24 07:57:48.986
  E0730 07:57:49.218806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:50.218974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:51.219369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:52.228429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:53.228732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:54.228832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:55.229397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:56.230040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 07:57:57.047
  I0730 07:57:57.052241 19 output.go:196] Trying to get logs from node jammy pod security-context-e5c909c0-94c2-4d3f-a30a-575d58d8d2cf container test-container: <nil>
  STEP: delete the pod @ 07/30/24 07:57:57.058
  I0730 07:57:57.083238 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-1215" for this suite. @ 07/30/24 07:57:57.084
• [8.158 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 07/30/24 07:57:57.089
  I0730 07:57:57.089500 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename kubelet-test @ 07/30/24 07:57:57.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:57:57.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:57:57.162
  STEP: Waiting for pod completion @ 07/30/24 07:57:57.176
  E0730 07:57:57.230367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:58.231108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:57:59.232235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:58:00.232594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:58:01.197661 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1280" for this suite. @ 07/30/24 07:58:01.202
• [4.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 07/30/24 07:58:01.213
  I0730 07:58:01.213362 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename field-validation @ 07/30/24 07:58:01.215
  E0730 07:58:01.232653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:58:01.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:58:01.245
  I0730 07:58:01.248872 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  E0730 07:58:02.232740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:58:03.233681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0730 07:58:03.786615      19 warnings.go:70] unknown field "alpha"
  W0730 07:58:03.787109      19 warnings.go:70] unknown field "beta"
  W0730 07:58:03.787334      19 warnings.go:70] unknown field "delta"
  W0730 07:58:03.787895      19 warnings.go:70] unknown field "epsilon"
  W0730 07:58:03.787935      19 warnings.go:70] unknown field "gamma"
  E0730 07:58:04.234592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:58:04.334450 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7470" for this suite. @ 07/30/24 07:58:04.339
• [3.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 07/30/24 07:58:04.348
  I0730 07:58:04.348064 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename containers @ 07/30/24 07:58:04.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:58:04.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:58:04.365
  STEP: Creating a pod to test override all @ 07/30/24 07:58:04.366
  E0730 07:58:05.234619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:58:06.235398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 07:58:06.375
  I0730 07:58:06.376261 19 output.go:196] Trying to get logs from node jammy pod client-containers-da214a6b-dabe-44b0-8bba-031cde494661 container agnhost-container: <nil>
  STEP: delete the pod @ 07/30/24 07:58:06.379
  I0730 07:58:06.389048 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3092" for this suite. @ 07/30/24 07:58:06.39
• [2.046 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 07/30/24 07:58:06.394
  I0730 07:58:06.394543 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename sysctl @ 07/30/24 07:58:06.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:58:06.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:58:06.407
  STEP: Creating a pod with one valid and two invalid sysctls @ 07/30/24 07:58:06.408
  I0730 07:58:06.410747 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-9691" for this suite. @ 07/30/24 07:58:06.412
• [0.021 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 07/30/24 07:58:06.416
  I0730 07:58:06.416519 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename webhook @ 07/30/24 07:58:06.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:58:06.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:58:06.427
  STEP: Setting up server cert @ 07/30/24 07:58:06.444
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/30/24 07:58:06.533
  STEP: Deploying the webhook pod @ 07/30/24 07:58:06.54
  STEP: Wait for the deployment to be ready @ 07/30/24 07:58:06.55
  I0730 07:58:06.559303 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0730 07:58:07.235919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:58:08.236567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/30/24 07:58:08.574
  STEP: Verifying the service has paired with the endpoint @ 07/30/24 07:58:08.593
  E0730 07:58:09.237519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:58:09.593392 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 07/30/24 07:58:09.604
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 07/30/24 07:58:09.627
  STEP: Creating a dummy validating-webhook-configuration object @ 07/30/24 07:58:09.638
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 07/30/24 07:58:09.645
  STEP: Creating a dummy mutating-webhook-configuration object @ 07/30/24 07:58:09.65
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 07/30/24 07:58:09.654
  I0730 07:58:09.706380 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7019" for this suite. @ 07/30/24 07:58:09.707
  STEP: Destroying namespace "webhook-markers-8916" for this suite. @ 07/30/24 07:58:09.712
• [3.300 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 07/30/24 07:58:09.716
  I0730 07:58:09.717009 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename secrets @ 07/30/24 07:58:09.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:58:09.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:58:09.731
  STEP: Creating secret with name secret-test-1c15ff61-c391-49b1-b131-eaa28050a2d3 @ 07/30/24 07:58:09.732
  STEP: Creating a pod to test consume secrets @ 07/30/24 07:58:09.736
  E0730 07:58:10.237399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:58:11.238098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:58:12.238840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:58:13.239522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 07:58:13.758
  I0730 07:58:13.762711 19 output.go:196] Trying to get logs from node jammy pod pod-secrets-2a416860-a72b-45f3-bad6-a623fe9fc4ac container secret-volume-test: <nil>
  STEP: delete the pod @ 07/30/24 07:58:13.77
  I0730 07:58:13.791531 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8617" for this suite. @ 07/30/24 07:58:13.793
• [4.081 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 07/30/24 07:58:13.798
  I0730 07:58:13.798429 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename field-validation @ 07/30/24 07:58:13.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:58:13.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:58:13.81
  I0730 07:58:13.811998 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  E0730 07:58:14.239877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:58:15.240356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:58:16.241418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0730 07:58:16.329461      19 warnings.go:70] unknown field "alpha"
  W0730 07:58:16.329476      19 warnings.go:70] unknown field "beta"
  W0730 07:58:16.329478      19 warnings.go:70] unknown field "delta"
  W0730 07:58:16.329480      19 warnings.go:70] unknown field "epsilon"
  W0730 07:58:16.329482      19 warnings.go:70] unknown field "gamma"
  I0730 07:58:16.853199 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-480" for this suite. @ 07/30/24 07:58:16.854
• [3.062 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 07/30/24 07:58:16.86
  I0730 07:58:16.860476 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename webhook @ 07/30/24 07:58:16.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:58:16.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:58:16.876
  STEP: Setting up server cert @ 07/30/24 07:58:16.895
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/30/24 07:58:16.983
  STEP: Deploying the webhook pod @ 07/30/24 07:58:16.989
  STEP: Wait for the deployment to be ready @ 07/30/24 07:58:16.998
  I0730 07:58:17.004221 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0730 07:58:17.241485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:58:18.241697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/30/24 07:58:19.008
  STEP: Verifying the service has paired with the endpoint @ 07/30/24 07:58:19.016
  E0730 07:58:19.242315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:58:20.017233 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 07/30/24 07:58:20.025
  STEP: create a pod that should be denied by the webhook @ 07/30/24 07:58:20.036
  STEP: create a pod that causes the webhook to hang @ 07/30/24 07:58:20.041
  E0730 07:58:20.242778      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:58:21.242990      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:58:22.243241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:58:23.243697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:58:24.244533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:58:25.244881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:58:26.245027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:58:27.245647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:58:28.245737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:58:29.245991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 07/30/24 07:58:30.05
  STEP: create a configmap that should be admitted by the webhook @ 07/30/24 07:58:30.066
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 07/30/24 07:58:30.071
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 07/30/24 07:58:30.074
  STEP: create a namespace that bypass the webhook @ 07/30/24 07:58:30.076
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 07/30/24 07:58:30.144
  I0730 07:58:30.197113 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7345" for this suite. @ 07/30/24 07:58:30.199
  STEP: Destroying namespace "webhook-markers-9306" for this suite. @ 07/30/24 07:58:30.223
  STEP: Destroying namespace "exempted-namespace-9193" for this suite. @ 07/30/24 07:58:30.228
• [13.373 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 07/30/24 07:58:30.233
  I0730 07:58:30.234019 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 07/30/24 07:58:30.234
  E0730 07:58:30.247072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:58:30.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:58:30.251
  STEP: Setting up the test @ 07/30/24 07:58:30.253
  STEP: Creating hostNetwork=false pod @ 07/30/24 07:58:30.253
  E0730 07:58:31.247168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:58:32.247387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 07/30/24 07:58:32.27
  E0730 07:58:33.247639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:58:34.247857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 07/30/24 07:58:34.297
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 07/30/24 07:58:34.297
  I0730 07:58:34.297709 19 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4757 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0730 07:58:34.297753 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  I0730 07:58:34.298578 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0730 07:58:34.298808 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4757/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0730 07:58:34.396822 19 exec_util.go:106] Exec stderr: ""
  I0730 07:58:34.397378 19 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4757 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0730 07:58:34.397452 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  I0730 07:58:34.398403 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0730 07:58:34.398637 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4757/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0730 07:58:34.425995 19 exec_util.go:106] Exec stderr: ""
  I0730 07:58:34.426031 19 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4757 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0730 07:58:34.426142 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  I0730 07:58:34.426451 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0730 07:58:34.426513 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4757/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0730 07:58:34.444133 19 exec_util.go:106] Exec stderr: ""
  I0730 07:58:34.444174 19 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4757 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0730 07:58:34.444180 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  I0730 07:58:34.444485 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0730 07:58:34.444558 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4757/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0730 07:58:34.467335 19 exec_util.go:106] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 07/30/24 07:58:34.467
  I0730 07:58:34.467576 19 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4757 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0730 07:58:34.467585 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  I0730 07:58:34.467824 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0730 07:58:34.467863 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4757/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0730 07:58:34.486114 19 exec_util.go:106] Exec stderr: ""
  I0730 07:58:34.486298 19 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4757 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0730 07:58:34.486308 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  I0730 07:58:34.486577 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0730 07:58:34.486643 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4757/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0730 07:58:34.504975 19 exec_util.go:106] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 07/30/24 07:58:34.505
  I0730 07:58:34.505053 19 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4757 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0730 07:58:34.505163 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  I0730 07:58:34.505422 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0730 07:58:34.505472 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4757/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0730 07:58:34.526901 19 exec_util.go:106] Exec stderr: ""
  I0730 07:58:34.527101 19 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4757 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0730 07:58:34.527111 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  I0730 07:58:34.527396 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0730 07:58:34.527464 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4757/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0730 07:58:34.547100 19 exec_util.go:106] Exec stderr: ""
  I0730 07:58:34.547344 19 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4757 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0730 07:58:34.547362 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  I0730 07:58:34.547618 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0730 07:58:34.547659 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4757/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0730 07:58:34.567095 19 exec_util.go:106] Exec stderr: ""
  I0730 07:58:34.567126 19 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4757 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0730 07:58:34.567131 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  I0730 07:58:34.567447 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0730 07:58:34.567499 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4757/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0730 07:58:34.586771 19 exec_util.go:106] Exec stderr: ""
  I0730 07:58:34.586860 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-4757" for this suite. @ 07/30/24 07:58:34.589
• [4.360 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 07/30/24 07:58:34.593
  I0730 07:58:34.593846 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename webhook @ 07/30/24 07:58:34.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:58:34.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:58:34.604
  STEP: Setting up server cert @ 07/30/24 07:58:34.618
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/30/24 07:58:34.793
  STEP: Deploying the webhook pod @ 07/30/24 07:58:34.8
  STEP: Wait for the deployment to be ready @ 07/30/24 07:58:34.812
  I0730 07:58:34.819226 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0730 07:58:35.248039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:58:36.248387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/30/24 07:58:36.832
  STEP: Verifying the service has paired with the endpoint @ 07/30/24 07:58:36.852
  E0730 07:58:37.248601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:58:37.854573 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 07/30/24 07:58:37.858
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/30/24 07:58:37.873
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 07/30/24 07:58:37.877
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/30/24 07:58:37.884
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 07/30/24 07:58:37.896
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/30/24 07:58:37.901
  I0730 07:58:37.964529 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-895" for this suite. @ 07/30/24 07:58:37.966
  STEP: Destroying namespace "webhook-markers-9166" for this suite. @ 07/30/24 07:58:37.978
• [3.405 seconds]
------------------------------
SS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 07/30/24 07:58:37.999
  I0730 07:58:37.999368 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 07/30/24 07:58:37.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:58:38.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:58:38.029
  STEP: creating a target pod @ 07/30/24 07:58:38.03
  E0730 07:58:38.249368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:58:39.250038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 07/30/24 07:58:40.044
  E0730 07:58:40.250797      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:58:41.251175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 07/30/24 07:58:42.116
  I0730 07:58:42.116527 19 exec_util.go:55] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-1872 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0730 07:58:42.116553 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  I0730 07:58:42.117248 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0730 07:58:42.117314 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-1872/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0730 07:58:42.152139 19 exec_util.go:106] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 07/30/24 07:58:42.157
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 07/30/24 07:58:42.16
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 07/30/24 07:58:42.169
  I0730 07:58:42.175435 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-1872" for this suite. @ 07/30/24 07:58:42.177
• [4.182 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 07/30/24 07:58:42.184
  I0730 07:58:42.184287 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/30/24 07:58:42.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:58:42.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:58:42.204
  STEP: creating the policy @ 07/30/24 07:58:42.212
  STEP: waiting until the marker is denied @ 07/30/24 07:58:42.23
  E0730 07:58:42.251731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 07/30/24 07:58:42.935
  STEP: testing a non-replicated ReplicaSet not to be denied @ 07/30/24 07:58:42.952
  I0730 07:58:43.039361 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-2161" for this suite. @ 07/30/24 07:58:43.041
• [0.876 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 07/30/24 07:58:43.057
  I0730 07:58:43.057686 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename webhook @ 07/30/24 07:58:43.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:58:43.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:58:43.082
  STEP: Setting up server cert @ 07/30/24 07:58:43.108
  E0730 07:58:43.252452      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/30/24 07:58:43.313
  STEP: Deploying the webhook pod @ 07/30/24 07:58:43.319
  STEP: Wait for the deployment to be ready @ 07/30/24 07:58:43.327
  I0730 07:58:43.332463 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0730 07:58:44.252796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:58:45.253192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/30/24 07:58:45.346
  STEP: Verifying the service has paired with the endpoint @ 07/30/24 07:58:45.358
  E0730 07:58:46.254311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:58:46.358611 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 07/30/24 07:58:46.364
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 07/30/24 07:58:46.365
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 07/30/24 07:58:46.365
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 07/30/24 07:58:46.365
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 07/30/24 07:58:46.366
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 07/30/24 07:58:46.366
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 07/30/24 07:58:46.367
  I0730 07:58:46.413933 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1459" for this suite. @ 07/30/24 07:58:46.417
  STEP: Destroying namespace "webhook-markers-3961" for this suite. @ 07/30/24 07:58:46.422
• [3.372 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:355
  STEP: Creating a kubernetes client @ 07/30/24 07:58:46.43
  I0730 07:58:46.430471 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename kubectl @ 07/30/24 07:58:46.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:58:46.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:58:46.461
  STEP: creating a replication controller @ 07/30/24 07:58:46.462
  I0730 07:58:46.462539 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-6000 create -f -'
  I0730 07:58:46.532681 19 builder.go:146] stderr: ""
  I0730 07:58:46.532711 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/30/24 07:58:46.532
  I0730 07:58:46.532799 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-6000 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0730 07:58:46.569520 19 builder.go:146] stderr: ""
  I0730 07:58:46.569549 19 builder.go:147] stdout: "update-demo-nautilus-6lsf8 update-demo-nautilus-k99bh "
  I0730 07:58:46.569706 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-6000 get pods update-demo-nautilus-6lsf8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0730 07:58:46.608338 19 builder.go:146] stderr: ""
  I0730 07:58:46.608364 19 builder.go:147] stdout: ""
  I0730 07:58:46.608425 19 kubectl.go:2501] update-demo-nautilus-6lsf8 is created but not running
  E0730 07:58:47.254921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:58:48.255183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:58:49.255658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:58:50.256243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:58:51.257278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:58:51.608998 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-6000 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0730 07:58:51.646676 19 builder.go:146] stderr: ""
  I0730 07:58:51.646706 19 builder.go:147] stdout: "update-demo-nautilus-6lsf8 update-demo-nautilus-k99bh "
  I0730 07:58:51.646742 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-6000 get pods update-demo-nautilus-6lsf8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0730 07:58:51.679494 19 builder.go:146] stderr: ""
  I0730 07:58:51.679527 19 builder.go:147] stdout: "true"
  I0730 07:58:51.679553 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-6000 get pods update-demo-nautilus-6lsf8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0730 07:58:51.711867 19 builder.go:146] stderr: ""
  I0730 07:58:51.711899 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0730 07:58:51.711908 19 kubectl.go:2392] validating pod update-demo-nautilus-6lsf8
  I0730 07:58:51.715047 19 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0730 07:58:51.715110 19 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0730 07:58:51.715119 19 kubectl.go:2519] update-demo-nautilus-6lsf8 is verified up and running
  I0730 07:58:51.715148 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-6000 get pods update-demo-nautilus-k99bh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0730 07:58:51.748604 19 builder.go:146] stderr: ""
  I0730 07:58:51.748639 19 builder.go:147] stdout: "true"
  I0730 07:58:51.748677 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-6000 get pods update-demo-nautilus-k99bh -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0730 07:58:51.780661 19 builder.go:146] stderr: ""
  I0730 07:58:51.780691 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0730 07:58:51.780698 19 kubectl.go:2392] validating pod update-demo-nautilus-k99bh
  I0730 07:58:51.782493 19 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0730 07:58:51.782516 19 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0730 07:58:51.782522 19 kubectl.go:2519] update-demo-nautilus-k99bh is verified up and running
  STEP: scaling down the replication controller @ 07/30/24 07:58:51.782
  I0730 07:58:51.782991 19 kubectl.go:324] scanned /root for discovery docs: <nil>
  I0730 07:58:51.783005 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-6000 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0730 07:58:52.257953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:58:52.831592 19 builder.go:146] stderr: ""
  I0730 07:58:52.831663 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/30/24 07:58:52.831
  I0730 07:58:52.831808 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-6000 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0730 07:58:52.874037 19 builder.go:146] stderr: ""
  I0730 07:58:52.874061 19 builder.go:147] stdout: "update-demo-nautilus-6lsf8 "
  I0730 07:58:52.874084 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-6000 get pods update-demo-nautilus-6lsf8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0730 07:58:52.903807 19 builder.go:146] stderr: ""
  I0730 07:58:52.903842 19 builder.go:147] stdout: "true"
  I0730 07:58:52.903868 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-6000 get pods update-demo-nautilus-6lsf8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0730 07:58:52.935308 19 builder.go:146] stderr: ""
  I0730 07:58:52.935335 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0730 07:58:52.935341 19 kubectl.go:2392] validating pod update-demo-nautilus-6lsf8
  I0730 07:58:52.937069 19 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0730 07:58:52.937154 19 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0730 07:58:52.937163 19 kubectl.go:2519] update-demo-nautilus-6lsf8 is verified up and running
  STEP: scaling up the replication controller @ 07/30/24 07:58:52.937
  I0730 07:58:52.937628 19 kubectl.go:324] scanned /root for discovery docs: <nil>
  I0730 07:58:52.937676 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-6000 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0730 07:58:53.258467      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:58:54.000354 19 builder.go:146] stderr: ""
  I0730 07:58:54.000418 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/30/24 07:58:54
  I0730 07:58:54.000631 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-6000 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0730 07:58:54.044296 19 builder.go:146] stderr: ""
  I0730 07:58:54.044321 19 builder.go:147] stdout: "update-demo-nautilus-4wjz5 update-demo-nautilus-6lsf8 "
  I0730 07:58:54.044344 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-6000 get pods update-demo-nautilus-4wjz5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0730 07:58:54.075915 19 builder.go:146] stderr: ""
  I0730 07:58:54.075942 19 builder.go:147] stdout: ""
  I0730 07:58:54.075951 19 kubectl.go:2501] update-demo-nautilus-4wjz5 is created but not running
  E0730 07:58:54.259668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:58:55.260514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:58:56.261330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:58:57.261591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:58:58.261754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:58:59.076254 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-6000 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0730 07:58:59.122318 19 builder.go:146] stderr: ""
  I0730 07:58:59.122342 19 builder.go:147] stdout: "update-demo-nautilus-4wjz5 update-demo-nautilus-6lsf8 "
  I0730 07:58:59.122410 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-6000 get pods update-demo-nautilus-4wjz5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0730 07:58:59.151669 19 builder.go:146] stderr: ""
  I0730 07:58:59.151694 19 builder.go:147] stdout: "true"
  I0730 07:58:59.151730 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-6000 get pods update-demo-nautilus-4wjz5 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0730 07:58:59.182105 19 builder.go:146] stderr: ""
  I0730 07:58:59.182141 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0730 07:58:59.182148 19 kubectl.go:2392] validating pod update-demo-nautilus-4wjz5
  I0730 07:58:59.184035 19 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0730 07:58:59.184062 19 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0730 07:58:59.184068 19 kubectl.go:2519] update-demo-nautilus-4wjz5 is verified up and running
  I0730 07:58:59.184089 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-6000 get pods update-demo-nautilus-6lsf8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0730 07:58:59.215641 19 builder.go:146] stderr: ""
  I0730 07:58:59.215665 19 builder.go:147] stdout: "true"
  I0730 07:58:59.215691 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-6000 get pods update-demo-nautilus-6lsf8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0730 07:58:59.243885 19 builder.go:146] stderr: ""
  I0730 07:58:59.243910 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0730 07:58:59.243916 19 kubectl.go:2392] validating pod update-demo-nautilus-6lsf8
  I0730 07:58:59.245598 19 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0730 07:58:59.245627 19 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0730 07:58:59.245633 19 kubectl.go:2519] update-demo-nautilus-6lsf8 is verified up and running
  STEP: using delete to clean up resources @ 07/30/24 07:58:59.245
  I0730 07:58:59.245748 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-6000 delete --grace-period=0 --force -f -'
  E0730 07:58:59.261994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:58:59.288343 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0730 07:58:59.288378 19 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0730 07:58:59.288543 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-6000 get rc,svc -l name=update-demo --no-headers'
  I0730 07:58:59.347300 19 builder.go:146] stderr: "No resources found in kubectl-6000 namespace.\n"
  I0730 07:58:59.347330 19 builder.go:147] stdout: ""
  I0730 07:58:59.347356 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-6000 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0730 07:58:59.412392 19 builder.go:146] stderr: ""
  I0730 07:58:59.412425 19 builder.go:147] stdout: ""
  I0730 07:58:59.412508 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6000" for this suite. @ 07/30/24 07:58:59.42
• [12.994 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 07/30/24 07:58:59.424
  I0730 07:58:59.424371 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename dns @ 07/30/24 07:58:59.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:58:59.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:58:59.447
  STEP: Creating a test externalName service @ 07/30/24 07:58:59.449
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2813.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-2813.svc.cluster.local; sleep 1; done
   @ 07/30/24 07:58:59.453
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2813.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-2813.svc.cluster.local; sleep 1; done
   @ 07/30/24 07:58:59.453
  STEP: creating a pod to probe DNS @ 07/30/24 07:58:59.453
  STEP: submitting the pod to kubernetes @ 07/30/24 07:58:59.453
  E0730 07:59:00.262360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:01.262894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/30/24 07:59:01.468
  STEP: looking for the results for each expected name from probers @ 07/30/24 07:59:01.473
  I0730 07:59:01.483042 19 dns_common.go:552] DNS probes using dns-test-7c9e47e8-ec93-4448-b2c8-32c15958ff77 succeeded

  STEP: changing the externalName to bar.example.com @ 07/30/24 07:59:01.483
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2813.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-2813.svc.cluster.local; sleep 1; done
   @ 07/30/24 07:59:01.493
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2813.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-2813.svc.cluster.local; sleep 1; done
   @ 07/30/24 07:59:01.493
  STEP: creating a second pod to probe DNS @ 07/30/24 07:59:01.493
  STEP: submitting the pod to kubernetes @ 07/30/24 07:59:01.493
  E0730 07:59:02.263230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:03.263471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/30/24 07:59:03.51
  STEP: looking for the results for each expected name from probers @ 07/30/24 07:59:03.513
  I0730 07:59:03.518634 19 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-2813.svc.cluster.local from pod  dns-2813/dns-test-3a9422d7-c59b-46b4-8771-9c73e7b34e2a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0730 07:59:03.522419 19 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-2813.svc.cluster.local from pod  dns-2813/dns-test-3a9422d7-c59b-46b4-8771-9c73e7b34e2a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0730 07:59:03.522472 19 dns_common.go:489] Lookups using dns-2813/dns-test-3a9422d7-c59b-46b4-8771-9c73e7b34e2a failed for: [wheezy_udp@dns-test-service-3.dns-2813.svc.cluster.local jessie_udp@dns-test-service-3.dns-2813.svc.cluster.local]

  I0730 07:59:03.528177 19 dns_common.go:495] Pod client logs for webserver: 
  I0730 07:59:03.531746 19 dns_common.go:495] Pod client logs for querier: 
  I0730 07:59:03.534156 19 dns_common.go:495] Pod client logs for jessie-querier: 
  E0730 07:59:04.263920      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:05.264473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:06.265523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:07.266415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:08.267528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 07:59:08.517547 19 dns_common.go:552] DNS probes using dns-test-3a9422d7-c59b-46b4-8771-9c73e7b34e2a succeeded

  STEP: changing the service to type=ClusterIP @ 07/30/24 07:59:08.517
  W0730 07:59:08.526175      19 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2813.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-2813.svc.cluster.local; sleep 1; done
   @ 07/30/24 07:59:08.526
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2813.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-2813.svc.cluster.local; sleep 1; done
   @ 07/30/24 07:59:08.526
  STEP: creating a third pod to probe DNS @ 07/30/24 07:59:08.526
  STEP: submitting the pod to kubernetes @ 07/30/24 07:59:08.527
  E0730 07:59:09.268352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:10.269223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/30/24 07:59:10.543
  STEP: looking for the results for each expected name from probers @ 07/30/24 07:59:10.547
  I0730 07:59:10.557712 19 dns_common.go:552] DNS probes using dns-test-d2f8c5df-84b6-4fa3-af59-9ce9b4113ad1 succeeded

  STEP: deleting the pod @ 07/30/24 07:59:10.558
  STEP: deleting the pod @ 07/30/24 07:59:10.574
  STEP: deleting the pod @ 07/30/24 07:59:10.601
  STEP: deleting the test externalName service @ 07/30/24 07:59:10.623
  I0730 07:59:10.644865 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2813" for this suite. @ 07/30/24 07:59:10.647
• [11.232 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 07/30/24 07:59:10.657
  I0730 07:59:10.657165 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename emptydir-wrapper @ 07/30/24 07:59:10.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:59:10.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:59:10.67
  E0730 07:59:11.269738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:12.270893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 07/30/24 07:59:12.688
  STEP: Cleaning up the configmap @ 07/30/24 07:59:12.692
  STEP: Cleaning up the pod @ 07/30/24 07:59:12.695
  I0730 07:59:12.709564 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-3455" for this suite. @ 07/30/24 07:59:12.714
• [2.064 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 07/30/24 07:59:12.722
  I0730 07:59:12.722230 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename secrets @ 07/30/24 07:59:12.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:59:12.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:59:12.737
  STEP: Creating secret with name secret-test-map-df3154d9-2d5d-4d16-9947-fa45e9c2ee42 @ 07/30/24 07:59:12.739
  STEP: Creating a pod to test consume secrets @ 07/30/24 07:59:12.743
  E0730 07:59:13.270865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:14.270984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 07:59:14.757
  I0730 07:59:14.761915 19 output.go:196] Trying to get logs from node jammy pod pod-secrets-986c59bb-b414-48a3-aa1c-9de54d027fa5 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/30/24 07:59:14.768
  I0730 07:59:14.796508 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-14" for this suite. @ 07/30/24 07:59:14.801
• [2.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 07/30/24 07:59:14.809
  I0730 07:59:14.809517 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename secrets @ 07/30/24 07:59:14.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 07:59:14.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 07:59:14.823
  STEP: Creating secret with name s-test-opt-del-e73ca1f3-0291-4624-ba00-b397dfb78c55 @ 07/30/24 07:59:14.825
  STEP: Creating secret with name s-test-opt-upd-fe2858e3-6309-44e1-a308-1228ee7661bd @ 07/30/24 07:59:14.829
  STEP: Creating the pod @ 07/30/24 07:59:14.832
  E0730 07:59:15.271089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:16.271836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-e73ca1f3-0291-4624-ba00-b397dfb78c55 @ 07/30/24 07:59:16.868
  STEP: Updating secret s-test-opt-upd-fe2858e3-6309-44e1-a308-1228ee7661bd @ 07/30/24 07:59:16.876
  STEP: Creating secret with name s-test-opt-create-a116f9df-e53e-418d-84f4-a7e22079fefc @ 07/30/24 07:59:16.881
  STEP: waiting to observe update in volume @ 07/30/24 07:59:16.885
  E0730 07:59:17.272537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:18.272748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:19.273268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:20.273518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:21.273836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:22.273768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:23.274551      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:24.274847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:25.275054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:26.274889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:27.275760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:28.276131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:29.277335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:30.277913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:31.278413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:32.278780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:33.279485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:34.280023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:35.280618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:36.280594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:37.280815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:38.281346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:39.281558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:40.281804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:41.281860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:42.282414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:43.282947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:44.283511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:45.283551      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:46.284524      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:47.284655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:48.285147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:49.285580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:50.286753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:51.287441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:52.287447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:53.288585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:54.288956      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:55.289278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:56.290355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:57.291066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:58.291285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 07:59:59.291692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:00.292691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:01.293809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:02.294732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:03.295285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:04.296473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:05.297345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:06.298356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:07.298702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:08.299154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:09.300208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:10.300720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:11.301662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:12.302094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:13.302226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:14.302518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:15.303783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:16.304085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:17.304559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:18.304741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:19.305860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:20.306179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:21.306575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:22.306638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:23.307103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:24.307452      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:25.308616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:26.308788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:27.309712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:28.310431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:29.310674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:30.311866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:31.311930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:32.312287      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:33.312456      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:34.313292      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:35.314427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:36.315596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:37.316112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:38.316518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:39.316913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:40.318172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:41.318809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:42.319396      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:43.320089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:44.321032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:45.321186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:00:45.380879 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1982" for this suite. @ 07/30/24 08:00:45.384
• [90.582 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 07/30/24 08:00:45.392
  I0730 08:00:45.392914 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename webhook @ 07/30/24 08:00:45.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:00:45.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:00:45.411
  STEP: Setting up server cert @ 07/30/24 08:00:45.434
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/30/24 08:00:45.545
  STEP: Deploying the webhook pod @ 07/30/24 08:00:45.554
  STEP: Wait for the deployment to be ready @ 07/30/24 08:00:45.561
  I0730 08:00:45.565624 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0730 08:00:46.322413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:47.323000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/30/24 08:00:47.597
  STEP: Verifying the service has paired with the endpoint @ 07/30/24 08:00:47.611
  E0730 08:00:48.324224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:00:48.612401 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 07/30/24 08:00:48.623
  STEP: create a pod @ 07/30/24 08:00:48.644
  E0730 08:00:49.324481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:50.324624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 07/30/24 08:00:50.665
  I0730 08:00:50.665446 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=webhook-1902 attach --namespace=webhook-1902 to-be-attached-pod -i -c=container1'
  I0730 08:00:50.713501 19 builder.go:135] rc: 1
  I0730 08:00:50.769146 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1902" for this suite. @ 07/30/24 08:00:50.783
  STEP: Destroying namespace "webhook-markers-431" for this suite. @ 07/30/24 08:00:50.79
• [5.403 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 07/30/24 08:00:50.796
  I0730 08:00:50.796387 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename events @ 07/30/24 08:00:50.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:00:50.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:00:50.844
  STEP: Create set of events @ 07/30/24 08:00:50.845
  STEP: get a list of Events with a label in the current namespace @ 07/30/24 08:00:50.863
  STEP: delete a list of events @ 07/30/24 08:00:50.865
  I0730 08:00:50.865397 19 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 07/30/24 08:00:50.879
  I0730 08:00:50.881281 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2985" for this suite. @ 07/30/24 08:00:50.882
• [0.090 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 07/30/24 08:00:50.886
  I0730 08:00:50.886864 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename secrets @ 07/30/24 08:00:50.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:00:50.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:00:50.899
  STEP: Creating secret with name secret-test-7b7fcb3e-6b9a-462c-a2ef-fea98e357ef9 @ 07/30/24 08:00:50.9
  STEP: Creating a pod to test consume secrets @ 07/30/24 08:00:50.904
  E0730 08:00:51.324552      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:52.326802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:53.326085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:54.326298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:00:54.926
  I0730 08:00:54.930096 19 output.go:196] Trying to get logs from node jammy pod pod-secrets-47cf9a9d-40a0-4b7e-adb6-1a0986946332 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/30/24 08:00:54.936
  I0730 08:00:54.967661 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5231" for this suite. @ 07/30/24 08:00:54.972
• [4.094 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 07/30/24 08:00:54.981
  I0730 08:00:54.981564 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename watch @ 07/30/24 08:00:54.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:00:54.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:00:55.001
  STEP: creating a watch on configmaps with a certain label @ 07/30/24 08:00:55.002
  STEP: creating a new configmap @ 07/30/24 08:00:55.003
  STEP: modifying the configmap once @ 07/30/24 08:00:55.007
  STEP: changing the label value of the configmap @ 07/30/24 08:00:55.014
  STEP: Expecting to observe a delete notification for the watched object @ 07/30/24 08:00:55.021
  I0730 08:00:55.021802 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5889  ed677b4e-06f5-45e2-aa26-69ca5bdb3794 19188 0 2024-07-30 08:00:54 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-30 08:00:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0730 08:00:55.021988 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5889  ed677b4e-06f5-45e2-aa26-69ca5bdb3794 19189 0 2024-07-30 08:00:54 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-30 08:00:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0730 08:00:55.022077 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5889  ed677b4e-06f5-45e2-aa26-69ca5bdb3794 19190 0 2024-07-30 08:00:54 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-30 08:00:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 07/30/24 08:00:55.022
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 07/30/24 08:00:55.027
  E0730 08:00:55.326913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:56.327423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:57.328023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:58.328091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:00:59.328670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:00.328839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:01.329348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:02.329504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:03.329853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:04.330227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 07/30/24 08:01:05.028
  STEP: modifying the configmap a third time @ 07/30/24 08:01:05.045
  STEP: deleting the configmap @ 07/30/24 08:01:05.057
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 07/30/24 08:01:05.064
  I0730 08:01:05.064526 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5889  ed677b4e-06f5-45e2-aa26-69ca5bdb3794 19250 0 2024-07-30 08:00:54 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-30 08:01:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0730 08:01:05.064744 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5889  ed677b4e-06f5-45e2-aa26-69ca5bdb3794 19251 0 2024-07-30 08:00:54 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-30 08:01:05 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0730 08:01:05.064850 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5889  ed677b4e-06f5-45e2-aa26-69ca5bdb3794 19252 0 2024-07-30 08:00:54 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-30 08:01:05 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0730 08:01:05.064920 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5889" for this suite. @ 07/30/24 08:01:05.068
• [10.094 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 07/30/24 08:01:05.075
  I0730 08:01:05.075506 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename deployment @ 07/30/24 08:01:05.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:01:05.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:01:05.089
  I0730 08:01:05.096204 19 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  E0730 08:01:05.331258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:06.332377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:07.332556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:08.332725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:09.333380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:01:10.101743 19 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/30/24 08:01:10.101
  I0730 08:01:10.101841 19 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0730 08:01:10.333885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:11.334838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:01:12.108882 19 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0730 08:01:12.123224 19 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  E0730 08:01:12.335457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:13.335770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:01:14.135352 19 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0730 08:01:14.143410 19 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0730 08:01:14.149318 19 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0730 08:01:14.156465 19 deployment.go:313] Updating deployment test-rollover-deployment
  I0730 08:01:14.156492 19 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0730 08:01:14.336466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:15.337323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:01:16.166090 19 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0730 08:01:16.174449 19 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0730 08:01:16.181722 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0730 08:01:16.181812 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 1, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 1, 12, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 1, 14, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 1, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:01:16.338204      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:17.338474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:01:18.194279 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0730 08:01:18.194375 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 1, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 1, 12, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 1, 14, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 1, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:01:18.339665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:19.342803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:01:20.193277 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0730 08:01:20.193351 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 1, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 1, 12, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 1, 14, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 1, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:01:20.343478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:21.344598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:01:22.193607 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0730 08:01:22.193708 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 1, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 1, 12, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 1, 14, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 1, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:01:22.345529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:23.346136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:01:24.185865 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0730 08:01:24.185916 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 1, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 1, 12, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 1, 14, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 1, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:01:24.346231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:25.347129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:01:26.193896 19 deployment.go:94] 
  I0730 08:01:26.193966 19 deployment.go:974] Ensure that both old replica sets have no replicas
  I0730 08:01:26.206219 19 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1292",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9ae61ff2-b919-4b50-9e29-fd57f397cf8c",
      ResourceVersion: (string) (len=5) "19374",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857923272,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923284,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923284,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-679c966bdf\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0730 08:01:26.215368 19 deployment.go:39] New ReplicaSet "test-rollover-deployment-679c966bdf" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-679c966bdf",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1292",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d93660cb-7e8e-45ac-a7c6-bc71f18a6fdb",
      ResourceVersion: (string) (len=5) "19364",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857923274,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "9ae61ff2-b919-4b50-9e29-fd57f397cf8c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 61 65 36 31 66  66 32 2d 62 39 31 39 2d  |\"9ae61ff2-b919-|
              00000120  34 62 35 30 2d 39 65 32  39 2d 66 64 35 37 66 33  |4b50-9e29-fd57f3|
              00000130  39 37 63 66 38 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |97cf8c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923284,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0730 08:01:26.216503 19 deployment.go:44] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0730 08:01:26.216872 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1292",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7944baec-c3fa-4363-bd98-711ed12ff868",
      ResourceVersion: (string) (len=5) "19373",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857923265,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "9ae61ff2-b919-4b50-9e29-fd57f397cf8c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923265,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923284,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  39 61 65 36 31 66 66 32  2d 62 39 31 39 2d 34 62  |9ae61ff2-b919-4b|
              000000c0  35 30 2d 39 65 32 39 2d  66 64 35 37 66 33 39 37  |50-9e29-fd57f397|
              000000d0  63 66 38 63 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |cf8c\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923284,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0730 08:01:26.217999 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-65bd487b4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1292",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "16d8156d-bf65-4299-ab93-479273debf07",
      ResourceVersion: (string) (len=5) "19331",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857923272,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "9ae61ff2-b919-4b50-9e29-fd57f397cf8c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 61 65 36 31 66  66 32 2d 62 39 31 39 2d  |\"9ae61ff2-b919-|
              00000120  34 62 35 30 2d 39 65 32  39 2d 66 64 35 37 66 33  |4b50-9e29-fd57f3|
              00000130  39 37 63 66 38 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |97cf8c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0730 08:01:26.221991 19 deployment.go:67] Pod "test-rollover-deployment-679c966bdf-vpvzf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-679c966bdf-vpvzf",
      GenerateName: (string) (len=36) "test-rollover-deployment-679c966bdf-",
      Namespace: (string) (len=15) "deployment-1292",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d4756a56-c68b-4db3-b442-da6be57f0307",
      ResourceVersion: (string) (len=5) "19344",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857923274,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "3792c0017f75746812d835b04d0bedca1c3b694a13ff4a1c44f37707c2962aac",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.163.24/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.163.24/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-679c966bdf",
          UID: (types.UID) (len=36) "d93660cb-7e8e-45ac-a7c6-bc71f18a6fdb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 39  33 36 36 30 63 62 2d 37  |d\":\"d93660cb-7|
              00000090  65 38 65 2d 34 35 61 63  2d 61 37 63 36 2d 62 63  |e8e-45ac-a7c6-bc|
              000000a0  37 31 66 31 38 61 36 66  64 62 5c 22 7d 22 3a 7b  |71f18a6fdb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 36 33 2e 32  34 5c 22 7d 22 3a 7b 22  |.1.163.24\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fcsv5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fcsv5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "jammy",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.102",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.102"
        }
      },
      PodIP: (string) (len=11) "10.1.163.24",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.163.24"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857923274,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857923274,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://1ac0d2a96fcaa64ba6078503fb6801903502a6c97db0d897e52b0d37eb16daa4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 08:01:26.225222 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1292" for this suite. @ 07/30/24 08:01:26.227
• [21.161 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 07/30/24 08:01:26.236
  I0730 08:01:26.236848 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename projected @ 07/30/24 08:01:26.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:01:26.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:01:26.257
  STEP: Creating projection with secret that has name projected-secret-test-8576d7ef-5b76-4734-ae7c-53480629b78a @ 07/30/24 08:01:26.258
  STEP: Creating a pod to test consume secrets @ 07/30/24 08:01:26.262
  E0730 08:01:26.347941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:27.349085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:01:28.276
  I0730 08:01:28.281317 19 output.go:196] Trying to get logs from node jammy pod pod-projected-secrets-9f434d01-1318-45ba-ab0f-1c3a8601a07b container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/30/24 08:01:28.288
  I0730 08:01:28.312864 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7808" for this suite. @ 07/30/24 08:01:28.318
• [2.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 07/30/24 08:01:28.325
  I0730 08:01:28.325621 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename pod-network-test @ 07/30/24 08:01:28.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:01:28.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:01:28.338
  STEP: Performing setup for networking test in namespace pod-network-test-3550 @ 07/30/24 08:01:28.34
  STEP: creating a selector @ 07/30/24 08:01:28.34
  STEP: Creating the service pods in kubernetes @ 07/30/24 08:01:28.34
  I0730 08:01:28.340192 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0730 08:01:28.349906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:29.350100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:30.350231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:31.350413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:32.351009      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:33.351273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:34.351923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:35.352686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:36.353814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:37.354047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:38.354553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:39.356525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:40.357089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 07/30/24 08:01:40.41
  E0730 08:01:41.357552      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:42.358066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:01:42.435112 19 utils.go:779] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0730 08:01:42.435166 19 networking.go:42] Breadth first check of 10.1.163.15 on host 10.227.69.102...
  I0730 08:01:42.437998 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.1.163.3:9080/dial?request=hostname&protocol=udp&host=10.1.163.15&port=8081&tries=1'] Namespace:pod-network-test-3550 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0730 08:01:42.438028 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  I0730 08:01:42.438418 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0730 08:01:42.438517 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3550/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.1.163.3%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.1.163.15%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0730 08:01:42.461902 19 utils.go:331] Waiting for responses: map[]
  I0730 08:01:42.462114 19 utils.go:335] reached 10.1.163.15 after 0/1 tries
  I0730 08:01:42.462143 19 networking.go:42] Breadth first check of 10.1.171.73 on host 10.227.69.245...
  I0730 08:01:42.463923 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.1.163.3:9080/dial?request=hostname&protocol=udp&host=10.1.171.73&port=8081&tries=1'] Namespace:pod-network-test-3550 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0730 08:01:42.463939 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  I0730 08:01:42.464224 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0730 08:01:42.464263 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3550/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.1.163.3%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.1.171.73%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0730 08:01:42.486063 19 utils.go:331] Waiting for responses: map[]
  I0730 08:01:42.486266 19 utils.go:335] reached 10.1.171.73 after 0/1 tries
  I0730 08:01:42.486337 19 networking.go:53] Going to retry 0 out of 2 pods....
  I0730 08:01:42.486585 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3550" for this suite. @ 07/30/24 08:01:42.488
• [14.167 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 07/30/24 08:01:42.494
  I0730 08:01:42.494298 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename resourcequota @ 07/30/24 08:01:42.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:01:42.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:01:42.509
  STEP: Discovering how many secrets are in namespace by default @ 07/30/24 08:01:42.51
  E0730 08:01:43.358196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:44.358924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:45.359840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:46.360198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:47.360343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 07/30/24 08:01:47.526
  E0730 08:01:48.360483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:49.363839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:50.364393      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:51.365312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:52.365543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/30/24 08:01:52.534
  STEP: Ensuring resource quota status is calculated @ 07/30/24 08:01:52.547
  E0730 08:01:53.365896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:54.366128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 07/30/24 08:01:54.555
  STEP: Ensuring resource quota status captures secret creation @ 07/30/24 08:01:54.576
  E0730 08:01:55.366767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:56.367067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 07/30/24 08:01:56.584
  STEP: Ensuring resource quota status released usage @ 07/30/24 08:01:56.595
  E0730 08:01:57.367137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:01:58.367691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:01:58.602901 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5265" for this suite. @ 07/30/24 08:01:58.608
• [16.127 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 07/30/24 08:01:58.622
  I0730 08:01:58.622886 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename replication-controller @ 07/30/24 08:01:58.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:01:58.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:01:58.651
  STEP: Creating ReplicationController "e2e-rc-6fldr" @ 07/30/24 08:01:58.653
  I0730 08:01:58.658137 19 rc.go:792] Get Replication Controller "e2e-rc-6fldr" to confirm replicas
  E0730 08:01:59.367663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:01:59.658274 19 rc.go:792] Get Replication Controller "e2e-rc-6fldr" to confirm replicas
  I0730 08:01:59.665428 19 rc.go:801] Found 1 replicas for "e2e-rc-6fldr" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-6fldr" @ 07/30/24 08:01:59.665
  STEP: Updating a scale subresource @ 07/30/24 08:01:59.669
  STEP: Verifying replicas where modified for replication controller "e2e-rc-6fldr" @ 07/30/24 08:01:59.682
  I0730 08:01:59.682702 19 rc.go:792] Get Replication Controller "e2e-rc-6fldr" to confirm replicas
  E0730 08:02:00.368616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:02:00.683462 19 rc.go:792] Get Replication Controller "e2e-rc-6fldr" to confirm replicas
  I0730 08:02:00.691320 19 rc.go:801] Found 2 replicas for "e2e-rc-6fldr" replication controller
  I0730 08:02:00.691758 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3838" for this suite. @ 07/30/24 08:02:00.7
• [2.087 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1459
  STEP: Creating a kubernetes client @ 07/30/24 08:02:00.71
  I0730 08:02:00.710757 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename services @ 07/30/24 08:02:00.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:02:00.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:02:00.722
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-3874 @ 07/30/24 08:02:00.724
  STEP: changing the ExternalName service to type=NodePort @ 07/30/24 08:02:00.727
  STEP: creating replication controller externalname-service in namespace services-3874 @ 07/30/24 08:02:00.737
  I0730 08:02:00.754716      19 runners.go:198] Created replication controller with name: externalname-service, namespace: services-3874, replica count: 2
  E0730 08:02:01.369624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:02:02.370816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:02:03.370976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:02:03.806618      19 runners.go:198] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0730 08:02:03.807354 19 resource.go:361] Creating new exec pod
  E0730 08:02:04.371084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:02:05.371710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:02:06.372785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:02:06.828927 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-3874 exec execpodf4st9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0730 08:02:06.898938 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0730 08:02:06.898965 19 builder.go:147] stdout: ""
  E0730 08:02:07.373885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:02:07.830055 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-3874 exec execpodf4st9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0730 08:02:07.903433 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0730 08:02:07.903460 19 builder.go:147] stdout: ""
  E0730 08:02:08.374092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:02:08.829503 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-3874 exec execpodf4st9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0730 08:02:08.918510 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0730 08:02:08.918555 19 builder.go:147] stdout: ""
  E0730 08:02:09.374751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:02:09.829816 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-3874 exec execpodf4st9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0730 08:02:09.902413 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0730 08:02:09.902441 19 builder.go:147] stdout: ""
  E0730 08:02:10.374917      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:02:10.830179 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-3874 exec execpodf4st9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0730 08:02:10.882858 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0730 08:02:10.882898 19 builder.go:147] stdout: "externalname-service-q6z59"
  I0730 08:02:10.882960 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-3874 exec execpodf4st9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.245 80'
  I0730 08:02:10.935027 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.245 80\nConnection to 10.152.183.245 80 port [tcp/http] succeeded!\n"
  I0730 08:02:10.935056 19 builder.go:147] stdout: ""
  E0730 08:02:11.376100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:02:11.883483 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-3874 exec execpodf4st9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.245 80'
  I0730 08:02:11.949863 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.245 80\nConnection to 10.152.183.245 80 port [tcp/http] succeeded!\n"
  I0730 08:02:11.949900 19 builder.go:147] stdout: "externalname-service-bvpns"
  I0730 08:02:11.950071 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-3874 exec execpodf4st9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.227.69.102 31094'
  I0730 08:02:12.008497 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.227.69.102 31094\nConnection to 10.227.69.102 31094 port [tcp/*] succeeded!\n"
  I0730 08:02:12.008530 19 builder.go:147] stdout: "externalname-service-bvpns"
  I0730 08:02:12.008655 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-3874 exec execpodf4st9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.227.69.245 31094'
  I0730 08:02:12.072813 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.227.69.245 31094\nConnection to 10.227.69.245 31094 port [tcp/*] succeeded!\n"
  I0730 08:02:12.072846 19 builder.go:147] stdout: ""
  E0730 08:02:12.376284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:02:13.008921 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-3874 exec execpodf4st9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.227.69.245 31094'
  I0730 08:02:13.091099 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.227.69.245 31094\nConnection to 10.227.69.245 31094 port [tcp/*] succeeded!\n"
  I0730 08:02:13.091127 19 builder.go:147] stdout: "externalname-service-q6z59"
  I0730 08:02:13.091204 19 service.go:1468] Cleaning up the ExternalName to NodePort test service
  I0730 08:02:13.109491 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3874" for this suite. @ 07/30/24 08:02:13.111
• [12.405 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 07/30/24 08:02:13.115
  I0730 08:02:13.115689 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename daemonsets @ 07/30/24 08:02:13.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:02:13.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:02:13.125
  STEP: Creating a simple DaemonSet "daemon-set" @ 07/30/24 08:02:13.134
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/30/24 08:02:13.138
  I0730 08:02:13.141484 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0730 08:02:13.141508 19 fixtures.go:130] Node jammy is running 0 daemon pod, expected 1
  E0730 08:02:13.377228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:02:14.154683 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0730 08:02:14.154736 19 fixtures.go:130] Node jammy is running 0 daemon pod, expected 1
  E0730 08:02:14.378001      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:02:15.151854 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0730 08:02:15.151895 19 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 07/30/24 08:02:15.155
  I0730 08:02:15.185782 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0730 08:02:15.185905 19 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 07/30/24 08:02:15.185
  E0730 08:02:15.378528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting DaemonSet "daemon-set" @ 07/30/24 08:02:16.195
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8004, will wait for the garbage collector to delete the pods @ 07/30/24 08:02:16.195
  I0730 08:02:16.265983 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 15.867543ms
  I0730 08:02:16.366810 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.810667ms
  E0730 08:02:16.379064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:02:17.379963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:02:18.380387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:02:18.669434 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0730 08:02:18.669468 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0730 08:02:18.671314 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"19849"},"items":null}

  I0730 08:02:18.672868 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"19849"},"items":null}

  I0730 08:02:18.676683 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8004" for this suite. @ 07/30/24 08:02:18.678
• [5.567 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 07/30/24 08:02:18.682
  I0730 08:02:18.682955 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename statefulset @ 07/30/24 08:02:18.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:02:18.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:02:18.693
  STEP: Creating service test in namespace statefulset-1300 @ 07/30/24 08:02:18.694
  STEP: Creating stateful set ss in namespace statefulset-1300 @ 07/30/24 08:02:18.699
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-1300 @ 07/30/24 08:02:18.708
  I0730 08:02:18.711091 19 wait.go:40] Found 0 stateful pods, waiting for 1
  E0730 08:02:19.380550      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:02:20.380649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:02:21.381175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:02:22.381861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:02:23.382496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:02:24.383399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:02:25.383513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:02:26.383810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:02:27.384034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:02:28.384767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:02:28.715367 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 07/30/24 08:02:28.715
  I0730 08:02:28.719890 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=statefulset-1300 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0730 08:02:28.787692 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0730 08:02:28.787717 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0730 08:02:28.787723 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0730 08:02:28.789586 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0730 08:02:29.384687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:02:30.385003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:02:31.386144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:02:32.386597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:02:33.387782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:02:34.388536      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:02:35.388661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:02:36.389240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:02:37.389967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:02:38.390207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:02:38.794184 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0730 08:02:38.794243 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0730 08:02:38.821047 19 resource.go:168] POD   NODE   PHASE    GRACE  CONDITIONS
  I0730 08:02:38.821128 19 resource.go:175] ss-0  jammy  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-30 08:02:20 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-30 08:02:18 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-30 08:02:28 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-30 08:02:28 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-30 08:02:18 +0000 UTC  }]
  I0730 08:02:38.821140 19 resource.go:178] 
  I0730 08:02:38.821203 19 statefulset.go:2147] StatefulSet ss has not reached scale 3, at 1
  E0730 08:02:39.390294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:02:39.825785 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 8.99048068s
  E0730 08:02:40.391616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:02:40.833087 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 7.986134887s
  E0730 08:02:41.392131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:02:41.841058 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 6.978801152s
  E0730 08:02:42.392820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:02:42.847994 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 5.970887163s
  E0730 08:02:43.393617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:02:43.856589 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 4.964172631s
  E0730 08:02:44.393900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:02:44.859958 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 3.955350093s
  E0730 08:02:45.394985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:02:45.868035 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 2.951756744s
  E0730 08:02:46.395777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:02:46.874706 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 1.944317074s
  E0730 08:02:47.396755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:02:47.882907 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 937.001944ms
  E0730 08:02:48.397126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-1300 @ 07/30/24 08:02:48.883
  I0730 08:02:48.891607 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=statefulset-1300 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0730 08:02:48.962115 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0730 08:02:48.962147 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0730 08:02:48.962158 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0730 08:02:48.962197 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=statefulset-1300 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0730 08:02:49.025731 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0730 08:02:49.025757 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0730 08:02:49.025763 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0730 08:02:49.025788 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=statefulset-1300 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0730 08:02:49.079572 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0730 08:02:49.079605 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0730 08:02:49.079611 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0730 08:02:49.081761 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0730 08:02:49.081778 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0730 08:02:49.081782 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 07/30/24 08:02:49.081
  I0730 08:02:49.083301 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=statefulset-1300 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0730 08:02:49.137319 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0730 08:02:49.137351 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0730 08:02:49.137358 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0730 08:02:49.137453 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=statefulset-1300 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0730 08:02:49.193405 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0730 08:02:49.193436 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0730 08:02:49.193442 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0730 08:02:49.193471 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=statefulset-1300 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0730 08:02:49.243723 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0730 08:02:49.243761 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0730 08:02:49.243770 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0730 08:02:49.243932 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0730 08:02:49.246172 19 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0730 08:02:49.397551      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:02:50.397687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:02:51.398236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:02:52.398702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:02:53.399166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:02:54.399648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:02:55.399744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:02:56.400087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:02:57.400586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:02:58.401483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:02:59.256571 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0730 08:02:59.256631 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0730 08:02:59.256647 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0730 08:02:59.284269 19 resource.go:168] POD   NODE    PHASE    GRACE  CONDITIONS
  I0730 08:02:59.284596 19 resource.go:175] ss-0  jammy   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-30 08:02:20 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-30 08:02:18 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-30 08:02:49 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-30 08:02:49 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-30 08:02:18 +0000 UTC  }]
  I0730 08:02:59.284678 19 resource.go:175] ss-1  worker  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-30 08:02:39 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-30 08:02:38 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-30 08:02:49 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-30 08:02:49 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-30 08:02:38 +0000 UTC  }]
  I0730 08:02:59.284757 19 resource.go:175] ss-2  jammy   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-30 08:02:40 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-30 08:02:38 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-30 08:02:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-30 08:02:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-30 08:02:38 +0000 UTC  }]
  I0730 08:02:59.284829 19 resource.go:178] 
  I0730 08:02:59.284890 19 statefulset.go:2147] StatefulSet ss has not reached scale 0, at 3
  E0730 08:02:59.402333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:03:00.294620 19 resource.go:168] POD   NODE   PHASE      GRACE  CONDITIONS
  I0730 08:03:00.295058 19 resource.go:175] ss-0  jammy  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-07-30 08:02:59 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-30 08:02:18 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-30 08:02:49 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-30 08:02:49 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-30 08:02:18 +0000 UTC  }]
  I0730 08:03:00.295171 19 resource.go:175] ss-2  jammy  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-07-30 08:02:59 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-30 08:02:38 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-30 08:02:50 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-30 08:02:50 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-30 08:02:38 +0000 UTC  }]
  I0730 08:03:00.295384 19 resource.go:178] 
  I0730 08:03:00.295530 19 statefulset.go:2147] StatefulSet ss has not reached scale 0, at 2
  E0730 08:03:00.403002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:03:01.304751 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 7.982683562s
  E0730 08:03:01.403513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:03:02.313860 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 6.973009487s
  E0730 08:03:02.404516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:03:03.323129 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 5.964522902s
  E0730 08:03:03.404490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:03:04.331225 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 4.954790121s
  E0730 08:03:04.404628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:03:05.340937 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 3.946266469s
  E0730 08:03:05.405321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:03:06.350593 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 2.936210862s
  E0730 08:03:06.405977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:03:07.358967 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 1.927764284s
  E0730 08:03:07.406261      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:03:08.367653 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 918.75663ms
  E0730 08:03:08.407168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-1300 @ 07/30/24 08:03:09.368
  I0730 08:03:09.372253 19 rest.go:150] Scaling statefulset ss to 0
  I0730 08:03:09.377759 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0730 08:03:09.382321 19 statefulset.go:135] Deleting all statefulset in ns statefulset-1300
  I0730 08:03:09.385771 19 rest.go:150] Scaling statefulset ss to 0
  I0730 08:03:09.389435 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0730 08:03:09.390931 19 rest.go:88] Deleting statefulset ss
  I0730 08:03:09.400613 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1300" for this suite. @ 07/30/24 08:03:09.402
• [50.723 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 07/30/24 08:03:09.406
  I0730 08:03:09.406633 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename var-expansion @ 07/30/24 08:03:09.406
  E0730 08:03:09.407102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:03:09.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:03:09.482
  STEP: creating the pod with failed condition @ 07/30/24 08:03:09.486
  E0730 08:03:10.408561      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:11.409372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:12.409566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:13.409979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:14.410265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:15.411223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:16.412108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:17.413254      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:18.413837      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:19.414733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:20.415300      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:21.415689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:22.415918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:23.416501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:24.416745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:25.416919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:26.417790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:27.418417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:28.419329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:29.419918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:30.420274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:31.420445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:32.421624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:33.421651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:34.421686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:35.422952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:36.423334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:37.423372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:38.424381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:39.424726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:40.424822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:41.425085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:42.425727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:43.426042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:44.426399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:45.427536      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:46.427652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:47.427962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:48.428245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:49.428541      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:50.428805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:51.429565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:52.430462      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:53.430595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:54.430980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:55.431098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:56.431924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:57.432419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:58.432735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:03:59.433075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:00.433754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:01.434513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:02.435602      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:03.435902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:04.436150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:05.436914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:06.437137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:07.437536      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:08.437719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:09.438141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:10.438389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:11.439499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:12.439806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:13.440102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:14.440374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:15.440474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:16.441340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:17.441685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:18.442214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:19.442972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:20.443242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:21.443200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:22.443653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:23.444004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:24.445141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:25.445291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:26.446069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:27.446560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:28.447222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:29.447882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:30.448897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:31.449570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:32.450573      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:33.450991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:34.451225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:35.452258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:36.451896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:37.452053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:38.452133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:39.453066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:40.453725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:41.453931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:42.454330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:43.454555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:44.454784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:45.455699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:46.456525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:47.456578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:48.457606      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:49.457812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:50.458414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:51.459421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:52.460052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:53.460296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:54.460806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:55.460905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:56.461539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:57.462886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:58.462868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:04:59.463519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:00.463692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:01.465007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:02.464962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:03.465339      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:04.465654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:05.466637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:06.466775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:07.467237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:08.468311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:09.468941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 07/30/24 08:05:09.496
  I0730 08:05:10.008083 19 pod_client.go:141] Successfully updated pod "var-expansion-ed045765-aa70-4fd5-8aec-3a5d97295d24"
  STEP: waiting for pod running @ 07/30/24 08:05:10.008
  E0730 08:05:10.469333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:11.470045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 07/30/24 08:05:12.019
  I0730 08:05:12.019978 19 delete.go:62] Deleting pod "var-expansion-ed045765-aa70-4fd5-8aec-3a5d97295d24" in namespace "var-expansion-9805"
  I0730 08:05:12.033796 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-ed045765-aa70-4fd5-8aec-3a5d97295d24" to be fully deleted
  E0730 08:05:12.470784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:13.471410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:14.471529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:15.471627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:16.472904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:17.473684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:18.474596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:19.474863      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:20.475069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:21.475405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:22.475481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:23.475954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:24.477035      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:25.477854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:26.478126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:27.478347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:28.479353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:29.479859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:30.480208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:31.481180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:32.481590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:33.481954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:34.483045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:35.483311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:36.483595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:37.483997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:38.484970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:39.485431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:40.486504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:41.487050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:42.487933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:43.488514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:05:44.163168 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9805" for this suite. @ 07/30/24 08:05:44.168
• [154.776 seconds]
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 07/30/24 08:05:44.183
  I0730 08:05:44.183838 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename var-expansion @ 07/30/24 08:05:44.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:05:44.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:05:44.212
  STEP: Creating a pod to test substitution in container's args @ 07/30/24 08:05:44.216
  E0730 08:05:44.488781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:45.489738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:46.490585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:47.491071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:05:48.241
  I0730 08:05:48.246679 19 output.go:196] Trying to get logs from node jammy pod var-expansion-ad7b4782-9333-4f6a-bf1c-72e708a94322 container dapi-container: <nil>
  STEP: delete the pod @ 07/30/24 08:05:48.259
  I0730 08:05:48.276431 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2868" for this suite. @ 07/30/24 08:05:48.278
• [4.099 seconds]
------------------------------
SSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 07/30/24 08:05:48.283
  I0730 08:05:48.283735 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename certificates @ 07/30/24 08:05:48.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:05:48.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:05:48.298
  E0730 08:05:48.491605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting /apis @ 07/30/24 08:05:48.563
  STEP: getting /apis/certificates.k8s.io @ 07/30/24 08:05:48.566
  STEP: getting /apis/certificates.k8s.io/v1 @ 07/30/24 08:05:48.566
  STEP: creating @ 07/30/24 08:05:48.567
  STEP: getting @ 07/30/24 08:05:48.582
  STEP: listing @ 07/30/24 08:05:48.587
  STEP: watching @ 07/30/24 08:05:48.588
  I0730 08:05:48.588420 19 certificates.go:316] starting watch
  STEP: patching @ 07/30/24 08:05:48.588
  STEP: updating @ 07/30/24 08:05:48.592
  I0730 08:05:48.596782 19 certificates.go:332] waiting for watch events with expected annotations
  I0730 08:05:48.596935 19 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 07/30/24 08:05:48.597
  STEP: patching /approval @ 07/30/24 08:05:48.598
  STEP: updating /approval @ 07/30/24 08:05:48.603
  STEP: getting /status @ 07/30/24 08:05:48.608
  STEP: patching /status @ 07/30/24 08:05:48.61
  STEP: updating /status @ 07/30/24 08:05:48.618
  STEP: deleting @ 07/30/24 08:05:48.624
  STEP: deleting a collection @ 07/30/24 08:05:48.635
  I0730 08:05:48.645883 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-3722" for this suite. @ 07/30/24 08:05:48.647
• [0.367 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 07/30/24 08:05:48.651
  I0730 08:05:48.651161 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename gc @ 07/30/24 08:05:48.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:05:48.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:05:48.664
  STEP: create the rc1 @ 07/30/24 08:05:48.666
  STEP: create the rc2 @ 07/30/24 08:05:48.67
  E0730 08:05:49.491813      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:50.492803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:51.494530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:52.494637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:53.495351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:54.495719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 07/30/24 08:05:54.701
  E0730 08:05:55.496312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 07/30/24 08:05:56.391
  STEP: wait for the rc to be deleted @ 07/30/24 08:05:56.415
  E0730 08:05:56.497738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:57.499741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:58.500018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:05:59.500131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:00.506857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:06:01.497745 19 garbage_collector.go:762] 64 pods remaining
  I0730 08:06:01.497877 19 garbage_collector.go:769] 64 pods has nil DeletionTimestamp
  I0730 08:06:01.497934 19 garbage_collector.go:770] 
  E0730 08:06:01.507221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:02.507530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:03.507854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:04.508113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:05.508191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/30/24 08:06:06.434
  W0730 08:06:06.449586      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0730 08:06:06.449618 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0730 08:06:06.449666 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-269d5" in namespace "gc-4352"
  I0730 08:06:06.477921 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2fntv" in namespace "gc-4352"
  E0730 08:06:06.508499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:06:06.515031 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2h8lp" in namespace "gc-4352"
  I0730 08:06:06.584094 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2rhhx" in namespace "gc-4352"
  I0730 08:06:06.644367 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2rlt8" in namespace "gc-4352"
  I0730 08:06:06.696397 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2t6pq" in namespace "gc-4352"
  I0730 08:06:06.765561 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2zqql" in namespace "gc-4352"
  I0730 08:06:06.805197 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-42b5b" in namespace "gc-4352"
  I0730 08:06:06.829970 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-478qp" in namespace "gc-4352"
  I0730 08:06:06.897723 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4mbwd" in namespace "gc-4352"
  I0730 08:06:06.946687 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4pgmr" in namespace "gc-4352"
  I0730 08:06:07.010684 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-55557" in namespace "gc-4352"
  I0730 08:06:07.080810 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5dbnc" in namespace "gc-4352"
  I0730 08:06:07.157395 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5fzmn" in namespace "gc-4352"
  I0730 08:06:07.198638 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5nbkt" in namespace "gc-4352"
  I0730 08:06:07.230067 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5rpc7" in namespace "gc-4352"
  I0730 08:06:07.284672 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-62xbv" in namespace "gc-4352"
  I0730 08:06:07.362598 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-69zdh" in namespace "gc-4352"
  I0730 08:06:07.408980 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6b9vt" in namespace "gc-4352"
  I0730 08:06:07.446585 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6djlx" in namespace "gc-4352"
  I0730 08:06:07.477313 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7bg6l" in namespace "gc-4352"
  E0730 08:06:07.509632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:06:07.515953 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7mwlp" in namespace "gc-4352"
  I0730 08:06:07.594607 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7qldj" in namespace "gc-4352"
  I0730 08:06:07.633980 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7wqvg" in namespace "gc-4352"
  I0730 08:06:07.713620 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8cczq" in namespace "gc-4352"
  I0730 08:06:07.755641 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8rk4v" in namespace "gc-4352"
  I0730 08:06:07.792242 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8vtch" in namespace "gc-4352"
  I0730 08:06:07.842972 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-92chm" in namespace "gc-4352"
  I0730 08:06:07.919387 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9gszb" in namespace "gc-4352"
  I0730 08:06:08.064930 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9l8n6" in namespace "gc-4352"
  I0730 08:06:08.159586 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9t5s6" in namespace "gc-4352"
  I0730 08:06:08.235016 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9zs9f" in namespace "gc-4352"
  I0730 08:06:08.340554 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b5n28" in namespace "gc-4352"
  I0730 08:06:08.379779 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b96ls" in namespace "gc-4352"
  I0730 08:06:08.468398 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bbp4w" in namespace "gc-4352"
  I0730 08:06:08.500395 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bclgl" in namespace "gc-4352"
  E0730 08:06:08.510639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:06:08.591139 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bcrj4" in namespace "gc-4352"
  I0730 08:06:08.658582 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bfwh4" in namespace "gc-4352"
  I0730 08:06:08.767085 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bgsvv" in namespace "gc-4352"
  I0730 08:06:08.828460 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-blcg9" in namespace "gc-4352"
  I0730 08:06:08.860912 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bzqfj" in namespace "gc-4352"
  I0730 08:06:08.908751 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c52fs" in namespace "gc-4352"
  I0730 08:06:08.947681 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cckdp" in namespace "gc-4352"
  I0730 08:06:09.033584 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cdl5v" in namespace "gc-4352"
  I0730 08:06:09.103777 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-clvdh" in namespace "gc-4352"
  I0730 08:06:09.163392 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ddmbx" in namespace "gc-4352"
  I0730 08:06:09.224682 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dgptz" in namespace "gc-4352"
  I0730 08:06:09.321634 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dj8d7" in namespace "gc-4352"
  I0730 08:06:09.358768 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dt47n" in namespace "gc-4352"
  I0730 08:06:09.430809 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dwwq2" in namespace "gc-4352"
  I0730 08:06:09.459962 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4352" for this suite. @ 07/30/24 08:06:09.48
• [20.844 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 07/30/24 08:06:09.495
  I0730 08:06:09.495922 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename projected @ 07/30/24 08:06:09.496
  E0730 08:06:09.512456      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:06:09.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:06:09.57
  STEP: Creating secret with name s-test-opt-del-29354f20-c5a9-475b-8bc1-d5af48ee81ea @ 07/30/24 08:06:09.586
  STEP: Creating secret with name s-test-opt-upd-77048e11-0fa4-4334-938d-158159b3339e @ 07/30/24 08:06:09.605
  STEP: Creating the pod @ 07/30/24 08:06:09.617
  E0730 08:06:10.512584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:11.513648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:12.514651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:13.514894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-29354f20-c5a9-475b-8bc1-d5af48ee81ea @ 07/30/24 08:06:13.67
  STEP: Updating secret s-test-opt-upd-77048e11-0fa4-4334-938d-158159b3339e @ 07/30/24 08:06:13.676
  STEP: Creating secret with name s-test-opt-create-95a44cd3-bd35-4299-b601-8f7469ea863d @ 07/30/24 08:06:13.68
  STEP: waiting to observe update in volume @ 07/30/24 08:06:13.684
  E0730 08:06:14.514912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:15.515290      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:16.515946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:17.516168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:06:17.705813 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9173" for this suite. @ 07/30/24 08:06:17.711
• [8.228 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 07/30/24 08:06:17.724
  I0730 08:06:17.724543 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename cronjob @ 07/30/24 08:06:17.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:06:17.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:06:17.749
  STEP: Creating a suspended cronjob @ 07/30/24 08:06:17.749
  STEP: Ensuring no jobs are scheduled @ 07/30/24 08:06:17.754
  E0730 08:06:18.516301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:19.517122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:20.517106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:21.517429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:22.517755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:23.517849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:24.517963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:25.518053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:26.518308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:27.518356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:28.518698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:29.519134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:30.519725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:31.520403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:32.520712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:33.521206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:34.521987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:35.522437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:36.522301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:37.522792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:38.523158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:39.524193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:40.524596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:41.525637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:42.525883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:43.526257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:44.526690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:45.527610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:46.527719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:47.528091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:48.528643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:49.528822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:50.529357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:51.530384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:52.531342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:53.531859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:54.532102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:55.533097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:56.533050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:57.533619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:58.533772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:06:59.534341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:00.535165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:01.535797      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:02.536236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:03.536368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:04.536685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:05.537402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:06.540912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:07.538884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:08.539166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:09.539684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:10.539835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:11.539914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:12.540295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:13.540835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:14.541270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:15.542043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:16.543199      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:17.543758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:18.544649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:19.544585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:20.545000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:21.545430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:22.545652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:23.546049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:24.546400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:25.546879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:26.547461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:27.547961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:28.548091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:29.549094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:30.549323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:31.549616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:32.549818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:33.550040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:34.550298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:35.551384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:36.552221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:37.553355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:38.553483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:39.553825      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:40.555200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:41.555298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:42.556362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:43.556811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:44.557086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:45.557342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:46.558424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:47.558578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:48.559390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:49.559945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:50.561340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:51.561560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:52.562032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:53.562535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:54.563348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:55.563510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:56.564362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:57.564645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:58.565215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:07:59.565356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:00.566210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:01.566922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:02.567414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:03.567882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:04.569045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:05.570178      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:06.570971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:07.571511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:08.571521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:09.572066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:10.572226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:11.572446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:12.573230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:13.573495      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:14.573705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:15.574726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:16.575388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:17.575863      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:18.576669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:19.577302      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:20.578288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:21.578431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:22.578474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:23.578615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:24.579618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:25.580147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:26.580805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:27.581161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:28.581391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:29.581967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:30.582555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:31.583703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:32.583780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:33.583858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:34.585036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:35.589129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:36.587790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:37.588291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:38.589220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:39.589852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:40.590814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:41.591415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:42.592462      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:43.592982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:44.593815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:45.594567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:46.594520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:47.595906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:48.597005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:49.597997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:50.598914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:51.599683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:52.599820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:53.599841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:54.600915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:55.601794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:56.602222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:57.603258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:58.604130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:08:59.604415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:00.605477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:01.606343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:02.607454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:03.608676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:04.609469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:05.609578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:06.609828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:07.610808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:08.611850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:09.611976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:10.613242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:11.613188      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:12.614390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:13.615103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:14.615341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:15.615527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:16.615723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:17.615960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:18.616336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:19.617316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:20.617935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:21.618271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:22.618743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:23.619155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:24.619340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:25.619884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:26.620829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:27.621135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:28.621874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:29.623083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:30.624056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:31.624455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:32.624464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:33.624582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:34.625507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:35.625905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:36.626435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:37.626873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:38.627660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:39.628133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:40.628679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:41.629436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:42.629825      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:43.630204      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:44.631157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:45.632010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:46.632763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:47.632669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:48.633344      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:49.633734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:50.634347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:51.634924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:52.635254      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:53.636228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:54.637141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:55.637988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:56.638985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:57.639457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:58.640186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:09:59.641149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:00.642024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:01.642526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:02.643089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:03.643465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:04.643923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:05.644776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:06.644755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:07.644953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:08.645602      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:09.645935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:10.646062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:11.646652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:12.647900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:13.648773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:14.649112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:15.649276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:16.650414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:17.650591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:18.650889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:19.651507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:20.652252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:21.652903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:22.654171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:23.654103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:24.654565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:25.654660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:26.655803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:27.656098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:28.656355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:29.657291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:30.657451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:31.657768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:32.657977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:33.658553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:34.659308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:35.660397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:36.659803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:37.660081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:38.660369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:39.660653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:40.661360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:41.661556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:42.662026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:43.662358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:44.663288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:45.663512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:46.664198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:47.664941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:48.665338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:49.665633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:50.666648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:51.667516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:52.668046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:53.668398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:54.668953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:55.669961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:56.670173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:57.670488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:58.671087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:10:59.671245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:00.671526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:01.671718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:02.672049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:03.672208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:04.672678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:05.672791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:06.673413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:07.673997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:08.674479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:09.674805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:10.674957      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:11.675681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:12.676011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:13.676293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:14.676608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:15.677182      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:16.677732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:17.678325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 07/30/24 08:11:17.755
  STEP: Removing cronjob @ 07/30/24 08:11:17.762
  I0730 08:11:17.772589 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8422" for this suite. @ 07/30/24 08:11:17.777
• [300.060 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 07/30/24 08:11:17.785
  I0730 08:11:17.785056 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename projected @ 07/30/24 08:11:17.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:11:17.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:11:17.801
  STEP: Creating a pod to test downward API volume plugin @ 07/30/24 08:11:17.802
  E0730 08:11:18.678689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:19.679643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:20.679996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:21.680917      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:11:21.83
  I0730 08:11:21.834149 19 output.go:196] Trying to get logs from node jammy pod downwardapi-volume-38851621-7ba8-4bab-a088-100db7523bde container client-container: <nil>
  STEP: delete the pod @ 07/30/24 08:11:21.847
  I0730 08:11:21.870659 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8439" for this suite. @ 07/30/24 08:11:21.876
• [4.102 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 07/30/24 08:11:21.887
  I0730 08:11:21.887665 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename limitrange @ 07/30/24 08:11:21.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:11:21.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:11:21.905
  STEP: Creating LimitRange "e2e-limitrange-5r42b" in namespace "limitrange-6957" @ 07/30/24 08:11:21.906
  STEP: Creating another limitRange in another namespace @ 07/30/24 08:11:21.911
  I0730 08:11:21.921749 19 limit_range.go:299] Namespace "e2e-limitrange-5r42b-6240" created
  I0730 08:11:21.921937 19 limit_range.go:300] Creating LimitRange "e2e-limitrange-5r42b" in namespace "e2e-limitrange-5r42b-6240"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-5r42b" @ 07/30/24 08:11:21.926
  I0730 08:11:21.927874 19 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-5r42b" in "limitrange-6957" namespace @ 07/30/24 08:11:21.927
  I0730 08:11:21.933076 19 limit_range.go:335] LimitRange "e2e-limitrange-5r42b" has been patched
  STEP: Delete LimitRange "e2e-limitrange-5r42b" by Collection with labelSelector: "e2e-limitrange-5r42b=patched" @ 07/30/24 08:11:21.933
  STEP: Confirm that the limitRange "e2e-limitrange-5r42b" has been deleted @ 07/30/24 08:11:21.937
  I0730 08:11:21.937499 19 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0730 08:11:21.939216 19 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-5r42b=patched"
  I0730 08:11:21.939237 19 limit_range.go:344] LimitRange "e2e-limitrange-5r42b" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-5r42b" @ 07/30/24 08:11:21.939
  I0730 08:11:21.940617 19 limit_range.go:350] Found 1 limitRange
  I0730 08:11:21.940745 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-6957" for this suite. @ 07/30/24 08:11:21.942
  STEP: Destroying namespace "e2e-limitrange-5r42b-6240" for this suite. @ 07/30/24 08:11:21.945
• [0.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 07/30/24 08:11:21.951
  I0730 08:11:21.951311 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename container-runtime @ 07/30/24 08:11:21.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:11:21.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:11:21.965
  STEP: create the container @ 07/30/24 08:11:21.966
  W0730 08:11:21.972710      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 07/30/24 08:11:21.972
  E0730 08:11:22.681044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:23.681749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:24.682204      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 07/30/24 08:11:25
  STEP: the container should be terminated @ 07/30/24 08:11:25.007
  STEP: the termination message should be set @ 07/30/24 08:11:25.007
  I0730 08:11:25.007731 19 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 07/30/24 08:11:25.008
  I0730 08:11:25.029877 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4574" for this suite. @ 07/30/24 08:11:25.031
• [3.131 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3656
  STEP: Creating a kubernetes client @ 07/30/24 08:11:25.083
  I0730 08:11:25.083375 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename services @ 07/30/24 08:11:25.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:11:25.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:11:25.109
  STEP: creating service multiprotocol-test in namespace services-3312 @ 07/30/24 08:11:25.111
  STEP: creating pod pod1 in namespace services-3312 @ 07/30/24 08:11:25.121
  STEP: Creating pod pod1 in namespace services-3312 @ 07/30/24 08:11:25.121
  E0730 08:11:25.682218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:26.682945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-3312 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 07/30/24 08:11:27.145
  I0730 08:11:27.149762 19 service.go:4351] successfully validated that service multiprotocol-test in namespace services-3312 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 07/30/24 08:11:27.149
  I0730 08:11:27.149807 19 resource.go:361] Creating new exec pod
  E0730 08:11:27.683771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:28.684239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:11:29.162601 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-3312 exec execpodnsjcc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.126 80'
  I0730 08:11:29.237766 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.126 80\nConnection to 10.152.183.126 80 port [tcp/http] succeeded!\n"
  I0730 08:11:29.237794 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0730 08:11:29.237928 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-3312 exec execpodnsjcc -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.126 80'
  E0730 08:11:29.684609      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:30.684792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:31.685623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:32.685826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:11:33.296881 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.126 80\nConnection to 10.152.183.126 80 port [udp/*] succeeded!\n"
  I0730 08:11:33.296947 19 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 07/30/24 08:11:33.297
  I0730 08:11:33.317682 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-3312 exec execpodnsjcc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.126 80'
  I0730 08:11:33.386708 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.126 80\nConnection to 10.152.183.126 80 port [tcp/http] succeeded!\n"
  I0730 08:11:33.386740 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0730 08:11:33.387138 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-3312 exec execpodnsjcc -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.126 80'
  E0730 08:11:33.686370      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:34.686832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:35.687876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:36.688097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:11:37.444177 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.126 80\nConnection to 10.152.183.126 80 port [udp/*] succeeded!\n"
  I0730 08:11:37.444257 19 builder.go:147] stdout: ""
  I0730 08:11:37.444502 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-3312 exec execpodnsjcc -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.126 80'
  E0730 08:11:37.688952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:38.689044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:39.689664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:40.693831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:11:41.500958 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.126 80\nConnection to 10.152.183.126 80 port [udp/*] succeeded!\n"
  I0730 08:11:41.501041 19 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 07/30/24 08:11:41.501
  I0730 08:11:41.520726 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-3312 exec execpodnsjcc -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.126 80'
  E0730 08:11:41.695264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:42.695504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:43.696136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:44.696601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:11:45.616402 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.126 80\nConnection to 10.152.183.126 80 port [udp/*] succeeded!\n"
  I0730 08:11:45.616462 19 builder.go:147] stdout: "pod1"
  I0730 08:11:45.616926 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-3312 exec execpodnsjcc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.126 80'
  E0730 08:11:45.697628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:46.698553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:47.699056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:11:47.704168 19 builder.go:135] rc: 1
  I0730 08:11:47.704210 19 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-3312 exec execpodnsjcc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.126 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.126 80
  nc: connect to 10.152.183.126 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0730 08:11:47.704252 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-3312 exec execpodnsjcc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.126 80'
  E0730 08:11:48.700313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:49.700683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:11:49.757552 19 builder.go:135] rc: 1
  I0730 08:11:49.757655 19 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-3312 exec execpodnsjcc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.126 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.126 80
  nc: connect to 10.152.183.126 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0730 08:11:49.757931 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-3312 exec execpodnsjcc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.126 80'
  E0730 08:11:50.701722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:51.702606      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:11:51.823944 19 builder.go:135] rc: 1
  I0730 08:11:51.824037 19 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-3312 exec execpodnsjcc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.126 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.126 80
  nc: connect to 10.152.183.126 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0730 08:11:51.824728 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3312" for this suite. @ 07/30/24 08:11:51.83
• [26.763 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 07/30/24 08:11:51.847
  I0730 08:11:51.847471 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename downward-api @ 07/30/24 08:11:51.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:11:51.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:11:51.978
  STEP: Creating the pod @ 07/30/24 08:11:51.98
  E0730 08:11:52.702692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:53.703256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:11:54.530502 19 pod_client.go:141] Successfully updated pod "annotationupdatee2e75e3c-8bbd-4ef8-893b-46e1783d127f"
  E0730 08:11:54.703620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:11:55.704354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:11:56.551282 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7340" for this suite. @ 07/30/24 08:11:56.554
• [4.713 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 07/30/24 08:11:56.561
  I0730 08:11:56.561015 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename daemonsets @ 07/30/24 08:11:56.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:11:56.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:11:56.574
  I0730 08:11:56.584751 19 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 07/30/24 08:11:56.588
  I0730 08:11:56.591148 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0730 08:11:56.591170 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 07/30/24 08:11:56.591
  I0730 08:11:56.607727 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0730 08:11:56.608179 19 fixtures.go:130] Node worker is running 0 daemon pod, expected 1
  E0730 08:11:56.704909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:11:57.607155 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0730 08:11:57.607214 19 fixtures.go:130] Node worker is running 0 daemon pod, expected 1
  E0730 08:11:57.705319      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:11:58.607470 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0730 08:11:58.607506 19 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 07/30/24 08:11:58.61
  I0730 08:11:58.642284 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0730 08:11:58.642315 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 07/30/24 08:11:58.642
  I0730 08:11:58.654827 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0730 08:11:58.654917 19 fixtures.go:130] Node worker is running 0 daemon pod, expected 1
  E0730 08:11:58.706392      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:11:59.660167 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0730 08:11:59.660245 19 fixtures.go:130] Node worker is running 0 daemon pod, expected 1
  E0730 08:11:59.707124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:12:00.661572 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0730 08:12:00.662230 19 fixtures.go:130] Node worker is running 0 daemon pod, expected 1
  E0730 08:12:00.708144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:12:01.655819 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0730 08:12:01.655857 19 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/30/24 08:12:01.658
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6411, will wait for the garbage collector to delete the pods @ 07/30/24 08:12:01.658
  E0730 08:12:01.708553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:12:01.718779 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.985927ms
  I0730 08:12:01.819989 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.186653ms
  E0730 08:12:02.709254      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:03.710215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:12:03.928584 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0730 08:12:03.928944 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0730 08:12:03.935167 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"23668"},"items":null}

  I0730 08:12:03.940130 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"23668"},"items":null}

  I0730 08:12:03.964073 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6411" for this suite. @ 07/30/24 08:12:03.969
• [7.416 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 07/30/24 08:12:03.976
  I0730 08:12:03.976969 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename disruption @ 07/30/24 08:12:03.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:12:03.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:12:03.989
  STEP: Creating a kubernetes client @ 07/30/24 08:12:03.991
  I0730 08:12:03.991272 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename disruption-2 @ 07/30/24 08:12:03.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:12:04.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:12:04.009
  STEP: Waiting for the pdb to be processed @ 07/30/24 08:12:04.022
  E0730 08:12:04.710628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:05.711038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 07/30/24 08:12:06.039
  E0730 08:12:06.711317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:07.711856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 07/30/24 08:12:08.057
  E0730 08:12:08.712245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:09.712525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 07/30/24 08:12:10.064
  STEP: listing a collection of PDBs in namespace disruption-5596 @ 07/30/24 08:12:10.068
  STEP: deleting a collection of PDBs @ 07/30/24 08:12:10.073
  STEP: Waiting for the PDB collection to be deleted @ 07/30/24 08:12:10.098
  I0730 08:12:10.102053 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-8431" for this suite. @ 07/30/24 08:12:10.104
  I0730 08:12:10.108343 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5596" for this suite. @ 07/30/24 08:12:10.11
• [6.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 07/30/24 08:12:10.115
  I0730 08:12:10.115311 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename containers @ 07/30/24 08:12:10.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:12:10.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:12:10.127
  STEP: Creating a pod to test override arguments @ 07/30/24 08:12:10.128
  E0730 08:12:10.712800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:11.713407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:12.713671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:13.714023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:12:14.152
  I0730 08:12:14.160417 19 output.go:196] Trying to get logs from node jammy pod client-containers-6a197723-e951-4ab3-a061-5b4b165e534c container agnhost-container: <nil>
  STEP: delete the pod @ 07/30/24 08:12:14.168
  I0730 08:12:14.198663 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8305" for this suite. @ 07/30/24 08:12:14.201
• [4.092 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 07/30/24 08:12:14.208
  I0730 08:12:14.208782 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename container-probe @ 07/30/24 08:12:14.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:12:14.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:12:14.227
  E0730 08:12:14.713996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:15.715052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:16.715094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:17.715541      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:18.715670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:19.716020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:20.716771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:21.717317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:22.717994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:23.718263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:24.718589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:25.718739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:26.719483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:27.719686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:28.719855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:29.719994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:30.720078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:31.720814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:32.721706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:33.722224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:34.722084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:35.722993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:12:36.300083 19 container_probe.go:92] Container started at 2024-07-30 08:12:14 +0000 UTC, pod became ready at 2024-07-30 08:12:34 +0000 UTC
  I0730 08:12:36.300169 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6897" for this suite. @ 07/30/24 08:12:36.302
• [22.100 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 07/30/24 08:12:36.309
  I0730 08:12:36.309274 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename pods @ 07/30/24 08:12:36.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:12:36.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:12:36.323
  E0730 08:12:36.722570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:37.722815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:38.723312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:39.723463      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:40.724497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:41.724778      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:12:42.371
  I0730 08:12:42.376527 19 output.go:196] Trying to get logs from node jammy pod client-envvars-28dd5e89-bba1-4bef-8c0a-89c7a3e879d5 container env3cont: <nil>
  STEP: delete the pod @ 07/30/24 08:12:42.385
  I0730 08:12:42.401346 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-709" for this suite. @ 07/30/24 08:12:42.403
• [6.101 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 07/30/24 08:12:42.41
  I0730 08:12:42.410132 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename deployment @ 07/30/24 08:12:42.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:12:42.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:12:42.426
  I0730 08:12:42.428041 19 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0730 08:12:42.432337 19 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0730 08:12:42.435958 19 deployment.go:222] new replicaset for deployment "test-recreate-deployment" is yet to be created
  E0730 08:12:42.725580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:43.725924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:12:44.446124 19 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0730 08:12:44.450349 19 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0730 08:12:44.465601 19 deployment.go:313] Updating deployment test-recreate-deployment
  I0730 08:12:44.465657 19 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0730 08:12:44.551993 19 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1856",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9a048fb2-692e-4af6-bcae-73b39241c12f",
      ResourceVersion: (string) (len=5) "23928",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857923962,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-66b65d9f8f\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0730 08:12:44.554121 19 deployment.go:39] New ReplicaSet "test-recreate-deployment-66b65d9f8f" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-66b65d9f8f",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1856",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5fe85cc1-fd4f-4efa-8796-51ff584fab72",
      ResourceVersion: (string) (len=5) "23927",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857923964,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "9a048fb2-692e-4af6-bcae-73b39241c12f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 61 30 34 38 66  62 32 2d 36 39 32 65 2d  |\"9a048fb2-692e-|
              00000120  34 61 66 36 2d 62 63 61  65 2d 37 33 62 33 39 32  |4af6-bcae-73b392|
              00000130  34 31 63 31 32 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |41c12f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0730 08:12:44.555603 19 deployment.go:44] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0730 08:12:44.555702 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-6b6d9cd7b6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1856",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f5b7aff3-69a4-4eaa-a979-b3e349c6429f",
      ResourceVersion: (string) (len=5) "23916",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857923962,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "9a048fb2-692e-4af6-bcae-73b39241c12f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 61 30 34 38 66  62 32 2d 36 39 32 65 2d  |\"9a048fb2-692e-|
              00000120  34 61 66 36 2d 62 63 61  65 2d 37 33 62 33 39 32  |4af6-bcae-73b392|
              00000130  34 31 63 31 32 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |41c12f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0730 08:12:44.558330 19 deployment.go:67] Pod "test-recreate-deployment-66b65d9f8f-rcq42" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-66b65d9f8f-rcq42",
      GenerateName: (string) (len=36) "test-recreate-deployment-66b65d9f8f-",
      Namespace: (string) (len=15) "deployment-1856",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e66d620f-53f4-421d-a01d-011fa3c8c4e2",
      ResourceVersion: (string) (len=5) "23926",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857923964,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-66b65d9f8f",
          UID: (types.UID) (len=36) "5fe85cc1-fd4f-4efa-8796-51ff584fab72",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 66  65 38 35 63 63 31 2d 66  |d\":\"5fe85cc1-f|
              00000090  64 34 66 2d 34 65 66 61  2d 38 37 39 36 2d 35 31  |d4f-4efa-8796-51|
              000000a0  66 66 35 38 34 66 61 62  37 32 5c 22 7d 22 3a 7b  |ff584fab72\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sccl5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sccl5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "jammy",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857923964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.102",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.102"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857923964,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 08:12:44.559507 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1856" for this suite. @ 07/30/24 08:12:44.562
• [2.159 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 07/30/24 08:12:44.568
  I0730 08:12:44.568726 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename resourcequota @ 07/30/24 08:12:44.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:12:44.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:12:44.588
  STEP: Creating a ResourceQuota with terminating scope @ 07/30/24 08:12:44.59
  STEP: Ensuring ResourceQuota status is calculated @ 07/30/24 08:12:44.595
  E0730 08:12:44.726765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:45.727732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 07/30/24 08:12:46.6
  STEP: Ensuring ResourceQuota status is calculated @ 07/30/24 08:12:46.605
  E0730 08:12:46.727945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:47.728013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 07/30/24 08:12:48.608
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 07/30/24 08:12:48.62
  E0730 08:12:48.728453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:49.728619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 07/30/24 08:12:50.624
  E0730 08:12:50.729501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:51.729981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/30/24 08:12:52.627
  STEP: Ensuring resource quota status released the pod usage @ 07/30/24 08:12:52.64
  E0730 08:12:52.730700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:53.730865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 07/30/24 08:12:54.643
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 07/30/24 08:12:54.654
  E0730 08:12:54.730903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:55.731450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 07/30/24 08:12:56.658
  E0730 08:12:56.731400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:57.731511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/30/24 08:12:58.662
  STEP: Ensuring resource quota status released the pod usage @ 07/30/24 08:12:58.68
  E0730 08:12:58.732023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:12:59.732404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:13:00.687270 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9892" for this suite. @ 07/30/24 08:13:00.695
• [16.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 07/30/24 08:13:00.705
  I0730 08:13:00.705531 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename proxy @ 07/30/24 08:13:00.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:13:00.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:13:00.731
  E0730 08:13:00.732671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:13:00.733216 19 proxy.go:387] Creating pod...
  E0730 08:13:01.732937      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:02.733237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:13:02.747465 19 proxy.go:411] Creating service...
  I0730 08:13:02.767300 19 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8716/pods/agnhost/proxy?method=DELETE
  I0730 08:13:02.778110 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0730 08:13:02.778199 19 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8716/pods/agnhost/proxy?method=OPTIONS
  I0730 08:13:02.781049 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0730 08:13:02.781095 19 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8716/pods/agnhost/proxy?method=PATCH
  I0730 08:13:02.784906 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0730 08:13:02.785020 19 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8716/pods/agnhost/proxy?method=POST
  I0730 08:13:02.786809 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0730 08:13:02.786831 19 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8716/pods/agnhost/proxy?method=PUT
  I0730 08:13:02.788137 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0730 08:13:02.788180 19 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8716/services/e2e-proxy-test-service/proxy?method=DELETE
  I0730 08:13:02.789770 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0730 08:13:02.789786 19 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8716/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0730 08:13:02.791369 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0730 08:13:02.791388 19 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8716/services/e2e-proxy-test-service/proxy?method=PATCH
  I0730 08:13:02.801937 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0730 08:13:02.801971 19 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8716/services/e2e-proxy-test-service/proxy?method=POST
  I0730 08:13:02.803837 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0730 08:13:02.803883 19 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8716/services/e2e-proxy-test-service/proxy?method=PUT
  I0730 08:13:02.805408 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0730 08:13:02.805421 19 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8716/pods/agnhost/proxy?method=GET
  I0730 08:13:02.806534 19 proxy.go:487] http.Client request:GET StatusCode:301
  I0730 08:13:02.806547 19 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8716/services/e2e-proxy-test-service/proxy?method=GET
  I0730 08:13:02.807871 19 proxy.go:487] http.Client request:GET StatusCode:301
  I0730 08:13:02.807883 19 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8716/pods/agnhost/proxy?method=HEAD
  I0730 08:13:02.808978 19 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0730 08:13:02.808989 19 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-8716/services/e2e-proxy-test-service/proxy?method=HEAD
  I0730 08:13:02.811871 19 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0730 08:13:02.811968 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8716" for this suite. @ 07/30/24 08:13:02.814
• [2.115 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 07/30/24 08:13:02.821
  I0730 08:13:02.821464 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename pods @ 07/30/24 08:13:02.822
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:13:02.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:13:02.834
  STEP: creating the pod @ 07/30/24 08:13:02.835
  STEP: submitting the pod to kubernetes @ 07/30/24 08:13:02.836
  W0730 08:13:02.842159      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0730 08:13:03.733354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:04.733746      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 07/30/24 08:13:04.851
  STEP: updating the pod @ 07/30/24 08:13:04.853
  I0730 08:13:05.375554 19 pod_client.go:141] Successfully updated pod "pod-update-activedeadlineseconds-855bb8e3-910f-45f9-b4ec-5d750e7f8728"
  E0730 08:13:05.733988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:06.734536      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:07.735782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:08.735917      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:13:09.393325 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8555" for this suite. @ 07/30/24 08:13:09.4
• [6.593 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 07/30/24 08:13:09.415
  I0730 08:13:09.415866 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename field-validation @ 07/30/24 08:13:09.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:13:09.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:13:09.438
  STEP: apply creating a deployment @ 07/30/24 08:13:09.442
  I0730 08:13:09.448975 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7536" for this suite. @ 07/30/24 08:13:09.45
• [0.040 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 07/30/24 08:13:09.456
  I0730 08:13:09.456405 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename sched-preemption @ 07/30/24 08:13:09.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:13:09.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:13:09.473
  I0730 08:13:09.485612 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0730 08:13:09.736221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:10.737097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:11.737658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:12.738087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:13.739089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:14.739675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:15.740255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:16.740727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:17.741831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:18.741878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:19.742997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:20.743245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:21.743670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:22.743951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:23.744655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:24.744781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:25.745106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:26.745966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:27.746332      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:28.746832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:29.746723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:30.746975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:31.747180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:32.747470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:33.747742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:34.747960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:35.748820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:36.749428      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:37.750194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:38.750583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:39.750860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:40.751138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:41.751501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:42.751871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:43.752545      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:44.752965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:45.753369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:46.754506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:47.755049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:48.755389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:49.756180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:50.756952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:51.757975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:52.758518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:53.759494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:54.760162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:55.761181      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:56.762074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:57.762448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:58.762906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:13:59.763233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:00.763342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:01.764577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:02.764945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:03.765117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:04.765694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:05.766016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:06.766348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:07.766847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:08.767605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:14:09.492039 19 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 07/30/24 08:14:09.496
  I0730 08:14:09.496873 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename sched-preemption-path @ 07/30/24 08:14:09.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:14:09.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:14:09.53
  I0730 08:14:09.544265 19 preemption.go:818] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0730 08:14:09.546227 19 preemption.go:824] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  I0730 08:14:09.578319 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-1385" for this suite. @ 07/30/24 08:14:09.579
  I0730 08:14:09.583028 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8393" for this suite. @ 07/30/24 08:14:09.584
• [60.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 07/30/24 08:14:09.588
  I0730 08:14:09.588812 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename conformance-tests @ 07/30/24 08:14:09.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:14:09.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:14:09.601
  STEP: Getting node addresses @ 07/30/24 08:14:09.602
  I0730 08:14:09.602185 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0730 08:14:09.604113 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-208" for this suite. @ 07/30/24 08:14:09.605
• [0.021 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 07/30/24 08:14:09.612
  I0730 08:14:09.612569 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename replicaset @ 07/30/24 08:14:09.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:14:09.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:14:09.625
  I0730 08:14:09.626257 19 replica_set.go:191] Creating ReplicaSet my-hostname-basic-102d1376-3256-4bb1-9888-785884d2ea92
  I0730 08:14:09.633746 19 resource.go:87] Pod name my-hostname-basic-102d1376-3256-4bb1-9888-785884d2ea92: Found 0 pods out of 1
  E0730 08:14:09.768364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:10.768940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:11.769620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:12.770051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:13.771609      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:14:14.653782 19 resource.go:87] Pod name my-hostname-basic-102d1376-3256-4bb1-9888-785884d2ea92: Found 1 pods out of 1
  I0730 08:14:14.653817 19 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-102d1376-3256-4bb1-9888-785884d2ea92" is running
  I0730 08:14:14.657148 19 replica_set.go:220] Pod "my-hostname-basic-102d1376-3256-4bb1-9888-785884d2ea92-5lcwz" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-30 08:14:10 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-30 08:14:09 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-30 08:14:10 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-30 08:14:10 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-30 08:14:09 +0000 UTC Reason: Message:}])
  I0730 08:14:14.657177 19 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 07/30/24 08:14:14.657
  I0730 08:14:14.665100 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5653" for this suite. @ 07/30/24 08:14:14.667
• [5.061 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 07/30/24 08:14:14.674
  I0730 08:14:14.674176 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename replicaset @ 07/30/24 08:14:14.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:14:14.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:14:14.692
  STEP: Create a ReplicaSet @ 07/30/24 08:14:14.694
  STEP: Verify that the required pods have come up @ 07/30/24 08:14:14.699
  I0730 08:14:14.710026 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  E0730 08:14:14.772353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:15.773542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:16.774187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:17.774614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:18.774945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:14:19.718135 19 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 07/30/24 08:14:19.718
  I0730 08:14:19.721484 19 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 07/30/24 08:14:19.721
  STEP: DeleteCollection of the ReplicaSets @ 07/30/24 08:14:19.725
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 07/30/24 08:14:19.731
  I0730 08:14:19.733776 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6041" for this suite. @ 07/30/24 08:14:19.737
• [5.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 07/30/24 08:14:19.754
  I0730 08:14:19.754292 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename secrets @ 07/30/24 08:14:19.754
  E0730 08:14:19.775004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:14:19.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:14:19.81
  STEP: Creating secret with name secret-test-25afb079-8ac0-4185-9f97-10cddb716e5a @ 07/30/24 08:14:19.814
  STEP: Creating a pod to test consume secrets @ 07/30/24 08:14:19.821
  E0730 08:14:20.775841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:21.776058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:14:21.842
  I0730 08:14:21.844248 19 output.go:196] Trying to get logs from node jammy pod pod-secrets-0f86fd55-36ae-47b7-b358-dca4f5629c6d container secret-env-test: <nil>
  STEP: delete the pod @ 07/30/24 08:14:21.85
  I0730 08:14:21.862525 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4842" for this suite. @ 07/30/24 08:14:21.864
• [2.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 07/30/24 08:14:21.871
  I0730 08:14:21.871855 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/30/24 08:14:21.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:14:21.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:14:21.89
  I0730 08:14:21.891706 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  E0730 08:14:22.776662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:14:22.924975 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1574" for this suite. @ 07/30/24 08:14:22.931
• [1.074 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 07/30/24 08:14:22.947
  I0730 08:14:22.948101 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename pods @ 07/30/24 08:14:22.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:14:22.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:14:22.977
  I0730 08:14:22.979744 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: creating the pod @ 07/30/24 08:14:22.98
  STEP: submitting the pod to kubernetes @ 07/30/24 08:14:22.98
  E0730 08:14:23.776818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:24.777108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:14:25.002622 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5378" for this suite. @ 07/30/24 08:14:25.007
• [2.064 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 07/30/24 08:14:25.012
  I0730 08:14:25.012767 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename emptydir-wrapper @ 07/30/24 08:14:25.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:14:25.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:14:25.027
  STEP: Creating 50 configmaps @ 07/30/24 08:14:25.029
  STEP: Creating RC which spawns configmap-volume pods @ 07/30/24 08:14:25.271
  I0730 08:14:25.372561 19 resource.go:87] Pod name wrapped-volume-race-2f528c2c-e8c4-4a6e-ae99-da1a89ad25f4: Found 1 pods out of 5
  E0730 08:14:25.777744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:26.778109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:27.779897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:28.780228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:29.780700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:14:30.388096 19 resource.go:87] Pod name wrapped-volume-race-2f528c2c-e8c4-4a6e-ae99-da1a89ad25f4: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/30/24 08:14:30.388
  STEP: Creating RC which spawns configmap-volume pods @ 07/30/24 08:14:30.415
  I0730 08:14:30.430002 19 resource.go:87] Pod name wrapped-volume-race-03c25c1e-c49b-4199-9c0d-854428eb1d10: Found 0 pods out of 5
  E0730 08:14:30.781293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:31.781665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:32.781911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:33.782616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:34.783671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:14:35.449269 19 resource.go:87] Pod name wrapped-volume-race-03c25c1e-c49b-4199-9c0d-854428eb1d10: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/30/24 08:14:35.449
  STEP: Creating RC which spawns configmap-volume pods @ 07/30/24 08:14:35.469
  I0730 08:14:35.479478 19 resource.go:87] Pod name wrapped-volume-race-286939f4-a69b-4f04-a756-621adea69c5c: Found 0 pods out of 5
  E0730 08:14:35.786184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:36.786308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:37.786492      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:38.786766      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:39.787068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:14:40.504372 19 resource.go:87] Pod name wrapped-volume-race-286939f4-a69b-4f04-a756-621adea69c5c: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/30/24 08:14:40.504
  STEP: deleting ReplicationController wrapped-volume-race-286939f4-a69b-4f04-a756-621adea69c5c in namespace emptydir-wrapper-2480, will wait for the garbage collector to delete the pods @ 07/30/24 08:14:40.518
  I0730 08:14:40.589612 19 resources.go:139] Deleting ReplicationController wrapped-volume-race-286939f4-a69b-4f04-a756-621adea69c5c took: 18.981792ms
  I0730 08:14:40.690363 19 resources.go:163] Terminating ReplicationController wrapped-volume-race-286939f4-a69b-4f04-a756-621adea69c5c pods took: 100.758012ms
  E0730 08:14:40.788016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:41.788987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-03c25c1e-c49b-4199-9c0d-854428eb1d10 in namespace emptydir-wrapper-2480, will wait for the garbage collector to delete the pods @ 07/30/24 08:14:41.891
  I0730 08:14:41.976262 19 resources.go:139] Deleting ReplicationController wrapped-volume-race-03c25c1e-c49b-4199-9c0d-854428eb1d10 took: 28.535986ms
  I0730 08:14:42.076847 19 resources.go:163] Terminating ReplicationController wrapped-volume-race-03c25c1e-c49b-4199-9c0d-854428eb1d10 pods took: 100.591458ms
  E0730 08:14:42.790115      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-2f528c2c-e8c4-4a6e-ae99-da1a89ad25f4 in namespace emptydir-wrapper-2480, will wait for the garbage collector to delete the pods @ 07/30/24 08:14:43.477
  I0730 08:14:43.555119 19 resources.go:139] Deleting ReplicationController wrapped-volume-race-2f528c2c-e8c4-4a6e-ae99-da1a89ad25f4 took: 19.997838ms
  I0730 08:14:43.655840 19 resources.go:163] Terminating ReplicationController wrapped-volume-race-2f528c2c-e8c4-4a6e-ae99-da1a89ad25f4 pods took: 100.725813ms
  E0730 08:14:43.790417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:44.790772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 07/30/24 08:14:44.956
  I0730 08:14:45.148021 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-2480" for this suite. @ 07/30/24 08:14:45.149
• [20.141 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 07/30/24 08:14:45.154
  I0730 08:14:45.154676 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename security-context-test @ 07/30/24 08:14:45.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:14:45.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:14:45.168
  E0730 08:14:45.792094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:46.792224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:47.792463      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:48.792504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:14:49.200451 19 security_context.go:538] Got logs for pod "busybox-privileged-false-c5abdea8-972e-454c-bb16-3db7be9fb7c4": "ip: RTNETLINK answers: Operation not permitted\n"
  I0730 08:14:49.200808 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2221" for this suite. @ 07/30/24 08:14:49.206
• [4.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 07/30/24 08:14:49.226
  I0730 08:14:49.226260 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename dns @ 07/30/24 08:14:49.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:14:49.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:14:49.254
  STEP: Creating a test headless service @ 07/30/24 08:14:49.258
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5698 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-5698;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5698 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-5698;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5698.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-5698.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5698.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-5698.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5698.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-5698.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5698.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-5698.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5698.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-5698.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5698.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-5698.svc;check="$$(dig +notcp +noall +answer +search 39.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.39_udp@PTR;check="$$(dig +tcp +noall +answer +search 39.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.39_tcp@PTR;sleep 1; done
   @ 07/30/24 08:14:49.285
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5698 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5698;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5698 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5698;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5698.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5698.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5698.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5698.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5698.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-5698.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5698.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-5698.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5698.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-5698.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5698.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-5698.svc;check="$$(dig +notcp +noall +answer +search 39.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.39_udp@PTR;check="$$(dig +tcp +noall +answer +search 39.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.39_tcp@PTR;sleep 1; done
   @ 07/30/24 08:14:49.285
  STEP: creating a pod to probe DNS @ 07/30/24 08:14:49.285
  STEP: submitting the pod to kubernetes @ 07/30/24 08:14:49.285
  E0730 08:14:49.792638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:50.793678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/30/24 08:14:51.306
  STEP: looking for the results for each expected name from probers @ 07/30/24 08:14:51.308
  I0730 08:14:51.310552 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-5698/dns-test-7b29987a-bc5b-4d43-a25a-9b8d2a417f80: the server could not find the requested resource (get pods dns-test-7b29987a-bc5b-4d43-a25a-9b8d2a417f80)
  I0730 08:14:51.312440 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-5698/dns-test-7b29987a-bc5b-4d43-a25a-9b8d2a417f80: the server could not find the requested resource (get pods dns-test-7b29987a-bc5b-4d43-a25a-9b8d2a417f80)
  I0730 08:14:51.314318 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-5698 from pod dns-5698/dns-test-7b29987a-bc5b-4d43-a25a-9b8d2a417f80: the server could not find the requested resource (get pods dns-test-7b29987a-bc5b-4d43-a25a-9b8d2a417f80)
  I0730 08:14:51.315898 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-5698 from pod dns-5698/dns-test-7b29987a-bc5b-4d43-a25a-9b8d2a417f80: the server could not find the requested resource (get pods dns-test-7b29987a-bc5b-4d43-a25a-9b8d2a417f80)
  I0730 08:14:51.317375 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-5698.svc from pod dns-5698/dns-test-7b29987a-bc5b-4d43-a25a-9b8d2a417f80: the server could not find the requested resource (get pods dns-test-7b29987a-bc5b-4d43-a25a-9b8d2a417f80)
  I0730 08:14:51.318836 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-5698.svc from pod dns-5698/dns-test-7b29987a-bc5b-4d43-a25a-9b8d2a417f80: the server could not find the requested resource (get pods dns-test-7b29987a-bc5b-4d43-a25a-9b8d2a417f80)
  I0730 08:14:51.320160 19 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5698.svc from pod dns-5698/dns-test-7b29987a-bc5b-4d43-a25a-9b8d2a417f80: the server could not find the requested resource (get pods dns-test-7b29987a-bc5b-4d43-a25a-9b8d2a417f80)
  I0730 08:14:51.321619 19 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5698.svc from pod dns-5698/dns-test-7b29987a-bc5b-4d43-a25a-9b8d2a417f80: the server could not find the requested resource (get pods dns-test-7b29987a-bc5b-4d43-a25a-9b8d2a417f80)
  I0730 08:14:51.329181 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-5698/dns-test-7b29987a-bc5b-4d43-a25a-9b8d2a417f80: the server could not find the requested resource (get pods dns-test-7b29987a-bc5b-4d43-a25a-9b8d2a417f80)
  I0730 08:14:51.330822 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-5698/dns-test-7b29987a-bc5b-4d43-a25a-9b8d2a417f80: the server could not find the requested resource (get pods dns-test-7b29987a-bc5b-4d43-a25a-9b8d2a417f80)
  I0730 08:14:51.332428 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-5698 from pod dns-5698/dns-test-7b29987a-bc5b-4d43-a25a-9b8d2a417f80: the server could not find the requested resource (get pods dns-test-7b29987a-bc5b-4d43-a25a-9b8d2a417f80)
  I0730 08:14:51.334237 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-5698 from pod dns-5698/dns-test-7b29987a-bc5b-4d43-a25a-9b8d2a417f80: the server could not find the requested resource (get pods dns-test-7b29987a-bc5b-4d43-a25a-9b8d2a417f80)
  I0730 08:14:51.335782 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-5698.svc from pod dns-5698/dns-test-7b29987a-bc5b-4d43-a25a-9b8d2a417f80: the server could not find the requested resource (get pods dns-test-7b29987a-bc5b-4d43-a25a-9b8d2a417f80)
  I0730 08:14:51.337306 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-5698.svc from pod dns-5698/dns-test-7b29987a-bc5b-4d43-a25a-9b8d2a417f80: the server could not find the requested resource (get pods dns-test-7b29987a-bc5b-4d43-a25a-9b8d2a417f80)
  I0730 08:14:51.339603 19 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5698.svc from pod dns-5698/dns-test-7b29987a-bc5b-4d43-a25a-9b8d2a417f80: the server could not find the requested resource (get pods dns-test-7b29987a-bc5b-4d43-a25a-9b8d2a417f80)
  I0730 08:14:51.341430 19 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5698.svc from pod dns-5698/dns-test-7b29987a-bc5b-4d43-a25a-9b8d2a417f80: the server could not find the requested resource (get pods dns-test-7b29987a-bc5b-4d43-a25a-9b8d2a417f80)
  I0730 08:14:51.349566 19 dns_common.go:489] Lookups using dns-5698/dns-test-7b29987a-bc5b-4d43-a25a-9b8d2a417f80 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-5698 wheezy_tcp@dns-test-service.dns-5698 wheezy_udp@dns-test-service.dns-5698.svc wheezy_tcp@dns-test-service.dns-5698.svc wheezy_udp@_http._tcp.dns-test-service.dns-5698.svc wheezy_tcp@_http._tcp.dns-test-service.dns-5698.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5698 jessie_tcp@dns-test-service.dns-5698 jessie_udp@dns-test-service.dns-5698.svc jessie_tcp@dns-test-service.dns-5698.svc jessie_udp@_http._tcp.dns-test-service.dns-5698.svc jessie_tcp@_http._tcp.dns-test-service.dns-5698.svc]

  I0730 08:14:51.352654 19 dns_common.go:495] Pod client logs for webserver: 
  I0730 08:14:51.355618 19 dns_common.go:495] Pod client logs for querier: 
  I0730 08:14:51.358709 19 dns_common.go:495] Pod client logs for jessie-querier: 
  E0730 08:14:51.794530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:52.794536      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:53.794697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:54.794914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:55.795484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:14:56.350289 19 dns_common.go:527] DNS probes using dns-5698/dns-test-7b29987a-bc5b-4d43-a25a-9b8d2a417f80 succeeded

  STEP: deleting the pod @ 07/30/24 08:14:56.35
  STEP: deleting the test service @ 07/30/24 08:14:56.403
  STEP: deleting the test headless service @ 07/30/24 08:14:56.441
  I0730 08:14:56.454408 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5698" for this suite. @ 07/30/24 08:14:56.457
• [7.235 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 07/30/24 08:14:56.461
  I0730 08:14:56.461662 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/30/24 08:14:56.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:14:56.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:14:56.476
  STEP: create the container to handle the HTTPGet hook request. @ 07/30/24 08:14:56.479
  E0730 08:14:56.795785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:57.796157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 07/30/24 08:14:58.491
  E0730 08:14:58.796882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:14:59.797052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 07/30/24 08:15:00.511
  E0730 08:15:00.797379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:01.797964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:02.797925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:03.798377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 07/30/24 08:15:04.549
  I0730 08:15:04.557866 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3035" for this suite. @ 07/30/24 08:15:04.563
• [8.111 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 07/30/24 08:15:04.572
  I0730 08:15:04.572834 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename configmap @ 07/30/24 08:15:04.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:15:04.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:15:04.591
  STEP: Creating configMap with name configmap-test-volume-map-1564fbfc-bda6-4c5d-a7af-bb2b15cd8ae8 @ 07/30/24 08:15:04.592
  STEP: Creating a pod to test consume configMaps @ 07/30/24 08:15:04.596
  E0730 08:15:04.799053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:05.799681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:06.800510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:07.800808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:15:08.618
  I0730 08:15:08.620850 19 output.go:196] Trying to get logs from node jammy pod pod-configmaps-3de0b440-905a-40b1-af08-f3b7440b2c43 container agnhost-container: <nil>
  STEP: delete the pod @ 07/30/24 08:15:08.624
  I0730 08:15:08.645078 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3560" for this suite. @ 07/30/24 08:15:08.647
• [4.080 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 07/30/24 08:15:08.652
  I0730 08:15:08.652686 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename chunking @ 07/30/24 08:15:08.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:15:08.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:15:08.67
  STEP: creating a large number of resources @ 07/30/24 08:15:08.671
  E0730 08:15:08.800959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:09.801795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:10.802528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:11.803604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:12.803800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:13.803843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:14.804344      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:15.804422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:16.805072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:17.805349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:18.805484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:19.805809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:20.805955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:21.806680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:22.807650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:23.808048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:24.808635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:25.808940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 07/30/24 08:15:26.366
  I0730 08:15:26.470273 19 chunking.go:98] Retrieved 17/17 results with rv 25715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTUsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0730 08:15:26.474398 19 chunking.go:98] Retrieved 17/17 results with rv 25715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTUsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0730 08:15:26.513748 19 chunking.go:98] Retrieved 17/17 results with rv 25715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTUsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0730 08:15:26.564781 19 chunking.go:98] Retrieved 17/17 results with rv 25715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTUsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0730 08:15:26.614108 19 chunking.go:98] Retrieved 17/17 results with rv 25715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTUsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0730 08:15:26.662190 19 chunking.go:98] Retrieved 17/17 results with rv 25715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTUsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0730 08:15:26.713188 19 chunking.go:98] Retrieved 17/17 results with rv 25715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTUsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0730 08:15:26.765549 19 chunking.go:98] Retrieved 17/17 results with rv 25715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTUsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  E0730 08:15:26.809557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:15:26.812854 19 chunking.go:98] Retrieved 17/17 results with rv 25715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTUsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0730 08:15:26.864082 19 chunking.go:98] Retrieved 17/17 results with rv 25715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTUsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0730 08:15:26.912734 19 chunking.go:98] Retrieved 17/17 results with rv 25715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTUsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0730 08:15:26.961657 19 chunking.go:98] Retrieved 17/17 results with rv 25715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTUsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0730 08:15:27.011623 19 chunking.go:98] Retrieved 17/17 results with rv 25715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTUsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0730 08:15:27.063343 19 chunking.go:98] Retrieved 17/17 results with rv 25715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTUsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0730 08:15:27.112835 19 chunking.go:98] Retrieved 17/17 results with rv 25715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTUsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0730 08:15:27.161870 19 chunking.go:98] Retrieved 17/17 results with rv 25715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTUsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0730 08:15:27.213288 19 chunking.go:98] Retrieved 17/17 results with rv 25715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTUsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0730 08:15:27.256754 19 chunking.go:98] Retrieved 17/17 results with rv 25715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTUsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0730 08:15:27.306756 19 chunking.go:98] Retrieved 17/17 results with rv 25715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTUsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0730 08:15:27.357176 19 chunking.go:98] Retrieved 17/17 results with rv 25715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTUsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0730 08:15:27.406543 19 chunking.go:98] Retrieved 17/17 results with rv 25715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTUsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0730 08:15:27.456805 19 chunking.go:98] Retrieved 17/17 results with rv 25715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTUsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0730 08:15:27.507256 19 chunking.go:98] Retrieved 17/17 results with rv 25715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTUsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0730 08:15:27.555898 19 chunking.go:98] Retrieved 9/17 results with rv 25715 and continue 
  I0730 08:15:27.608114 19 chunking.go:98] Retrieved 17/17 results with rv 25719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTksInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0730 08:15:27.657351 19 chunking.go:98] Retrieved 17/17 results with rv 25719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTksInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0730 08:15:27.707111 19 chunking.go:98] Retrieved 17/17 results with rv 25719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTksInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0730 08:15:27.756698 19 chunking.go:98] Retrieved 17/17 results with rv 25719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTksInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0730 08:15:27.807703 19 chunking.go:98] Retrieved 17/17 results with rv 25719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTksInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  E0730 08:15:27.809815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:15:27.857627 19 chunking.go:98] Retrieved 17/17 results with rv 25719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTksInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0730 08:15:27.907458 19 chunking.go:98] Retrieved 17/17 results with rv 25719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTksInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0730 08:15:27.957555 19 chunking.go:98] Retrieved 17/17 results with rv 25719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTksInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0730 08:15:28.008737 19 chunking.go:98] Retrieved 17/17 results with rv 25719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTksInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0730 08:15:28.057690 19 chunking.go:98] Retrieved 17/17 results with rv 25719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTksInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0730 08:15:28.107474 19 chunking.go:98] Retrieved 17/17 results with rv 25719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTksInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0730 08:15:28.157205 19 chunking.go:98] Retrieved 17/17 results with rv 25719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTksInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0730 08:15:28.206977 19 chunking.go:98] Retrieved 17/17 results with rv 25719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTksInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0730 08:15:28.256085 19 chunking.go:98] Retrieved 17/17 results with rv 25719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTksInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0730 08:15:28.306722 19 chunking.go:98] Retrieved 17/17 results with rv 25719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTksInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0730 08:15:28.356863 19 chunking.go:98] Retrieved 17/17 results with rv 25719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTksInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0730 08:15:28.405964 19 chunking.go:98] Retrieved 17/17 results with rv 25719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTksInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0730 08:15:28.456533 19 chunking.go:98] Retrieved 17/17 results with rv 25719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTksInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0730 08:15:28.506879 19 chunking.go:98] Retrieved 17/17 results with rv 25719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTksInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0730 08:15:28.556181 19 chunking.go:98] Retrieved 17/17 results with rv 25719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTksInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0730 08:15:28.606130 19 chunking.go:98] Retrieved 17/17 results with rv 25719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTksInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0730 08:15:28.662154 19 chunking.go:98] Retrieved 17/17 results with rv 25719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTksInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0730 08:15:28.711540 19 chunking.go:98] Retrieved 17/17 results with rv 25719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MTksInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0730 08:15:28.761351 19 chunking.go:98] Retrieved 9/17 results with rv 25719 and continue 
  E0730 08:15:28.810388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:15:28.815210 19 chunking.go:98] Retrieved 17/17 results with rv 25720 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjAsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0730 08:15:28.864660 19 chunking.go:98] Retrieved 17/17 results with rv 25720 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjAsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0730 08:15:28.915888 19 chunking.go:98] Retrieved 17/17 results with rv 25720 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjAsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0730 08:15:28.957421 19 chunking.go:98] Retrieved 17/17 results with rv 25720 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjAsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0730 08:15:29.008054 19 chunking.go:98] Retrieved 17/17 results with rv 25720 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjAsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0730 08:15:29.064521 19 chunking.go:98] Retrieved 17/17 results with rv 25720 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjAsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0730 08:15:29.114066 19 chunking.go:98] Retrieved 17/17 results with rv 25720 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjAsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0730 08:15:29.163394 19 chunking.go:98] Retrieved 17/17 results with rv 25720 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjAsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0730 08:15:29.213229 19 chunking.go:98] Retrieved 17/17 results with rv 25720 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjAsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0730 08:15:29.264800 19 chunking.go:98] Retrieved 17/17 results with rv 25720 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjAsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0730 08:15:29.311481 19 chunking.go:98] Retrieved 17/17 results with rv 25720 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjAsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0730 08:15:29.360213 19 chunking.go:98] Retrieved 17/17 results with rv 25720 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjAsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0730 08:15:29.406830 19 chunking.go:98] Retrieved 17/17 results with rv 25720 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjAsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0730 08:15:29.456449 19 chunking.go:98] Retrieved 17/17 results with rv 25720 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjAsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0730 08:15:29.506292 19 chunking.go:98] Retrieved 17/17 results with rv 25720 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjAsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0730 08:15:29.556406 19 chunking.go:98] Retrieved 17/17 results with rv 25720 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjAsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0730 08:15:29.606558 19 chunking.go:98] Retrieved 17/17 results with rv 25720 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjAsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0730 08:15:29.656947 19 chunking.go:98] Retrieved 17/17 results with rv 25720 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjAsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0730 08:15:29.705948 19 chunking.go:98] Retrieved 17/17 results with rv 25720 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjAsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0730 08:15:29.755595 19 chunking.go:98] Retrieved 17/17 results with rv 25720 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjAsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0730 08:15:29.807478 19 chunking.go:98] Retrieved 17/17 results with rv 25720 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjAsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  E0730 08:15:29.810994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:15:29.857200 19 chunking.go:98] Retrieved 17/17 results with rv 25720 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjAsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0730 08:15:29.910634 19 chunking.go:98] Retrieved 17/17 results with rv 25720 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU3MjAsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0730 08:15:29.961298 19 chunking.go:98] Retrieved 9/17 results with rv 25720 and continue 
  STEP: retrieving those results all at once @ 07/30/24 08:15:29.961
  I0730 08:15:30.012974 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-6011" for this suite. @ 07/30/24 08:15:30.061
• [21.464 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:866
  STEP: Creating a kubernetes client @ 07/30/24 08:15:30.116
  I0730 08:15:30.116583 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename webhook @ 07/30/24 08:15:30.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:15:30.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:15:30.143
  STEP: Setting up server cert @ 07/30/24 08:15:30.158
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/30/24 08:15:30.474
  STEP: Deploying the webhook pod @ 07/30/24 08:15:30.483
  STEP: Wait for the deployment to be ready @ 07/30/24 08:15:30.495
  I0730 08:15:30.500493 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0730 08:15:30.811493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:31.811973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/30/24 08:15:32.518
  STEP: Verifying the service has paired with the endpoint @ 07/30/24 08:15:32.535
  E0730 08:15:32.813038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:15:33.537071 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 07/30/24 08:15:33.546
  STEP: create the configmap with a random name @ 07/30/24 08:15:33.571
  STEP: verify the configmap is mutated @ 07/30/24 08:15:33.585
  STEP: create the configmap with 'skip-me' name @ 07/30/24 08:15:33.585
  I0730 08:15:33.634817 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5577" for this suite. @ 07/30/24 08:15:33.637
  STEP: Destroying namespace "webhook-markers-9192" for this suite. @ 07/30/24 08:15:33.644
• [3.534 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1420
  STEP: Creating a kubernetes client @ 07/30/24 08:15:33.65
  I0730 08:15:33.650931 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename services @ 07/30/24 08:15:33.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:15:33.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:15:33.666
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-2096 @ 07/30/24 08:15:33.667
  STEP: changing the ExternalName service to type=ClusterIP @ 07/30/24 08:15:33.671
  STEP: creating replication controller externalname-service in namespace services-2096 @ 07/30/24 08:15:33.678
  I0730 08:15:33.683418      19 runners.go:198] Created replication controller with name: externalname-service, namespace: services-2096, replica count: 2
  E0730 08:15:33.814041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:34.815132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:35.815749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:15:36.735039      19 runners.go:198] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0730 08:15:36.735169 19 resource.go:361] Creating new exec pod
  E0730 08:15:36.816760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:37.817289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:38.818012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:15:39.767405 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-2096 exec execpod4g695 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0730 08:15:39.818720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:15:39.841494 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0730 08:15:39.841521 19 builder.go:147] stdout: "externalname-service-tl8qn"
  I0730 08:15:39.841650 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-2096 exec execpod4g695 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.110 80'
  I0730 08:15:39.901166 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.110 80\nConnection to 10.152.183.110 80 port [tcp/http] succeeded!\n"
  I0730 08:15:39.901206 19 builder.go:147] stdout: ""
  E0730 08:15:40.819722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:15:40.841962 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-2096 exec execpod4g695 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.110 80'
  I0730 08:15:40.903797 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.110 80\nConnection to 10.152.183.110 80 port [tcp/http] succeeded!\n"
  I0730 08:15:40.903842 19 builder.go:147] stdout: ""
  E0730 08:15:41.820181      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:15:41.842724 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-2096 exec execpod4g695 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.110 80'
  I0730 08:15:41.913792 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.110 80\nConnection to 10.152.183.110 80 port [tcp/http] succeeded!\n"
  I0730 08:15:41.913824 19 builder.go:147] stdout: ""
  E0730 08:15:42.821285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:15:42.842227 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-2096 exec execpod4g695 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.110 80'
  I0730 08:15:42.921829 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.110 80\nConnection to 10.152.183.110 80 port [tcp/http] succeeded!\n"
  I0730 08:15:42.921856 19 builder.go:147] stdout: ""
  E0730 08:15:43.822409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:15:43.842011 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-2096 exec execpod4g695 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.110 80'
  I0730 08:15:43.929338 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.110 80\nConnection to 10.152.183.110 80 port [tcp/http] succeeded!\n"
  I0730 08:15:43.929373 19 builder.go:147] stdout: ""
  E0730 08:15:44.822310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:15:44.841791 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-2096 exec execpod4g695 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.110 80'
  I0730 08:15:44.935765 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.110 80\nConnection to 10.152.183.110 80 port [tcp/http] succeeded!\n"
  I0730 08:15:44.935794 19 builder.go:147] stdout: "externalname-service-tl8qn"
  I0730 08:15:44.936090 19 service.go:1429] Cleaning up the ExternalName to ClusterIP test service
  I0730 08:15:44.949705 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2096" for this suite. @ 07/30/24 08:15:44.953
• [11.307 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 07/30/24 08:15:44.958
  I0730 08:15:44.958399 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/30/24 08:15:44.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:15:44.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:15:44.971
  I0730 08:15:44.973490 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  I0730 08:15:45.533799 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8389" for this suite. @ 07/30/24 08:15:45.538
• [0.587 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1627
  STEP: Creating a kubernetes client @ 07/30/24 08:15:45.544
  I0730 08:15:45.544999 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename kubectl @ 07/30/24 08:15:45.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:15:45.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:15:45.561
  STEP: creating the pod @ 07/30/24 08:15:45.562
  I0730 08:15:45.562382 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-3144 create -f -'
  I0730 08:15:45.633178 19 builder.go:146] stderr: ""
  I0730 08:15:45.633203 19 builder.go:147] stdout: "pod/pause created\n"
  E0730 08:15:45.822956      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:46.823653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 07/30/24 08:15:47.642
  I0730 08:15:47.642338 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-3144 label pods pause testing-label=testing-label-value'
  I0730 08:15:47.729203 19 builder.go:146] stderr: ""
  I0730 08:15:47.729252 19 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 07/30/24 08:15:47.729
  I0730 08:15:47.729337 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-3144 get pod pause -L testing-label'
  I0730 08:15:47.765378 19 builder.go:146] stderr: ""
  I0730 08:15:47.765470 19 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 07/30/24 08:15:47.765
  I0730 08:15:47.765543 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-3144 label pods pause testing-label-'
  I0730 08:15:47.805090 19 builder.go:146] stderr: ""
  I0730 08:15:47.805126 19 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 07/30/24 08:15:47.805
  I0730 08:15:47.805191 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-3144 get pod pause -L testing-label'
  E0730 08:15:47.823502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:15:47.848319 19 builder.go:146] stderr: ""
  I0730 08:15:47.848378 19 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 07/30/24 08:15:47.848
  I0730 08:15:47.848509 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-3144 delete --grace-period=0 --force -f -'
  I0730 08:15:47.906769 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0730 08:15:47.906797 19 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0730 08:15:47.906830 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-3144 get rc,svc -l name=pause --no-headers'
  I0730 08:15:47.944294 19 builder.go:146] stderr: "No resources found in kubectl-3144 namespace.\n"
  I0730 08:15:47.944319 19 builder.go:147] stdout: ""
  I0730 08:15:47.944384 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-3144 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0730 08:15:47.974899 19 builder.go:146] stderr: ""
  I0730 08:15:47.974926 19 builder.go:147] stdout: ""
  I0730 08:15:47.975042 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3144" for this suite. @ 07/30/24 08:15:47.977
• [2.438 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1368
  STEP: Creating a kubernetes client @ 07/30/24 08:15:47.982
  I0730 08:15:47.982994 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename kubectl @ 07/30/24 08:15:47.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:15:47.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:15:48.001
  STEP: validating cluster-info @ 07/30/24 08:15:48.002
  I0730 08:15:48.002457 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-4210 cluster-info'
  I0730 08:15:48.038279 19 builder.go:146] stderr: ""
  I0730 08:15:48.038305 19 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0730 08:15:48.038408 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4210" for this suite. @ 07/30/24 08:15:48.04
• [0.062 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 07/30/24 08:15:48.044
  I0730 08:15:48.044787 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename namespaces @ 07/30/24 08:15:48.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:15:48.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:15:48.057
  STEP: Creating a test namespace @ 07/30/24 08:15:48.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:15:48.07
  STEP: Creating a pod in the namespace @ 07/30/24 08:15:48.072
  STEP: Waiting for the pod to have running status @ 07/30/24 08:15:48.077
  E0730 08:15:48.823946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:49.824221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 07/30/24 08:15:50.085
  STEP: Waiting for the namespace to be removed. @ 07/30/24 08:15:50.094
  E0730 08:15:50.824756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:51.825165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:52.825251      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:53.825529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:54.825694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:55.825755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:56.825980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:57.826333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:58.826810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:15:59.827957      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:16:00.828861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 07/30/24 08:16:01.101
  STEP: Verifying there are no pods in the namespace @ 07/30/24 08:16:01.129
  I0730 08:16:01.132676 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1464" for this suite. @ 07/30/24 08:16:01.136
  STEP: Destroying namespace "nsdeletetest-7125" for this suite. @ 07/30/24 08:16:01.142
  I0730 08:16:01.144932 19 framework.go:370] Namespace nsdeletetest-7125 was already deleted
  STEP: Destroying namespace "nsdeletetest-9756" for this suite. @ 07/30/24 08:16:01.145
• [13.105 seconds]
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 07/30/24 08:16:01.149
  I0730 08:16:01.149472 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename prestop @ 07/30/24 08:16:01.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:16:01.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:16:01.16
  STEP: Creating server pod server in namespace prestop-6855 @ 07/30/24 08:16:01.162
  STEP: Waiting for pods to come up. @ 07/30/24 08:16:01.167
  E0730 08:16:01.829627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:16:02.829939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-6855 @ 07/30/24 08:16:03.179
  E0730 08:16:03.830143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:16:04.830370      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 07/30/24 08:16:05.208
  E0730 08:16:05.830525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:16:06.830942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:16:07.831286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:16:08.831686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:16:09.831919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:16:10.233652 19 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 07/30/24 08:16:10.234
  I0730 08:16:10.273112 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-6855" for this suite. @ 07/30/24 08:16:10.281
• [9.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 07/30/24 08:16:10.29
  I0730 08:16:10.290280 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename namespaces @ 07/30/24 08:16:10.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:16:10.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:16:10.303
  STEP: Creating a test namespace @ 07/30/24 08:16:10.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:16:10.319
  STEP: Creating a service in the namespace @ 07/30/24 08:16:10.321
  STEP: Deleting the namespace @ 07/30/24 08:16:10.328
  STEP: Waiting for the namespace to be removed. @ 07/30/24 08:16:10.339
  E0730 08:16:10.832681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:16:11.833814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:16:12.833864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:16:13.834246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:16:14.834095      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:16:15.834619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 07/30/24 08:16:16.347
  STEP: Verifying there is no service in the namespace @ 07/30/24 08:16:16.377
  I0730 08:16:16.380347 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4353" for this suite. @ 07/30/24 08:16:16.383
  STEP: Destroying namespace "nsdeletetest-4803" for this suite. @ 07/30/24 08:16:16.387
  I0730 08:16:16.389560 19 framework.go:370] Namespace nsdeletetest-4803 was already deleted
  STEP: Destroying namespace "nsdeletetest-6561" for this suite. @ 07/30/24 08:16:16.389
• [6.103 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 07/30/24 08:16:16.393
  I0730 08:16:16.393755 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename endpointslice @ 07/30/24 08:16:16.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:16:16.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:16:16.406
  E0730 08:16:16.835193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:16:17.836308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 07/30/24 08:16:18.478
  STEP: referencing matching pods with named port @ 07/30/24 08:16:18.485
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 07/30/24 08:16:18.489
  STEP: recreating EndpointSlices after they've been deleted @ 07/30/24 08:16:18.492
  I0730 08:16:18.507253 19 endpointslice.go:938] EndpointSlice for Service endpointslice-3641/example-named-port not found
  E0730 08:16:18.837056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:16:19.837260      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:16:20.516613 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3641" for this suite. @ 07/30/24 08:16:20.523
• [4.142 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 07/30/24 08:16:20.536
  I0730 08:16:20.536271 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename container-probe @ 07/30/24 08:16:20.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:16:20.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:16:20.607
  STEP: Creating pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499 @ 07/30/24 08:16:20.608
  E0730 08:16:20.837568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:16:21.837883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/30/24 08:16:22.627
  I0730 08:16:22.633080 19 container_probe.go:1749] Initial restart count of pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 is 0
  I0730 08:16:22.639114 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:16:22.838746      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:16:23.839437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:16:24.646987 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:16:24.840376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:16:25.841275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:16:26.658300 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:16:26.841553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:16:27.842304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:16:28.661344 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:16:28.842694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:16:29.843084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:16:30.669002 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:16:30.843718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:16:31.844149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:16:32.676002 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:16:32.844281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:16:33.844511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:16:34.684062 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:16:34.845088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:16:35.846310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:16:36.686094 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:16:36.846371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:16:37.846887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:16:38.692780 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:16:38.847148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:16:39.847318      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:16:40.698718 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:16:40.848490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:16:41.848978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:16:42.705724 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:16:42.849199      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:16:43.849510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:16:44.712450 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:16:44.849957      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:16:45.850862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:16:46.722187 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:16:46.850956      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:16:47.852009      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:16:48.730432 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:16:48.852978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:16:49.854070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:16:50.735981 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:16:50.854742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:16:51.855167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:16:52.742775 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:16:52.856225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:16:53.856557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:16:54.750440 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:16:54.856752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:16:55.857553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:16:56.755122 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:16:56.858616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:16:57.859040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:16:58.763043 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:16:58.860306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:16:59.860530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:17:00.769406 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:17:00.861354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:17:01.862105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:17:02.777497 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:17:02.862625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:17:03.863040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:17:04.784192 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:17:04.863723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:17:05.863964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:17:06.790688 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:17:06.863763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:17:07.864221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:17:08.799431 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:17:08.864849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:17:09.865268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:17:10.803101 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:17:10.865170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:17:11.865552      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:17:12.811504 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:17:12.865599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:17:13.866646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:17:14.817709 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:17:14.866787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:17:15.867627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:17:16.825392 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:17:16.867809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:17:17.868281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:17:18.833843 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:17:18.869351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:17:19.869695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:17:20.837536 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:17:20.869898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:17:21.870804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:17:22.844330 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:17:22.871410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:17:23.872010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:17:24.853257 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:17:24.872497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:17:25.873300      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:17:26.860658 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:17:26.874197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:17:27.874405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:17:28.866761 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:17:28.874973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:17:29.875346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:17:30.875493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:17:30.877985 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:17:31.875700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:17:32.876013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:17:32.887087 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:17:33.876293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:17:34.876927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:17:34.893620 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:17:35.877288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:17:36.878125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:17:36.902083 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:17:37.878144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:17:38.878294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:17:38.908421 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:17:39.879392      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:17:40.879954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:17:40.912494 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:17:41.880385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:17:42.880959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:17:42.918833 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:17:43.881236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:17:44.882352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:17:44.928145 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:17:45.883048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:17:46.883254      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:17:46.935551 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:17:47.883494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:17:48.883711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:17:48.944182 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:17:49.884037      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:17:50.884995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:17:50.952301 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:17:51.885060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:17:52.885320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:17:52.959066 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:17:53.885440      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:17:54.885548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:17:54.962656 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:17:55.885885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:17:56.886089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:17:56.967696 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:17:57.886686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:17:58.886925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:17:58.971107 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:17:59.887525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:18:00.888253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:18:00.980053 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:18:01.888557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:18:02.889630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:18:02.986807 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:18:03.889829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:18:04.890056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:18:04.993939 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:18:05.890439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:18:06.890608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:18:06.997617 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:18:07.890906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:18:08.891484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:18:09.000903 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:18:09.891783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:18:10.892535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:18:11.006840 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:18:11.892717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:18:12.892989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:18:13.010343 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:18:13.893197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:18:14.893361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:18:15.013499 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:18:15.893728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:18:16.893940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:18:17.017693 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:18:17.894405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:18:18.894794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:18:19.022090 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:18:19.895470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:18:20.896219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:18:21.027381 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:18:21.896401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:18:22.897322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:18:23.033285 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:18:23.897579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:18:24.897897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:18:25.038048 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:18:25.897926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:18:26.898195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:18:27.041324 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:18:27.898432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:18:28.898821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:18:29.046121 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:18:29.899080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:18:30.899620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:18:31.050687 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:18:31.899604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:18:32.899693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:18:33.057268 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:18:33.900081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:18:34.900222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:18:35.061440 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:18:35.900419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:18:36.900640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:18:37.064845 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:18:37.900699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:18:38.900865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:18:39.068741 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:18:39.901618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:18:40.902145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:18:41.073380 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:18:41.902171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:18:42.902734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:18:43.081942 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:18:43.902896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:18:44.903121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:18:45.085868 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:18:45.904041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:18:46.905145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:18:47.092192 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:18:47.905289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:18:48.905473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:18:49.095899 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:18:49.905641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:18:50.906278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:18:51.099088 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:18:51.906956      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:18:52.907398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:18:53.105007 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:18:53.907764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:18:54.908045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:18:55.109353 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:18:55.908775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:18:56.908930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:18:57.113628 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:18:57.909486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:18:58.909689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:18:59.117464 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:18:59.910374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:19:00.910854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:19:01.121490 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:19:01.911160      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:19:02.911477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:19:03.127044 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:19:03.911774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:19:04.912135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:19:05.131130 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:19:05.912298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:19:06.912534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:19:07.136538 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:19:07.912680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:19:08.913018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:19:09.140833 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:19:09.913330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:19:10.914222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:19:11.148929 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:19:11.914623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:19:12.915091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:19:13.152929 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:19:13.915496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:19:14.916162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:19:15.160820 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:19:15.917542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:19:16.918124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:19:17.168545 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:19:17.918426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:19:18.918660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:19:19.176089 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:19:19.918980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:19:20.919912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:19:21.184570 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:19:21.920045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:19:22.920423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:19:23.187734 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:19:23.920637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:19:24.920951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:19:25.191793 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:19:25.921526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:19:26.921784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:19:27.195115 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:19:27.921899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:19:28.922254      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:19:29.198932 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:19:29.922595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:19:30.923331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:19:31.204932 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:19:31.923035      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:19:32.923257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:19:33.208299 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:19:33.923411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:19:34.923868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:19:35.213123 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:19:35.924397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:19:36.924577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:19:37.216912 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:19:37.925157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:19:38.925265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:19:39.225364 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:19:39.926252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:19:40.927234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:19:41.228286 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:19:41.928317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:19:42.929374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:19:43.233621 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:19:43.930411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:19:44.930607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:19:45.236639 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:19:45.931025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:19:46.931300      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:19:47.238868 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:19:47.931673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:19:48.932100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:19:49.247472 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:19:49.932377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:19:50.932528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:19:51.254350 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:19:51.933500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:19:52.933497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:19:53.258228 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:19:53.933919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:19:54.934378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:19:55.262349 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:19:55.934421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:19:56.934400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:19:57.266011 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:19:57.934842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:19:58.935676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:19:59.269214 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:19:59.935902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:20:00.936811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:20:01.276961 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:20:01.937624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:20:02.938096      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:20:03.280329 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:20:03.938701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:20:04.939830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:20:05.283657 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:20:05.939885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:20:06.940137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:20:07.286648 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:20:07.940475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:20:08.940792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:20:09.290107 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:20:09.941004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:20:10.941494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:20:11.297470 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:20:11.941905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:20:12.942029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:20:13.305076 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:20:13.942891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:20:14.943039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:20:15.308579 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:20:15.943286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:20:16.943632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:20:17.314467 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:20:17.943959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:20:18.944670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:20:19.318428 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:20:19.944735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:20:20.945732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:20:21.323649 19 container_probe.go:1759] Get pod liveness-aad57530-0a1b-4a38-9482-9e86d24ec231 in namespace container-probe-7499
  E0730 08:20:21.945992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:20:22.946168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 07/30/24 08:20:23.324
  I0730 08:20:23.361370 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7499" for this suite. @ 07/30/24 08:20:23.366
• [242.837 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 07/30/24 08:20:23.373
  I0730 08:20:23.373675 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename runtimeclass @ 07/30/24 08:20:23.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:20:23.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:20:23.394
  STEP: Deleting RuntimeClass runtimeclass-2251-delete-me @ 07/30/24 08:20:23.399
  STEP: Waiting for the RuntimeClass to disappear @ 07/30/24 08:20:23.404
  I0730 08:20:23.412473 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2251" for this suite. @ 07/30/24 08:20:23.416
• [0.048 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 07/30/24 08:20:23.422
  I0730 08:20:23.422589 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename security-context-test @ 07/30/24 08:20:23.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:20:23.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:20:23.437
  E0730 08:20:23.947016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:20:24.947374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:20:25.947928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:20:26.948063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:20:27.948591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:20:28.949340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:20:29.950217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:20:30.951093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:20:31.951174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:20:32.951789      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:20:33.952937      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:20:34.953169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:20:35.953729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:20:36.954696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:20:37.508842 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-758" for this suite. @ 07/30/24 08:20:37.514
• [14.100 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 07/30/24 08:20:37.523
  I0730 08:20:37.523984 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename projected @ 07/30/24 08:20:37.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:20:37.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:20:37.539
  STEP: Creating configMap with name projected-configmap-test-volume-map-ede3f54e-e6b8-45b6-ba24-51a4aad88551 @ 07/30/24 08:20:37.54
  STEP: Creating a pod to test consume configMaps @ 07/30/24 08:20:37.543
  E0730 08:20:37.955314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:20:38.955905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:20:39.955706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:20:40.956199      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:20:41.562
  I0730 08:20:41.568518 19 output.go:196] Trying to get logs from node jammy pod pod-projected-configmaps-9437e637-0a19-4592-9458-2dd1141056ef container agnhost-container: <nil>
  STEP: delete the pod @ 07/30/24 08:20:41.577
  I0730 08:20:41.601201 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9126" for this suite. @ 07/30/24 08:20:41.605
• [4.087 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:817
  STEP: Creating a kubernetes client @ 07/30/24 08:20:41.61
  I0730 08:20:41.610751 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename webhook @ 07/30/24 08:20:41.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:20:41.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:20:41.622
  STEP: Setting up server cert @ 07/30/24 08:20:41.638
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/30/24 08:20:41.808
  STEP: Deploying the webhook pod @ 07/30/24 08:20:41.815
  STEP: Wait for the deployment to be ready @ 07/30/24 08:20:41.823
  I0730 08:20:41.830661 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0730 08:20:41.957106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:20:42.957381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/30/24 08:20:43.848
  STEP: Verifying the service has paired with the endpoint @ 07/30/24 08:20:43.869
  E0730 08:20:43.958258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:20:44.870784 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 07/30/24 08:20:44.882
  I0730 08:20:44.933038 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7726" for this suite. @ 07/30/24 08:20:44.934
  STEP: Destroying namespace "webhook-markers-4635" for this suite. @ 07/30/24 08:20:44.94
• [3.336 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 07/30/24 08:20:44.947
  I0730 08:20:44.947518 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename pods @ 07/30/24 08:20:44.947
  E0730 08:20:44.958735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:20:44.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:20:44.961
  STEP: creating the pod @ 07/30/24 08:20:44.962
  STEP: setting up watch @ 07/30/24 08:20:44.962
  STEP: submitting the pod to kubernetes @ 07/30/24 08:20:45.064
  STEP: verifying the pod is in kubernetes @ 07/30/24 08:20:45.093
  STEP: verifying pod creation was observed @ 07/30/24 08:20:45.1
  E0730 08:20:45.959233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:20:46.959711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 07/30/24 08:20:47.118
  STEP: verifying pod deletion was observed @ 07/30/24 08:20:47.132
  E0730 08:20:47.959934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:20:48.874523 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9584" for this suite. @ 07/30/24 08:20:48.876
• [3.933 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 07/30/24 08:20:48.881
  I0730 08:20:48.881268 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename replication-controller @ 07/30/24 08:20:48.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:20:48.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:20:48.894
  I0730 08:20:48.895912 19 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0730 08:20:48.961161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 07/30/24 08:20:49.906
  STEP: Checking rc "condition-test" has the desired failure condition set @ 07/30/24 08:20:49.919
  E0730 08:20:49.962088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 07/30/24 08:20:50.933
  I0730 08:20:50.953252 19 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 07/30/24 08:20:50.953
  E0730 08:20:50.962309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:20:51.963259      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:20:51.964892 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5222" for this suite. @ 07/30/24 08:20:51.97
• [3.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 07/30/24 08:20:51.985
  I0730 08:20:51.985951 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename downward-api @ 07/30/24 08:20:51.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:20:52.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:20:52.012
  STEP: Creating a pod to test downward api env vars @ 07/30/24 08:20:52.013
  E0730 08:20:52.963423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:20:53.963770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:20:54.964224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:20:55.964620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:20:56.035
  I0730 08:20:56.040369 19 output.go:196] Trying to get logs from node jammy pod downward-api-c26c6a2b-0ca6-4029-b2c5-4c074d9456f0 container dapi-container: <nil>
  STEP: delete the pod @ 07/30/24 08:20:56.048
  I0730 08:20:56.082763 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2124" for this suite. @ 07/30/24 08:20:56.086
• [4.106 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 07/30/24 08:20:56.092
  I0730 08:20:56.092640 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename container-probe @ 07/30/24 08:20:56.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:20:56.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:20:56.11
  STEP: Creating pod busybox-9fac1e53-94ad-40e9-a6eb-39f9daae9de7 in namespace container-probe-2192 @ 07/30/24 08:20:56.112
  E0730 08:20:56.964818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:20:57.965602      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/30/24 08:20:58.135
  I0730 08:20:58.140924 19 container_probe.go:1749] Initial restart count of pod busybox-9fac1e53-94ad-40e9-a6eb-39f9daae9de7 is 0
  I0730 08:20:58.145874 19 container_probe.go:1759] Get pod busybox-9fac1e53-94ad-40e9-a6eb-39f9daae9de7 in namespace container-probe-2192
  E0730 08:20:58.966326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:20:59.966527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:21:00.156003 19 container_probe.go:1759] Get pod busybox-9fac1e53-94ad-40e9-a6eb-39f9daae9de7 in namespace container-probe-2192
  E0730 08:21:00.966889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:21:01.967496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:21:02.161512 19 container_probe.go:1759] Get pod busybox-9fac1e53-94ad-40e9-a6eb-39f9daae9de7 in namespace container-probe-2192
  E0730 08:21:02.967624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:21:03.967963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:21:04.165930 19 container_probe.go:1759] Get pod busybox-9fac1e53-94ad-40e9-a6eb-39f9daae9de7 in namespace container-probe-2192
  E0730 08:21:04.968835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:21:05.968869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:21:06.173124 19 container_probe.go:1759] Get pod busybox-9fac1e53-94ad-40e9-a6eb-39f9daae9de7 in namespace container-probe-2192
  E0730 08:21:06.968954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:21:07.969406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:21:08.179224 19 container_probe.go:1759] Get pod busybox-9fac1e53-94ad-40e9-a6eb-39f9daae9de7 in namespace container-probe-2192
  E0730 08:21:08.970048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:21:09.970390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:21:10.185142 19 container_probe.go:1759] Get pod busybox-9fac1e53-94ad-40e9-a6eb-39f9daae9de7 in namespace container-probe-2192
  E0730 08:21:10.971096      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:21:11.971721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:21:12.192027 19 container_probe.go:1759] Get pod busybox-9fac1e53-94ad-40e9-a6eb-39f9daae9de7 in namespace container-probe-2192
  E0730 08:21:12.971912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:21:13.972265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:21:14.200624 19 container_probe.go:1759] Get pod busybox-9fac1e53-94ad-40e9-a6eb-39f9daae9de7 in namespace container-probe-2192
  E0730 08:21:14.973276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:21:15.973837      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:21:16.207959 19 container_probe.go:1759] Get pod busybox-9fac1e53-94ad-40e9-a6eb-39f9daae9de7 in namespace container-probe-2192
  E0730 08:21:16.973979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:21:17.974551      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:21:18.216766 19 container_probe.go:1759] Get pod busybox-9fac1e53-94ad-40e9-a6eb-39f9daae9de7 in namespace container-probe-2192
  E0730 08:21:18.974868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:21:19.975017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:21:20.225417 19 container_probe.go:1759] Get pod busybox-9fac1e53-94ad-40e9-a6eb-39f9daae9de7 in namespace container-probe-2192
  E0730 08:21:20.976366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:21:21.976814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:21:22.229276 19 container_probe.go:1759] Get pod busybox-9fac1e53-94ad-40e9-a6eb-39f9daae9de7 in namespace container-probe-2192
  E0730 08:21:22.977263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:21:23.977876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:21:24.236988 19 container_probe.go:1759] Get pod busybox-9fac1e53-94ad-40e9-a6eb-39f9daae9de7 in namespace container-probe-2192
  E0730 08:21:24.978766      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:21:25.979941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:21:26.245136 19 container_probe.go:1759] Get pod busybox-9fac1e53-94ad-40e9-a6eb-39f9daae9de7 in namespace container-probe-2192
  E0730 08:21:26.980284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:21:27.980482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:21:28.253307 19 container_probe.go:1759] Get pod busybox-9fac1e53-94ad-40e9-a6eb-39f9daae9de7 in namespace container-probe-2192
  E0730 08:21:28.981205      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:21:29.981274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:21:30.259534 19 container_probe.go:1759] Get pod busybox-9fac1e53-94ad-40e9-a6eb-39f9daae9de7 in namespace container-probe-2192
  E0730 08:21:30.982187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:21:31.981943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:21:32.267056 19 container_probe.go:1759] Get pod busybox-9fac1e53-94ad-40e9-a6eb-39f9daae9de7 in namespace container-probe-2192
  E0730 08:21:32.982827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:21:33.983624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:21:34.273767 19 container_probe.go:1759] Get pod busybox-9fac1e53-94ad-40e9-a6eb-39f9daae9de7 in namespace container-probe-2192
  E0730 08:21:34.984574      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:21:35.985296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:21:36.281448 19 container_probe.go:1759] Get pod busybox-9fac1e53-94ad-40e9-a6eb-39f9daae9de7 in namespace container-probe-2192
  E0730 08:21:36.986558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:21:37.987128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:21:38.288739 19 container_probe.go:1759] Get pod busybox-9fac1e53-94ad-40e9-a6eb-39f9daae9de7 in namespace container-probe-2192
  E0730 08:21:38.987265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:21:39.987793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:21:40.291833 19 container_probe.go:1759] Get pod busybox-9fac1e53-94ad-40e9-a6eb-39f9daae9de7 in namespace container-probe-2192
  E0730 08:21:40.988212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:21:41.988969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:21:42.298679 19 container_probe.go:1759] Get pod busybox-9fac1e53-94ad-40e9-a6eb-39f9daae9de7 in namespace container-probe-2192
  E0730 08:21:42.989468      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:21:43.989909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:21:44.306052 19 container_probe.go:1759] Get pod busybox-9fac1e53-94ad-40e9-a6eb-39f9daae9de7 in namespace container-probe-2192
  E0730 08:21:44.989899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:21:45.990203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:21:46.313911 19 container_probe.go:1759] Get pod busybox-9fac1e53-94ad-40e9-a6eb-39f9daae9de7 in namespace container-probe-2192
  E0730 08:21:46.990866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:21:47.991232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:21:48.320304 19 container_probe.go:1759] Get pod busybox-9fac1e53-94ad-40e9-a6eb-39f9daae9de7 in namespace container-probe-2192
  I0730 08:21:48.320369 19 container_probe.go:1763] Restart count of pod container-probe-2192/busybox-9fac1e53-94ad-40e9-a6eb-39f9daae9de7 is now 1 (50.179387446s elapsed)
  STEP: deleting the pod @ 07/30/24 08:21:48.32
  I0730 08:21:48.349229 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2192" for this suite. @ 07/30/24 08:21:48.352
• [52.265 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 07/30/24 08:21:48.357
  I0730 08:21:48.357361 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename aggregator @ 07/30/24 08:21:48.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:21:48.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:21:48.431
  I0730 08:21:48.435445 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Registering the sample API server. @ 07/30/24 08:21:48.436
  I0730 08:21:48.557278 19 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0730 08:21:48.620408 19 deployment.go:222] deployment "sample-apiserver-deployment" doesn't have the required revision set
  E0730 08:21:48.991671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:21:49.992179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:21:50.681205 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:21:50.993229      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:21:51.993770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:21:52.687799 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:21:52.994861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:21:53.995920      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:21:54.689802 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:21:54.996232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:21:55.996654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:21:56.684424 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:21:56.996629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:21:57.997317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:21:58.688380 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:21:58.997996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:21:59.998139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:22:00.684445 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:22:00.998314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:22:01.999103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:22:02.683889 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:22:02.999502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:22:04.000047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:22:04.690353 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:22:05.000618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:22:06.000881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:22:06.685148 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:22:07.001587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:22:08.001712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:22:08.683867 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:22:09.002494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:22:10.002907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:22:10.694760 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:22:11.003094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:22:12.003081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:22:12.689081 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:22:13.003409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:22:14.003958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:22:14.688720 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:22:15.004179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:22:16.004397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:22:16.685919 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:22:17.004644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:22:18.005691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:22:18.686852 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:22:19.006572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:22:20.007112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:22:20.690830 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:22:21.007676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:22:22.008066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:22:22.689080 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:22:23.008054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:22:24.008489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:22:24.687047 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:22:25.008492      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:22:26.008661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:22:26.691202 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:22:27.008623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:22:28.009544      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:22:28.685910 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:22:29.009672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:22:30.010729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:22:30.691333 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:22:31.011909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:22:32.012591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:22:32.690699 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:22:33.012894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:22:34.013382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:22:34.687238 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:22:35.013754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:22:36.014180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:22:36.688689 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:22:37.015199      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:22:38.015517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:22:38.689321 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:22:39.015713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:22:40.016179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:22:40.691110 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:22:41.016373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:22:42.017128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:22:42.689315 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:22:43.018110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:22:44.018544      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:22:44.687988 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:22:45.019690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:22:46.020529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:22:46.689599 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:22:47.021046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:22:48.021480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:22:48.716815 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:22:49.022477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:22:50.022934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:22:50.688591 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:22:51.023730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:22:52.023876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:22:52.689093 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 21, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:22:53.024673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:22:54.024717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:22:54.829235 19 aggregator.go:755] Waited 120.777321ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 07/30/24 08:22:54.858
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 07/30/24 08:22:54.859
  STEP: List APIServices @ 07/30/24 08:22:54.865
  I0730 08:22:54.868993 19 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 07/30/24 08:22:54.869
  I0730 08:22:54.882102 19 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 07/30/24 08:22:54.882
  I0730 08:22:54.890491 19 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.July, 30, 8, 22, 54, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 07/30/24 08:22:54.89
  I0730 08:22:54.894722 19 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-07-30 08:22:54 +0000 UTC Passed all checks passed}
  I0730 08:22:54.894762 19 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0730 08:22:54.894773 19 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 07/30/24 08:22:54.894
  I0730 08:22:54.902360 19 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-431029305" @ 07/30/24 08:22:54.902
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 07/30/24 08:22:54.91
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 07/30/24 08:22:54.915
  STEP: Patch APIService Status @ 07/30/24 08:22:54.917
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 07/30/24 08:22:54.922
  I0730 08:22:54.924678 19 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-07-30 08:22:54 +0000 UTC Passed all checks passed}
  I0730 08:22:54.924779 19 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0730 08:22:54.924820 19 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0730 08:22:54.924848 19 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 07/30/24 08:22:54.924
  STEP: Confirm that the generated APIService has been deleted @ 07/30/24 08:22:54.931
  I0730 08:22:54.931530 19 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I0730 08:22:54.933659 19 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0730 08:22:54.933677 19 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  E0730 08:22:55.024772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:22:55.069432 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-5223" for this suite. @ 07/30/24 08:22:55.071
• [66.722 seconds]
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 07/30/24 08:22:55.08
  I0730 08:22:55.080361 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename gc @ 07/30/24 08:22:55.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:22:55.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:22:55.094
  STEP: create the rc @ 07/30/24 08:22:55.097
  W0730 08:22:55.100551      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0730 08:22:56.027584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:22:57.029519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:22:58.029736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:22:59.039952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:00.041128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:01.041233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 07/30/24 08:23:01.127
  STEP: wait for the rc to be deleted @ 07/30/24 08:23:01.194
  E0730 08:23:02.041873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:03.042571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:04.044007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:05.044030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:06.045398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 07/30/24 08:23:06.202
  E0730 08:23:07.047710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:08.047899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:09.048050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:10.049080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:11.050192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:12.050478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:13.051262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:14.052089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:15.053089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:16.053310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:17.053465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:18.053830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:19.054306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:20.054708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:21.055007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:22.055531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:23.056005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:24.056317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:25.056891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:26.057030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:27.057517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:28.057925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:29.058586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:30.059167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:31.060160      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:32.059748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:33.060064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:34.060223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:35.060879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:36.061713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/30/24 08:23:36.222
  W0730 08:23:36.225566      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0730 08:23:36.225588 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0730 08:23:36.225633 19 delete.go:95] Deleting pod "simpletest.rc-22s2x" in namespace "gc-46"
  I0730 08:23:36.256368 19 delete.go:95] Deleting pod "simpletest.rc-2ffzz" in namespace "gc-46"
  I0730 08:23:36.281584 19 delete.go:95] Deleting pod "simpletest.rc-2m6wb" in namespace "gc-46"
  I0730 08:23:36.316338 19 delete.go:95] Deleting pod "simpletest.rc-2xm8v" in namespace "gc-46"
  I0730 08:23:36.352878 19 delete.go:95] Deleting pod "simpletest.rc-46hwc" in namespace "gc-46"
  I0730 08:23:36.389155 19 delete.go:95] Deleting pod "simpletest.rc-4fxx8" in namespace "gc-46"
  I0730 08:23:36.427405 19 delete.go:95] Deleting pod "simpletest.rc-4jvrc" in namespace "gc-46"
  I0730 08:23:36.464881 19 delete.go:95] Deleting pod "simpletest.rc-4kdmt" in namespace "gc-46"
  I0730 08:23:36.506536 19 delete.go:95] Deleting pod "simpletest.rc-4kz48" in namespace "gc-46"
  I0730 08:23:36.530693 19 delete.go:95] Deleting pod "simpletest.rc-4mhn8" in namespace "gc-46"
  I0730 08:23:36.571284 19 delete.go:95] Deleting pod "simpletest.rc-5b2pb" in namespace "gc-46"
  I0730 08:23:36.593813 19 delete.go:95] Deleting pod "simpletest.rc-5h9hm" in namespace "gc-46"
  I0730 08:23:36.631445 19 delete.go:95] Deleting pod "simpletest.rc-64ks4" in namespace "gc-46"
  I0730 08:23:36.680471 19 delete.go:95] Deleting pod "simpletest.rc-6b4jg" in namespace "gc-46"
  I0730 08:23:36.744878 19 delete.go:95] Deleting pod "simpletest.rc-6cm98" in namespace "gc-46"
  I0730 08:23:36.794100 19 delete.go:95] Deleting pod "simpletest.rc-6pm2q" in namespace "gc-46"
  I0730 08:23:36.860253 19 delete.go:95] Deleting pod "simpletest.rc-6s4xk" in namespace "gc-46"
  I0730 08:23:36.920093 19 delete.go:95] Deleting pod "simpletest.rc-74xrq" in namespace "gc-46"
  I0730 08:23:36.941779 19 delete.go:95] Deleting pod "simpletest.rc-7pb62" in namespace "gc-46"
  I0730 08:23:36.991029 19 delete.go:95] Deleting pod "simpletest.rc-7swt5" in namespace "gc-46"
  I0730 08:23:37.025250 19 delete.go:95] Deleting pod "simpletest.rc-7w9rn" in namespace "gc-46"
  E0730 08:23:37.062335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:23:37.080339 19 delete.go:95] Deleting pod "simpletest.rc-7xwnp" in namespace "gc-46"
  I0730 08:23:37.111857 19 delete.go:95] Deleting pod "simpletest.rc-88k2x" in namespace "gc-46"
  I0730 08:23:37.192373 19 delete.go:95] Deleting pod "simpletest.rc-8scds" in namespace "gc-46"
  I0730 08:23:37.236218 19 delete.go:95] Deleting pod "simpletest.rc-94r8d" in namespace "gc-46"
  I0730 08:23:37.257912 19 delete.go:95] Deleting pod "simpletest.rc-9577x" in namespace "gc-46"
  I0730 08:23:37.292763 19 delete.go:95] Deleting pod "simpletest.rc-9669l" in namespace "gc-46"
  I0730 08:23:37.335902 19 delete.go:95] Deleting pod "simpletest.rc-9tftl" in namespace "gc-46"
  I0730 08:23:37.375754 19 delete.go:95] Deleting pod "simpletest.rc-b29t5" in namespace "gc-46"
  I0730 08:23:37.482336 19 delete.go:95] Deleting pod "simpletest.rc-bbb9m" in namespace "gc-46"
  I0730 08:23:37.549476 19 delete.go:95] Deleting pod "simpletest.rc-bcc5t" in namespace "gc-46"
  I0730 08:23:37.599343 19 delete.go:95] Deleting pod "simpletest.rc-bf279" in namespace "gc-46"
  I0730 08:23:37.678315 19 delete.go:95] Deleting pod "simpletest.rc-c2zlx" in namespace "gc-46"
  I0730 08:23:37.697955 19 delete.go:95] Deleting pod "simpletest.rc-cd7gk" in namespace "gc-46"
  I0730 08:23:37.822482 19 delete.go:95] Deleting pod "simpletest.rc-chklw" in namespace "gc-46"
  I0730 08:23:37.953202 19 delete.go:95] Deleting pod "simpletest.rc-csjlp" in namespace "gc-46"
  I0730 08:23:38.022021 19 delete.go:95] Deleting pod "simpletest.rc-d9sdn" in namespace "gc-46"
  I0730 08:23:38.070070 19 delete.go:95] Deleting pod "simpletest.rc-f2rcc" in namespace "gc-46"
  E0730 08:23:38.072245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:23:38.146287 19 delete.go:95] Deleting pod "simpletest.rc-fc49n" in namespace "gc-46"
  I0730 08:23:38.290212 19 delete.go:95] Deleting pod "simpletest.rc-fct4l" in namespace "gc-46"
  I0730 08:23:38.377427 19 delete.go:95] Deleting pod "simpletest.rc-fhpnk" in namespace "gc-46"
  I0730 08:23:38.425435 19 delete.go:95] Deleting pod "simpletest.rc-fm55g" in namespace "gc-46"
  I0730 08:23:38.508620 19 delete.go:95] Deleting pod "simpletest.rc-frz7r" in namespace "gc-46"
  I0730 08:23:38.576886 19 delete.go:95] Deleting pod "simpletest.rc-g9drz" in namespace "gc-46"
  I0730 08:23:38.610084 19 delete.go:95] Deleting pod "simpletest.rc-glqs5" in namespace "gc-46"
  I0730 08:23:38.659826 19 delete.go:95] Deleting pod "simpletest.rc-gnbfv" in namespace "gc-46"
  I0730 08:23:38.711353 19 delete.go:95] Deleting pod "simpletest.rc-h5vzq" in namespace "gc-46"
  I0730 08:23:38.768223 19 delete.go:95] Deleting pod "simpletest.rc-hg9vd" in namespace "gc-46"
  I0730 08:23:38.831768 19 delete.go:95] Deleting pod "simpletest.rc-hn7pf" in namespace "gc-46"
  I0730 08:23:38.859692 19 delete.go:95] Deleting pod "simpletest.rc-j5r7h" in namespace "gc-46"
  I0730 08:23:38.905719 19 delete.go:95] Deleting pod "simpletest.rc-k7ppp" in namespace "gc-46"
  I0730 08:23:38.934736 19 delete.go:95] Deleting pod "simpletest.rc-kbthp" in namespace "gc-46"
  I0730 08:23:38.973690 19 delete.go:95] Deleting pod "simpletest.rc-kgwhq" in namespace "gc-46"
  I0730 08:23:39.006078 19 delete.go:95] Deleting pod "simpletest.rc-klxhw" in namespace "gc-46"
  I0730 08:23:39.050085 19 delete.go:95] Deleting pod "simpletest.rc-kp8n4" in namespace "gc-46"
  E0730 08:23:39.071704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:23:39.119557 19 delete.go:95] Deleting pod "simpletest.rc-kr7lz" in namespace "gc-46"
  I0730 08:23:39.165736 19 delete.go:95] Deleting pod "simpletest.rc-ksfsc" in namespace "gc-46"
  I0730 08:23:39.263580 19 delete.go:95] Deleting pod "simpletest.rc-kxmpn" in namespace "gc-46"
  I0730 08:23:39.309148 19 delete.go:95] Deleting pod "simpletest.rc-ln2cp" in namespace "gc-46"
  I0730 08:23:39.373643 19 delete.go:95] Deleting pod "simpletest.rc-lzvq7" in namespace "gc-46"
  I0730 08:23:39.415879 19 delete.go:95] Deleting pod "simpletest.rc-m8s8g" in namespace "gc-46"
  I0730 08:23:39.467372 19 delete.go:95] Deleting pod "simpletest.rc-mf5qp" in namespace "gc-46"
  I0730 08:23:39.505687 19 delete.go:95] Deleting pod "simpletest.rc-mlfnk" in namespace "gc-46"
  I0730 08:23:39.563717 19 delete.go:95] Deleting pod "simpletest.rc-mpfjg" in namespace "gc-46"
  I0730 08:23:39.607873 19 delete.go:95] Deleting pod "simpletest.rc-n2rxl" in namespace "gc-46"
  I0730 08:23:39.689501 19 delete.go:95] Deleting pod "simpletest.rc-n488r" in namespace "gc-46"
  I0730 08:23:39.775608 19 delete.go:95] Deleting pod "simpletest.rc-n59pg" in namespace "gc-46"
  I0730 08:23:39.807746 19 delete.go:95] Deleting pod "simpletest.rc-p9k44" in namespace "gc-46"
  I0730 08:23:39.913501 19 delete.go:95] Deleting pod "simpletest.rc-ph568" in namespace "gc-46"
  I0730 08:23:39.954609 19 delete.go:95] Deleting pod "simpletest.rc-pjsls" in namespace "gc-46"
  I0730 08:23:40.047524 19 delete.go:95] Deleting pod "simpletest.rc-pl6g7" in namespace "gc-46"
  E0730 08:23:40.071907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:23:40.121629 19 delete.go:95] Deleting pod "simpletest.rc-pmkw6" in namespace "gc-46"
  I0730 08:23:40.224179 19 delete.go:95] Deleting pod "simpletest.rc-pmm8s" in namespace "gc-46"
  I0730 08:23:40.331063 19 delete.go:95] Deleting pod "simpletest.rc-pnqb8" in namespace "gc-46"
  I0730 08:23:40.417332 19 delete.go:95] Deleting pod "simpletest.rc-q7s48" in namespace "gc-46"
  I0730 08:23:40.495888 19 delete.go:95] Deleting pod "simpletest.rc-qbm7r" in namespace "gc-46"
  I0730 08:23:40.577499 19 delete.go:95] Deleting pod "simpletest.rc-qbrxt" in namespace "gc-46"
  I0730 08:23:40.698211 19 delete.go:95] Deleting pod "simpletest.rc-qj4ph" in namespace "gc-46"
  I0730 08:23:40.804657 19 delete.go:95] Deleting pod "simpletest.rc-r5jj9" in namespace "gc-46"
  I0730 08:23:40.915581 19 delete.go:95] Deleting pod "simpletest.rc-r89j4" in namespace "gc-46"
  I0730 08:23:41.019355 19 delete.go:95] Deleting pod "simpletest.rc-rmqx6" in namespace "gc-46"
  E0730 08:23:41.072557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:23:41.102955 19 delete.go:95] Deleting pod "simpletest.rc-ssl2z" in namespace "gc-46"
  I0730 08:23:41.164900 19 delete.go:95] Deleting pod "simpletest.rc-t5qgb" in namespace "gc-46"
  I0730 08:23:41.265565 19 delete.go:95] Deleting pod "simpletest.rc-t6v5p" in namespace "gc-46"
  I0730 08:23:41.361432 19 delete.go:95] Deleting pod "simpletest.rc-tzlwj" in namespace "gc-46"
  I0730 08:23:41.478613 19 delete.go:95] Deleting pod "simpletest.rc-v6cqs" in namespace "gc-46"
  I0730 08:23:41.522034 19 delete.go:95] Deleting pod "simpletest.rc-vgwks" in namespace "gc-46"
  I0730 08:23:41.581426 19 delete.go:95] Deleting pod "simpletest.rc-vnk44" in namespace "gc-46"
  I0730 08:23:41.621802 19 delete.go:95] Deleting pod "simpletest.rc-vpx8j" in namespace "gc-46"
  I0730 08:23:41.685608 19 delete.go:95] Deleting pod "simpletest.rc-vvr65" in namespace "gc-46"
  I0730 08:23:41.809711 19 delete.go:95] Deleting pod "simpletest.rc-w47gt" in namespace "gc-46"
  I0730 08:23:41.890343 19 delete.go:95] Deleting pod "simpletest.rc-wbl6x" in namespace "gc-46"
  I0730 08:23:41.934076 19 delete.go:95] Deleting pod "simpletest.rc-xgjgd" in namespace "gc-46"
  I0730 08:23:42.008992 19 delete.go:95] Deleting pod "simpletest.rc-xkgd6" in namespace "gc-46"
  E0730 08:23:42.073515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:23:42.114221 19 delete.go:95] Deleting pod "simpletest.rc-xlt5c" in namespace "gc-46"
  I0730 08:23:42.212031 19 delete.go:95] Deleting pod "simpletest.rc-xqk99" in namespace "gc-46"
  I0730 08:23:42.334041 19 delete.go:95] Deleting pod "simpletest.rc-z4875" in namespace "gc-46"
  I0730 08:23:42.424577 19 delete.go:95] Deleting pod "simpletest.rc-z6sxb" in namespace "gc-46"
  I0730 08:23:42.487870 19 delete.go:95] Deleting pod "simpletest.rc-zs7fk" in namespace "gc-46"
  I0730 08:23:42.533121 19 delete.go:95] Deleting pod "simpletest.rc-zwxrl" in namespace "gc-46"
  I0730 08:23:42.597352 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-46" for this suite. @ 07/30/24 08:23:42.614
• [47.572 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 07/30/24 08:23:42.653
  I0730 08:23:42.653685 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename svcaccounts @ 07/30/24 08:23:42.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:23:42.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:23:42.729
  I0730 08:23:42.803458 19 service_accounts.go:253] created pod pod-service-account-defaultsa
  I0730 08:23:42.804063 19 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I0730 08:23:42.834309 19 service_accounts.go:253] created pod pod-service-account-mountsa
  I0730 08:23:42.834341 19 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I0730 08:23:42.861343 19 service_accounts.go:253] created pod pod-service-account-nomountsa
  I0730 08:23:42.861389 19 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  I0730 08:23:42.882772 19 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I0730 08:23:42.882816 19 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0730 08:23:42.917701 19 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I0730 08:23:42.917730 19 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0730 08:23:42.950514 19 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I0730 08:23:42.950665 19 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0730 08:23:42.978228 19 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I0730 08:23:42.978259 19 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0730 08:23:43.011070 19 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I0730 08:23:43.011101 19 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0730 08:23:43.028477 19 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I0730 08:23:43.028509 19 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0730 08:23:43.028705 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-45" for this suite. @ 07/30/24 08:23:43.04
  E0730 08:23:43.073985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
• [0.433 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 07/30/24 08:23:43.086
  I0730 08:23:43.086480 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename emptydir @ 07/30/24 08:23:43.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:23:43.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:23:43.204
  STEP: Creating Pod @ 07/30/24 08:23:43.208
  E0730 08:23:44.074075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:45.074576      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:46.074671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:47.074840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 07/30/24 08:23:47.312
  I0730 08:23:47.312254 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-1318 PodName:pod-sharedvolume-fd123040-b20e-4d1a-9c29-b4fffc140b83 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0730 08:23:47.312287 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  I0730 08:23:47.312783 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0730 08:23:47.312844 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-1318/pods/pod-sharedvolume-fd123040-b20e-4d1a-9c29-b4fffc140b83/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  I0730 08:23:47.373679 19 exec_util.go:106] Exec stderr: ""
  I0730 08:23:47.373979 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1318" for this suite. @ 07/30/24 08:23:47.376
• [4.305 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 07/30/24 08:23:47.392
  I0730 08:23:47.392567 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename projected @ 07/30/24 08:23:47.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:23:47.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:23:47.429
  STEP: Creating configMap with name configmap-projected-all-test-volume-575ccfca-67c5-4f56-974f-43c9c99a7570 @ 07/30/24 08:23:47.437
  STEP: Creating secret with name secret-projected-all-test-volume-3d29d708-70ac-4e4d-aaf3-ae73795f7dff @ 07/30/24 08:23:47.456
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 07/30/24 08:23:47.462
  E0730 08:23:48.074993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:49.075331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:50.075424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:51.075872      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:23:51.5
  I0730 08:23:51.502191 19 output.go:196] Trying to get logs from node jammy pod projected-volume-c1151518-4109-4fb5-aa55-bd10fbcdccde container projected-all-volume-test: <nil>
  STEP: delete the pod @ 07/30/24 08:23:51.508
  I0730 08:23:51.534765 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7486" for this suite. @ 07/30/24 08:23:51.537
• [4.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 07/30/24 08:23:51.546
  I0730 08:23:51.546496 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/30/24 08:23:51.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:23:51.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:23:51.569
  I0730 08:23:51.571010 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  E0730 08:23:52.076656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:53.077404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:54.077614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:55.077990      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:56.078992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:57.078984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:23:57.924038 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-238" for this suite. @ 07/30/24 08:23:57.929
• [6.406 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 07/30/24 08:23:57.954
  I0730 08:23:57.954962 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename security-context @ 07/30/24 08:23:57.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:23:57.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:23:57.98
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 07/30/24 08:23:57.981
  E0730 08:23:58.080129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:23:59.080501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:00.081465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:01.081542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:24:01.998
  I0730 08:24:02.000552 19 output.go:196] Trying to get logs from node jammy pod security-context-7bc30378-db6a-4e1c-9051-9b2330de161d container test-container: <nil>
  STEP: delete the pod @ 07/30/24 08:24:02.002
  I0730 08:24:02.015552 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-441" for this suite. @ 07/30/24 08:24:02.017
• [4.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:841
  STEP: Creating a kubernetes client @ 07/30/24 08:24:02.022
  I0730 08:24:02.022084 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename webhook @ 07/30/24 08:24:02.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:24:02.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:24:02.032
  STEP: Setting up server cert @ 07/30/24 08:24:02.045
  E0730 08:24:02.081449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/30/24 08:24:02.237
  STEP: Deploying the webhook pod @ 07/30/24 08:24:02.245
  STEP: Wait for the deployment to be ready @ 07/30/24 08:24:02.254
  I0730 08:24:02.257553 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0730 08:24:03.082535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:04.082797      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/30/24 08:24:04.274
  STEP: Verifying the service has paired with the endpoint @ 07/30/24 08:24:04.296
  E0730 08:24:05.083069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:24:05.297509 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 07/30/24 08:24:05.308
  I0730 08:24:05.358082 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2770" for this suite. @ 07/30/24 08:24:05.36
  STEP: Destroying namespace "webhook-markers-9314" for this suite. @ 07/30/24 08:24:05.367
• [3.354 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 07/30/24 08:24:05.377
  I0730 08:24:05.377121 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename emptydir @ 07/30/24 08:24:05.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:24:05.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:24:05.39
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 07/30/24 08:24:05.391
  E0730 08:24:06.083041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:07.083337      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:08.083784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:09.084213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:24:09.405
  I0730 08:24:09.408373 19 output.go:196] Trying to get logs from node jammy pod pod-b06bf6d7-be41-45d0-8548-144ade23624a container test-container: <nil>
  STEP: delete the pod @ 07/30/24 08:24:09.412
  I0730 08:24:09.427863 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-409" for this suite. @ 07/30/24 08:24:09.429
• [4.057 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 07/30/24 08:24:09.434
  I0730 08:24:09.434336 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename projected @ 07/30/24 08:24:09.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:24:09.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:24:09.449
  STEP: Creating a pod to test downward API volume plugin @ 07/30/24 08:24:09.45
  E0730 08:24:10.084311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:11.084447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:12.084847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:13.085663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:24:13.471
  I0730 08:24:13.476537 19 output.go:196] Trying to get logs from node jammy pod downwardapi-volume-820f5f9d-6707-4d22-94c1-d42064503940 container client-container: <nil>
  STEP: delete the pod @ 07/30/24 08:24:13.484
  I0730 08:24:13.513428 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8411" for this suite. @ 07/30/24 08:24:13.516
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 07/30/24 08:24:13.522
  I0730 08:24:13.522643 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename chunking @ 07/30/24 08:24:13.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:24:13.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:24:13.536
  STEP: creating a large number of resources @ 07/30/24 08:24:13.537
  E0730 08:24:14.086297      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:15.086791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:16.088574      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:17.088359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:18.089409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:19.089443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:20.090543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:21.091381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:22.091513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:23.092667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:24.093019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:25.093848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:26.095010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:27.095941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:28.096096      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:29.096516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:30.097634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:31.098133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 07/30/24 08:24:31.228
  I0730 08:24:31.277838 19 chunking.go:163] Retrieved 40/40 results with rv 31010 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzEwMTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 07/30/24 08:24:31.277
  E0730 08:24:32.098211      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:33.098413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:34.098501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:35.098642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:36.098724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:37.098790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:38.099055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:39.099461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:40.099909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:41.100216      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:42.100369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:43.100818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:44.101686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:45.102171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:46.102425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:47.102861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:48.103157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:49.103479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:50.103889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:51.104566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:24:51.292049 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzEwMTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0730 08:24:52.104647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:53.104941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:54.105463      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:55.105929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:56.107022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:57.107662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:58.108202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:24:59.109019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:00.109359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:01.110105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:02.110306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:03.110554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:04.110680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:05.111160      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:06.112004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:07.112670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:08.113288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:09.113765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:10.114742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:11.115854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:25:11.291889 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzEwMTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0730 08:25:12.116187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:13.116385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:14.116926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:15.117128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:16.118170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:17.118589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:18.118797      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:19.119980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:20.120309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:21.121426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:22.121752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:23.122494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:24.123500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:25.123776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:26.124592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:27.124732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:28.124991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:29.125313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:30.125415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:31.126178      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:25:31.288926 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzEwMTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0730 08:25:32.125867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:33.126338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:34.126280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:35.126897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:36.127867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:37.128366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:38.129286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:39.129810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:40.130391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:41.130665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:42.130918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:43.130959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:44.131231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:45.131909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:46.132165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:47.132504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:48.133066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:49.133479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:50.133568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:51.134362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:25:51.292693 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzEwMTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0730 08:25:52.134745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:53.135785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:54.136539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:55.136927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:56.137164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:57.137584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:58.137958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:25:59.138276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:00.139099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:01.139255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:02.140087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:03.140369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:04.140961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:05.141761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:06.142374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:07.142506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:08.142996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:09.143386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:10.143718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:11.144685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:26:11.291213 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzEwMTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0730 08:26:12.144958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:13.145517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:14.145974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:15.146473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:16.146356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:17.146757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:18.147151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:19.147811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:20.148364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:21.148978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:22.149585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:23.149702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:24.149863      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:25.150229      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:26.151171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:27.152146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:28.153295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:29.153405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:30.153803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:31.154554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:26:31.298718 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzEwMTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0730 08:26:32.155223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:33.155448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:34.155712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:35.156023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:36.156184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:37.156521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:38.156893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:39.157412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:40.157642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:41.158744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:42.159180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:43.159476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:44.160038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:45.160248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:46.161350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:47.161954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:48.162410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:49.162719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:50.163398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:51.163386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:26:51.295069 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzEwMTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0730 08:26:52.163610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:53.164315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:54.164601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:55.165041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:56.166108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:57.166463      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:58.166802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:26:59.167106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:00.167412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:01.167908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:02.168274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:03.168196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:04.168606      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:05.168862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:06.169060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:07.169108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:08.169373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:09.169677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:10.170233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:11.171368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:27:11.286012 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzEwMTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0730 08:27:12.171342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:13.171688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:14.172055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:15.172605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:16.173262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:17.173409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:18.173737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:19.174136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:20.174286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:21.174523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:22.174653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:23.175169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:24.175279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:25.175785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:26.175888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:27.176119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:28.176777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:29.177252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:30.177866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:31.178773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:27:31.291790 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzEwMTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0730 08:27:32.179020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:33.179838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:34.180131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:35.180541      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:36.180687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:37.181061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:38.181969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:39.182796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:40.183017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:41.183897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:42.184688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:43.185154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:44.185642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:45.186731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:46.187495      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:47.188061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:48.188506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:49.189086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:50.189747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:51.190145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:27:51.285680 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzEwMTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0730 08:27:52.190708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:53.190942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:54.191425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:55.191810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:56.192130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:57.192284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:58.192636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:27:59.192785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:00.193105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:01.193349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:02.193565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:03.193822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:04.194371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:05.194456      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:06.195504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:07.195717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:08.196051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:09.196536      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:10.196947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:11.197820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:28:11.289701 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzEwMTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0730 08:28:12.197955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:13.198352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:14.198355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:15.198637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:16.199701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:17.199884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:18.200262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:19.200841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:20.200853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:21.201018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:22.201278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:23.201505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:24.201734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:25.202020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:26.202855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:27.203456      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:28.203632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:29.204106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:30.204506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:31.205090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:28:31.292653 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzEwMTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0730 08:28:32.205156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:33.205460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:34.206242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:35.206707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:36.207603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:37.208283      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:38.208420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:39.208665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:40.208826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:41.209373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:42.209399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:43.209782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:44.210193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:45.210915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:46.211840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:47.212329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:48.212708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:49.212950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:50.213200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:51.214057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:28:51.290727 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzEwMTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0730 08:28:52.214156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:53.214578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:54.215741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:55.215882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:56.217047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:57.217352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:58.217507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:28:59.218320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:00.218629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:01.219328      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:02.219290      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:03.219668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:04.219954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:05.221025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:06.221710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:07.222048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:08.222198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:09.222651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:10.223133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:11.223696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:29:11.284415 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzEwMTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0730 08:29:12.224558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:13.224935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:14.225011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:15.225349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:16.226435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:17.226658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:18.226888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:19.226950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:20.227994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:21.228678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:22.228696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:23.228989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:24.229252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:25.229616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:26.229740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:27.229803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:28.230116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:29.230483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:30.230764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:31.231489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:29:31.293595 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzEwMTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0730 08:29:32.230956      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:33.231421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:34.232158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:35.232506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:36.232729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:37.233244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:38.233548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:39.233794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:40.234002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:41.234970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:42.234960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:43.235967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:44.236581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:45.236939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:46.237398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:47.237757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:48.237943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:49.238509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:50.238572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:51.239282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:29:51.292099 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzEwMTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0730 08:29:52.239742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:53.240170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:54.240613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:55.241372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:56.242476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:57.242742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:58.242983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:29:59.243321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:00.243894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:01.244529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:02.244450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:03.244922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:04.245616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:05.245845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:06.245975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:07.246546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:08.247529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:09.247793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:10.248374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:11.248753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:30:11.296897 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzEwMTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0730 08:30:12.249281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:13.249963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:14.250870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:15.251712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:16.251956      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:17.252488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:18.252673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:19.253611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:20.254633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:21.255388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:22.255743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:23.256074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:24.257041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:25.257581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:26.258484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:27.259008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:28.259613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:29.259807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:30.260982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:31.261902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:30:31.290813 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzEwMTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0730 08:30:32.262681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:33.263201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:34.263983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:35.264774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:36.265566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:37.266043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:38.266581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:39.267007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:40.267169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:41.268383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:42.268865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:43.269240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:44.269497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:45.270082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:46.271138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:47.271233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:48.271658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:49.272490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:50.272745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:51.273261      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:30:51.292412 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzEwMTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0730 08:30:52.273409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:53.274375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:54.274448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:55.275199      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:56.275991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:57.276545      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:58.277036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:30:59.277829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:00.278369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:01.278631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:02.279327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:03.279750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:04.280072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:05.280944      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:06.281783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:07.281989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:08.282405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:09.282961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:10.283161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:11.283516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:31:11.290133 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzEwMTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0730 08:31:12.283971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:13.284555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:14.284824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:15.285721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:16.286887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:17.287756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:18.288254      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:19.288456      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:20.288871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:21.289191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:22.289778      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:23.290537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:24.290864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:25.291973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:26.292585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:27.292930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:28.293364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:29.294270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:30.294697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:31:31.294711 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzEwMTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0730 08:31:31.295447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:32.295691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:33.295922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:34.296244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:35.296509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:36.297358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:37.298104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:38.298327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:39.298778      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:40.299078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:41.300417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:42.301154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:43.301526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:44.301702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:45.302989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:46.303794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:47.303928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:48.304469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:49.304753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:50.304806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:31:51.293075 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzEwMTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0730 08:31:51.305818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:52.306151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:53.306512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:54.307003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:55.307831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:56.308523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:57.308905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:58.309391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:31:59.309821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:00.310656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:01.311631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:02.312740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:03.313522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:04.314160      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:05.315084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:06.315528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:07.316556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:08.316949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:09.317360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:10.317688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:32:11.290566 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzEwMTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0730 08:32:11.318573      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:12.319457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:13.319713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:14.319975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:15.320967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:16.321644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:17.322262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:18.323125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:19.323766      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:20.324157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:21.325311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:22.325489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:23.325781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:24.326299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:25.327216      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:26.327362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:27.327713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:28.328046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:29.328319      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:30.328625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:32:31.293426 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzEwMTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0730 08:32:31.328923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:32.329409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:33.329940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:34.330155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:35.331118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:36.331707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:37.332419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:38.332617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:39.333849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:40.334145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:41.334286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:42.334500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:43.334905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:44.336091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:45.336980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:46.337767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:47.337878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:48.338301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:49.338818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:50.339397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:32:51.292897 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzEwMTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0730 08:32:51.340173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:52.340425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:53.340615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:54.340823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:55.341598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:56.342573      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:57.342902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:58.343197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:32:59.343572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:00.343854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:01.344758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:02.344891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:03.345067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:04.345451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:05.346097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:06.346529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:07.346898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:08.347306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:09.347798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:10.348051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:33:11.296759 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzEwMTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0730 08:33:11.348632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:12.349067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:13.349421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:14.349533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:15.349672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:16.350501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:17.350785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:18.350932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:19.351112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:20.351728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:21.352790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:22.353202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:23.353689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:24.354639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:25.355484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:26.356251      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:27.356581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:28.356665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:29.356961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:30.357399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:33:31.290967 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzEwMTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0730 08:33:31.358202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:32.358102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:33.358488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:34.358677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:35.359699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:36.360640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:37.360905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:38.361126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:39.361923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:40.362119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:41.362399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:42.362774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:43.363275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:44.363661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:45.364295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:46.364890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:47.364890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:48.366010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:49.365797      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:50.366145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:33:51.292569 19 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0730 08:33:51.292620 19 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 07/30/24 08:33:51.292
  STEP: retrieving all remaining pages @ 07/30/24 08:33:51.301
  I0730 08:33:51.308587 19 chunking.go:221] Retrieved 40/40 results with rv 31792 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE3OTIsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0730 08:33:51.314100 19 chunking.go:221] Retrieved 40/40 results with rv 31792 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE3OTIsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0730 08:33:51.317637 19 chunking.go:221] Retrieved 40/40 results with rv 31792 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE3OTIsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0730 08:33:51.320461 19 chunking.go:221] Retrieved 40/40 results with rv 31792 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE3OTIsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0730 08:33:51.322738 19 chunking.go:221] Retrieved 40/40 results with rv 31792 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE3OTIsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0730 08:33:51.324863 19 chunking.go:221] Retrieved 40/40 results with rv 31792 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE3OTIsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0730 08:33:51.326812 19 chunking.go:221] Retrieved 40/40 results with rv 31792 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE3OTIsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0730 08:33:51.328753 19 chunking.go:221] Retrieved 40/40 results with rv 31792 and continue 
  I0730 08:33:51.328840 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-4349" for this suite. @ 07/30/24 08:33:51.33
• [577.813 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 07/30/24 08:33:51.336
  I0730 08:33:51.336352 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename projected @ 07/30/24 08:33:51.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:33:51.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:33:51.35
  STEP: Creating configMap with name projected-configmap-test-volume-b46c159d-b7e8-427b-bd43-84b5def9c7a1 @ 07/30/24 08:33:51.351
  STEP: Creating a pod to test consume configMaps @ 07/30/24 08:33:51.354
  E0730 08:33:51.366115      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:52.366549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:53.366777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:33:53.369
  I0730 08:33:53.373859 19 output.go:196] Trying to get logs from node jammy pod pod-projected-configmaps-600b1352-f070-4075-be34-d11c3e707fcd container agnhost-container: <nil>
  STEP: delete the pod @ 07/30/24 08:33:53.387
  I0730 08:33:53.405367 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4837" for this suite. @ 07/30/24 08:33:53.407
• [2.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 07/30/24 08:33:53.411
  I0730 08:33:53.411928 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename subpath @ 07/30/24 08:33:53.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:33:53.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:33:53.422
  STEP: Setting up data @ 07/30/24 08:33:53.424
  STEP: Creating pod pod-subpath-test-projected-46c9 @ 07/30/24 08:33:53.43
  STEP: Creating a pod to test atomic-volume-subpath @ 07/30/24 08:33:53.43
  E0730 08:33:54.367124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:55.368092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:56.368268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:57.368377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:58.369174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:33:59.369180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:00.369599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:01.370732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:02.371603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:03.372034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:04.372080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:05.372820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:06.373050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:07.373650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:08.374335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:09.374124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:10.374567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:11.375683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:12.376057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:13.376751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:14.376717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:15.377782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:16.378049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:17.378608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:34:17.524
  I0730 08:34:17.528689 19 output.go:196] Trying to get logs from node jammy pod pod-subpath-test-projected-46c9 container test-container-subpath-projected-46c9: <nil>
  STEP: delete the pod @ 07/30/24 08:34:17.537
  STEP: Deleting pod pod-subpath-test-projected-46c9 @ 07/30/24 08:34:17.568
  I0730 08:34:17.568928 19 delete.go:62] Deleting pod "pod-subpath-test-projected-46c9" in namespace "subpath-7392"
  I0730 08:34:17.571531 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7392" for this suite. @ 07/30/24 08:34:17.574
• [24.168 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 07/30/24 08:34:17.58
  I0730 08:34:17.580410 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename configmap @ 07/30/24 08:34:17.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:34:17.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:34:17.593
  STEP: Creating configMap with name configmap-test-upd-122be141-c1e5-4b87-97ac-19a835949226 @ 07/30/24 08:34:17.596
  STEP: Creating the pod @ 07/30/24 08:34:17.6
  E0730 08:34:18.378629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:19.379809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-122be141-c1e5-4b87-97ac-19a835949226 @ 07/30/24 08:34:19.626
  STEP: waiting to observe update in volume @ 07/30/24 08:34:19.636
  E0730 08:34:20.380252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:21.381059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:34:21.653390 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1933" for this suite. @ 07/30/24 08:34:21.658
• [4.090 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 07/30/24 08:34:21.67
  I0730 08:34:21.670499 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename projected @ 07/30/24 08:34:21.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:34:21.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:34:21.687
  STEP: Creating projection with secret that has name projected-secret-test-map-8ac4d445-3c65-419f-a283-d7e261eef65f @ 07/30/24 08:34:21.689
  STEP: Creating a pod to test consume secrets @ 07/30/24 08:34:21.692
  E0730 08:34:22.381277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:23.381546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:24.381922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:25.383013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:34:25.714
  I0730 08:34:25.718880 19 output.go:196] Trying to get logs from node jammy pod pod-projected-secrets-752e2828-64bf-4d1c-8733-272f05c1f5fd container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/30/24 08:34:25.726
  I0730 08:34:25.754819 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-750" for this suite. @ 07/30/24 08:34:25.758
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 07/30/24 08:34:25.764
  I0730 08:34:25.764876 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename downward-api @ 07/30/24 08:34:25.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:34:25.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:34:25.783
  STEP: Creating the pod @ 07/30/24 08:34:25.785
  E0730 08:34:26.383309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:27.384052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:34:28.334600 19 pod_client.go:141] Successfully updated pod "labelsupdate0b04e447-cd45-4036-a900-f5df26462f92"
  E0730 08:34:28.384689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:29.384649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:34:30.353752 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4214" for this suite. @ 07/30/24 08:34:30.358
• [4.605 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 07/30/24 08:34:30.369
  I0730 08:34:30.369714 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename webhook @ 07/30/24 08:34:30.37
  E0730 08:34:30.385575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:34:30.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:34:30.388
  STEP: Setting up server cert @ 07/30/24 08:34:30.407
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/30/24 08:34:30.798
  STEP: Deploying the webhook pod @ 07/30/24 08:34:30.805
  STEP: Wait for the deployment to be ready @ 07/30/24 08:34:30.813
  I0730 08:34:30.859464 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0730 08:34:31.385699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:32.386107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/30/24 08:34:32.873
  STEP: Verifying the service has paired with the endpoint @ 07/30/24 08:34:32.892
  E0730 08:34:33.387056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:34:33.893318 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 07/30/24 08:34:33.903
  STEP: create a configmap that should be updated by the webhook @ 07/30/24 08:34:33.924
  I0730 08:34:33.979046 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7229" for this suite. @ 07/30/24 08:34:33.982
  STEP: Destroying namespace "webhook-markers-2235" for this suite. @ 07/30/24 08:34:33.987
• [3.623 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 07/30/24 08:34:33.992
  I0730 08:34:33.992379 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename svcaccounts @ 07/30/24 08:34:33.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:34:34.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:34:34.004
  STEP: Creating a pod to test service account token:  @ 07/30/24 08:34:34.005
  E0730 08:34:34.386953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:35.387430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:36.388352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:37.388844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:34:38.027
  I0730 08:34:38.032314 19 output.go:196] Trying to get logs from node jammy pod test-pod-45169af8-6701-4694-9785-95f7edab947d container agnhost-container: <nil>
  STEP: delete the pod @ 07/30/24 08:34:38.04
  I0730 08:34:38.063311 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3563" for this suite. @ 07/30/24 08:34:38.065
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 07/30/24 08:34:38.069
  I0730 08:34:38.069394 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/30/24 08:34:38.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:34:38.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:34:38.083
  STEP: create the container to handle the HTTPGet hook request. @ 07/30/24 08:34:38.086
  E0730 08:34:38.389877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:39.391356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 07/30/24 08:34:40.109
  E0730 08:34:40.392390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:41.393018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 07/30/24 08:34:42.146
  STEP: delete the pod with lifecycle hook @ 07/30/24 08:34:42.151
  E0730 08:34:42.394152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:43.394445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:34:44.165433 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9982" for this suite. @ 07/30/24 08:34:44.167
• [6.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 07/30/24 08:34:44.172
  I0730 08:34:44.172480 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename containers @ 07/30/24 08:34:44.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:34:44.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:34:44.185
  E0730 08:34:44.395376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:45.396461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:34:46.206909 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7850" for this suite. @ 07/30/24 08:34:46.211
• [2.048 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 07/30/24 08:34:46.22
  I0730 08:34:46.220976 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename daemonsets @ 07/30/24 08:34:46.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:34:46.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:34:46.237
  STEP: Creating simple DaemonSet "daemon-set" @ 07/30/24 08:34:46.245
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/30/24 08:34:46.254
  I0730 08:34:46.259774 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0730 08:34:46.259900 19 fixtures.go:130] Node jammy is running 0 daemon pod, expected 1
  E0730 08:34:46.397156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:34:47.264168 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0730 08:34:47.264215 19 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 07/30/24 08:34:47.267
  STEP: DeleteCollection of the DaemonSets @ 07/30/24 08:34:47.278
  STEP: Verify that ReplicaSets have been deleted @ 07/30/24 08:34:47.288
  I0730 08:34:47.317247 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"32628"},"items":null}

  I0730 08:34:47.326322 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"32629"},"items":[{"metadata":{"name":"daemon-set-ngd5f","generateName":"daemon-set-","namespace":"daemonsets-8493","uid":"045e9fb6-422c-463e-90a7-a7a01672bda4","resourceVersion":"32623","creationTimestamp":"2024-07-30T08:34:46Z","labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"90d3b25564f7fe028f4bc371e324fb4d368e2a46fbe1123d9570508ae4db2c6a","cni.projectcalico.org/podIP":"10.1.171.74/32","cni.projectcalico.org/podIPs":"10.1.171.74/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"42671ba9-14f0-48a5-a050-fe7da0893d9f","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-07-30T08:34:46Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelite","operation":"Update","apiVersion":"v1","time":"2024-07-30T08:34:46Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"42671ba9-14f0-48a5-a050-fe7da0893d9f\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelite","operation":"Update","apiVersion":"v1","time":"2024-07-30T08:34:46Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.1.171.74\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-hd52t","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-hd52t","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"worker","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["worker"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-30T08:34:46Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-30T08:34:46Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-30T08:34:46Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-30T08:34:46Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-30T08:34:46Z"}],"hostIP":"10.227.69.245","hostIPs":[{"ip":"10.227.69.245"}],"podIP":"10.1.171.74","podIPs":[{"ip":"10.1.171.74"}],"startTime":"2024-07-30T08:34:46Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-07-30T08:34:46Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://0bf7a663777961e71c547e50b449344cae3d1d5121b367eb12eb6c456105797a","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-w9z4s","generateName":"daemon-set-","namespace":"daemonsets-8493","uid":"10f86947-915f-47fc-8748-32ae180398d5","resourceVersion":"32628","creationTimestamp":"2024-07-30T08:34:46Z","deletionTimestamp":"2024-07-30T08:35:17Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"d17e67bff9a73d9ef87cb840fb93b4956317ad56feb2be5328aaff4bf180243f","cni.projectcalico.org/podIP":"10.1.163.17/32","cni.projectcalico.org/podIPs":"10.1.163.17/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"42671ba9-14f0-48a5-a050-fe7da0893d9f","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-07-30T08:34:46Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelite","operation":"Update","apiVersion":"v1","time":"2024-07-30T08:34:46Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"42671ba9-14f0-48a5-a050-fe7da0893d9f\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelite","operation":"Update","apiVersion":"v1","time":"2024-07-30T08:34:47Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.1.163.17\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-xr657","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-xr657","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"jammy","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["jammy"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-30T08:34:47Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-30T08:34:46Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-30T08:34:47Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-30T08:34:47Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-30T08:34:46Z"}],"hostIP":"10.227.69.102","hostIPs":[{"ip":"10.227.69.102"}],"podIP":"10.1.163.17","podIPs":[{"ip":"10.1.163.17"}],"startTime":"2024-07-30T08:34:46Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-07-30T08:34:46Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://5915a0134fdcd42f00fdd0d20c32db37b618fdaca299ed311b5b60554be638e5","started":true}],"qosClass":"BestEffort"}}]}

  I0730 08:34:47.334222 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8493" for this suite. @ 07/30/24 08:34:47.336
• [1.121 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 07/30/24 08:34:47.342
  I0730 08:34:47.342350 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/30/24 08:34:47.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:34:47.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:34:47.357
  I0730 08:34:47.358622 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  E0730 08:34:47.397368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:48.397683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:49.398129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:50.399228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:34:50.438939 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5829" for this suite. @ 07/30/24 08:34:50.445
• [3.116 seconds]
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 07/30/24 08:34:50.459
  I0730 08:34:50.459610 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename pods @ 07/30/24 08:34:50.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:34:50.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:34:50.483
  STEP: creating pod @ 07/30/24 08:34:50.484
  E0730 08:34:51.399260      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:52.399424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:34:52.497274 19 pods.go:83] Pod pod-hostip-09396b4d-8883-4e08-a2ef-a17868b4f143 has hostIP: 10.227.69.102
  I0730 08:34:52.497335 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7569" for this suite. @ 07/30/24 08:34:52.498
• [2.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 07/30/24 08:34:52.504
  I0730 08:34:52.504204 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename replicaset @ 07/30/24 08:34:52.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:34:52.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:34:52.522
  I0730 08:34:52.535333 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0730 08:34:53.400102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:54.400520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:55.400996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:56.401427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:34:57.402015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:34:57.544601 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/30/24 08:34:57.544
  STEP: Scaling up "test-rs" replicaset @ 07/30/24 08:34:57.544
  I0730 08:34:57.551424 19 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 07/30/24 08:34:57.551
  I0730 08:34:57.561266 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-4845 with ReadyReplicas 1, AvailableReplicas 1
  I0730 08:34:57.576263 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-4845 with ReadyReplicas 1, AvailableReplicas 1
  I0730 08:34:57.607867 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-4845 with ReadyReplicas 1, AvailableReplicas 1
  I0730 08:34:57.617711 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-4845 with ReadyReplicas 1, AvailableReplicas 1
  I0730 08:34:58.223967 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-4845 with ReadyReplicas 2, AvailableReplicas 2
  E0730 08:34:58.402849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:34:58.978961 19 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-4845 with ReadyReplicas 3 found true
  I0730 08:34:58.979079 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4845" for this suite. @ 07/30/24 08:34:58.982
• [6.488 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 07/30/24 08:34:58.993
  I0730 08:34:58.993556 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename statefulset @ 07/30/24 08:34:58.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:34:59.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:34:59.021
  STEP: Creating service test in namespace statefulset-7760 @ 07/30/24 08:34:59.024
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 07/30/24 08:34:59.029
  STEP: Creating stateful set ss in namespace statefulset-7760 @ 07/30/24 08:34:59.032
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7760 @ 07/30/24 08:34:59.038
  I0730 08:34:59.040704 19 wait.go:40] Found 0 stateful pods, waiting for 1
  E0730 08:34:59.403448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:35:00.403954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:35:01.404068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:35:02.404337      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:35:03.404992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:35:04.404849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:35:05.405502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:35:06.406382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:35:07.406650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:35:08.407069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:35:09.047024 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 07/30/24 08:35:09.047
  I0730 08:35:09.051762 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=statefulset-7760 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0730 08:35:09.126146 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0730 08:35:09.126173 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0730 08:35:09.126179 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0730 08:35:09.128424 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0730 08:35:09.407823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:35:10.408147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:35:11.409236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:35:12.409398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:35:13.409881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:35:14.410415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:35:15.410425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:35:16.410643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:35:17.411076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:35:18.411303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:35:19.133159 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0730 08:35:19.133225 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0730 08:35:19.154302 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 9.99999966s
  E0730 08:35:19.411754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:35:20.161816 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 8.997122589s
  E0730 08:35:20.411938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:35:21.169684 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 7.989682668s
  E0730 08:35:21.413034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:35:22.177790 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 6.981600914s
  E0730 08:35:22.413245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:35:23.179915 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 5.973502203s
  E0730 08:35:23.413604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:35:24.188039 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 4.970550539s
  E0730 08:35:24.414261      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:35:25.193005 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 3.963379179s
  E0730 08:35:25.414594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:35:26.200479 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 2.958495059s
  E0730 08:35:26.414599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:35:27.208204 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 1.950877798s
  E0730 08:35:27.415609      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:35:28.216216 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 942.42465ms
  E0730 08:35:28.416608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7760 @ 07/30/24 08:35:29.216
  I0730 08:35:29.224634 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=statefulset-7760 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0730 08:35:29.302136 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0730 08:35:29.302168 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0730 08:35:29.302176 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0730 08:35:29.303938 19 wait.go:40] Found 1 stateful pods, waiting for 3
  E0730 08:35:29.416525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:35:30.416649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:35:31.417566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:35:32.417403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:35:33.417427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:35:34.417573      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:35:35.418542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:35:36.419187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:35:37.419353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:35:38.419856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:35:39.311043 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0730 08:35:39.311097 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0730 08:35:39.311111 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 07/30/24 08:35:39.311
  STEP: Scale down will halt with unhealthy stateful pod @ 07/30/24 08:35:39.311
  I0730 08:35:39.320915 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=statefulset-7760 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0730 08:35:39.404259 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0730 08:35:39.404285 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0730 08:35:39.404291 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0730 08:35:39.404327 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=statefulset-7760 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0730 08:35:39.420585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:35:39.464892 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0730 08:35:39.464919 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0730 08:35:39.464925 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0730 08:35:39.464956 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=statefulset-7760 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0730 08:35:39.518910 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0730 08:35:39.518938 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0730 08:35:39.518944 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0730 08:35:39.518949 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0730 08:35:39.520908 19 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0730 08:35:40.420926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:35:41.421516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:35:42.422250      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:35:43.422706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:35:44.423413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:35:45.424379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:35:46.424799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:35:47.425136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:35:48.425545      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:35:49.426228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:35:49.529241 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0730 08:35:49.529294 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0730 08:35:49.529307 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0730 08:35:49.550240 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 9.999999691s
  E0730 08:35:50.426348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:35:50.558827 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 8.994700614s
  E0730 08:35:51.427557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:35:51.566363 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 7.986412834s
  E0730 08:35:52.428015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:35:52.574794 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 6.978773787s
  E0730 08:35:53.428113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:35:53.582748 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 5.96985331s
  E0730 08:35:54.428375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:35:54.591401 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 4.961827593s
  E0730 08:35:55.428565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:35:55.598039 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 3.953122437s
  E0730 08:35:56.428671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:35:56.604454 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 2.947039287s
  E0730 08:35:57.429160      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:35:57.611634 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 1.940981977s
  E0730 08:35:58.429245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:35:58.618713 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 932.764115ms
  E0730 08:35:59.429395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7760 @ 07/30/24 08:35:59.619
  I0730 08:35:59.628345 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=statefulset-7760 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0730 08:35:59.705488 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0730 08:35:59.705514 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0730 08:35:59.705523 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0730 08:35:59.705556 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=statefulset-7760 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0730 08:35:59.760939 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0730 08:35:59.760964 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0730 08:35:59.760970 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0730 08:35:59.760996 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=statefulset-7760 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0730 08:35:59.807491 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0730 08:35:59.807523 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0730 08:35:59.807529 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0730 08:35:59.807535 19 rest.go:150] Scaling statefulset ss to 0
  E0730 08:36:00.429855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:01.430558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:02.430624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:03.431476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:04.432608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:05.433533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:06.433624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:07.434618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:08.434842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:09.435788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 07/30/24 08:36:09.818
  I0730 08:36:09.818881 19 statefulset.go:135] Deleting all statefulset in ns statefulset-7760
  I0730 08:36:09.823799 19 rest.go:150] Scaling statefulset ss to 0
  I0730 08:36:09.832542 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0730 08:36:09.835319 19 rest.go:88] Deleting statefulset ss
  I0730 08:36:09.847262 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7760" for this suite. @ 07/30/24 08:36:09.849
• [70.859 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 07/30/24 08:36:09.853
  I0730 08:36:09.853774 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename emptydir @ 07/30/24 08:36:09.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:36:09.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:36:09.866
  STEP: Creating a pod to test emptydir volume type on node default medium @ 07/30/24 08:36:09.868
  E0730 08:36:10.435943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:11.436513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:36:11.881
  I0730 08:36:11.885812 19 output.go:196] Trying to get logs from node jammy pod pod-37e3b947-1f9c-4712-a44e-503f8e4877cc container test-container: <nil>
  STEP: delete the pod @ 07/30/24 08:36:11.892
  I0730 08:36:11.913026 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1644" for this suite. @ 07/30/24 08:36:11.915
• [2.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 07/30/24 08:36:11.92
  I0730 08:36:11.920989 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename projected @ 07/30/24 08:36:11.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:36:11.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:36:11.934
  STEP: Creating configMap with name projected-configmap-test-volume-f0d08501-afd8-438d-8213-5f701174ae81 @ 07/30/24 08:36:11.935
  STEP: Creating a pod to test consume configMaps @ 07/30/24 08:36:11.939
  E0730 08:36:12.436511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:13.436780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:14.437240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:15.437427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:36:15.962
  I0730 08:36:15.966770 19 output.go:196] Trying to get logs from node jammy pod pod-projected-configmaps-4ce92853-2377-45be-b4dc-ce6a02355350 container agnhost-container: <nil>
  STEP: delete the pod @ 07/30/24 08:36:15.973
  I0730 08:36:15.994439 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4854" for this suite. @ 07/30/24 08:36:15.996
• [4.080 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 07/30/24 08:36:16.001
  I0730 08:36:16.001512 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/30/24 08:36:16.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:36:16.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:36:16.012
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 07/30/24 08:36:16.022
  I0730 08:36:16.022637 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  E0730 08:36:16.437976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:36:17.208230 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  E0730 08:36:17.438269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:18.438687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:19.439020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:20.439769      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:21.440518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:36:21.853197 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5782" for this suite. @ 07/30/24 08:36:21.856
• [5.861 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 07/30/24 08:36:21.863
  I0730 08:36:21.863295 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename webhook @ 07/30/24 08:36:21.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:36:21.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:36:21.877
  STEP: Setting up server cert @ 07/30/24 08:36:21.893
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/30/24 08:36:22.081
  STEP: Deploying the webhook pod @ 07/30/24 08:36:22.09
  STEP: Wait for the deployment to be ready @ 07/30/24 08:36:22.102
  I0730 08:36:22.111117 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0730 08:36:22.440678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:23.441142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/30/24 08:36:24.125
  STEP: Verifying the service has paired with the endpoint @ 07/30/24 08:36:24.14
  E0730 08:36:24.441275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:36:25.141186 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 07/30/24 08:36:25.151
  STEP: create a namespace for the webhook @ 07/30/24 08:36:25.171
  STEP: create a configmap should be unconditionally rejected by the webhook @ 07/30/24 08:36:25.194
  I0730 08:36:25.231055 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6005" for this suite. @ 07/30/24 08:36:25.233
  STEP: Destroying namespace "webhook-markers-2453" for this suite. @ 07/30/24 08:36:25.241
  STEP: Destroying namespace "fail-closed-namespace-1078" for this suite. @ 07/30/24 08:36:25.247
• [3.387 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 07/30/24 08:36:25.251
  I0730 08:36:25.251458 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename statefulset @ 07/30/24 08:36:25.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:36:25.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:36:25.264
  STEP: Creating service test in namespace statefulset-2338 @ 07/30/24 08:36:25.265
  STEP: Creating statefulset ss in namespace statefulset-2338 @ 07/30/24 08:36:25.271
  I0730 08:36:25.278120 19 wait.go:40] Found 0 stateful pods, waiting for 1
  E0730 08:36:25.443092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:26.442607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:27.443196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:28.443392      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:29.451838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:30.451844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:31.452330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:32.452560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:33.453275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:34.453351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:36:35.285092 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 07/30/24 08:36:35.293
  STEP: Getting /status @ 07/30/24 08:36:35.307
  I0730 08:36:35.313447 19 statefulset.go:1067] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 07/30/24 08:36:35.313
  I0730 08:36:35.325969 19 statefulset.go:1087] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 07/30/24 08:36:35.326
  I0730 08:36:35.327882 19 statefulset.go:1115] Observed &StatefulSet event: ADDED
  I0730 08:36:35.327919 19 statefulset.go:1108] Found Statefulset ss in namespace statefulset-2338 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0730 08:36:35.327930 19 statefulset.go:1119] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 07/30/24 08:36:35.327
  I0730 08:36:35.328130 19 statefulset.go:1123] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0730 08:36:35.336746 19 statefulset.go:1127] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 07/30/24 08:36:35.336
  I0730 08:36:35.337541 19 statefulset.go:1152] Observed &StatefulSet event: ADDED
  I0730 08:36:35.337637 19 statefulset.go:1148] Observed Statefulset ss in namespace statefulset-2338 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0730 08:36:35.337727 19 statefulset.go:1152] Observed &StatefulSet event: MODIFIED
  I0730 08:36:35.337780 19 statefulset.go:135] Deleting all statefulset in ns statefulset-2338
  I0730 08:36:35.338966 19 rest.go:150] Scaling statefulset ss to 0
  E0730 08:36:35.454087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:36.454591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:37.455418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:38.455967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:39.456081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:40.456774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:41.457460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:42.458195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:43.458381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:44.458915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:36:45.351988 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0730 08:36:45.356292 19 rest.go:88] Deleting statefulset ss
  I0730 08:36:45.380569 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2338" for this suite. @ 07/30/24 08:36:45.383
• [20.137 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 07/30/24 08:36:45.389
  I0730 08:36:45.389401 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename container-runtime @ 07/30/24 08:36:45.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:36:45.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:36:45.407
  STEP: create the container @ 07/30/24 08:36:45.409
  W0730 08:36:45.413929      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 07/30/24 08:36:45.414
  E0730 08:36:45.459542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:46.460365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:47.460924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 07/30/24 08:36:48.443
  STEP: the container should be terminated @ 07/30/24 08:36:48.453
  STEP: the termination message should be set @ 07/30/24 08:36:48.454
  I0730 08:36:48.454731 19 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 07/30/24 08:36:48.455
  E0730 08:36:48.461261      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:36:48.477913 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7614" for this suite. @ 07/30/24 08:36:48.479
• [3.094 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 07/30/24 08:36:48.483
  I0730 08:36:48.483891 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/30/24 08:36:48.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:36:48.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:36:48.498
  I0730 08:36:48.499739 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  E0730 08:36:49.462386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 07/30/24 08:36:49.664
  I0730 08:36:49.664059 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=crd-publish-openapi-6231 --namespace=crd-publish-openapi-6231 create -f -'
  E0730 08:36:50.462594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:51.462973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:36:51.718017 19 builder.go:146] stderr: ""
  I0730 08:36:51.718074 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-365-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0730 08:36:51.718139 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=crd-publish-openapi-6231 --namespace=crd-publish-openapi-6231 delete e2e-test-crd-publish-openapi-365-crds test-foo'
  I0730 08:36:51.769319 19 builder.go:146] stderr: ""
  I0730 08:36:51.769363 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-365-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0730 08:36:51.769411 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=crd-publish-openapi-6231 --namespace=crd-publish-openapi-6231 apply -f -'
  I0730 08:36:51.823237 19 builder.go:146] stderr: ""
  I0730 08:36:51.823277 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-365-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0730 08:36:51.823321 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=crd-publish-openapi-6231 --namespace=crd-publish-openapi-6231 delete e2e-test-crd-publish-openapi-365-crds test-foo'
  I0730 08:36:51.867633 19 builder.go:146] stderr: ""
  I0730 08:36:51.867659 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-365-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 07/30/24 08:36:51.867
  I0730 08:36:51.867701 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=crd-publish-openapi-6231 --namespace=crd-publish-openapi-6231 create -f -'
  I0730 08:36:51.904121 19 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 07/30/24 08:36:51.904
  I0730 08:36:51.904352 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=crd-publish-openapi-6231 --namespace=crd-publish-openapi-6231 create -f -'
  I0730 08:36:51.936629 19 builder.go:135] rc: 1
  I0730 08:36:51.936686 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=crd-publish-openapi-6231 --namespace=crd-publish-openapi-6231 apply -f -'
  I0730 08:36:51.976929 19 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 07/30/24 08:36:51.976
  I0730 08:36:51.976999 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=crd-publish-openapi-6231 --namespace=crd-publish-openapi-6231 create -f -'
  I0730 08:36:52.008515 19 builder.go:135] rc: 1
  I0730 08:36:52.008565 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=crd-publish-openapi-6231 --namespace=crd-publish-openapi-6231 apply -f -'
  I0730 08:36:52.042483 19 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 07/30/24 08:36:52.042
  I0730 08:36:52.042571 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=crd-publish-openapi-6231 explain e2e-test-crd-publish-openapi-365-crds'
  I0730 08:36:52.071166 19 builder.go:146] stderr: ""
  I0730 08:36:52.071198 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-365-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 07/30/24 08:36:52.071
  I0730 08:36:52.071346 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=crd-publish-openapi-6231 explain e2e-test-crd-publish-openapi-365-crds.metadata'
  I0730 08:36:52.099535 19 builder.go:146] stderr: ""
  I0730 08:36:52.099600 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-365-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0730 08:36:52.099723 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=crd-publish-openapi-6231 explain e2e-test-crd-publish-openapi-365-crds.spec'
  I0730 08:36:52.129617 19 builder.go:146] stderr: ""
  I0730 08:36:52.129644 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-365-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0730 08:36:52.129719 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=crd-publish-openapi-6231 explain e2e-test-crd-publish-openapi-365-crds.spec.bars'
  I0730 08:36:52.161183 19 builder.go:146] stderr: ""
  I0730 08:36:52.161221 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-365-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 07/30/24 08:36:52.161
  I0730 08:36:52.161440 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=crd-publish-openapi-6231 explain e2e-test-crd-publish-openapi-365-crds.spec.bars2'
  I0730 08:36:52.214456 19 builder.go:135] rc: 1
  E0730 08:36:52.463769      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:36:53.361586 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6231" for this suite. @ 07/30/24 08:36:53.364
• [4.885 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 07/30/24 08:36:53.369
  I0730 08:36:53.369192 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename webhook @ 07/30/24 08:36:53.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:36:53.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:36:53.38
  STEP: Setting up server cert @ 07/30/24 08:36:53.393
  E0730 08:36:53.464070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/30/24 08:36:53.606
  STEP: Deploying the webhook pod @ 07/30/24 08:36:53.612
  STEP: Wait for the deployment to be ready @ 07/30/24 08:36:53.624
  I0730 08:36:53.635279 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0730 08:36:54.464579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:55.465430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/30/24 08:36:55.65
  STEP: Verifying the service has paired with the endpoint @ 07/30/24 08:36:55.667
  E0730 08:36:56.466156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:36:56.668748 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0730 08:36:56.678152 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3269-crds.webhook.example.com via the AdmissionRegistration API @ 07/30/24 08:36:57.197
  STEP: Creating a custom resource that should be mutated by the webhook @ 07/30/24 08:36:57.215
  E0730 08:36:57.466632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:58.467692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:36:59.468043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:36:59.836772 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6949" for this suite. @ 07/30/24 08:36:59.844
  STEP: Destroying namespace "webhook-markers-339" for this suite. @ 07/30/24 08:36:59.852
• [6.491 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 07/30/24 08:36:59.86
  I0730 08:36:59.860663 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename podtemplate @ 07/30/24 08:36:59.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:36:59.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:36:59.877
  I0730 08:36:59.897448 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-572" for this suite. @ 07/30/24 08:36:59.899
• [0.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 07/30/24 08:36:59.905
  I0730 08:36:59.905069 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename csistoragecapacity @ 07/30/24 08:36:59.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:36:59.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:36:59.922
  STEP: getting /apis @ 07/30/24 08:36:59.923
  STEP: getting /apis/storage.k8s.io @ 07/30/24 08:36:59.924
  STEP: getting /apis/storage.k8s.io/v1 @ 07/30/24 08:36:59.925
  STEP: creating @ 07/30/24 08:36:59.925
  STEP: watching @ 07/30/24 08:36:59.936
  I0730 08:36:59.936605 19 csistoragecapacity.go:143] starting watch
  STEP: getting @ 07/30/24 08:36:59.94
  STEP: listing in namespace @ 07/30/24 08:36:59.941
  STEP: listing across namespaces @ 07/30/24 08:36:59.943
  STEP: patching @ 07/30/24 08:36:59.944
  STEP: updating @ 07/30/24 08:36:59.948
  I0730 08:36:59.952403 19 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0730 08:36:59.952512 19 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 07/30/24 08:36:59.952
  STEP: deleting a collection @ 07/30/24 08:36:59.958
  I0730 08:36:59.969120 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-9138" for this suite. @ 07/30/24 08:36:59.97
• [0.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 07/30/24 08:36:59.974
  I0730 08:36:59.974538 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename pods @ 07/30/24 08:36:59.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:36:59.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:36:59.986
  STEP: creating the pod @ 07/30/24 08:36:59.988
  STEP: submitting the pod to kubernetes @ 07/30/24 08:36:59.988
  STEP: verifying QOS class is set on the pod @ 07/30/24 08:36:59.993
  I0730 08:36:59.996004 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4856" for this suite. @ 07/30/24 08:36:59.999
• [0.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 07/30/24 08:37:00.007
  I0730 08:37:00.007247 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename cronjob @ 07/30/24 08:37:00.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:37:00.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:37:00.021
  STEP: Creating a ForbidConcurrent cronjob @ 07/30/24 08:37:00.022
  STEP: Ensuring a job is scheduled @ 07/30/24 08:37:00.026
  E0730 08:37:00.468484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:37:01.468659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 07/30/24 08:37:02.032
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 07/30/24 08:37:02.037
  STEP: Ensuring no more jobs are scheduled @ 07/30/24 08:37:02.041
  STEP: Removing cronjob @ 07/30/24 08:37:02.045
  I0730 08:37:02.058976 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6049" for this suite. @ 07/30/24 08:37:02.06
• [2.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 07/30/24 08:37:02.072
  I0730 08:37:02.072326 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename container-probe @ 07/30/24 08:37:02.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:37:02.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:37:02.121
  STEP: Creating pod test-grpc-4330cc60-a03f-4820-95f5-507539419c7e in namespace container-probe-8748 @ 07/30/24 08:37:02.124
  E0730 08:37:02.468878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:37:03.469450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/30/24 08:37:04.144
  I0730 08:37:04.149678 19 container_probe.go:1749] Initial restart count of pod test-grpc-4330cc60-a03f-4820-95f5-507539419c7e is 0
  I0730 08:37:04.154389 19 container_probe.go:1759] Get pod test-grpc-4330cc60-a03f-4820-95f5-507539419c7e in namespace container-probe-8748
  E0730 08:37:04.469748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:37:05.470448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:37:06.161658 19 container_probe.go:1759] Get pod test-grpc-4330cc60-a03f-4820-95f5-507539419c7e in namespace container-probe-8748
  E0730 08:37:06.471217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:37:07.471681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:37:08.169425 19 container_probe.go:1759] Get pod test-grpc-4330cc60-a03f-4820-95f5-507539419c7e in namespace container-probe-8748
  E0730 08:37:08.471985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:37:09.472190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:37:10.176549 19 container_probe.go:1759] Get pod test-grpc-4330cc60-a03f-4820-95f5-507539419c7e in namespace container-probe-8748
  E0730 08:37:10.473025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:37:11.473121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:37:12.185903 19 container_probe.go:1759] Get pod test-grpc-4330cc60-a03f-4820-95f5-507539419c7e in namespace container-probe-8748
  E0730 08:37:12.473681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:37:13.474154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:37:14.193712 19 container_probe.go:1759] Get pod test-grpc-4330cc60-a03f-4820-95f5-507539419c7e in namespace container-probe-8748
  E0730 08:37:14.475213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:37:15.475679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:37:16.201829 19 container_probe.go:1759] Get pod test-grpc-4330cc60-a03f-4820-95f5-507539419c7e in namespace container-probe-8748
  E0730 08:37:16.475888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:37:17.476141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:37:18.209205 19 container_probe.go:1759] Get pod test-grpc-4330cc60-a03f-4820-95f5-507539419c7e in namespace container-probe-8748
  E0730 08:37:18.476445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:37:19.476500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:37:20.217404 19 container_probe.go:1759] Get pod test-grpc-4330cc60-a03f-4820-95f5-507539419c7e in namespace container-probe-8748
  E0730 08:37:20.476805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:37:21.477866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:37:22.220387 19 container_probe.go:1759] Get pod test-grpc-4330cc60-a03f-4820-95f5-507539419c7e in namespace container-probe-8748
  E0730 08:37:22.477805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:37:23.479007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:37:24.227595 19 container_probe.go:1759] Get pod test-grpc-4330cc60-a03f-4820-95f5-507539419c7e in namespace container-probe-8748
  E0730 08:37:24.480096      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:37:25.480101      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:37:26.234351 19 container_probe.go:1759] Get pod test-grpc-4330cc60-a03f-4820-95f5-507539419c7e in namespace container-probe-8748
  E0730 08:37:26.480827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:37:27.481956      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:37:28.241947 19 container_probe.go:1759] Get pod test-grpc-4330cc60-a03f-4820-95f5-507539419c7e in namespace container-probe-8748
  E0730 08:37:28.482533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:37:29.483082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:37:30.250617 19 container_probe.go:1759] Get pod test-grpc-4330cc60-a03f-4820-95f5-507539419c7e in namespace container-probe-8748
  E0730 08:37:30.483231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:37:31.484475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:37:32.258603 19 container_probe.go:1759] Get pod test-grpc-4330cc60-a03f-4820-95f5-507539419c7e in namespace container-probe-8748
  E0730 08:37:32.484828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:37:33.484839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:37:34.266413 19 container_probe.go:1759] Get pod test-grpc-4330cc60-a03f-4820-95f5-507539419c7e in namespace container-probe-8748
  E0730 08:37:34.485908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:37:35.486856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:37:36.273777 19 container_probe.go:1759] Get pod test-grpc-4330cc60-a03f-4820-95f5-507539419c7e in namespace container-probe-8748
  E0730 08:37:36.487059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:37:37.487348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:37:38.281634 19 container_probe.go:1759] Get pod test-grpc-4330cc60-a03f-4820-95f5-507539419c7e in namespace container-probe-8748
  E0730 08:37:38.488404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:37:39.488551      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:37:40.288781 19 container_probe.go:1759] Get pod test-grpc-4330cc60-a03f-4820-95f5-507539419c7e in namespace container-probe-8748
  E0730 08:37:40.489402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:37:41.489456      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:37:42.297296 19 container_probe.go:1759] Get pod test-grpc-4330cc60-a03f-4820-95f5-507539419c7e in namespace container-probe-8748
  E0730 08:37:42.489773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:37:43.490245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:37:44.305114 19 container_probe.go:1759] Get pod test-grpc-4330cc60-a03f-4820-95f5-507539419c7e in namespace container-probe-8748
  E0730 08:37:44.490168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:37:45.490878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:37:46.313123 19 container_probe.go:1759] Get pod test-grpc-4330cc60-a03f-4820-95f5-507539419c7e in namespace container-probe-8748
  E0730 08:37:46.491697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:37:47.491906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:37:48.318189 19 container_probe.go:1759] Get pod test-grpc-4330cc60-a03f-4820-95f5-507539419c7e in namespace container-probe-8748
  E0730 08:37:48.492669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:37:49.492916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:37:50.324958 19 container_probe.go:1759] Get pod test-grpc-4330cc60-a03f-4820-95f5-507539419c7e in namespace container-probe-8748
  E0730 08:37:50.493367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:37:51.493623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:37:52.333329 19 container_probe.go:1759] Get pod test-grpc-4330cc60-a03f-4820-95f5-507539419c7e in namespace container-probe-8748
  E0730 08:37:52.494676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:37:53.494817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:37:54.341292 19 container_probe.go:1759] Get pod test-grpc-4330cc60-a03f-4820-95f5-507539419c7e in namespace container-probe-8748
  E0730 08:37:54.495867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:37:55.496688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:37:56.349394 19 container_probe.go:1759] Get pod test-grpc-4330cc60-a03f-4820-95f5-507539419c7e in namespace container-probe-8748
  E0730 08:37:56.497701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:37:57.498632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:37:58.353084 19 container_probe.go:1759] Get pod test-grpc-4330cc60-a03f-4820-95f5-507539419c7e in namespace container-probe-8748
  E0730 08:37:58.499558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:37:59.499909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:38:00.362646 19 container_probe.go:1759] Get pod test-grpc-4330cc60-a03f-4820-95f5-507539419c7e in namespace container-probe-8748
  E0730 08:38:00.500790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:01.500878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:38:02.370368 19 container_probe.go:1759] Get pod test-grpc-4330cc60-a03f-4820-95f5-507539419c7e in namespace container-probe-8748
  E0730 08:38:02.501621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:03.502188      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:38:04.374801 19 container_probe.go:1759] Get pod test-grpc-4330cc60-a03f-4820-95f5-507539419c7e in namespace container-probe-8748
  E0730 08:38:04.503091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:05.504112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:38:06.382992 19 container_probe.go:1759] Get pod test-grpc-4330cc60-a03f-4820-95f5-507539419c7e in namespace container-probe-8748
  E0730 08:38:06.504227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:07.504301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:38:08.392034 19 container_probe.go:1759] Get pod test-grpc-4330cc60-a03f-4820-95f5-507539419c7e in namespace container-probe-8748
  I0730 08:38:08.392108 19 container_probe.go:1763] Restart count of pod container-probe-8748/test-grpc-4330cc60-a03f-4820-95f5-507539419c7e is now 1 (1m4.242367645s elapsed)
  STEP: deleting the pod @ 07/30/24 08:38:08.392
  I0730 08:38:08.442892 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8748" for this suite. @ 07/30/24 08:38:08.449
• [66.380 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 07/30/24 08:38:08.453
  I0730 08:38:08.453835 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename dns @ 07/30/24 08:38:08.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:38:08.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:38:08.468
  STEP: Creating a test headless service @ 07/30/24 08:38:08.47
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-7128.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-7128.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 07/30/24 08:38:08.473
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-7128.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-7128.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 07/30/24 08:38:08.474
  STEP: creating a pod to probe DNS @ 07/30/24 08:38:08.474
  STEP: submitting the pod to kubernetes @ 07/30/24 08:38:08.474
  E0730 08:38:08.505430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:09.506434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/30/24 08:38:10.499
  STEP: looking for the results for each expected name from probers @ 07/30/24 08:38:10.503
  E0730 08:38:10.507238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:38:10.518821 19 dns_common.go:478] Unable to read jessie_hosts@dns-querier-2 from pod dns-7128/dns-test-d88f1860-f360-4d32-a91c-9ea2ccd1b186: the server could not find the requested resource (get pods dns-test-d88f1860-f360-4d32-a91c-9ea2ccd1b186)
  I0730 08:38:10.518855 19 dns_common.go:489] Lookups using dns-7128/dns-test-d88f1860-f360-4d32-a91c-9ea2ccd1b186 failed for: [jessie_hosts@dns-querier-2]

  I0730 08:38:10.524835 19 dns_common.go:495] Pod client logs for webserver: 
  I0730 08:38:10.527229 19 dns_common.go:495] Pod client logs for querier: 
  I0730 08:38:10.529505 19 dns_common.go:495] Pod client logs for jessie-querier: 
  E0730 08:38:11.508050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:12.508512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:13.508832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:14.509040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:15.509832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:38:15.524659 19 dns_common.go:527] DNS probes using dns-7128/dns-test-d88f1860-f360-4d32-a91c-9ea2ccd1b186 succeeded

  STEP: deleting the pod @ 07/30/24 08:38:15.524
  STEP: deleting the test headless service @ 07/30/24 08:38:15.563
  I0730 08:38:15.599696 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7128" for this suite. @ 07/30/24 08:38:15.601
• [7.152 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 07/30/24 08:38:15.605
  I0730 08:38:15.605927 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename runtimeclass @ 07/30/24 08:38:15.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:38:15.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:38:15.62
  E0730 08:38:16.510756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:17.511176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:38:17.639896 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8889" for this suite. @ 07/30/24 08:38:17.641
• [2.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 07/30/24 08:38:17.646
  I0730 08:38:17.646320 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename watch @ 07/30/24 08:38:17.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:38:17.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:38:17.661
  STEP: creating a watch on configmaps with label A @ 07/30/24 08:38:17.663
  STEP: creating a watch on configmaps with label B @ 07/30/24 08:38:17.663
  STEP: creating a watch on configmaps with label A or B @ 07/30/24 08:38:17.664
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 07/30/24 08:38:17.665
  I0730 08:38:17.669088 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3717  6b783cf0-fe7f-4ef6-a58c-2814ff1e3375 33929 0 2024-07-30 08:38:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-30 08:38:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0730 08:38:17.669160 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3717  6b783cf0-fe7f-4ef6-a58c-2814ff1e3375 33929 0 2024-07-30 08:38:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-30 08:38:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 07/30/24 08:38:17.669
  I0730 08:38:17.674652 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3717  6b783cf0-fe7f-4ef6-a58c-2814ff1e3375 33930 0 2024-07-30 08:38:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-30 08:38:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0730 08:38:17.674714 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3717  6b783cf0-fe7f-4ef6-a58c-2814ff1e3375 33930 0 2024-07-30 08:38:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-30 08:38:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 07/30/24 08:38:17.674
  I0730 08:38:17.681129 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3717  6b783cf0-fe7f-4ef6-a58c-2814ff1e3375 33931 0 2024-07-30 08:38:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-30 08:38:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0730 08:38:17.681189 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3717  6b783cf0-fe7f-4ef6-a58c-2814ff1e3375 33931 0 2024-07-30 08:38:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-30 08:38:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 07/30/24 08:38:17.681
  I0730 08:38:17.687961 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3717  6b783cf0-fe7f-4ef6-a58c-2814ff1e3375 33932 0 2024-07-30 08:38:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-30 08:38:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0730 08:38:17.687988 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3717  6b783cf0-fe7f-4ef6-a58c-2814ff1e3375 33932 0 2024-07-30 08:38:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-30 08:38:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 07/30/24 08:38:17.687
  I0730 08:38:17.691326 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3717  b7e7d06c-0d14-47fb-8718-c2cff2e94f2c 33933 0 2024-07-30 08:38:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-07-30 08:38:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0730 08:38:17.691422 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3717  b7e7d06c-0d14-47fb-8718-c2cff2e94f2c 33933 0 2024-07-30 08:38:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-07-30 08:38:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0730 08:38:18.511532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:19.511533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:20.512758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:21.513082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:22.513485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:23.514346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:24.514803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:25.516022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:26.516372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:27.516843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 07/30/24 08:38:27.691
  I0730 08:38:27.709469 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3717  b7e7d06c-0d14-47fb-8718-c2cff2e94f2c 33978 0 2024-07-30 08:38:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-07-30 08:38:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0730 08:38:27.709585 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3717  b7e7d06c-0d14-47fb-8718-c2cff2e94f2c 33978 0 2024-07-30 08:38:17 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-07-30 08:38:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0730 08:38:28.516899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:29.517144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:30.517314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:31.517586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:32.517880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:33.517992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:34.518863      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:35.519748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:36.519998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:37.520335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:38:37.709872 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3717" for this suite. @ 07/30/24 08:38:37.715
• [20.082 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 07/30/24 08:38:37.728
  I0730 08:38:37.728674 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename container-probe @ 07/30/24 08:38:37.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:38:37.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:38:37.748
  STEP: Creating pod liveness-fc116383-0681-483c-b5cc-dd41178b3c9c in namespace container-probe-7351 @ 07/30/24 08:38:37.749
  E0730 08:38:38.520637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:39.521554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/30/24 08:38:39.765
  I0730 08:38:39.769283 19 container_probe.go:1749] Initial restart count of pod liveness-fc116383-0681-483c-b5cc-dd41178b3c9c is 0
  I0730 08:38:39.772682 19 container_probe.go:1759] Get pod liveness-fc116383-0681-483c-b5cc-dd41178b3c9c in namespace container-probe-7351
  E0730 08:38:40.521767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:41.522435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:38:41.779908 19 container_probe.go:1759] Get pod liveness-fc116383-0681-483c-b5cc-dd41178b3c9c in namespace container-probe-7351
  E0730 08:38:42.522762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:43.523002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:38:43.783486 19 container_probe.go:1759] Get pod liveness-fc116383-0681-483c-b5cc-dd41178b3c9c in namespace container-probe-7351
  E0730 08:38:44.523457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:45.524267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:38:45.790870 19 container_probe.go:1759] Get pod liveness-fc116383-0681-483c-b5cc-dd41178b3c9c in namespace container-probe-7351
  E0730 08:38:46.524453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:47.524773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:38:47.799233 19 container_probe.go:1759] Get pod liveness-fc116383-0681-483c-b5cc-dd41178b3c9c in namespace container-probe-7351
  E0730 08:38:48.525645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:49.526166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:38:49.807889 19 container_probe.go:1759] Get pod liveness-fc116383-0681-483c-b5cc-dd41178b3c9c in namespace container-probe-7351
  E0730 08:38:50.526325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:51.526931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:38:51.816107 19 container_probe.go:1759] Get pod liveness-fc116383-0681-483c-b5cc-dd41178b3c9c in namespace container-probe-7351
  E0730 08:38:52.528104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:53.528872      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:38:53.824482 19 container_probe.go:1759] Get pod liveness-fc116383-0681-483c-b5cc-dd41178b3c9c in namespace container-probe-7351
  E0730 08:38:54.529639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:55.530226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:38:55.831545 19 container_probe.go:1759] Get pod liveness-fc116383-0681-483c-b5cc-dd41178b3c9c in namespace container-probe-7351
  E0730 08:38:56.530596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:57.531012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:38:57.838984 19 container_probe.go:1759] Get pod liveness-fc116383-0681-483c-b5cc-dd41178b3c9c in namespace container-probe-7351
  E0730 08:38:58.532356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:38:59.532883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:38:59.846717 19 container_probe.go:1759] Get pod liveness-fc116383-0681-483c-b5cc-dd41178b3c9c in namespace container-probe-7351
  I0730 08:38:59.846772 19 container_probe.go:1763] Restart count of pod container-probe-7351/liveness-fc116383-0681-483c-b5cc-dd41178b3c9c is now 1 (20.077446009s elapsed)
  STEP: deleting the pod @ 07/30/24 08:38:59.847
  I0730 08:38:59.877868 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7351" for this suite. @ 07/30/24 08:38:59.883
• [22.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 07/30/24 08:38:59.895
  I0730 08:38:59.895139 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename security-context-test @ 07/30/24 08:38:59.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:38:59.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:38:59.91
  E0730 08:39:00.533877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:01.534190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:02.534753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:03.535053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:39:03.934003 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1921" for this suite. @ 07/30/24 08:39:03.939
• [4.058 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 07/30/24 08:39:03.953
  I0730 08:39:03.953841 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename configmap @ 07/30/24 08:39:03.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:39:03.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:39:03.984
  STEP: Creating configMap with name configmap-test-volume-4a645a97-2531-43db-91ce-989be9041ac3 @ 07/30/24 08:39:03.988
  STEP: Creating a pod to test consume configMaps @ 07/30/24 08:39:03.996
  E0730 08:39:04.534925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:05.536019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:06.536269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:07.536771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:39:08.025
  I0730 08:39:08.029779 19 output.go:196] Trying to get logs from node jammy pod pod-configmaps-6edd39b1-9584-4ff7-bcfa-24ec688a474d container agnhost-container: <nil>
  STEP: delete the pod @ 07/30/24 08:39:08.037
  I0730 08:39:08.060249 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3635" for this suite. @ 07/30/24 08:39:08.062
• [4.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 07/30/24 08:39:08.071
  I0730 08:39:08.071150 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename resourcequota @ 07/30/24 08:39:08.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:39:08.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:39:08.085
  STEP: Counting existing ResourceQuota @ 07/30/24 08:39:08.087
  E0730 08:39:08.537206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:09.538554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:10.538748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:11.539704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:12.539977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/30/24 08:39:13.09
  STEP: Ensuring resource quota status is calculated @ 07/30/24 08:39:13.098
  E0730 08:39:13.540931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:14.541399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 07/30/24 08:39:15.105
  STEP: Ensuring ResourceQuota status captures the pod usage @ 07/30/24 08:39:15.132
  E0730 08:39:15.541566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:16.542827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 07/30/24 08:39:17.14
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 07/30/24 08:39:17.143
  STEP: Ensuring a pod cannot update its resource requirements @ 07/30/24 08:39:17.145
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 07/30/24 08:39:17.15
  E0730 08:39:17.543078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:18.543840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/30/24 08:39:19.158
  STEP: Ensuring resource quota status released the pod usage @ 07/30/24 08:39:19.186
  E0730 08:39:19.544306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:20.545002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:39:21.194408 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7580" for this suite. @ 07/30/24 08:39:21.199
• [13.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 07/30/24 08:39:21.21
  I0730 08:39:21.211954 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/30/24 08:39:21.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:39:21.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:39:21.233
  I0730 08:39:21.237189 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-571" for this suite. @ 07/30/24 08:39:21.238
• [0.032 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 07/30/24 08:39:21.243
  I0730 08:39:21.243144 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename subpath @ 07/30/24 08:39:21.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:39:21.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:39:21.255
  STEP: Setting up data @ 07/30/24 08:39:21.256
  STEP: Creating pod pod-subpath-test-configmap-7lrk @ 07/30/24 08:39:21.262
  STEP: Creating a pod to test atomic-volume-subpath @ 07/30/24 08:39:21.262
  E0730 08:39:21.545991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:22.546585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:23.547419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:24.548721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:25.548938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:26.549987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:27.550184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:28.551374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:29.552110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:30.552421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:31.553156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:32.553648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:33.554722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:34.555109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:35.555487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:36.555795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:37.557096      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:38.557380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:39.557858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:40.558608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:41.558742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:42.559049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:39:43.346
  I0730 08:39:43.347553 19 output.go:196] Trying to get logs from node jammy pod pod-subpath-test-configmap-7lrk container test-container-subpath-configmap-7lrk: <nil>
  STEP: delete the pod @ 07/30/24 08:39:43.349
  STEP: Deleting pod pod-subpath-test-configmap-7lrk @ 07/30/24 08:39:43.358
  I0730 08:39:43.358539 19 delete.go:62] Deleting pod "pod-subpath-test-configmap-7lrk" in namespace "subpath-3831"
  I0730 08:39:43.359688 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3831" for this suite. @ 07/30/24 08:39:43.361
• [22.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 07/30/24 08:39:43.365
  I0730 08:39:43.365197 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename crd-webhook @ 07/30/24 08:39:43.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:39:43.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:39:43.377
  STEP: Setting up server cert @ 07/30/24 08:39:43.377
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 07/30/24 08:39:43.494
  STEP: Deploying the custom resource conversion webhook pod @ 07/30/24 08:39:43.502
  STEP: Wait for the deployment to be ready @ 07/30/24 08:39:43.51
  I0730 08:39:43.514885 19 deployment.go:222] new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  E0730 08:39:43.559229      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:44.559829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/30/24 08:39:45.531
  STEP: Verifying the service has paired with the endpoint @ 07/30/24 08:39:45.549
  E0730 08:39:45.560037      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:39:46.550267 19 util.go:427] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0730 08:39:46.555196 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  E0730 08:39:46.560871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:47.562058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:48.562569      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 07/30/24 08:39:49.137
  STEP: Create a v2 custom resource @ 07/30/24 08:39:49.188
  STEP: List CRs in v1 @ 07/30/24 08:39:49.203
  STEP: List CRs in v2 @ 07/30/24 08:39:49.205
  E0730 08:39:49.562845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:39:49.769144 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-3122" for this suite. @ 07/30/24 08:39:49.77
• [6.429 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 07/30/24 08:39:49.795
  I0730 08:39:49.795223 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename sched-preemption @ 07/30/24 08:39:49.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:39:49.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:39:49.819
  I0730 08:39:49.837360 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0730 08:39:50.563330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:51.563661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:52.564839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:53.565264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:54.565488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:55.565641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:56.565777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:57.566100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:58.566346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:39:59.566618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:00.566670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:01.567816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:02.567929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:03.568651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:04.569556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:05.569779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:06.569884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:07.570385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:08.571033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:09.571674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:10.572506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:11.573251      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:12.574051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:13.574929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:14.575275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:15.576451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:16.576989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:17.577265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:18.578419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:19.578559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:20.579745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:21.580592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:22.580754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:23.581320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:24.581684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:25.582595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:26.583125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:27.583375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:28.583471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:29.583978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:30.585070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:31.585980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:32.585995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:33.586286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:34.586649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:35.589991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:36.590329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:37.590514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:38.591517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:39.592384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:40.592784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:41.593334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:42.593582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:43.593942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:44.595020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:45.595393      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:46.596270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:47.596862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:48.597424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:49.597632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:40:49.846027 19 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 07/30/24 08:40:49.85
  I0730 08:40:49.850309 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename sched-preemption-path @ 07/30/24 08:40:49.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:40:49.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:40:49.881
  STEP: Finding an available node @ 07/30/24 08:40:49.883
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/30/24 08:40:49.883
  E0730 08:40:50.597860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:51.598418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/30/24 08:40:51.907
  I0730 08:40:51.936644 19 preemption.go:583] found a healthy node: jammy
  E0730 08:40:52.599626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:53.600576      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:54.600540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:55.600894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:56.601519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:57.601861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:40:58.019237 19 preemption.go:706] pods created so far: [1 1 1]
  I0730 08:40:58.019293 19 preemption.go:707] length of pods created so far: 3
  E0730 08:40:58.602024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:40:59.602059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:41:00.036302 19 preemption.go:724] pods created so far: [2 2 1]
  E0730 08:41:00.602283      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:41:01.603166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:41:02.603411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:41:03.604110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:41:04.605078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:41:05.606088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:41:06.606232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:41:07.105371 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-3333" for this suite. @ 07/30/24 08:41:07.106
  I0730 08:41:07.111961 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8106" for this suite. @ 07/30/24 08:41:07.113
• [77.322 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 07/30/24 08:41:07.117
  I0730 08:41:07.117969 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename container-probe @ 07/30/24 08:41:07.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:41:07.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:41:07.132
  STEP: Creating pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162 @ 07/30/24 08:41:07.134
  E0730 08:41:07.606395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:41:08.606679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/30/24 08:41:09.15
  I0730 08:41:09.154685 19 container_probe.go:1749] Initial restart count of pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 is 0
  I0730 08:41:09.158863 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:41:09.607691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:41:10.608316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:41:11.165688 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:41:11.609497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:41:12.609843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:41:13.173074 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:41:13.610927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:41:14.611529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:41:15.180091 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:41:15.612172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:41:16.612831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:41:17.188658 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:41:17.612983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:41:18.613625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:41:19.196581 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:41:19.614288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:41:20.614381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:41:21.201993 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:41:21.615285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:41:22.615444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:41:23.209137 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:41:23.616569      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:41:24.617151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:41:25.215492 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:41:25.617818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:41:26.618568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:41:27.222995 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:41:27.619429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:41:28.620047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:41:29.230999 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  I0730 08:41:29.231055 19 container_probe.go:1763] Restart count of pod container-probe-9162/liveness-3376eeba-b017-411a-8960-3890404bf8c0 is now 1 (20.076053065s elapsed)
  E0730 08:41:29.620763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:41:30.621275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:41:31.237637 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:41:31.622299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:41:32.622701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:41:33.244133 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:41:33.623043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:41:34.623440      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:41:35.252030 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:41:35.623642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:41:36.624280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:41:37.260075 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:41:37.624760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:41:38.626009      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:41:39.268671 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:41:39.626083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:41:40.626068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:41:41.275135 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:41:41.626859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:41:42.627079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:41:43.283247 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:41:43.627932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:41:44.628172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:41:45.289825 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:41:45.628523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:41:46.629215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:41:47.297015 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:41:47.629560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:41:48.630052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:41:49.302385 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  I0730 08:41:49.302680 19 container_probe.go:1763] Restart count of pod container-probe-9162/liveness-3376eeba-b017-411a-8960-3890404bf8c0 is now 2 (40.147676757s elapsed)
  E0730 08:41:49.630190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:41:50.631481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:41:51.310284 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:41:51.631899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:41:52.632317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:41:53.314415 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:41:53.633155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:41:54.633607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:41:55.321657 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:41:55.634050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:41:56.634328      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:41:57.329628 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:41:57.635289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:41:58.635304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:41:59.337573 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:41:59.635810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:42:00.636056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:42:01.345599 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:42:01.636119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:42:02.636932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:42:03.353108 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:42:03.637772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:42:04.637873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:42:05.360492 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:42:05.639228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:42:06.639380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:42:07.367929 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:42:07.640365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:42:08.640638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:42:09.371168 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  I0730 08:42:09.371193 19 container_probe.go:1763] Restart count of pod container-probe-9162/liveness-3376eeba-b017-411a-8960-3890404bf8c0 is now 3 (1m0.216193015s elapsed)
  E0730 08:42:09.641241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:42:10.641672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:42:11.379893 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:42:11.642665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:42:12.643055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:42:13.387283 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:42:13.643898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:42:14.644076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:42:15.395612 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:42:15.645150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:42:16.645752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:42:17.402320 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:42:17.646651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:42:18.647007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:42:19.408387 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:42:19.647934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:42:20.648412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:42:21.413989 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:42:21.649603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:42:22.650354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:42:23.420898 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:42:23.650542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:42:24.651212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:42:25.429105 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:42:25.651419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:42:26.652284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:42:27.432232 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:42:27.653384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:42:28.653826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:42:29.439703 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  I0730 08:42:29.439755 19 container_probe.go:1763] Restart count of pod container-probe-9162/liveness-3376eeba-b017-411a-8960-3890404bf8c0 is now 4 (1m20.28475308s elapsed)
  E0730 08:42:29.654097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:42:30.654432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:42:31.448025 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:42:31.655372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:42:32.655671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:42:33.455265 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:42:33.656684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:42:34.657115      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:42:35.462074 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:42:35.657404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:42:36.657702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:42:37.470235 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:42:37.658832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:42:38.659277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:42:39.477628 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:42:39.660089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:42:40.660597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:42:41.485240 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:42:41.661484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:42:42.661751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:42:43.493667 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:42:43.662042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:42:44.662413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:42:45.501151 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:42:45.662501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:42:46.663395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:42:47.504838 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:42:47.664304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:42:48.664808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:42:49.512862 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:42:49.665281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:42:50.665553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:42:51.520700 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:42:51.665996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:42:52.666350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:42:53.528176 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:42:53.666471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:42:54.666786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:42:55.537666 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:42:55.666815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:42:56.667444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:42:57.546267 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:42:57.667864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:42:58.668567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:42:59.554226 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:42:59.669767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:43:00.670783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:43:01.562104 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:43:01.671934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:43:02.672229      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:43:03.569664 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:43:03.673276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:43:04.673757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:43:05.577871 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:43:05.674362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:43:06.674643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:43:07.586631 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:43:07.675127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:43:08.675349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:43:09.595093 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:43:09.676414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:43:10.676736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:43:11.603242 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:43:11.677391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:43:12.677844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:43:13.612109 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:43:13.678332      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:43:14.678869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:43:15.618883 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:43:15.678883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:43:16.679537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:43:17.626171 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:43:17.680444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:43:18.681035      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:43:19.634020 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:43:19.681154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:43:20.681411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:43:21.641636 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:43:21.682331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:43:22.682906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:43:23.649801 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:43:23.682951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:43:24.683305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:43:25.657349 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:43:25.683535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:43:26.684741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:43:27.664539 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:43:27.686139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:43:28.686523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:43:29.672491 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:43:29.686762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:43:30.687229      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:43:31.678441 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:43:31.687774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:43:32.687918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:43:33.685122 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:43:33.688386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:43:34.688932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:43:35.689869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:43:35.696051 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:43:36.690861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:43:37.691117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:43:37.702017 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:43:38.691416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:43:39.691555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:43:39.708415 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  E0730 08:43:40.691745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:43:41.692854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:43:41.711713 19 container_probe.go:1759] Get pod liveness-3376eeba-b017-411a-8960-3890404bf8c0 in namespace container-probe-9162
  I0730 08:43:41.711744 19 container_probe.go:1763] Restart count of pod container-probe-9162/liveness-3376eeba-b017-411a-8960-3890404bf8c0 is now 5 (2m32.556743381s elapsed)
  STEP: deleting the pod @ 07/30/24 08:43:41.711
  I0730 08:43:41.726041 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9162" for this suite. @ 07/30/24 08:43:41.73
• [154.617 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 07/30/24 08:43:41.735
  I0730 08:43:41.735610 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename disruption @ 07/30/24 08:43:41.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:43:41.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:43:41.809
  STEP: Waiting for the pdb to be processed @ 07/30/24 08:43:41.821
  E0730 08:43:42.693280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:43:43.693849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 07/30/24 08:43:43.865
  I0730 08:43:43.870408 19 disruption.go:578] running pods: 0 < 3
  E0730 08:43:44.694114      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:43:45.694962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:43:45.873839 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6492" for this suite. @ 07/30/24 08:43:45.876
• [4.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 07/30/24 08:43:45.884
  I0730 08:43:45.884340 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename init-container @ 07/30/24 08:43:45.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:43:45.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:43:45.91
  STEP: creating the pod @ 07/30/24 08:43:45.912
  I0730 08:43:45.912547 19 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E0730 08:43:46.695066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:43:47.695557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:43:48.695977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:43:49.696616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:43:50.092788 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8106" for this suite. @ 07/30/24 08:43:50.097
• [4.219 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 07/30/24 08:43:50.105
  I0730 08:43:50.105058 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename cronjob @ 07/30/24 08:43:50.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:43:50.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:43:50.119
  STEP: Creating a cronjob @ 07/30/24 08:43:50.12
  STEP: creating @ 07/30/24 08:43:50.12
  STEP: getting @ 07/30/24 08:43:50.133
  STEP: listing @ 07/30/24 08:43:50.136
  STEP: watching @ 07/30/24 08:43:50.137
  I0730 08:43:50.137992 19 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 07/30/24 08:43:50.138
  STEP: cluster-wide watching @ 07/30/24 08:43:50.139
  I0730 08:43:50.139860 19 cronjob.go:382] starting watch
  STEP: patching @ 07/30/24 08:43:50.14
  STEP: updating @ 07/30/24 08:43:50.149
  I0730 08:43:50.158916 19 cronjob.go:406] waiting for watch events with expected annotations
  I0730 08:43:50.158953 19 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 07/30/24 08:43:50.158
  STEP: updating /status @ 07/30/24 08:43:50.163
  STEP: get /status @ 07/30/24 08:43:50.174
  STEP: deleting @ 07/30/24 08:43:50.176
  STEP: deleting a collection @ 07/30/24 08:43:50.199
  I0730 08:43:50.205822 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7691" for this suite. @ 07/30/24 08:43:50.207
• [0.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 07/30/24 08:43:50.212
  I0730 08:43:50.212183 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename projected @ 07/30/24 08:43:50.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:43:50.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:43:50.223
  STEP: Creating projection with secret that has name projected-secret-test-c12ae83c-8b5a-41e0-827a-169dd2435aa2 @ 07/30/24 08:43:50.224
  STEP: Creating a pod to test consume secrets @ 07/30/24 08:43:50.227
  E0730 08:43:50.698294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:43:51.699502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:43:52.237
  I0730 08:43:52.239810 19 output.go:196] Trying to get logs from node jammy pod pod-projected-secrets-fdb37142-b223-46a9-9675-ef39436655ce container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/30/24 08:43:52.247
  I0730 08:43:52.262623 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7685" for this suite. @ 07/30/24 08:43:52.265
• [2.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 07/30/24 08:43:52.277
  I0730 08:43:52.277165 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename container-probe @ 07/30/24 08:43:52.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:43:52.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:43:52.297
  STEP: Creating pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720 @ 07/30/24 08:43:52.298
  E0730 08:43:52.700356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:43:53.700769      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/30/24 08:43:54.314
  I0730 08:43:54.320055 19 container_probe.go:1749] Initial restart count of pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c is 0
  I0730 08:43:54.324900 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:43:54.701776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:43:55.702239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:43:56.328304 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:43:56.702818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:43:57.703191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:43:58.334926 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:43:58.703367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:43:59.703893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:44:00.341946 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:44:00.704213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:44:01.704341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:44:02.348447 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:44:02.704818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:44:03.704848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:44:04.356762 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:44:04.705163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:44:05.705332      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:44:06.364602 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:44:06.705973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:44:07.706786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:44:08.371904 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:44:08.707549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:44:09.708152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:44:10.375786 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:44:10.709109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:44:11.709366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:44:12.383340 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:44:12.709644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:44:13.709800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:44:14.387311 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:44:14.710726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:44:15.711656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:44:16.395784 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:44:16.712348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:44:17.712649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:44:18.402660 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:44:18.713145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:44:19.713423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:44:20.409481 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:44:20.714726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:44:21.714466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:44:22.417288 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:44:22.714956      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:44:23.715163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:44:24.423529 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:44:24.715525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:44:25.716641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:44:26.431889 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:44:26.717542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:44:27.719838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:44:28.439154 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:44:28.720448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:44:29.720596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:44:30.446873 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:44:30.720897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:44:31.721114      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:44:32.454484 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:44:32.721829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:44:33.722566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:44:34.458146 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:44:34.722690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:44:35.723802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:44:36.465435 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:44:36.724755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:44:37.725610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:44:38.471703 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:44:38.726415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:44:39.726404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:44:40.479908 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:44:40.727618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:44:41.727901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:44:42.483045 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:44:42.728609      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:44:43.729193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:44:44.491134 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:44:44.729538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:44:45.729721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:44:46.499511 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:44:46.729883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:44:47.730335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:44:48.507945 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:44:48.731365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:44:49.731672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:44:50.515083 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:44:50.732681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:44:51.732950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:44:52.526869 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:44:52.733035      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:44:53.733532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:44:54.532985 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:44:54.734352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:44:55.735124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:44:56.540516 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:44:56.735780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:44:57.736392      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:44:58.544382 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:44:58.736666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:44:59.737024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:45:00.550472 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:45:00.737757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:45:01.738700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:45:02.557432 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:45:02.738853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:45:03.739234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:45:04.565592 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:45:04.739999      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:45:05.741308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:45:06.572723 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:45:06.741456      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:45:07.741753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:45:08.580117 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:45:08.742490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:45:09.742722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:45:10.587864 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:45:10.743018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:45:11.743412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:45:12.594424 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:45:12.743973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:45:13.744280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:45:14.598096 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:45:14.744427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:45:15.744744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:45:16.607153 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:45:16.745648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:45:17.746247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:45:18.615740 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:45:18.747212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:45:19.747791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:45:20.624149 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:45:20.748240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:45:21.748800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:45:22.632187 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:45:22.749716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:45:23.749988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:45:24.639937 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:45:24.750462      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:45:25.750981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:45:26.649022 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:45:26.751506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:45:27.752477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:45:28.656498 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:45:28.752981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:45:29.753421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:45:30.665200 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:45:30.753278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:45:31.753987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:45:32.672505 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:45:32.754852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:45:33.755872      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:45:34.680229 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:45:34.756519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:45:35.757079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:45:36.686851 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:45:36.757183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:45:37.757912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:45:38.694188 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:45:38.758511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:45:39.759120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:45:40.703327 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:45:40.759701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:45:41.760347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:45:42.711933 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:45:42.761139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:45:43.761773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:45:44.720008 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:45:44.762207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:45:45.763438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:45:46.728433 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:45:46.764031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:45:47.764457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:45:48.736821 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:45:48.765087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:45:49.765927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:45:50.743682 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:45:50.766709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:45:51.767545      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:45:52.751019 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:45:52.768736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:45:53.769264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:45:54.758760 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:45:54.770317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:45:55.771526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:45:56.765310 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:45:56.771486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:45:57.771835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:45:58.772290      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:45:58.773238 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:45:59.773318      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:46:00.773435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:46:00.776965 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:46:01.774312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:46:02.774446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:46:02.785608 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:46:03.774764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:46:04.774876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:46:04.788735 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:46:05.775465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:46:06.775694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:46:06.795553 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:46:07.776171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:46:08.776670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:46:08.802730 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:46:09.776831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:46:10.776826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:46:10.806133 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:46:11.777375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:46:12.777636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:46:12.813029 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:46:13.777774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:46:14.778218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:46:14.820892 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:46:15.778737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:46:16.779099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:46:16.828751 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:46:17.780009      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:46:18.780448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:46:18.836721 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:46:19.780864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:46:20.781315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:46:20.844504 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:46:21.781797      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:46:22.782422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:46:22.851284 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:46:23.783392      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:46:24.783971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:46:24.859624 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:46:25.784284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:46:26.785177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:46:26.867719 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:46:27.785742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:46:28.786611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:46:28.875347 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:46:29.786969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:46:30.787725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:46:30.883844 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:46:31.788738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:46:32.789200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:46:32.891724 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:46:33.789206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:46:34.789971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:46:34.898698 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:46:35.791081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:46:36.791633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:46:36.906410 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:46:37.792546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:46:38.792992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:46:38.912587 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:46:39.793296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:46:40.793951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:46:40.919342 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:46:41.794350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:46:42.794603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:46:42.927276 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:46:43.795086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:46:44.795340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:46:44.935542 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:46:45.796110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:46:46.796104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:46:46.942918 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:46:47.796504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:46:48.797010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:46:48.950885 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:46:49.797371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:46:50.798189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:46:50.959395 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:46:51.798958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:46:52.799487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:46:52.968854 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:46:53.799625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:46:54.800100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:46:54.976918 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:46:55.801017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:46:56.801816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:46:56.979587 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:46:57.802067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:46:58.802627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:46:58.987226 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:46:59.802820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:47:00.802668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:47:00.995338 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:47:01.803177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:47:02.804059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:47:03.002342 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:47:03.804123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:47:04.804525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:47:05.010768 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:47:05.805484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:47:06.806017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:47:07.022526 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:47:07.806594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:47:08.807796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:47:09.030513 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:47:09.807980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:47:10.808836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:47:11.038718 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:47:11.809151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:47:12.809414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:47:13.048054 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:47:13.810666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:47:14.811172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:47:15.056073 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:47:15.811939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:47:16.812428      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:47:17.066488 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:47:17.813376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:47:18.813734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:47:19.076081 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:47:19.814740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:47:20.815668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:47:21.082380 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:47:21.816095      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:47:22.816505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:47:23.089095 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:47:23.816751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:47:24.817178      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:47:25.093551 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:47:25.818207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:47:26.818599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:47:27.100915 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:47:27.819278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:47:28.820096      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:47:29.108669 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:47:29.820459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:47:30.821212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:47:31.115453 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:47:31.821449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:47:32.822132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:47:33.119050 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:47:33.823207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:47:34.824171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:47:35.126964 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:47:35.825264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:47:36.825727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:47:37.134427 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:47:37.825970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:47:38.826235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:47:39.141505 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:47:39.827649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:47:40.828278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:47:41.150382 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:47:41.829301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:47:42.829152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:47:43.157899 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:47:43.829623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:47:44.830067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:47:45.165806 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:47:45.830179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:47:46.830390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:47:47.173486 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:47:47.831424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:47:48.831676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:47:49.182048 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:47:49.831952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:47:50.833040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:47:51.191214 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:47:51.834156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:47:52.834549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:47:53.201533 19 container_probe.go:1759] Get pod test-webserver-66bdcf8d-905a-4ecb-80f2-bb38e1fd291c in namespace container-probe-4720
  E0730 08:47:53.834994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:47:54.835537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 07/30/24 08:47:55.203
  I0730 08:47:55.232527 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4720" for this suite. @ 07/30/24 08:47:55.238
• [242.972 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 07/30/24 08:47:55.249
  I0730 08:47:55.249850 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename downward-api @ 07/30/24 08:47:55.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:47:55.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:47:55.271
  STEP: Creating a pod to test downward API volume plugin @ 07/30/24 08:47:55.273
  E0730 08:47:55.836362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:47:56.836849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:47:57.836967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:47:58.837365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:47:59.297
  I0730 08:47:59.302417 19 output.go:196] Trying to get logs from node jammy pod downwardapi-volume-147b09b3-078e-4d8a-959b-085a70b66fe8 container client-container: <nil>
  STEP: delete the pod @ 07/30/24 08:47:59.316
  I0730 08:47:59.337955 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-685" for this suite. @ 07/30/24 08:47:59.342
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 07/30/24 08:47:59.35
  I0730 08:47:59.350655 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename webhook @ 07/30/24 08:47:59.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:47:59.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:47:59.364
  STEP: Setting up server cert @ 07/30/24 08:47:59.38
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/30/24 08:47:59.584
  STEP: Deploying the webhook pod @ 07/30/24 08:47:59.592
  STEP: Wait for the deployment to be ready @ 07/30/24 08:47:59.599
  I0730 08:47:59.604849 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0730 08:47:59.838373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:00.839367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/30/24 08:48:01.621
  STEP: Verifying the service has paired with the endpoint @ 07/30/24 08:48:01.639
  E0730 08:48:01.839896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:48:02.641174 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0730 08:48:02.653192 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  E0730 08:48:02.840247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 07/30/24 08:48:03.172
  STEP: Creating a custom resource that should be denied by the webhook @ 07/30/24 08:48:03.185
  E0730 08:48:03.840373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:04.840943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 07/30/24 08:48:05.199
  STEP: Updating the custom resource with disallowed data should be denied @ 07/30/24 08:48:05.214
  STEP: Deleting the custom resource should be denied @ 07/30/24 08:48:05.224
  STEP: Remove the offending key and value from the custom resource data @ 07/30/24 08:48:05.228
  STEP: Deleting the updated custom resource should be successful @ 07/30/24 08:48:05.237
  E0730 08:48:05.841732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:48:05.842496 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4083" for this suite. @ 07/30/24 08:48:05.848
  STEP: Destroying namespace "webhook-markers-3156" for this suite. @ 07/30/24 08:48:05.869
• [6.530 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 07/30/24 08:48:05.88
  I0730 08:48:05.880434 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename webhook @ 07/30/24 08:48:05.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:48:05.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:48:05.899
  STEP: Setting up server cert @ 07/30/24 08:48:05.914
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/30/24 08:48:06.055
  STEP: Deploying the webhook pod @ 07/30/24 08:48:06.065
  STEP: Wait for the deployment to be ready @ 07/30/24 08:48:06.074
  I0730 08:48:06.080241 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0730 08:48:06.842207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:07.843235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/30/24 08:48:08.093
  STEP: Verifying the service has paired with the endpoint @ 07/30/24 08:48:08.11
  E0730 08:48:08.843349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:48:09.111382 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0730 08:48:09.122257 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-1455-crds.webhook.example.com via the AdmissionRegistration API @ 07/30/24 08:48:09.644
  STEP: Creating a custom resource while v1 is storage version @ 07/30/24 08:48:09.665
  E0730 08:48:09.844142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:10.845036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 07/30/24 08:48:11.694
  STEP: Patching the custom resource while v2 is storage version @ 07/30/24 08:48:11.708
  E0730 08:48:11.844905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:48:12.317260 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4265" for this suite. @ 07/30/24 08:48:12.323
  STEP: Destroying namespace "webhook-markers-9869" for this suite. @ 07/30/24 08:48:12.338
• [6.469 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 07/30/24 08:48:12.351
  I0730 08:48:12.351128 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename replicaset @ 07/30/24 08:48:12.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:48:12.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:48:12.368
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 07/30/24 08:48:12.37
  E0730 08:48:12.844997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:13.845284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 07/30/24 08:48:14.393
  STEP: Then the orphan pod is adopted @ 07/30/24 08:48:14.404
  E0730 08:48:14.845864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 07/30/24 08:48:15.417
  I0730 08:48:15.422507 19 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 07/30/24 08:48:15.441
  E0730 08:48:15.846613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:48:16.456192 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3402" for this suite. @ 07/30/24 08:48:16.46
• [4.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 07/30/24 08:48:16.476
  I0730 08:48:16.476895 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename svcaccounts @ 07/30/24 08:48:16.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:48:16.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:48:16.501
  I0730 08:48:16.513476 19 service_accounts.go:618] created pod
  E0730 08:48:16.846838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:17.847358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:18.848048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:19.848510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:48:20.525
  E0730 08:48:20.849468      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:21.849455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:22.849801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:23.850211      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:24.850573      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:25.850717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:26.851393      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:27.852115      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:28.853064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:29.853121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:30.854194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:31.854410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:32.854572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:33.854877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:34.855225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:35.856494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:36.856887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:37.857224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:38.857237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:39.857515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:40.857984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:41.858171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:42.858103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:43.858330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:44.858887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:45.858996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:46.859205      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:47.859782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:48.860448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:49.860792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:48:50.526373 19 service_accounts.go:624] polling logs
  I0730 08:48:50.534481 19 service_accounts.go:634] Pod logs: 
  I0730 08:48:16.990557       1 log.go:245] OK: Got token
  I0730 08:48:16.990884       1 log.go:245] validating with in-cluster discovery
  I0730 08:48:16.991017       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0730 08:48:16.991106       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-2095:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00043e328), NotBefore:(*jwt.NumericDate)(0xc00043e410), IssuedAt:(*jwt.NumericDate)(0xc00043e338), ID:"ee67a94f-5961-4b18-8014-f44eef1d33c9"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-2095", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"ac9b0761-023a-4780-b048-3fc83b14ffdc"}}}
  I0730 08:48:16.997973       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0730 08:48:17.001334       1 log.go:245] OK: Validated signature on JWT
  I0730 08:48:17.001388       1 log.go:245] OK: Got valid claims from token!
  I0730 08:48:17.001408       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-2095:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00043ffd8), NotBefore:(*jwt.NumericDate)(0xc0001a4000), IssuedAt:(*jwt.NumericDate)(0xc00043ffe0), ID:"ee67a94f-5961-4b18-8014-f44eef1d33c9"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-2095", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"ac9b0761-023a-4780-b048-3fc83b14ffdc"}}}

  I0730 08:48:50.534539 19 service_accounts.go:638] completed pod
  I0730 08:48:50.546235 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2095" for this suite. @ 07/30/24 08:48:50.55
• [34.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1048
  STEP: Creating a kubernetes client @ 07/30/24 08:48:50.559
  I0730 08:48:50.559626 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename kubectl @ 07/30/24 08:48:50.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:48:50.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:48:50.579
  STEP: create deployment with httpd image @ 07/30/24 08:48:50.58
  I0730 08:48:50.581067 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-5184 create -f -'
  I0730 08:48:50.632969 19 builder.go:146] stderr: ""
  I0730 08:48:50.633002 19 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 07/30/24 08:48:50.633
  I0730 08:48:50.633046 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-5184 diff -f -'
  E0730 08:48:50.860943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:51.861146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:52.861369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:53.861486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:54.861485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:48:54.904946 19 builder.go:135] rc: 1
  I0730 08:48:54.905029 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-5184 delete -f -'
  I0730 08:48:54.941450 19 builder.go:146] stderr: ""
  I0730 08:48:54.941485 19 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0730 08:48:54.941670 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5184" for this suite. @ 07/30/24 08:48:54.943
• [4.388 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 07/30/24 08:48:54.948
  I0730 08:48:54.948170 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename container-probe @ 07/30/24 08:48:54.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:48:54.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:48:54.964
  STEP: Creating pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862 @ 07/30/24 08:48:54.965
  E0730 08:48:55.861815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:56.862600      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/30/24 08:48:56.98
  I0730 08:48:56.984367 19 container_probe.go:1749] Initial restart count of pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc is 0
  I0730 08:48:56.988395 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:48:57.863630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:48:58.864200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:48:58.995125 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:48:59.864701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:49:00.865273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:49:01.002767 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:49:01.865421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:49:02.865653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:49:03.009893 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:49:03.866191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:49:04.866628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:49:05.017734 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:49:05.867303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:49:06.867553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:49:07.025287 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:49:07.867849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:49:08.868891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:49:09.034342 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:49:09.869166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:49:10.870006      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:49:11.040637 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:49:11.870119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:49:12.870324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:49:13.048213 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:49:13.870873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:49:14.870832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:49:15.056971 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:49:15.872087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:49:16.872624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:49:17.064916 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:49:17.873079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:49:18.873584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:49:19.072599 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:49:19.874311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:49:20.875453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:49:21.080557 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:49:21.875464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:49:22.875918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:49:23.087005 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:49:23.876105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:49:24.876617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:49:25.090275 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:49:25.877087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:49:26.877436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:49:27.099381 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:49:27.877658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:49:28.877838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:49:29.108097 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:49:29.878027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:49:30.878171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:49:31.115684 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:49:31.878504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:49:32.878658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:49:33.123217 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:49:33.878753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:49:34.878895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:49:35.132979 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:49:35.879228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:49:36.879550      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:49:37.140425 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:49:37.879904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:49:38.880109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:49:39.147916 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:49:39.880692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:49:40.881176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:49:41.155641 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:49:41.881462      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:49:42.881665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:49:43.163460 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:49:43.881945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:49:44.882172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:49:45.172006 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:49:45.883229      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:49:46.883885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:49:47.179957 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:49:47.885107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:49:48.885327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:49:49.187034 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:49:49.885817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:49:50.886226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:49:51.195815 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:49:51.886721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:49:52.887444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:49:53.203141 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:49:53.887988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:49:54.888883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:49:55.211032 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:49:55.889868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:49:56.890682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:49:57.219083 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:49:57.890864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:49:58.891518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:49:59.224162 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:49:59.891964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:50:00.892732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:50:01.232275 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:50:01.892932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:50:02.893603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:50:03.239311 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:50:03.893522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:50:04.893874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:50:05.243057 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:50:05.893972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:50:06.894055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:50:07.249970 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:50:07.894416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:50:08.895413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:50:09.255527 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:50:09.896369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:50:10.897042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:50:11.265364 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:50:11.897445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:50:12.898212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:50:13.272292 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:50:13.899153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:50:14.900056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:50:15.281147 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:50:15.901197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:50:16.901911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:50:17.290247 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:50:17.902021      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:50:18.902484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:50:19.293882 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:50:19.903037      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:50:20.903142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:50:21.300976 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:50:21.903737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:50:22.904015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:50:23.309341 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:50:23.904881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:50:24.905323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:50:25.317505 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:50:25.906403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:50:26.907142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:50:27.323792 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:50:27.907660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:50:28.907930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:50:29.331527 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:50:29.908139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:50:30.909234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:50:31.339473 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:50:31.909474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:50:32.910226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:50:33.346194 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:50:33.910388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:50:34.911031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:50:35.352657 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:50:35.912007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:50:36.912644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:50:37.358792 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:50:37.912738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:50:38.913193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:50:39.366455 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:50:39.913561      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:50:40.913844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:50:41.376289 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:50:41.915011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:50:42.915180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:50:43.383513 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:50:43.916336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:50:44.916639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:50:45.390931 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:50:45.916817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:50:46.916860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:50:47.398399 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:50:47.917171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:50:48.917651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:50:49.402265 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:50:49.918032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:50:50.918489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:50:51.409016 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:50:51.918676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:50:52.919189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:50:53.417418 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:50:53.920411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:50:54.920877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:50:55.423755 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:50:55.921656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:50:56.921835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:50:57.431859 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:50:57.922475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:50:58.922973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:50:59.441180 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:50:59.923199      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:51:00.924027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:51:01.448146 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:51:01.924355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:51:02.924612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:51:03.453598 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:51:03.925105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:51:04.925594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:51:05.461734 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:51:05.926710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:51:06.927626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:51:07.469293 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:51:07.927784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:51:08.927962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:51:09.477486 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:51:09.928081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:51:10.929071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:51:11.485933 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:51:11.929335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:51:12.929689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:51:13.491144 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:51:13.931016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:51:14.931286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:51:15.494405 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:51:15.931435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:51:16.932000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:51:17.499891 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:51:17.932532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:51:18.933002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:51:19.507340 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:51:19.934060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:51:20.935004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:51:21.515462 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:51:21.935719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:51:22.935973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:51:23.522976 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:51:23.936745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:51:24.937270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:51:25.532168 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:51:25.938318      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:51:26.938509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:51:27.540568 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:51:27.939223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:51:28.940035      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:51:29.546951 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:51:29.940084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:51:30.940663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:51:31.555786 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:51:31.941232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:51:32.942026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:51:33.563917 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:51:33.942567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:51:34.943434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:51:35.571513 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:51:35.944132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:51:36.944496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:51:37.576574 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:51:37.945102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:51:38.945382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:51:39.585555 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:51:39.945986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:51:40.946153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:51:41.592373 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:51:41.946784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:51:42.947170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:51:43.601161 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:51:43.947679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:51:44.948037      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:51:45.612658 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:51:45.948274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:51:46.948539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:51:47.620423 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:51:47.948792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:51:48.949388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:51:49.628747 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:51:49.950284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:51:50.950553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:51:51.636250 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:51:51.950869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:51:52.951734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:51:53.643499 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:51:53.952038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:51:54.952358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:51:55.650871 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:51:55.952750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:51:56.952970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:51:57.658641 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:51:57.953103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:51:58.953326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:51:59.666594 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:51:59.954196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:52:00.955169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:52:01.673711 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:52:01.955281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:52:02.956354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:52:03.680696 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:52:03.957457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:52:04.957925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:52:05.686938 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:52:05.958146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:52:06.959035      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:52:07.693144 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:52:07.959611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:52:08.959757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:52:09.700576 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:52:09.960232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:52:10.961069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:52:11.708782 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:52:11.961291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:52:12.961926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:52:13.716587 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:52:13.962089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:52:14.962341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:52:15.726396 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:52:15.962985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:52:16.963158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:52:17.734968 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:52:17.963381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:52:18.964374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:52:19.742676 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:52:19.965417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:52:20.966058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:52:21.751616 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:52:21.966980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:52:22.967202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:52:23.760114 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:52:23.967462      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:52:24.967786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:52:25.769391 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:52:25.968992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:52:26.969679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:52:27.774341 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:52:27.969749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:52:28.970659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:52:29.782101 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:52:29.971976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:52:30.972755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:52:31.790521 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:52:31.973449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:52:32.973780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:52:33.796478 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:52:33.973904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:52:34.974363      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:52:35.804466 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:52:35.975226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:52:36.975367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:52:37.810828 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:52:37.976283      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:52:38.976503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:52:39.819510 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:52:39.976600      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:52:40.977363      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:52:41.825114 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:52:41.978514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:52:42.979114      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:52:43.832613 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:52:43.980113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:52:44.981017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:52:45.840210 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:52:45.981797      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:52:46.982189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:52:47.847468 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:52:47.982565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:52:48.982979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:52:49.854834 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:52:49.983296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:52:50.983321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:52:51.862132 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:52:51.983457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:52:52.984587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:52:53.868534 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:52:53.984806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:52:54.985031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:52:55.877054 19 container_probe.go:1759] Get pod test-grpc-6c8b4a4a-4961-446b-bc8e-4070f6b511bc in namespace container-probe-862
  E0730 08:52:55.985265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:52:56.986205      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 07/30/24 08:52:57.877
  I0730 08:52:57.922894 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-862" for this suite. @ 07/30/24 08:52:57.935
• [242.996 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 07/30/24 08:52:57.944
  I0730 08:52:57.944269 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename crd-webhook @ 07/30/24 08:52:57.945
  E0730 08:52:57.987174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:52:57.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:52:57.999
  STEP: Setting up server cert @ 07/30/24 08:52:58
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 07/30/24 08:52:58.123
  STEP: Deploying the custom resource conversion webhook pod @ 07/30/24 08:52:58.134
  STEP: Wait for the deployment to be ready @ 07/30/24 08:52:58.142
  I0730 08:52:58.146801 19 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0730 08:52:58.987434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:52:59.988182      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/30/24 08:53:00.169
  STEP: Verifying the service has paired with the endpoint @ 07/30/24 08:53:00.193
  E0730 08:53:00.988267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:53:01.194812 19 util.go:427] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0730 08:53:01.206258 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  E0730 08:53:01.989111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:53:02.989161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 07/30/24 08:53:03.754
  STEP: v2 custom resource should be converted @ 07/30/24 08:53:03.76
  E0730 08:53:03.989856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:53:04.322643 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-7950" for this suite. @ 07/30/24 08:53:04.324
• [6.391 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 07/30/24 08:53:04.336
  I0730 08:53:04.336166 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename projected @ 07/30/24 08:53:04.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:53:04.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:53:04.356
  STEP: Creating a pod to test downward API volume plugin @ 07/30/24 08:53:04.357
  E0730 08:53:04.990030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:53:05.990238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:53:06.990618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:53:07.991484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:53:08.379
  I0730 08:53:08.383304 19 output.go:196] Trying to get logs from node jammy pod downwardapi-volume-dd07f950-3d5a-4779-8f60-03f664dc6335 container client-container: <nil>
  STEP: delete the pod @ 07/30/24 08:53:08.391
  I0730 08:53:08.407621 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4758" for this suite. @ 07/30/24 08:53:08.409
• [4.078 seconds]
------------------------------
SSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 07/30/24 08:53:08.415
  I0730 08:53:08.415170 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename init-container @ 07/30/24 08:53:08.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:53:08.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:53:08.43
  STEP: creating the pod @ 07/30/24 08:53:08.432
  I0730 08:53:08.432555 19 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E0730 08:53:08.991619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:53:09.992416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:53:10.993485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:53:11.689590 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9064" for this suite. @ 07/30/24 08:53:11.693
• [3.284 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 07/30/24 08:53:11.699
  I0730 08:53:11.699629 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename emptydir @ 07/30/24 08:53:11.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:53:11.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:53:11.714
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 07/30/24 08:53:11.715
  E0730 08:53:11.993867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:53:12.995036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:53:13.996314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:53:14.996430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:53:15.734
  I0730 08:53:15.739495 19 output.go:196] Trying to get logs from node jammy pod pod-f6ee940e-723b-41cf-8259-1dcbc42f1382 container test-container: <nil>
  STEP: delete the pod @ 07/30/24 08:53:15.746
  I0730 08:53:15.763713 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2605" for this suite. @ 07/30/24 08:53:15.766
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 07/30/24 08:53:15.772
  I0730 08:53:15.772920 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename endpointslicemirroring @ 07/30/24 08:53:15.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:53:15.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:53:15.789
  STEP: mirroring a new custom Endpoint @ 07/30/24 08:53:15.798
  I0730 08:53:15.808031 19 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  E0730 08:53:15.996359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:53:16.996984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 07/30/24 08:53:17.815
  I0730 08:53:17.830212 19 endpointslicemirroring.go:171] Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E0730 08:53:17.997807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:53:18.998267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 07/30/24 08:53:19.838
  I0730 08:53:19.857936 19 endpointslicemirroring.go:194] Waiting for 0 EndpointSlices to exist, got 1
  E0730 08:53:19.998740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:53:20.999078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:53:21.865814 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-2359" for this suite. @ 07/30/24 08:53:21.87
• [6.107 seconds]
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:779
  STEP: Creating a kubernetes client @ 07/30/24 08:53:21.88
  I0730 08:53:21.880878 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename services @ 07/30/24 08:53:21.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:53:21.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:53:21.899
  I0730 08:53:21.902866 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4273" for this suite. @ 07/30/24 08:53:21.904
• [0.030 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 07/30/24 08:53:21.91
  I0730 08:53:21.910154 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename var-expansion @ 07/30/24 08:53:21.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:53:21.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:53:21.923
  STEP: Creating a pod to test env composition @ 07/30/24 08:53:21.925
  E0730 08:53:21.999388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:53:22.999762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:53:23.94
  I0730 08:53:23.945268 19 output.go:196] Trying to get logs from node jammy pod var-expansion-088bffcf-b5aa-4c3a-85d2-60be8cc93edc container dapi-container: <nil>
  STEP: delete the pod @ 07/30/24 08:53:23.952
  I0730 08:53:23.969919 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8810" for this suite. @ 07/30/24 08:53:23.972
• [2.070 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 07/30/24 08:53:23.98
  I0730 08:53:23.980594 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename events @ 07/30/24 08:53:23.981
  E0730 08:53:24.000285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:53:24.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:53:24.009
  STEP: Create set of events @ 07/30/24 08:53:24.011
  I0730 08:53:24.016987 19 core_events.go:198] created test-event-1
  I0730 08:53:24.020542 19 core_events.go:198] created test-event-2
  I0730 08:53:24.023708 19 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 07/30/24 08:53:24.023
  STEP: delete collection of events @ 07/30/24 08:53:24.024
  I0730 08:53:24.024932 19 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 07/30/24 08:53:24.037
  I0730 08:53:24.037993 19 core_events.go:230] requesting list of events to confirm quantity
  I0730 08:53:24.039712 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-160" for this suite. @ 07/30/24 08:53:24.043
• [0.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 07/30/24 08:53:24.048
  I0730 08:53:24.048480 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename webhook @ 07/30/24 08:53:24.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:53:24.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:53:24.062
  STEP: Setting up server cert @ 07/30/24 08:53:24.077
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/30/24 08:53:24.379
  STEP: Deploying the webhook pod @ 07/30/24 08:53:24.386
  STEP: Wait for the deployment to be ready @ 07/30/24 08:53:24.395
  I0730 08:53:24.401093 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0730 08:53:25.001086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:53:26.001260      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/30/24 08:53:26.423
  STEP: Verifying the service has paired with the endpoint @ 07/30/24 08:53:26.444
  E0730 08:53:27.001936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:53:27.445320 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 07/30/24 08:53:27.451
  STEP: Creating a custom resource definition that should be denied by the webhook @ 07/30/24 08:53:27.461
  I0730 08:53:27.461798 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  I0730 08:53:27.503872 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-297" for this suite. @ 07/30/24 08:53:27.506
  STEP: Destroying namespace "webhook-markers-8730" for this suite. @ 07/30/24 08:53:27.513
• [3.469 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 07/30/24 08:53:27.518
  I0730 08:53:27.518660 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename apf @ 07/30/24 08:53:27.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:53:27.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:53:27.532
  STEP: getting /apis @ 07/30/24 08:53:27.533
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 07/30/24 08:53:27.534
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 07/30/24 08:53:27.535
  STEP: creating @ 07/30/24 08:53:27.535
  STEP: getting @ 07/30/24 08:53:27.545
  STEP: listing @ 07/30/24 08:53:27.546
  STEP: watching @ 07/30/24 08:53:27.548
  I0730 08:53:27.548145 19 flowcontrol.go:620] starting watch
  STEP: patching @ 07/30/24 08:53:27.548
  STEP: updating @ 07/30/24 08:53:27.559
  I0730 08:53:27.563320 19 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 07/30/24 08:53:27.563
  STEP: patching /status @ 07/30/24 08:53:27.564
  STEP: updating /status @ 07/30/24 08:53:27.567
  STEP: deleting @ 07/30/24 08:53:27.572
  STEP: deleting a collection @ 07/30/24 08:53:27.578
  I0730 08:53:27.588142 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-8746" for this suite. @ 07/30/24 08:53:27.589
• [0.076 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 07/30/24 08:53:27.594
  I0730 08:53:27.594598 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename endpointslice @ 07/30/24 08:53:27.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:53:27.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:53:27.612
  STEP: getting /apis @ 07/30/24 08:53:27.613
  STEP: getting /apis/discovery.k8s.io @ 07/30/24 08:53:27.614
  STEP: getting /apis/discovery.k8s.iov1 @ 07/30/24 08:53:27.615
  STEP: creating @ 07/30/24 08:53:27.615
  STEP: getting @ 07/30/24 08:53:27.626
  STEP: listing @ 07/30/24 08:53:27.627
  STEP: watching @ 07/30/24 08:53:27.628
  I0730 08:53:27.628877 19 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 07/30/24 08:53:27.629
  STEP: cluster-wide watching @ 07/30/24 08:53:27.63
  I0730 08:53:27.630520 19 endpointslice.go:459] starting watch
  STEP: patching @ 07/30/24 08:53:27.63
  STEP: updating @ 07/30/24 08:53:27.634
  I0730 08:53:27.639688 19 endpointslice.go:482] waiting for watch events with expected annotations
  I0730 08:53:27.639852 19 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 07/30/24 08:53:27.639
  STEP: deleting a collection @ 07/30/24 08:53:27.647
  I0730 08:53:27.657334 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4535" for this suite. @ 07/30/24 08:53:27.658
• [0.068 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 07/30/24 08:53:27.663
  I0730 08:53:27.663695 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename var-expansion @ 07/30/24 08:53:27.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:53:27.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:53:27.675
  STEP: Creating a pod to test substitution in container's command @ 07/30/24 08:53:27.676
  E0730 08:53:28.002958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:53:29.002983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:53:30.004456      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:53:31.005075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:53:31.694
  I0730 08:53:31.699688 19 output.go:196] Trying to get logs from node jammy pod var-expansion-7e552c4c-5ed7-449f-af0e-352f75c22913 container dapi-container: <nil>
  STEP: delete the pod @ 07/30/24 08:53:31.708
  I0730 08:53:31.733466 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6488" for this suite. @ 07/30/24 08:53:31.738
• [4.083 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 07/30/24 08:53:31.747
  I0730 08:53:31.747622 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename daemonsets @ 07/30/24 08:53:31.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:53:31.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:53:31.765
  STEP: Creating simple DaemonSet "daemon-set" @ 07/30/24 08:53:31.776
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/30/24 08:53:31.781
  I0730 08:53:31.785584 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0730 08:53:31.785611 19 fixtures.go:130] Node jammy is running 0 daemon pod, expected 1
  E0730 08:53:32.005194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:53:32.784498 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0730 08:53:32.784524 19 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 07/30/24 08:53:32.785
  I0730 08:53:32.787216 19 daemon_set.go:912] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 07/30/24 08:53:32.787
  I0730 08:53:32.792317 19 daemon_set.go:932] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 07/30/24 08:53:32.792
  I0730 08:53:32.793358 19 daemon_set.go:957] Observed &DaemonSet event: ADDED
  I0730 08:53:32.793465 19 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0730 08:53:32.793514 19 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0730 08:53:32.793685 19 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0730 08:53:32.793711 19 daemon_set.go:950] Found daemon set daemon-set in namespace daemonsets-5727 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0730 08:53:32.793719 19 daemon_set.go:961] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 07/30/24 08:53:32.793
  STEP: watching for the daemon set status to be patched @ 07/30/24 08:53:32.798
  I0730 08:53:32.799179 19 daemon_set.go:1001] Observed &DaemonSet event: ADDED
  I0730 08:53:32.799364 19 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0730 08:53:32.799465 19 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0730 08:53:32.799581 19 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0730 08:53:32.799599 19 daemon_set.go:997] Observed daemon set daemon-set in namespace daemonsets-5727 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0730 08:53:32.799722 19 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0730 08:53:32.799743 19 daemon_set.go:994] Found daemon set daemon-set in namespace daemonsets-5727 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0730 08:53:32.799785 19 daemon_set.go:1005] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 07/30/24 08:53:32.801
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5727, will wait for the garbage collector to delete the pods @ 07/30/24 08:53:32.801
  I0730 08:53:32.865797 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 12.607465ms
  I0730 08:53:32.966562 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.753446ms
  E0730 08:53:33.006024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:53:34.006346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:53:35.006889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:53:35.873762 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0730 08:53:35.873832 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0730 08:53:35.877750 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"36778"},"items":null}

  I0730 08:53:35.880867 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"36778"},"items":null}

  I0730 08:53:35.887701 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5727" for this suite. @ 07/30/24 08:53:35.889
• [4.148 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 07/30/24 08:53:35.896
  I0730 08:53:35.896090 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename resourcequota @ 07/30/24 08:53:35.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:53:35.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:53:35.915
  STEP: Creating a ResourceQuota with best effort scope @ 07/30/24 08:53:35.917
  STEP: Ensuring ResourceQuota status is calculated @ 07/30/24 08:53:35.92
  E0730 08:53:36.007180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:53:37.007549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 07/30/24 08:53:37.923
  STEP: Ensuring ResourceQuota status is calculated @ 07/30/24 08:53:37.929
  E0730 08:53:38.007943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:53:39.008150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 07/30/24 08:53:39.934
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 07/30/24 08:53:39.957
  E0730 08:53:40.009061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:53:41.009842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 07/30/24 08:53:41.964
  E0730 08:53:42.010103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:53:43.010580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/30/24 08:53:43.968
  STEP: Ensuring resource quota status released the pod usage @ 07/30/24 08:53:43.979
  E0730 08:53:44.010716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:53:45.011157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 07/30/24 08:53:45.987
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 07/30/24 08:53:46.009
  E0730 08:53:46.011378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:53:47.012015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:53:48.013072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 07/30/24 08:53:48.017
  E0730 08:53:49.013811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:53:50.013951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/30/24 08:53:50.025
  STEP: Ensuring resource quota status released the pod usage @ 07/30/24 08:53:50.059
  E0730 08:53:51.014103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:53:52.014991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:53:52.067616 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6490" for this suite. @ 07/30/24 08:53:52.072
• [16.190 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 07/30/24 08:53:52.087
  I0730 08:53:52.087749 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename namespaces @ 07/30/24 08:53:52.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:53:52.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:53:52.12
  STEP: Updating Namespace "namespaces-3846" @ 07/30/24 08:53:52.122
  I0730 08:53:52.129871 19 namespace.go:389] Namespace "namespaces-3846" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"0de2a537-bd84-4e5f-9cf4-2fe6d6c3e802", "kubernetes.io/metadata.name":"namespaces-3846", "namespaces-3846":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0730 08:53:52.130120 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3846" for this suite. @ 07/30/24 08:53:52.132
• [0.048 seconds]
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 07/30/24 08:53:52.135
  I0730 08:53:52.135987 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename projected @ 07/30/24 08:53:52.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:53:52.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:53:52.149
  STEP: Creating secret with name projected-secret-test-4417fec1-2ff3-4291-b6e5-58a628d935b8 @ 07/30/24 08:53:52.15
  STEP: Creating a pod to test consume secrets @ 07/30/24 08:53:52.154
  E0730 08:53:53.015170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:53:54.016015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:53:54.163
  I0730 08:53:54.165407 19 output.go:196] Trying to get logs from node jammy pod pod-projected-secrets-b5c072eb-a205-4879-bb56-c6fc1e13b12f container secret-volume-test: <nil>
  STEP: delete the pod @ 07/30/24 08:53:54.168
  I0730 08:53:54.181910 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1314" for this suite. @ 07/30/24 08:53:54.184
• [2.052 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 07/30/24 08:53:54.188
  I0730 08:53:54.188439 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename downward-api @ 07/30/24 08:53:54.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:53:54.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:53:54.204
  STEP: Creating a pod to test downward api env vars @ 07/30/24 08:53:54.206
  E0730 08:53:55.016101      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:53:56.016012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:53:56.223
  I0730 08:53:56.227506 19 output.go:196] Trying to get logs from node jammy pod downward-api-fca3a1e4-7235-4d79-ab4f-1c3d6cf17232 container dapi-container: <nil>
  STEP: delete the pod @ 07/30/24 08:53:56.234
  I0730 08:53:56.252332 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8944" for this suite. @ 07/30/24 08:53:56.254
• [2.071 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 07/30/24 08:53:56.259
  I0730 08:53:56.259854 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename taint-single-pod @ 07/30/24 08:53:56.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:53:56.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:53:56.27
  I0730 08:53:56.272174 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0730 08:53:57.016427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:53:58.017509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:53:59.017807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:00.017962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:01.017940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:02.018254      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:03.018535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:04.018830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:05.019418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:06.020373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:07.020490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:08.021062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:09.021474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:10.021964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:11.022979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:12.023247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:13.024147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:14.024350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:15.024610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:16.025097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:17.025285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:18.026112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:19.027310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:20.027532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:21.027814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:22.027935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:23.028327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:24.028528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:25.028792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:26.029066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:27.029575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:28.029960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:29.030079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:30.031365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:31.032464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:32.033029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:33.033457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:34.033531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:35.034082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:36.034225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:37.035129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:38.036173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:39.036658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:40.037120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:41.037323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:42.037348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:43.037903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:44.038411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:45.038518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:46.039345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:47.039815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:48.040821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:49.041455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:50.041559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:51.041909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:52.042448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:53.042576      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:54.042871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:55.042961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:56.043268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:54:56.273117 19 util.go:400] Waiting for terminating namespaces to be deleted...
  I0730 08:54:56.280475 19 taints.go:150] Starting informer...
  STEP: Starting pod... @ 07/30/24 08:54:56.28
  I0730 08:54:56.504142 19 taints.go:300] Pod is running on jammy. Tainting Node
  STEP: Trying to apply a taint on the Node @ 07/30/24 08:54:56.504
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/30/24 08:54:56.522
  STEP: Waiting short time to make sure Pod is queued for deletion @ 07/30/24 08:54:56.53
  I0730 08:54:56.530201 19 taints.go:319] Pod wasn't evicted. Proceeding
  I0730 08:54:56.530218 19 taints.go:326] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/30/24 08:54:56.554
  STEP: Waiting some time to make sure that toleration time passed. @ 07/30/24 08:54:56.557
  E0730 08:54:57.043162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:58.043832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:54:59.044793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:00.044967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:01.046071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:02.046449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:03.046974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:04.047163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:05.047291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:06.048414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:07.049066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:08.049261      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:09.049607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:10.049807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:11.050507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:12.051200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:13.051968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:14.052319      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:15.052692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:16.053651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:17.054508      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:18.054961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:19.055852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:20.056625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:21.057721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:22.058067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:23.058303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:24.058755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:25.059376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:26.059540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:27.060034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:28.060701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:29.061197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:30.061454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:31.074217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:32.073689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:33.074047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:34.074559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:35.075442      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:36.075610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:37.076105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:38.076305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:39.076579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:40.077027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:41.076954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:42.077414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:43.077583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:44.077853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:45.078400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:46.078752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:47.078993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:48.079748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:49.079764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:50.080518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:51.080533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:52.080883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:53.081122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:54.081534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:55.082193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:56.082239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:57.083009      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:58.083141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:55:59.083677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:00.084406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:01.084836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:02.085164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:03.085415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:04.086076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:05.086349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:06.086692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:07.087221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:08.087443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:09.088319      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:10.089492      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:11.090392      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:56:11.558152 19 taints.go:335] Pod wasn't evicted. Test successful
  I0730 08:56:11.559079 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-2127" for this suite. @ 07/30/24 08:56:11.566
• [135.319 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 07/30/24 08:56:11.579
  I0730 08:56:11.579492 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename configmap @ 07/30/24 08:56:11.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:56:11.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:56:11.604
  I0730 08:56:11.629687 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6097" for this suite. @ 07/30/24 08:56:11.631
• [0.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 07/30/24 08:56:11.637
  I0730 08:56:11.637864 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 07/30/24 08:56:11.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:56:11.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:56:11.649
  STEP: creating a target pod @ 07/30/24 08:56:11.65
  E0730 08:56:12.090873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:13.091184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 07/30/24 08:56:13.668
  E0730 08:56:14.092062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:15.092419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 07/30/24 08:56:15.698
  I0730 08:56:15.698569 19 exec_util.go:55] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-6260 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0730 08:56:15.699386 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  I0730 08:56:15.700229 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0730 08:56:15.700383 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-6260/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0730 08:56:15.735713 19 exec_util.go:106] Exec stderr: ""
  I0730 08:56:15.740552 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-6260" for this suite. @ 07/30/24 08:56:15.742
• [4.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2240
  STEP: Creating a kubernetes client @ 07/30/24 08:56:15.748
  I0730 08:56:15.748094 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename services @ 07/30/24 08:56:15.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:56:15.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:56:15.762
  STEP: creating service in namespace services-5397 @ 07/30/24 08:56:15.763
  STEP: creating service affinity-nodeport-transition in namespace services-5397 @ 07/30/24 08:56:15.763
  STEP: creating replication controller affinity-nodeport-transition in namespace services-5397 @ 07/30/24 08:56:15.771
  I0730 08:56:15.781041      19 runners.go:198] Created replication controller with name: affinity-nodeport-transition, namespace: services-5397, replica count: 3
  E0730 08:56:16.093248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:17.094038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:18.094668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:56:18.833841      19 runners.go:198] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0730 08:56:18.847734 19 resource.go:361] Creating new exec pod
  E0730 08:56:19.095014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:20.095227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:21.096171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:56:21.864389 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-5397 exec execpod-affinityfvwcn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0730 08:56:21.916950 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I0730 08:56:21.916979 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0730 08:56:21.917137 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-5397 exec execpod-affinityfvwcn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.105 80'
  I0730 08:56:21.979460 19 builder.go:146] stderr: "+ nc -v -t -w 2 10.152.183.105 80\nConnection to 10.152.183.105 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  I0730 08:56:21.979491 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0730 08:56:21.979541 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-5397 exec execpod-affinityfvwcn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.227.69.102 30096'
  I0730 08:56:22.030288 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.227.69.102 30096\nConnection to 10.227.69.102 30096 port [tcp/*] succeeded!\n"
  I0730 08:56:22.030320 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0730 08:56:22.030367 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-5397 exec execpod-affinityfvwcn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.227.69.245 30096'
  I0730 08:56:22.081122 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.227.69.245 30096\nConnection to 10.227.69.245 30096 port [tcp/*] succeeded!\n"
  I0730 08:56:22.081152 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0730 08:56:22.086313 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-5397 exec execpod-affinityfvwcn -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.227.69.102:30096/ ; done'
  E0730 08:56:22.096313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:56:22.168876 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:30096/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:30096/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:30096/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:30096/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:30096/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:30096/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:30096/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:30096/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:30096/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:30096/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:30096/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:30096/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:30096/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:30096/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:30096/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:30096/\n"
  I0730 08:56:22.168906 19 builder.go:147] stdout: "\naffinity-nodeport-transition-hrjwj\naffinity-nodeport-transition-4z4hq\naffinity-nodeport-transition-4z4hq\naffinity-nodeport-transition-hrjwj\naffinity-nodeport-transition-hrpjv\naffinity-nodeport-transition-4z4hq\naffinity-nodeport-transition-4z4hq\naffinity-nodeport-transition-hrjwj\naffinity-nodeport-transition-4z4hq\naffinity-nodeport-transition-hrjwj\naffinity-nodeport-transition-4z4hq\naffinity-nodeport-transition-hrpjv\naffinity-nodeport-transition-hrpjv\naffinity-nodeport-transition-4z4hq\naffinity-nodeport-transition-hrpjv\naffinity-nodeport-transition-hrjwj"
  I0730 08:56:22.168915 19 service.go:242] Received response from host: affinity-nodeport-transition-hrjwj
  I0730 08:56:22.168920 19 service.go:242] Received response from host: affinity-nodeport-transition-4z4hq
  I0730 08:56:22.168924 19 service.go:242] Received response from host: affinity-nodeport-transition-4z4hq
  I0730 08:56:22.168926 19 service.go:242] Received response from host: affinity-nodeport-transition-hrjwj
  I0730 08:56:22.168930 19 service.go:242] Received response from host: affinity-nodeport-transition-hrpjv
  I0730 08:56:22.168933 19 service.go:242] Received response from host: affinity-nodeport-transition-4z4hq
  I0730 08:56:22.168936 19 service.go:242] Received response from host: affinity-nodeport-transition-4z4hq
  I0730 08:56:22.168939 19 service.go:242] Received response from host: affinity-nodeport-transition-hrjwj
  I0730 08:56:22.168943 19 service.go:242] Received response from host: affinity-nodeport-transition-4z4hq
  I0730 08:56:22.168946 19 service.go:242] Received response from host: affinity-nodeport-transition-hrjwj
  I0730 08:56:22.168949 19 service.go:242] Received response from host: affinity-nodeport-transition-4z4hq
  I0730 08:56:22.168952 19 service.go:242] Received response from host: affinity-nodeport-transition-hrpjv
  I0730 08:56:22.168954 19 service.go:242] Received response from host: affinity-nodeport-transition-hrpjv
  I0730 08:56:22.168957 19 service.go:242] Received response from host: affinity-nodeport-transition-4z4hq
  I0730 08:56:22.168960 19 service.go:242] Received response from host: affinity-nodeport-transition-hrpjv
  I0730 08:56:22.168963 19 service.go:242] Received response from host: affinity-nodeport-transition-hrjwj
  I0730 08:56:22.175752 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=services-5397 exec execpod-affinityfvwcn -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.227.69.102:30096/ ; done'
  I0730 08:56:22.275053 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:30096/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:30096/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:30096/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:30096/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:30096/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:30096/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:30096/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:30096/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:30096/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:30096/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:30096/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:30096/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:30096/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:30096/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:30096/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.227.69.102:30096/\n"
  I0730 08:56:22.275093 19 builder.go:147] stdout: "\naffinity-nodeport-transition-hrpjv\naffinity-nodeport-transition-hrpjv\naffinity-nodeport-transition-hrpjv\naffinity-nodeport-transition-hrpjv\naffinity-nodeport-transition-hrpjv\naffinity-nodeport-transition-hrpjv\naffinity-nodeport-transition-hrpjv\naffinity-nodeport-transition-hrpjv\naffinity-nodeport-transition-hrpjv\naffinity-nodeport-transition-hrpjv\naffinity-nodeport-transition-hrpjv\naffinity-nodeport-transition-hrpjv\naffinity-nodeport-transition-hrpjv\naffinity-nodeport-transition-hrpjv\naffinity-nodeport-transition-hrpjv\naffinity-nodeport-transition-hrpjv"
  I0730 08:56:22.275105 19 service.go:242] Received response from host: affinity-nodeport-transition-hrpjv
  I0730 08:56:22.275112 19 service.go:242] Received response from host: affinity-nodeport-transition-hrpjv
  I0730 08:56:22.275118 19 service.go:242] Received response from host: affinity-nodeport-transition-hrpjv
  I0730 08:56:22.275123 19 service.go:242] Received response from host: affinity-nodeport-transition-hrpjv
  I0730 08:56:22.275254 19 service.go:242] Received response from host: affinity-nodeport-transition-hrpjv
  I0730 08:56:22.275264 19 service.go:242] Received response from host: affinity-nodeport-transition-hrpjv
  I0730 08:56:22.275270 19 service.go:242] Received response from host: affinity-nodeport-transition-hrpjv
  I0730 08:56:22.275288 19 service.go:242] Received response from host: affinity-nodeport-transition-hrpjv
  I0730 08:56:22.275296 19 service.go:242] Received response from host: affinity-nodeport-transition-hrpjv
  I0730 08:56:22.275301 19 service.go:242] Received response from host: affinity-nodeport-transition-hrpjv
  I0730 08:56:22.275348 19 service.go:242] Received response from host: affinity-nodeport-transition-hrpjv
  I0730 08:56:22.275355 19 service.go:242] Received response from host: affinity-nodeport-transition-hrpjv
  I0730 08:56:22.275371 19 service.go:242] Received response from host: affinity-nodeport-transition-hrpjv
  I0730 08:56:22.275430 19 service.go:242] Received response from host: affinity-nodeport-transition-hrpjv
  I0730 08:56:22.275465 19 service.go:242] Received response from host: affinity-nodeport-transition-hrpjv
  I0730 08:56:22.275504 19 service.go:242] Received response from host: affinity-nodeport-transition-hrpjv
  I0730 08:56:22.275615 19 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-5397, will wait for the garbage collector to delete the pods @ 07/30/24 08:56:22.285
  I0730 08:56:22.343488 19 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 5.167862ms
  I0730 08:56:22.444066 19 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 100.571687ms
  E0730 08:56:23.096811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:24.097587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:25.097895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:56:25.471435 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5397" for this suite. @ 07/30/24 08:56:25.473
• [9.729 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 07/30/24 08:56:25.478
  I0730 08:56:25.478178 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename emptydir @ 07/30/24 08:56:25.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:56:25.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:56:25.491
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 07/30/24 08:56:25.492
  E0730 08:56:26.098081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:27.098742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:56:27.504
  I0730 08:56:27.506990 19 output.go:196] Trying to get logs from node jammy pod pod-e5bb70bf-8eb3-4204-9dd3-67648f1adff0 container test-container: <nil>
  STEP: delete the pod @ 07/30/24 08:56:27.511
  I0730 08:56:27.523727 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3640" for this suite. @ 07/30/24 08:56:27.525
• [2.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 07/30/24 08:56:27.531
  I0730 08:56:27.531898 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename field-validation @ 07/30/24 08:56:27.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:56:27.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:56:27.542
  I0730 08:56:27.544105 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  W0730 08:56:27.544522      19 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0039fb3b0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0730 08:56:28.098656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:29.098909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0730 08:56:30.088306      19 warnings.go:70] unknown field "alpha"
  W0730 08:56:30.088341      19 warnings.go:70] unknown field "beta"
  W0730 08:56:30.088347      19 warnings.go:70] unknown field "delta"
  W0730 08:56:30.088352      19 warnings.go:70] unknown field "epsilon"
  W0730 08:56:30.088358      19 warnings.go:70] unknown field "gamma"
  E0730 08:56:30.099685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:56:30.630484 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5650" for this suite. @ 07/30/24 08:56:30.632
• [3.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 07/30/24 08:56:30.638
  I0730 08:56:30.638864 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename events @ 07/30/24 08:56:30.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:56:30.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:56:30.661
  STEP: creating a test event @ 07/30/24 08:56:30.663
  STEP: listing events in all namespaces @ 07/30/24 08:56:30.667
  STEP: listing events in test namespace @ 07/30/24 08:56:30.669
  STEP: listing events with field selection filtering on source @ 07/30/24 08:56:30.67
  STEP: listing events with field selection filtering on reportingController @ 07/30/24 08:56:30.671
  STEP: getting the test event @ 07/30/24 08:56:30.672
  STEP: patching the test event @ 07/30/24 08:56:30.673
  STEP: getting the test event @ 07/30/24 08:56:30.678
  STEP: updating the test event @ 07/30/24 08:56:30.679
  STEP: getting the test event @ 07/30/24 08:56:30.682
  STEP: deleting the test event @ 07/30/24 08:56:30.683
  STEP: listing events in all namespaces @ 07/30/24 08:56:30.688
  STEP: listing events in test namespace @ 07/30/24 08:56:30.689
  I0730 08:56:30.692837 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9994" for this suite. @ 07/30/24 08:56:30.694
• [0.061 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 07/30/24 08:56:30.7
  I0730 08:56:30.700328 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename var-expansion @ 07/30/24 08:56:30.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:56:30.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:56:30.714
  E0730 08:56:31.099651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:32.100207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:56:32.726215 19 delete.go:62] Deleting pod "var-expansion-e2fe896a-9e52-4458-a980-930a79368d27" in namespace "var-expansion-9446"
  I0730 08:56:32.736511 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-e2fe896a-9e52-4458-a980-930a79368d27" to be fully deleted
  E0730 08:56:33.101338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:34.101890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:56:34.749713 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9446" for this suite. @ 07/30/24 08:56:34.754
• [4.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 07/30/24 08:56:34.768
  I0730 08:56:34.768486 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename secrets @ 07/30/24 08:56:34.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:56:34.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:56:34.8
  STEP: Creating secret with name secret-test-11558702-25a7-4fce-aeeb-7dde1a569701 @ 07/30/24 08:56:34.822
  STEP: Creating a pod to test consume secrets @ 07/30/24 08:56:34.827
  E0730 08:56:35.102542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:36.102899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:56:36.839
  I0730 08:56:36.841799 19 output.go:196] Trying to get logs from node jammy pod pod-secrets-0de96850-886f-4113-8c97-cf684091f05f container secret-volume-test: <nil>
  STEP: delete the pod @ 07/30/24 08:56:36.844
  I0730 08:56:36.861948 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1614" for this suite. @ 07/30/24 08:56:36.863
  STEP: Destroying namespace "secret-namespace-8986" for this suite. @ 07/30/24 08:56:36.868
• [2.108 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 07/30/24 08:56:36.876
  I0730 08:56:36.876168 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename sched-preemption @ 07/30/24 08:56:36.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:56:36.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:56:36.89
  I0730 08:56:36.901678 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0730 08:56:37.103768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:38.103666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:39.104044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:40.104913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:41.105730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:42.106200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:43.107705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:44.108703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:45.109494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:46.110670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:47.111490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:48.111984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:49.112791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:50.113767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:51.113832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:52.113885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:53.114318      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:54.114885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:55.115357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:56.116407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:57.117124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:58.117398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:56:59.118583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:00.118970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:01.119285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:02.120132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:03.120341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:04.120860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:05.120884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:06.121692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:07.122580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:08.122968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:09.123506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:10.123839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:11.124873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:12.125155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:13.125957      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:14.126795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:15.126820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:16.127078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:17.128016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:18.128275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:19.128733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:20.129087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:21.129260      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:22.129900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:23.130859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:24.131933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:25.132755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:26.132830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:27.133668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:28.133942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:29.134146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:30.134618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:31.135009      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:32.135532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:33.136172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:34.136526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:35.137522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:36.138240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:57:36.911223 19 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 07/30/24 08:57:36.916
  I0730 08:57:36.957083 19 preemption.go:269] Created pod: pod0-0-sched-preemption-low-priority
  I0730 08:57:36.963834 19 preemption.go:269] Created pod: pod0-1-sched-preemption-medium-priority
  I0730 08:57:36.986306 19 preemption.go:269] Created pod: pod1-0-sched-preemption-medium-priority
  I0730 08:57:36.997472 19 preemption.go:269] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 07/30/24 08:57:36.997
  E0730 08:57:37.138878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:38.139120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 07/30/24 08:57:39.029
  E0730 08:57:39.139710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:40.140010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:41.140560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:42.140867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:43.141417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:57:43.151212 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4490" for this suite. @ 07/30/24 08:57:43.152
• [66.282 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 07/30/24 08:57:43.158
  I0730 08:57:43.158256 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename projected @ 07/30/24 08:57:43.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:57:43.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:57:43.172
  STEP: Creating the pod @ 07/30/24 08:57:43.174
  E0730 08:57:44.142053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:45.142135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:57:45.718552 19 pod_client.go:141] Successfully updated pod "annotationupdate7a3d8420-0c6e-4c0e-9201-2a0cafe6f0f1"
  E0730 08:57:46.142588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:47.142969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:57:47.737897 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1494" for this suite. @ 07/30/24 08:57:47.742
• [4.594 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 07/30/24 08:57:47.752
  I0730 08:57:47.752711 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename webhook @ 07/30/24 08:57:47.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:57:47.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:57:47.775
  STEP: Setting up server cert @ 07/30/24 08:57:47.796
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/30/24 08:57:47.968
  STEP: Deploying the webhook pod @ 07/30/24 08:57:47.974
  STEP: Wait for the deployment to be ready @ 07/30/24 08:57:47.989
  I0730 08:57:47.995172 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0730 08:57:48.143635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:49.143627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:57:50.010258 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 30, 8, 57, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 57, 47, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 8, 57, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 8, 57, 47, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0730 08:57:50.144633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:51.145678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/30/24 08:57:52.017
  STEP: Verifying the service has paired with the endpoint @ 07/30/24 08:57:52.039
  E0730 08:57:52.146167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:57:53.040504 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 07/30/24 08:57:53.05
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 07/30/24 08:57:53.078
  STEP: Creating a configMap that should not be mutated @ 07/30/24 08:57:53.083
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 07/30/24 08:57:53.092
  STEP: Creating a configMap that should be mutated @ 07/30/24 08:57:53.098
  E0730 08:57:53.146631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:57:53.151798 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2100" for this suite. @ 07/30/24 08:57:53.154
  STEP: Destroying namespace "webhook-markers-9578" for this suite. @ 07/30/24 08:57:53.177
• [5.431 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 07/30/24 08:57:53.183
  I0730 08:57:53.183505 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename webhook @ 07/30/24 08:57:53.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:57:53.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:57:53.2
  STEP: Setting up server cert @ 07/30/24 08:57:53.217
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/30/24 08:57:53.405
  STEP: Deploying the webhook pod @ 07/30/24 08:57:53.411
  STEP: Wait for the deployment to be ready @ 07/30/24 08:57:53.42
  I0730 08:57:53.427444 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0730 08:57:54.147845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:55.148525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/30/24 08:57:55.444
  STEP: Verifying the service has paired with the endpoint @ 07/30/24 08:57:55.462
  E0730 08:57:56.149338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:57:56.463987 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0730 08:57:56.474092 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7240-crds.webhook.example.com via the AdmissionRegistration API @ 07/30/24 08:57:56.996
  STEP: Creating a custom resource that should be mutated by the webhook @ 07/30/24 08:57:57.017
  E0730 08:57:57.150399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:58.150389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:57:59.150836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:57:59.612783 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8561" for this suite. @ 07/30/24 08:57:59.618
  STEP: Destroying namespace "webhook-markers-1602" for this suite. @ 07/30/24 08:57:59.632
• [6.462 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 07/30/24 08:57:59.646
  I0730 08:57:59.646379 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename webhook @ 07/30/24 08:57:59.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:57:59.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:57:59.668
  STEP: Setting up server cert @ 07/30/24 08:57:59.688
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/30/24 08:57:59.946
  STEP: Deploying the webhook pod @ 07/30/24 08:57:59.952
  STEP: Wait for the deployment to be ready @ 07/30/24 08:57:59.963
  I0730 08:57:59.969561 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0730 08:58:00.150987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:01.152024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/30/24 08:58:01.986
  STEP: Verifying the service has paired with the endpoint @ 07/30/24 08:58:02.003
  E0730 08:58:02.152933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:58:03.003830 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 07/30/24 08:58:03.014
  STEP: create a pod that should be updated by the webhook @ 07/30/24 08:58:03.034
  I0730 08:58:03.085757 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7170" for this suite. @ 07/30/24 08:58:03.089
  STEP: Destroying namespace "webhook-markers-1823" for this suite. @ 07/30/24 08:58:03.098
• [3.458 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 07/30/24 08:58:03.105
  I0730 08:58:03.105777 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename statefulset @ 07/30/24 08:58:03.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:58:03.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:58:03.121
  STEP: Creating service test in namespace statefulset-1874 @ 07/30/24 08:58:03.123
  STEP: Creating statefulset ss in namespace statefulset-1874 @ 07/30/24 08:58:03.127
  I0730 08:58:03.136925 19 wait.go:40] Found 0 stateful pods, waiting for 1
  E0730 08:58:03.153205      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:04.153669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:05.154411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:06.155307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:07.155994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:08.156036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:09.156434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:10.156619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:11.156955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:12.157326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:58:13.142793 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 07/30/24 08:58:13.152
  STEP: updating a scale subresource @ 07/30/24 08:58:13.156
  E0730 08:58:13.157481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the statefulset Spec.Replicas was modified @ 07/30/24 08:58:13.171
  STEP: Patch a scale subresource @ 07/30/24 08:58:13.177
  STEP: verifying the statefulset Spec.Replicas was modified @ 07/30/24 08:58:13.188
  I0730 08:58:13.190421 19 statefulset.go:135] Deleting all statefulset in ns statefulset-1874
  I0730 08:58:13.192452 19 rest.go:150] Scaling statefulset ss to 0
  E0730 08:58:14.157781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:15.158539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:16.158678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:17.159046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:18.159413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:19.159809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:20.160270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:21.160691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:22.161563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:23.161907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:58:23.209726 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0730 08:58:23.213955 19 rest.go:88] Deleting statefulset ss
  I0730 08:58:23.239493 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1874" for this suite. @ 07/30/24 08:58:23.242
• [20.141 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 07/30/24 08:58:23.247
  I0730 08:58:23.247300 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename downward-api @ 07/30/24 08:58:23.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:58:23.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:58:23.264
  STEP: Creating a pod to test downward API volume plugin @ 07/30/24 08:58:23.265
  E0730 08:58:24.162311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:25.162542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:26.163387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:27.163829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:58:27.286
  I0730 08:58:27.291332 19 output.go:196] Trying to get logs from node jammy pod downwardapi-volume-7eb93e6d-50d3-47ce-b125-a84b9fbf9570 container client-container: <nil>
  STEP: delete the pod @ 07/30/24 08:58:27.299
  I0730 08:58:27.326610 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5786" for this suite. @ 07/30/24 08:58:27.331
• [4.093 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:715
  STEP: Creating a kubernetes client @ 07/30/24 08:58:27.343
  I0730 08:58:27.343901 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename webhook @ 07/30/24 08:58:27.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:58:27.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:58:27.369
  STEP: Setting up server cert @ 07/30/24 08:58:27.384
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/30/24 08:58:27.563
  STEP: Deploying the webhook pod @ 07/30/24 08:58:27.568
  STEP: Wait for the deployment to be ready @ 07/30/24 08:58:27.577
  I0730 08:58:27.582125 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0730 08:58:28.164365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:29.164432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/30/24 08:58:29.599
  STEP: Verifying the service has paired with the endpoint @ 07/30/24 08:58:29.616
  E0730 08:58:30.164738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:58:30.617540 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 07/30/24 08:58:30.627
  STEP: verifying the validating webhook match conditions @ 07/30/24 08:58:30.64
  STEP: updating the validating webhook match conditions @ 07/30/24 08:58:30.644
  STEP: verifying the validating webhook match conditions @ 07/30/24 08:58:30.686
  I0730 08:58:30.763202 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6744" for this suite. @ 07/30/24 08:58:30.766
  STEP: Destroying namespace "webhook-markers-1398" for this suite. @ 07/30/24 08:58:30.781
• [3.447 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 07/30/24 08:58:30.791
  I0730 08:58:30.791083 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename container-probe @ 07/30/24 08:58:30.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:58:30.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:58:30.812
  E0730 08:58:31.165354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:32.165723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:33.165950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:34.166856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:35.167816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:36.168524      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:37.169348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:38.170195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:39.170978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:40.171841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:41.172615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:42.173486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:43.173719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:44.173952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:45.174539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:46.175270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:47.175628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:48.176794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:49.177724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:50.177923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:51.178092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:52.178828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:53.179224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:54.179484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:55.179863      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:56.180625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:57.181189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:58.181367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:58:59.181647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:00.182193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:01.182782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:02.187777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:03.187911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:04.188559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:05.189621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:06.190116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:07.190492      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:08.191064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:09.191466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:10.192380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:11.193079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:12.193880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:13.195009      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:14.195258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:15.195349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:16.196187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:17.196943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:18.197662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:19.198358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:20.198487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:21.198669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:22.199137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:23.199975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:24.200570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:25.201836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:26.202851      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:27.202827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:28.203626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:29.204159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:30.204711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:59:30.829319 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2837" for this suite. @ 07/30/24 08:59:30.834
• [60.055 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 07/30/24 08:59:30.849
  I0730 08:59:30.849188 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename projected @ 07/30/24 08:59:30.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:59:30.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:59:30.877
  STEP: Creating configMap with name projected-configmap-test-volume-d7864720-da9a-42d2-aa48-6345d665061b @ 07/30/24 08:59:30.883
  STEP: Creating a pod to test consume configMaps @ 07/30/24 08:59:30.888
  E0730 08:59:31.205071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:32.205929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:33.206957      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:34.207216      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:59:34.91
  I0730 08:59:34.912691 19 output.go:196] Trying to get logs from node jammy pod pod-projected-configmaps-5aa6de62-a938-48b1-a36f-c243bb7b2e7e container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 07/30/24 08:59:34.915
  I0730 08:59:34.927943 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9475" for this suite. @ 07/30/24 08:59:34.929
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 07/30/24 08:59:34.933
  I0730 08:59:34.933971 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename server-version @ 07/30/24 08:59:34.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:59:34.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:59:34.948
  STEP: Request ServerVersion @ 07/30/24 08:59:34.949
  STEP: Confirm major version @ 07/30/24 08:59:34.949
  I0730 08:59:34.949357 19 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 07/30/24 08:59:34.949
  I0730 08:59:34.949385 19 server_version.go:58] cleanMinorVersion: 30
  I0730 08:59:34.949407 19 server_version.go:62] Minor version: 30
  I0730 08:59:34.949468 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-139" for this suite. @ 07/30/24 08:59:34.951
• [0.021 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 07/30/24 08:59:34.955
  I0730 08:59:34.956006 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename watch @ 07/30/24 08:59:34.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:59:34.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:59:34.977
  STEP: creating a watch on configmaps @ 07/30/24 08:59:34.978
  STEP: creating a new configmap @ 07/30/24 08:59:34.978
  STEP: modifying the configmap once @ 07/30/24 08:59:34.982
  STEP: closing the watch once it receives two notifications @ 07/30/24 08:59:34.986
  I0730 08:59:34.987045 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3629  af2a3e9b-64bb-4be4-b389-cf935c246a76 38429 0 2024-07-30 08:59:34 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-07-30 08:59:34 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0730 08:59:34.987203 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3629  af2a3e9b-64bb-4be4-b389-cf935c246a76 38430 0 2024-07-30 08:59:34 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-07-30 08:59:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 07/30/24 08:59:34.987
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 07/30/24 08:59:34.991
  STEP: deleting the configmap @ 07/30/24 08:59:34.992
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 07/30/24 08:59:34.997
  I0730 08:59:34.997171 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3629  af2a3e9b-64bb-4be4-b389-cf935c246a76 38431 0 2024-07-30 08:59:34 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-07-30 08:59:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0730 08:59:34.997258 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3629  af2a3e9b-64bb-4be4-b389-cf935c246a76 38432 0 2024-07-30 08:59:34 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-07-30 08:59:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0730 08:59:34.997315 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3629" for this suite. @ 07/30/24 08:59:34.999
• [0.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 07/30/24 08:59:35.004
  I0730 08:59:35.004685 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename projected @ 07/30/24 08:59:35.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:59:35.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:59:35.021
  STEP: Creating a pod to test downward API volume plugin @ 07/30/24 08:59:35.023
  E0730 08:59:35.207875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:36.208969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:37.210024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:38.210307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:59:39.038
  I0730 08:59:39.044129 19 output.go:196] Trying to get logs from node jammy pod downwardapi-volume-f664083a-684e-4b98-b20d-8ef2ad6fb514 container client-container: <nil>
  STEP: delete the pod @ 07/30/24 08:59:39.052
  I0730 08:59:39.082182 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5964" for this suite. @ 07/30/24 08:59:39.084
• [4.085 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 07/30/24 08:59:39.089
  I0730 08:59:39.089341 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename configmap @ 07/30/24 08:59:39.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:59:39.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:59:39.103
  STEP: Creating configMap that has name configmap-test-emptyKey-b245ecc4-2d88-4202-b735-09c0442236a5 @ 07/30/24 08:59:39.104
  I0730 08:59:39.104847 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8329" for this suite. @ 07/30/24 08:59:39.106
• [0.022 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 07/30/24 08:59:39.112
  I0730 08:59:39.112217 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename downward-api @ 07/30/24 08:59:39.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:59:39.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:59:39.125
  STEP: Creating a pod to test downward api env vars @ 07/30/24 08:59:39.126
  E0730 08:59:39.210619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:40.210887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:41.211327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:42.211319      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 08:59:43.144
  I0730 08:59:43.149760 19 output.go:196] Trying to get logs from node jammy pod downward-api-bebec07e-ea59-4ddc-9729-42bafbb338d0 container dapi-container: <nil>
  STEP: delete the pod @ 07/30/24 08:59:43.158
  I0730 08:59:43.181335 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-898" for this suite. @ 07/30/24 08:59:43.184
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 07/30/24 08:59:43.192
  I0730 08:59:43.192531 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename svcaccounts @ 07/30/24 08:59:43.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:59:43.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:59:43.206
  STEP: Creating ServiceAccount "e2e-sa-crksz"  @ 07/30/24 08:59:43.207
  I0730 08:59:43.210852 19 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-crksz"  @ 07/30/24 08:59:43.21
  E0730 08:59:43.211333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:59:43.216031 19 service_accounts.go:839] AutomountServiceAccountToken: true
  I0730 08:59:43.216221 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6964" for this suite. @ 07/30/24 08:59:43.218
• [0.029 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 07/30/24 08:59:43.222
  I0730 08:59:43.222017 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename gc @ 07/30/24 08:59:43.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:59:43.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:59:43.233
  STEP: create the deployment @ 07/30/24 08:59:43.234
  W0730 08:59:43.238053      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 07/30/24 08:59:43.238
  STEP: delete the deployment @ 07/30/24 08:59:43.743
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 07/30/24 08:59:43.751
  E0730 08:59:44.212549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/30/24 08:59:44.261
  W0730 08:59:44.264231      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0730 08:59:44.264254 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0730 08:59:44.264652 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9180" for this suite. @ 07/30/24 08:59:44.266
• [1.052 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 07/30/24 08:59:44.275
  I0730 08:59:44.275048 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename namespaces @ 07/30/24 08:59:44.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:59:44.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:59:44.291
  STEP: Read namespace status @ 07/30/24 08:59:44.292
  I0730 08:59:44.294111 19 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 07/30/24 08:59:44.294
  I0730 08:59:44.297783 19 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 07/30/24 08:59:44.297
  I0730 08:59:44.303618 19 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0730 08:59:44.303958 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6120" for this suite. @ 07/30/24 08:59:44.305
• [0.034 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 07/30/24 08:59:44.309
  I0730 08:59:44.309408 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename pod-network-test @ 07/30/24 08:59:44.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:59:44.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:59:44.321
  STEP: Performing setup for networking test in namespace pod-network-test-1104 @ 07/30/24 08:59:44.322
  STEP: creating a selector @ 07/30/24 08:59:44.322
  STEP: Creating the service pods in kubernetes @ 07/30/24 08:59:44.322
  I0730 08:59:44.322483 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0730 08:59:45.212776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:46.213665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:47.214610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:48.214638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:49.214841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:50.215054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:51.215867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:52.216807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:53.217025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:54.217742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:55.218619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:56.219432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 07/30/24 08:59:56.395
  E0730 08:59:57.219777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 08:59:58.219909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:59:58.443435 19 utils.go:779] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0730 08:59:58.443509 19 utils.go:472] Going to poll 10.1.163.38 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0730 08:59:58.448964 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.1.163.38:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1104 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0730 08:59:58.449025 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  I0730 08:59:58.450010 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0730 08:59:58.450109 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1104/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.1.163.38%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0730 08:59:58.487197 19 utils.go:489] Found all 1 expected endpoints: [netserver-0]
  I0730 08:59:58.487323 19 utils.go:472] Going to poll 10.1.171.96 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0730 08:59:58.489352 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.1.171.96:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1104 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0730 08:59:58.489368 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  I0730 08:59:58.489640 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0730 08:59:58.489674 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1104/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.1.171.96%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0730 08:59:58.512812 19 utils.go:489] Found all 1 expected endpoints: [netserver-1]
  I0730 08:59:58.512954 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1104" for this suite. @ 07/30/24 08:59:58.515
• [14.210 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 07/30/24 08:59:58.519
  I0730 08:59:58.519276 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename controllerrevisions @ 07/30/24 08:59:58.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 08:59:58.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 08:59:58.531
  STEP: Creating DaemonSet "e2e-xq29s-daemon-set" @ 07/30/24 08:59:58.543
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/30/24 08:59:58.547
  I0730 08:59:58.553033 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-xq29s-daemon-set: 0
  I0730 08:59:58.553263 19 fixtures.go:130] Node jammy is running 0 daemon pod, expected 1
  E0730 08:59:59.220912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 08:59:59.559662 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-xq29s-daemon-set: 0
  I0730 08:59:59.560272 19 fixtures.go:130] Node jammy is running 0 daemon pod, expected 1
  E0730 09:00:00.221563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 09:00:00.560564 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-xq29s-daemon-set: 2
  I0730 09:00:00.560629 19 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset e2e-xq29s-daemon-set
  STEP: Confirm DaemonSet "e2e-xq29s-daemon-set" successfully created with "daemonset-name=e2e-xq29s-daemon-set" label @ 07/30/24 09:00:00.564
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-xq29s-daemon-set" @ 07/30/24 09:00:00.575
  I0730 09:00:00.580990 19 controller_revision.go:162] Located ControllerRevision: "e2e-xq29s-daemon-set-84564dc476"
  STEP: Patching ControllerRevision "e2e-xq29s-daemon-set-84564dc476" @ 07/30/24 09:00:00.584
  I0730 09:00:00.595972 19 controller_revision.go:173] e2e-xq29s-daemon-set-84564dc476 has been patched
  STEP: Create a new ControllerRevision @ 07/30/24 09:00:00.596
  I0730 09:00:00.603337 19 controller_revision.go:191] Created ControllerRevision: e2e-xq29s-daemon-set-576cfdbb8
  STEP: Confirm that there are two ControllerRevisions @ 07/30/24 09:00:00.604
  I0730 09:00:00.604067 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0730 09:00:00.607709 19 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-xq29s-daemon-set-84564dc476" @ 07/30/24 09:00:00.608
  STEP: Confirm that there is only one ControllerRevision @ 07/30/24 09:00:00.614
  I0730 09:00:00.614259 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0730 09:00:00.616236 19 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-xq29s-daemon-set-576cfdbb8" @ 07/30/24 09:00:00.617
  I0730 09:00:00.623495 19 controller_revision.go:220] e2e-xq29s-daemon-set-576cfdbb8 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 07/30/24 09:00:00.623
  W0730 09:00:00.627500      19 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 07/30/24 09:00:00.627
  I0730 09:00:00.627660 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  E0730 09:00:01.221461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 09:00:01.628092 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0730 09:00:01.634062 19 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-xq29s-daemon-set-576cfdbb8=updated" @ 07/30/24 09:00:01.634
  STEP: Confirm that there is only one ControllerRevision @ 07/30/24 09:00:01.65
  I0730 09:00:01.650772 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0730 09:00:01.656297 19 controller_revision.go:265] Found 1 ControllerRevisions
  I0730 09:00:01.660745 19 controller_revision.go:246] ControllerRevision "e2e-xq29s-daemon-set-6cc799577c" has revision 3
  STEP: Deleting DaemonSet "e2e-xq29s-daemon-set" @ 07/30/24 09:00:01.665
  STEP: deleting DaemonSet.extensions e2e-xq29s-daemon-set in namespace controllerrevisions-6989, will wait for the garbage collector to delete the pods @ 07/30/24 09:00:01.665
  I0730 09:00:01.731814 19 resources.go:139] Deleting DaemonSet.extensions e2e-xq29s-daemon-set took: 12.789717ms
  I0730 09:00:01.832148 19 resources.go:163] Terminating DaemonSet.extensions e2e-xq29s-daemon-set pods took: 100.333178ms
  E0730 09:00:02.222275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 09:00:03.139312 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-xq29s-daemon-set: 0
  I0730 09:00:03.139377 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-xq29s-daemon-set
  I0730 09:00:03.145393 19 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"38783"},"items":null}

  I0730 09:00:03.151393 19 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"38783"},"items":null}

  I0730 09:00:03.163611 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-6989" for this suite. @ 07/30/24 09:00:03.166
• [4.653 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:397
  STEP: Creating a kubernetes client @ 07/30/24 09:00:03.172
  I0730 09:00:03.172160 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename kubectl @ 07/30/24 09:00:03.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 09:00:03.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 09:00:03.187
  STEP: creating all guestbook components @ 07/30/24 09:00:03.189
  I0730 09:00:03.189350 19 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0730 09:00:03.189662 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-1340 create -f -'
  E0730 09:00:03.222905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 09:00:03.257173 19 builder.go:146] stderr: ""
  I0730 09:00:03.257203 19 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0730 09:00:03.257233 19 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0730 09:00:03.257273 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-1340 create -f -'
  I0730 09:00:03.325038 19 builder.go:146] stderr: ""
  I0730 09:00:03.325073 19 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0730 09:00:03.325100 19 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0730 09:00:03.325138 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-1340 create -f -'
  I0730 09:00:03.393162 19 builder.go:146] stderr: ""
  I0730 09:00:03.393214 19 builder.go:147] stdout: "service/frontend created\n"
  I0730 09:00:03.393251 19 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0730 09:00:03.393314 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-1340 create -f -'
  I0730 09:00:03.443369 19 builder.go:146] stderr: ""
  I0730 09:00:03.443392 19 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0730 09:00:03.443426 19 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0730 09:00:03.443467 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-1340 create -f -'
  I0730 09:00:03.502275 19 builder.go:146] stderr: ""
  I0730 09:00:03.502304 19 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0730 09:00:03.502346 19 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0730 09:00:03.502403 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-1340 create -f -'
  I0730 09:00:03.557668 19 builder.go:146] stderr: ""
  I0730 09:00:03.557704 19 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 07/30/24 09:00:03.557
  I0730 09:00:03.557728 19 kubectl.go:2271] Waiting for all frontend pods to be Running.
  E0730 09:00:04.223873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:05.224863      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:06.225039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:07.225334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:08.225844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 09:00:08.608404 19 kubectl.go:2275] Waiting for frontend to serve content.
  I0730 09:00:08.621670 19 kubectl.go:2280] Trying to add a new entry to the guestbook.
  I0730 09:00:08.636794 19 kubectl.go:2285] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 07/30/24 09:00:08.646
  I0730 09:00:08.646598 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-1340 delete --grace-period=0 --force -f -'
  I0730 09:00:08.707470 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0730 09:00:08.707499 19 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 07/30/24 09:00:08.707
  I0730 09:00:08.707641 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-1340 delete --grace-period=0 --force -f -'
  I0730 09:00:08.752704 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0730 09:00:08.752740 19 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 07/30/24 09:00:08.752
  I0730 09:00:08.752814 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-1340 delete --grace-period=0 --force -f -'
  I0730 09:00:08.796365 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0730 09:00:08.796395 19 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 07/30/24 09:00:08.796
  I0730 09:00:08.796609 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-1340 delete --grace-period=0 --force -f -'
  I0730 09:00:08.829470 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0730 09:00:08.829499 19 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 07/30/24 09:00:08.829
  I0730 09:00:08.829662 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-1340 delete --grace-period=0 --force -f -'
  I0730 09:00:08.912251 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0730 09:00:08.912278 19 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 07/30/24 09:00:08.912
  I0730 09:00:08.912365 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-1340 delete --grace-period=0 --force -f -'
  I0730 09:00:08.992464 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0730 09:00:08.992493 19 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0730 09:00:08.992546 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1340" for this suite. @ 07/30/24 09:00:09.001
• [5.847 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 07/30/24 09:00:09.019
  I0730 09:00:09.019853 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename discovery @ 07/30/24 09:00:09.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 09:00:09.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 09:00:09.051
  STEP: Setting up server cert @ 07/30/24 09:00:09.054
  I0730 09:00:09.196998 19 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0730 09:00:09.198409 19 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0730 09:00:09.198428 19 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0730 09:00:09.198431 19 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0730 09:00:09.198435 19 discovery.go:139] Checking APIGroup: apps
  I0730 09:00:09.199292 19 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0730 09:00:09.199327 19 discovery.go:148] Versions found [{apps/v1 v1}]
  I0730 09:00:09.199332 19 discovery.go:154] apps/v1 matches apps/v1
  I0730 09:00:09.199336 19 discovery.go:139] Checking APIGroup: events.k8s.io
  I0730 09:00:09.199750 19 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0730 09:00:09.199763 19 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0730 09:00:09.199767 19 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0730 09:00:09.199771 19 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0730 09:00:09.201086 19 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0730 09:00:09.201133 19 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0730 09:00:09.201157 19 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0730 09:00:09.201178 19 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0730 09:00:09.202640 19 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0730 09:00:09.202652 19 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0730 09:00:09.202656 19 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0730 09:00:09.202668 19 discovery.go:139] Checking APIGroup: autoscaling
  I0730 09:00:09.203047 19 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0730 09:00:09.203057 19 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0730 09:00:09.203089 19 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0730 09:00:09.203093 19 discovery.go:139] Checking APIGroup: batch
  I0730 09:00:09.203675 19 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0730 09:00:09.203691 19 discovery.go:148] Versions found [{batch/v1 v1}]
  I0730 09:00:09.203695 19 discovery.go:154] batch/v1 matches batch/v1
  I0730 09:00:09.203747 19 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0730 09:00:09.204261 19 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0730 09:00:09.204272 19 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0730 09:00:09.204276 19 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0730 09:00:09.204320 19 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0730 09:00:09.205270 19 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0730 09:00:09.205282 19 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0730 09:00:09.205285 19 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0730 09:00:09.205288 19 discovery.go:139] Checking APIGroup: policy
  I0730 09:00:09.208428 19 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0730 09:00:09.208560 19 discovery.go:148] Versions found [{policy/v1 v1}]
  I0730 09:00:09.208649 19 discovery.go:154] policy/v1 matches policy/v1
  I0730 09:00:09.208742 19 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0730 09:00:09.209919 19 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0730 09:00:09.210055 19 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0730 09:00:09.210213 19 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0730 09:00:09.210284 19 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0730 09:00:09.211092 19 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0730 09:00:09.211109 19 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0730 09:00:09.211114 19 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0730 09:00:09.211118 19 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0730 09:00:09.212094 19 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0730 09:00:09.212260 19 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0730 09:00:09.212341 19 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0730 09:00:09.212440 19 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0730 09:00:09.213537 19 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0730 09:00:09.213592 19 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0730 09:00:09.213615 19 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0730 09:00:09.213638 19 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0730 09:00:09.214098 19 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0730 09:00:09.214226 19 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0730 09:00:09.214257 19 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0730 09:00:09.214319 19 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0730 09:00:09.215690 19 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0730 09:00:09.215703 19 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0730 09:00:09.215706 19 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0730 09:00:09.215710 19 discovery.go:139] Checking APIGroup: node.k8s.io
  I0730 09:00:09.216514 19 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0730 09:00:09.216527 19 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0730 09:00:09.216530 19 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0730 09:00:09.216533 19 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0730 09:00:09.217104 19 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0730 09:00:09.217112 19 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0730 09:00:09.217116 19 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0730 09:00:09.217121 19 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0730 09:00:09.217595 19 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0730 09:00:09.217606 19 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I0730 09:00:09.217634 19 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0730 09:00:09.217638 19 discovery.go:139] Checking APIGroup: crd.projectcalico.org
  I0730 09:00:09.218625 19 discovery.go:147] PreferredVersion.GroupVersion: crd.projectcalico.org/v1
  I0730 09:00:09.218749 19 discovery.go:148] Versions found [{crd.projectcalico.org/v1 v1}]
  I0730 09:00:09.218770 19 discovery.go:154] crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
  I0730 09:00:09.218915 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7357" for this suite. @ 07/30/24 09:00:09.221
  E0730 09:00:09.226731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
• [0.210 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 07/30/24 09:00:09.23
  I0730 09:00:09.231292 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename hostport @ 07/30/24 09:00:09.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 09:00:09.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 09:00:09.262
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 07/30/24 09:00:09.271
  E0730 09:00:10.227283      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:11.227780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 10.227.69.102 on the node which pod1 resides and expect scheduled @ 07/30/24 09:00:11.298
  E0730 09:00:12.228715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:13.229678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 10.227.69.102 but use UDP protocol on the node which pod2 resides @ 07/30/24 09:00:13.324
  E0730 09:00:14.229726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:15.230105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:16.231214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:17.231888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 07/30/24 09:00:17.371
  I0730 09:00:17.371217 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 10.227.69.102 http://127.0.0.1:54323/hostname] Namespace:hostport-3802 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0730 09:00:17.371244 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  I0730 09:00:17.372231 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0730 09:00:17.372312 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-3802/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+10.227.69.102+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.227.69.102, port: 54323 @ 07/30/24 09:00:17.41
  I0730 09:00:17.410387 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://10.227.69.102:54323/hostname] Namespace:hostport-3802 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0730 09:00:17.410426 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  I0730 09:00:17.410804 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0730 09:00:17.410856 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-3802/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F10.227.69.102%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.227.69.102, port: 54323 UDP @ 07/30/24 09:00:17.43
  I0730 09:00:17.430494 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 10.227.69.102 54323] Namespace:hostport-3802 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0730 09:00:17.430506 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  I0730 09:00:17.430786 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0730 09:00:17.430820 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-3802/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+10.227.69.102+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0730 09:00:18.232732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:19.233039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:20.233295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:21.234129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:22.234404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 09:00:22.452644 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-3802" for this suite. @ 07/30/24 09:00:22.459
• [13.242 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 07/30/24 09:00:22.473
  I0730 09:00:22.473102 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename sysctl @ 07/30/24 09:00:22.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 09:00:22.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 09:00:22.505
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 07/30/24 09:00:22.506
  STEP: Watching for error events or started pod @ 07/30/24 09:00:22.513
  E0730 09:00:23.234621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:24.234782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 07/30/24 09:00:24.519
  STEP: Checking that the pod succeeded @ 07/30/24 09:00:24.524
  STEP: Getting logs from the pod @ 07/30/24 09:00:24.524
  STEP: Checking that the sysctl is actually updated @ 07/30/24 09:00:24.527
  I0730 09:00:24.527456 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-766" for this suite. @ 07/30/24 09:00:24.529
• [2.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 07/30/24 09:00:24.534
  I0730 09:00:24.534082 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename events @ 07/30/24 09:00:24.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 09:00:24.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 09:00:24.549
  STEP: creating a test event @ 07/30/24 09:00:24.55
  STEP: listing all events in all namespaces @ 07/30/24 09:00:24.554
  STEP: patching the test event @ 07/30/24 09:00:24.556
  STEP: fetching the test event @ 07/30/24 09:00:24.561
  STEP: updating the test event @ 07/30/24 09:00:24.564
  STEP: getting the test event @ 07/30/24 09:00:24.572
  STEP: deleting the test event @ 07/30/24 09:00:24.574
  STEP: listing all events in all namespaces @ 07/30/24 09:00:24.579
  I0730 09:00:24.581467 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3209" for this suite. @ 07/30/24 09:00:24.583
• [0.055 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 07/30/24 09:00:24.589
  I0730 09:00:24.589688 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename emptydir @ 07/30/24 09:00:24.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 09:00:24.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 09:00:24.604
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 07/30/24 09:00:24.606
  E0730 09:00:25.235975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:26.236679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:27.237456      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:28.238572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 09:00:28.627
  I0730 09:00:28.632405 19 output.go:196] Trying to get logs from node jammy pod pod-c97a6acc-0c79-403a-b053-a651c043d0bc container test-container: <nil>
  STEP: delete the pod @ 07/30/24 09:00:28.638
  I0730 09:00:28.653897 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1750" for this suite. @ 07/30/24 09:00:28.655
• [4.070 seconds]
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 07/30/24 09:00:28.66
  I0730 09:00:28.660618 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename ingressclass @ 07/30/24 09:00:28.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 09:00:28.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 09:00:28.675
  STEP: getting /apis @ 07/30/24 09:00:28.676
  STEP: getting /apis/networking.k8s.io @ 07/30/24 09:00:28.678
  STEP: getting /apis/networking.k8s.iov1 @ 07/30/24 09:00:28.679
  STEP: creating @ 07/30/24 09:00:28.679
  STEP: getting @ 07/30/24 09:00:28.696
  STEP: listing @ 07/30/24 09:00:28.698
  STEP: watching @ 07/30/24 09:00:28.7
  I0730 09:00:28.700469 19 ingressclass.go:348] starting watch
  STEP: patching @ 07/30/24 09:00:28.701
  STEP: updating @ 07/30/24 09:00:28.705
  I0730 09:00:28.710985 19 ingressclass.go:364] waiting for watch events with expected annotations
  I0730 09:00:28.711032 19 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 07/30/24 09:00:28.711
  STEP: deleting a collection @ 07/30/24 09:00:28.719
  I0730 09:00:28.728091 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-7478" for this suite. @ 07/30/24 09:00:28.729
• [0.074 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 07/30/24 09:00:28.734
  I0730 09:00:28.734251 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/30/24 09:00:28.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 09:00:28.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 09:00:28.745
  STEP: set up a multi version CRD @ 07/30/24 09:00:28.746
  I0730 09:00:28.746931 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  E0730 09:00:29.238939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:30.240097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:31.240812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 07/30/24 09:00:31.748
  STEP: check the unserved version gets removed @ 07/30/24 09:00:31.76
  E0730 09:00:32.240787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 07/30/24 09:00:32.44
  E0730 09:00:33.241243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:34.241984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 09:00:34.823435 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5231" for this suite. @ 07/30/24 09:00:34.827
• [6.100 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 07/30/24 09:00:34.835
  I0730 09:00:34.835310 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename replicaset @ 07/30/24 09:00:34.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 09:00:34.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 09:00:34.852
  STEP: Create a Replicaset @ 07/30/24 09:00:34.854
  STEP: Verify that the required pods have come up. @ 07/30/24 09:00:34.859
  I0730 09:00:34.861867 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0730 09:00:35.242449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:36.243351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:37.243442      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:38.244566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:39.245121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 09:00:39.870224 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/30/24 09:00:39.87
  STEP: Getting /status @ 07/30/24 09:00:39.87
  I0730 09:00:39.876021 19 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 07/30/24 09:00:39.876
  I0730 09:00:39.883928 19 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 07/30/24 09:00:39.883
  I0730 09:00:39.884926 19 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0730 09:00:39.885013 19 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0730 09:00:39.885076 19 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0730 09:00:39.885240 19 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0730 09:00:39.885297 19 replica_set.go:682] Found replicaset test-rs in namespace replicaset-7323 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0730 09:00:39.885306 19 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 07/30/24 09:00:39.885
  I0730 09:00:39.885380 19 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0730 09:00:39.890892 19 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 07/30/24 09:00:39.89
  I0730 09:00:39.892196 19 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0730 09:00:39.892272 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0730 09:00:39.892341 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0730 09:00:39.892431 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0730 09:00:39.892448 19 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-7323 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0730 09:00:39.892476 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0730 09:00:39.892483 19 replica_set.go:718] Found replicaset test-rs in namespace replicaset-7323 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0730 09:00:39.892488 19 replica_set.go:729] Replicaset test-rs has a patched status
  I0730 09:00:39.892525 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7323" for this suite. @ 07/30/24 09:00:39.894
• [5.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 07/30/24 09:00:39.899
  I0730 09:00:39.899282 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename secrets @ 07/30/24 09:00:39.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 09:00:39.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 09:00:39.915
  I0730 09:00:39.945018 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-177" for this suite. @ 07/30/24 09:00:39.946
• [0.053 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 07/30/24 09:00:39.952
  I0730 09:00:39.952271 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename emptydir @ 07/30/24 09:00:39.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 09:00:40.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 09:00:40.019
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 07/30/24 09:00:40.021
  E0730 09:00:40.245589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:41.246203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:42.246914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:43.247266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 09:00:44.042
  I0730 09:00:44.047789 19 output.go:196] Trying to get logs from node jammy pod pod-a1bc7236-9bdf-493a-b747-fa452222351c container test-container: <nil>
  STEP: delete the pod @ 07/30/24 09:00:44.055
  I0730 09:00:44.076771 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8995" for this suite. @ 07/30/24 09:00:44.08
• [4.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 07/30/24 09:00:44.086
  I0730 09:00:44.086615 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename sched-preemption @ 07/30/24 09:00:44.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 09:00:44.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 09:00:44.106
  I0730 09:00:44.119152 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0730 09:00:44.247892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:45.248268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:46.248659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:47.248658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:48.249680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:49.249702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:50.250237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:51.250403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:52.250560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:53.251230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:54.251733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:55.251777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:56.251814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:57.252395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:58.253451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:00:59.254152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:00.254544      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:01.254929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:02.255916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:03.256839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:04.257989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:05.259053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:06.259945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:07.260727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:08.260829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:09.261100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:10.261531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:11.262877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:12.263071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:13.264061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:14.264705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:15.265566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:16.266666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:17.267760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:18.268109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:19.269062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:20.269573      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:21.270381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:22.271068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:23.271697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:24.271886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:25.272678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:26.273028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:27.273156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:28.274091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:29.274942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:30.275366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:31.276565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:32.277648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:33.278016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:34.279007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:35.279283      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:36.280290      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:37.280666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:38.280946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:39.281167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:40.281401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:41.282058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:42.282268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:43.282710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 09:01:44.127690 19 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 07/30/24 09:01:44.132
  I0730 09:01:44.153709 19 preemption.go:178] Created pod: pod0-0-sched-preemption-low-priority
  I0730 09:01:44.159782 19 preemption.go:178] Created pod: pod0-1-sched-preemption-medium-priority
  I0730 09:01:44.196443 19 preemption.go:178] Created pod: pod1-0-sched-preemption-medium-priority
  I0730 09:01:44.205808 19 preemption.go:178] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 07/30/24 09:01:44.205
  E0730 09:01:44.282967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:45.283808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 07/30/24 09:01:46.229
  E0730 09:01:46.284244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:47.284606      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:48.284631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:49.285544      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:50.287383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 09:01:50.292228 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5566" for this suite. @ 07/30/24 09:01:50.294
• [66.213 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1693
  STEP: Creating a kubernetes client @ 07/30/24 09:01:50.3
  I0730 09:01:50.300186 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename kubectl @ 07/30/24 09:01:50.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 09:01:50.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 09:01:50.317
  STEP: creating Agnhost RC @ 07/30/24 09:01:50.319
  I0730 09:01:50.319170 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-3763 create -f -'
  I0730 09:01:50.397021 19 builder.go:146] stderr: ""
  I0730 09:01:50.397080 19 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/30/24 09:01:50.397
  E0730 09:01:51.288301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 09:01:51.401238 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0730 09:01:51.401273 19 framework.go:733] Found 0 / 1
  E0730 09:01:52.289335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 09:01:52.405998 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0730 09:01:52.406059 19 framework.go:733] Found 1 / 1
  I0730 09:01:52.406088 19 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 07/30/24 09:01:52.406
  I0730 09:01:52.411500 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0730 09:01:52.411599 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0730 09:01:52.411879 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-3763 patch pod agnhost-primary-m89h5 -p {"metadata":{"annotations":{"x":"y"}}}'
  I0730 09:01:52.466558 19 builder.go:146] stderr: ""
  I0730 09:01:52.466596 19 builder.go:147] stdout: "pod/agnhost-primary-m89h5 patched\n"
  STEP: checking annotations @ 07/30/24 09:01:52.466
  I0730 09:01:52.469195 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0730 09:01:52.469216 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0730 09:01:52.469270 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3763" for this suite. @ 07/30/24 09:01:52.471
• [2.178 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 07/30/24 09:01:52.478
  I0730 09:01:52.478725 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/30/24 09:01:52.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 09:01:52.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 09:01:52.496
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 07/30/24 09:01:52.498
  I0730 09:01:52.498666 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  E0730 09:01:53.290170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 09:01:53.657804 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  E0730 09:01:54.291137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:55.291965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:56.292425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:57.293142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:01:58.294040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 09:01:58.434441 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5995" for this suite. @ 07/30/24 09:01:58.438
• [5.965 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 07/30/24 09:01:58.444
  I0730 09:01:58.444523 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename field-validation @ 07/30/24 09:01:58.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 09:01:58.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 09:01:58.518
  I0730 09:01:58.523619 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  E0730 09:01:59.294186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:02:00.294449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0730 09:02:01.083805      19 warnings.go:70] unknown field "alpha"
  W0730 09:02:01.083858      19 warnings.go:70] unknown field "beta"
  W0730 09:02:01.083907      19 warnings.go:70] unknown field "delta"
  W0730 09:02:01.083917      19 warnings.go:70] unknown field "epsilon"
  W0730 09:02:01.083926      19 warnings.go:70] unknown field "gamma"
  E0730 09:02:01.295510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 09:02:01.674776 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1789" for this suite. @ 07/30/24 09:02:01.677
• [3.240 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1759
  STEP: Creating a kubernetes client @ 07/30/24 09:02:01.684
  I0730 09:02:01.685034 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename kubectl @ 07/30/24 09:02:01.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 09:02:01.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 09:02:01.701
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/30/24 09:02:01.703
  I0730 09:02:01.703128 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-3627 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0730 09:02:01.763240 19 builder.go:146] stderr: ""
  I0730 09:02:01.763270 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 07/30/24 09:02:01.763
  I0730 09:02:01.765199 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-3627 delete pods e2e-test-httpd-pod'
  E0730 09:02:02.295866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:02:03.296060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 09:02:03.552218 19 builder.go:146] stderr: ""
  I0730 09:02:03.552247 19 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0730 09:02:03.552310 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3627" for this suite. @ 07/30/24 09:02:03.554
• [1.876 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 07/30/24 09:02:03.561
  I0730 09:02:03.561530 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename deployment @ 07/30/24 09:02:03.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 09:02:03.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 09:02:03.588
  STEP: creating a Deployment @ 07/30/24 09:02:03.593
  I0730 09:02:03.593122 19 deployment.go:507] Creating simple deployment test-deployment-6f2pf
  I0730 09:02:03.608707 19 deployment.go:222] new replicaset for deployment "test-deployment-6f2pf" is yet to be created
  E0730 09:02:04.296736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:02:05.297567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting /status @ 07/30/24 09:02:05.636
  I0730 09:02:05.641178 19 deployment.go:532] Deployment test-deployment-6f2pf has Conditions: [{Available True 2024-07-30 09:02:04 +0000 UTC 2024-07-30 09:02:04 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-07-30 09:02:04 +0000 UTC 2024-07-30 09:02:03 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-6f2pf-c8586b885" has successfully progressed.}]
  STEP: updating Deployment Status @ 07/30/24 09:02:05.641
  I0730 09:02:05.649964 19 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 9, 2, 4, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 9, 2, 4, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 30, 9, 2, 4, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 30, 9, 2, 3, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-6f2pf-c8586b885\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 07/30/24 09:02:05.65
  I0730 09:02:05.651607 19 deployment.go:579] Observed &Deployment event: ADDED
  I0730 09:02:05.651801 19 deployment.go:575] Observed Deployment test-deployment-6f2pf in namespace deployment-3869 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-30 09:02:03 +0000 UTC 2024-07-30 09:02:03 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-6f2pf-c8586b885"}
  I0730 09:02:05.651917 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I0730 09:02:05.651947 19 deployment.go:575] Observed Deployment test-deployment-6f2pf in namespace deployment-3869 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-30 09:02:03 +0000 UTC 2024-07-30 09:02:03 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-6f2pf-c8586b885"}
  I0730 09:02:05.651960 19 deployment.go:575] Observed Deployment test-deployment-6f2pf in namespace deployment-3869 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-07-30 09:02:03 +0000 UTC 2024-07-30 09:02:03 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0730 09:02:05.652058 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I0730 09:02:05.652404 19 deployment.go:575] Observed Deployment test-deployment-6f2pf in namespace deployment-3869 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-07-30 09:02:03 +0000 UTC 2024-07-30 09:02:03 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0730 09:02:05.652429 19 deployment.go:575] Observed Deployment test-deployment-6f2pf in namespace deployment-3869 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-30 09:02:03 +0000 UTC 2024-07-30 09:02:03 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-6f2pf-c8586b885" is progressing.}
  I0730 09:02:05.652535 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I0730 09:02:05.652556 19 deployment.go:575] Observed Deployment test-deployment-6f2pf in namespace deployment-3869 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-07-30 09:02:04 +0000 UTC 2024-07-30 09:02:04 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0730 09:02:05.652568 19 deployment.go:575] Observed Deployment test-deployment-6f2pf in namespace deployment-3869 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-30 09:02:04 +0000 UTC 2024-07-30 09:02:03 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-6f2pf-c8586b885" has successfully progressed.}
  I0730 09:02:05.652642 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I0730 09:02:05.652666 19 deployment.go:575] Observed Deployment test-deployment-6f2pf in namespace deployment-3869 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-07-30 09:02:04 +0000 UTC 2024-07-30 09:02:04 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0730 09:02:05.652676 19 deployment.go:575] Observed Deployment test-deployment-6f2pf in namespace deployment-3869 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-30 09:02:04 +0000 UTC 2024-07-30 09:02:03 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-6f2pf-c8586b885" has successfully progressed.}
  I0730 09:02:05.652687 19 deployment.go:572] Found Deployment test-deployment-6f2pf in namespace deployment-3869 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0730 09:02:05.652696 19 deployment.go:583] Deployment test-deployment-6f2pf has an updated status
  STEP: patching the Statefulset Status @ 07/30/24 09:02:05.652
  I0730 09:02:05.652723 19 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0730 09:02:05.658404 19 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 07/30/24 09:02:05.658
  I0730 09:02:05.660100 19 deployment.go:616] Observed &Deployment event: ADDED
  I0730 09:02:05.660240 19 deployment.go:612] Observed deployment test-deployment-6f2pf in namespace deployment-3869 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-30 09:02:03 +0000 UTC 2024-07-30 09:02:03 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-6f2pf-c8586b885"}
  I0730 09:02:05.660452 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I0730 09:02:05.660474 19 deployment.go:612] Observed deployment test-deployment-6f2pf in namespace deployment-3869 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-30 09:02:03 +0000 UTC 2024-07-30 09:02:03 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-6f2pf-c8586b885"}
  I0730 09:02:05.660482 19 deployment.go:612] Observed deployment test-deployment-6f2pf in namespace deployment-3869 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-07-30 09:02:03 +0000 UTC 2024-07-30 09:02:03 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0730 09:02:05.660533 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I0730 09:02:05.660543 19 deployment.go:612] Observed deployment test-deployment-6f2pf in namespace deployment-3869 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-07-30 09:02:03 +0000 UTC 2024-07-30 09:02:03 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0730 09:02:05.660550 19 deployment.go:612] Observed deployment test-deployment-6f2pf in namespace deployment-3869 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-30 09:02:03 +0000 UTC 2024-07-30 09:02:03 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-6f2pf-c8586b885" is progressing.}
  I0730 09:02:05.660604 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I0730 09:02:05.660710 19 deployment.go:612] Observed deployment test-deployment-6f2pf in namespace deployment-3869 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-07-30 09:02:04 +0000 UTC 2024-07-30 09:02:04 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0730 09:02:05.660719 19 deployment.go:612] Observed deployment test-deployment-6f2pf in namespace deployment-3869 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-30 09:02:04 +0000 UTC 2024-07-30 09:02:03 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-6f2pf-c8586b885" has successfully progressed.}
  I0730 09:02:05.660781 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I0730 09:02:05.660796 19 deployment.go:612] Observed deployment test-deployment-6f2pf in namespace deployment-3869 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-07-30 09:02:04 +0000 UTC 2024-07-30 09:02:04 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0730 09:02:05.660804 19 deployment.go:612] Observed deployment test-deployment-6f2pf in namespace deployment-3869 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-30 09:02:04 +0000 UTC 2024-07-30 09:02:03 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-6f2pf-c8586b885" has successfully progressed.}
  I0730 09:02:05.660812 19 deployment.go:612] Observed deployment test-deployment-6f2pf in namespace deployment-3869 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0730 09:02:05.660918 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I0730 09:02:05.660957 19 deployment.go:609] Found deployment test-deployment-6f2pf in namespace deployment-3869 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0730 09:02:05.660971 19 deployment.go:620] Deployment test-deployment-6f2pf has a patched status
  I0730 09:02:05.663249 19 deployment.go:633] Deployment "test-deployment-6f2pf":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-6f2pf",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3869",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "52d6cf98-259b-4c0a-8867-da0f12a28b20",
      ResourceVersion: (string) (len=5) "39832",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857926923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857926923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857926925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857926925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857926925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857926925,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=55) "Found new replica set \"test-deployment-6f2pf-c8586b885\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0730 09:02:05.665489 19 deployment.go:39] New ReplicaSet "test-deployment-6f2pf-c8586b885" of Deployment "test-deployment-6f2pf":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-6f2pf-c8586b885",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3869",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "242c61f3-7a16-4fb9-8a2f-61661f455cf8",
      ResourceVersion: (string) (len=5) "39825",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857926923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-6f2pf",
          UID: (types.UID) (len=36) "52d6cf98-259b-4c0a-8867-da0f12a28b20",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857926923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 35 32 64  |k:{\"uid\":\"52d|
              00000120  36 63 66 39 38 2d 32 35  39 62 2d 34 63 30 61 2d  |6cf98-259b-4c0a-|
              00000130  38 38 36 37 2d 64 61 30  66 31 32 61 32 38 62 32  |8867-da0f12a28b2|
              00000140  30 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |0\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857926924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0730 09:02:05.668260 19 deployment.go:67] Pod "test-deployment-6f2pf-c8586b885-q5696" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-6f2pf-c8586b885-q5696",
      GenerateName: (string) (len=32) "test-deployment-6f2pf-c8586b885-",
      Namespace: (string) (len=15) "deployment-3869",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a050674d-311f-4944-bc0d-89c1e45d6421",
      ResourceVersion: (string) (len=5) "39824",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857926923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885",
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "1ee0137fe1eecb6ea8ea0a635d0fdac0eee1018ed271c86e91fc441026e13cf5",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.163.62/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.163.62/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-6f2pf-c8586b885",
          UID: (types.UID) (len=36) "242c61f3-7a16-4fb9-8a2f-61661f455cf8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857926923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 32 34 32 63 36 31 66  33 2d 37 61 31 36 2d 34  |"242c61f3-7a16-4|
              000000a0  66 62 39 2d 38 61 32 66  2d 36 31 36 36 31 66 34  |fb9-8a2f-61661f4|
              000000b0  35 35 63 66 38 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |55cf8\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857926924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857926924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 36 33 2e 36  32 5c 22 7d 22 3a 7b 22  |.1.163.62\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tprr4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tprr4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "jammy",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857926924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857926923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857926924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857926924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63857926923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.227.69.102",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "10.227.69.102"
        }
      },
      PodIP: (string) (len=11) "10.1.163.62",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.163.62"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63857926923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63857926924,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ee813e5dcfa09baa0d38396876fe306c876969261dad6e6ac61c12b1acce4386",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0730 09:02:05.669179 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3869" for this suite. @ 07/30/24 09:02:05.673
• [2.117 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1079
  STEP: Creating a kubernetes client @ 07/30/24 09:02:05.678
  I0730 09:02:05.678982 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename kubectl @ 07/30/24 09:02:05.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 09:02:05.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 09:02:05.692
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/30/24 09:02:05.693
  I0730 09:02:05.693754 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-210 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0730 09:02:05.755233 19 builder.go:146] stderr: ""
  I0730 09:02:05.755284 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 07/30/24 09:02:05.755
  I0730 09:02:05.755545 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-210 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0730 09:02:05.801114 19 builder.go:146] stderr: ""
  I0730 09:02:05.801164 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/30/24 09:02:05.801
  I0730 09:02:05.803259 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2368714565 --namespace=kubectl-210 delete pods e2e-test-httpd-pod'
  E0730 09:02:06.298574      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:02:07.298765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0730 09:02:07.566246 19 builder.go:146] stderr: ""
  I0730 09:02:07.566285 19 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0730 09:02:07.566521 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-210" for this suite. @ 07/30/24 09:02:07.572
• [1.898 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 07/30/24 09:02:07.577
  I0730 09:02:07.577095 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2368714565
  STEP: Building a namespace api object, basename projected @ 07/30/24 09:02:07.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/30/24 09:02:07.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/30/24 09:02:07.589
  STEP: Creating projection with secret that has name projected-secret-test-map-5118b96b-b4f4-4e9b-b378-c5e866a7607a @ 07/30/24 09:02:07.591
  STEP: Creating a pod to test consume secrets @ 07/30/24 09:02:07.595
  E0730 09:02:08.299715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:02:09.300137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:02:10.300787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0730 09:02:11.301258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/30/24 09:02:11.615
  I0730 09:02:11.620099 19 output.go:196] Trying to get logs from node jammy pod pod-projected-secrets-4339e434-bf10-4715-a5dc-7ae6078fc08e container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/30/24 09:02:11.627
  I0730 09:02:11.650995 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4368" for this suite. @ 07/30/24 09:02:11.654
• [4.084 seconds]
------------------------------
SSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0730 09:02:11.662318 19 suites.go:34] Running AfterSuite actions on node 1
  I0730 09:02:11.662487 19 util.go:614] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
[ReportAfterSuite] PASSED [0.028 seconds]
------------------------------

Ran 402 of 7197 Specs in 6045.757 seconds
SUCCESS! -- 402 Passed | 0 Failed | 0 Pending | 6795 Skipped
PASS

Ginkgo ran 1 suite in 1h40m46.471796352s
Test Suite Passed
